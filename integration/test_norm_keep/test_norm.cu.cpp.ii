# 1 "./test_norm_keep/test_norm.cudafe1.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "./test_norm_keep/test_norm.cudafe1.cpp"
# 1 "test_norm.cu"
#pragma GCC diagnostic ignored "-Wunused-local-typedefs"
# 1 "test_norm.cu"
#pragma GCC diagnostic push
# 1 "test_norm.cu"
#pragma GCC diagnostic ignored "-Wunused-variable"
# 1 "test_norm.cu"
#pragma GCC diagnostic ignored "-Wunused-function"
# 1 "test_norm.cu"
static char __nv_inited_managed_rt = 0; static void **__nv_fatbinhandle_for_managed_rt; static void __nv_save_fatbinhandle_for_managed_rt(void **in){__nv_fatbinhandle_for_managed_rt = in;} static char __nv_init_managed_rt_with_module(void **); static inline void __nv_init_managed_rt(void) { __nv_inited_managed_rt = (__nv_inited_managed_rt ? __nv_inited_managed_rt : __nv_init_managed_rt_with_module(__nv_fatbinhandle_for_managed_rt));}
# 1 "test_norm.cu"
#pragma GCC diagnostic pop
# 1 "test_norm.cu"
#pragma GCC diagnostic ignored "-Wunused-variable"
# 1 "test_norm.cu"
# 1 "test_norm.cu"
# 56 "/usr/local/cuda/include/cuda_runtime.h"
#pragma GCC diagnostic push
# 59 "/usr/local/cuda/include/cuda_runtime.h"
#pragma GCC diagnostic ignored "-Wunused-function"
# 61 "/usr/local/cuda/include/device_types.h"
# 149 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3

# 149 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
typedef long ptrdiff_t;
# 216 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
typedef unsigned long size_t;
# 1 "/usr/local/cuda/include/crt/host_runtime.h" 1 3
# 69 "/usr/local/cuda/include/crt/host_runtime.h" 3
# 1 "/usr/local/cuda/include/builtin_types.h" 1 3
# 56 "/usr/local/cuda/include/builtin_types.h" 3
# 1 "/usr/local/cuda/include/device_types.h" 1 3
# 53 "/usr/local/cuda/include/device_types.h" 3
# 1 "/usr/local/cuda/include/host_defines.h" 1 3
# 54 "/usr/local/cuda/include/device_types.h" 2 3







enum cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};
# 57 "/usr/local/cuda/include/builtin_types.h" 2 3


# 1 "/usr/local/cuda/include/driver_types.h" 1 3
# 156 "/usr/local/cuda/include/driver_types.h" 3
enum cudaError
{





    cudaSuccess = 0,





    cudaErrorMissingConfiguration = 1,





    cudaErrorMemoryAllocation = 2,





    cudaErrorInitializationError = 3,
# 191 "/usr/local/cuda/include/driver_types.h" 3
    cudaErrorLaunchFailure = 4,
# 200 "/usr/local/cuda/include/driver_types.h" 3
    cudaErrorPriorLaunchFailure = 5,
# 210 "/usr/local/cuda/include/driver_types.h" 3
    cudaErrorLaunchTimeout = 6,
# 219 "/usr/local/cuda/include/driver_types.h" 3
    cudaErrorLaunchOutOfResources = 7,





    cudaErrorInvalidDeviceFunction = 8,
# 234 "/usr/local/cuda/include/driver_types.h" 3
    cudaErrorInvalidConfiguration = 9,





    cudaErrorInvalidDevice = 10,





    cudaErrorInvalidValue = 11,





    cudaErrorInvalidPitchValue = 12,





    cudaErrorInvalidSymbol = 13,




    cudaErrorMapBufferObjectFailed = 14,




    cudaErrorUnmapBufferObjectFailed = 15,





    cudaErrorInvalidHostPointer = 16,





    cudaErrorInvalidDevicePointer = 17,





    cudaErrorInvalidTexture = 18,





    cudaErrorInvalidTextureBinding = 19,






    cudaErrorInvalidChannelDescriptor = 20,





    cudaErrorInvalidMemcpyDirection = 21,
# 315 "/usr/local/cuda/include/driver_types.h" 3
    cudaErrorAddressOfConstant = 22,
# 324 "/usr/local/cuda/include/driver_types.h" 3
    cudaErrorTextureFetchFailed = 23,
# 333 "/usr/local/cuda/include/driver_types.h" 3
    cudaErrorTextureNotBound = 24,
# 342 "/usr/local/cuda/include/driver_types.h" 3
    cudaErrorSynchronizationError = 25,





    cudaErrorInvalidFilterSetting = 26,





    cudaErrorInvalidNormSetting = 27,







    cudaErrorMixedDeviceExecution = 28,






    cudaErrorCudartUnloading = 29,




    cudaErrorUnknown = 30,







    cudaErrorNotYetImplemented = 31,
# 391 "/usr/local/cuda/include/driver_types.h" 3
    cudaErrorMemoryValueTooLarge = 32,






    cudaErrorInvalidResourceHandle = 33,







    cudaErrorNotReady = 34,






    cudaErrorInsufficientDriver = 35,
# 426 "/usr/local/cuda/include/driver_types.h" 3
    cudaErrorSetOnActiveProcess = 36,





    cudaErrorInvalidSurface = 37,





    cudaErrorNoDevice = 38,





    cudaErrorECCUncorrectable = 39,




    cudaErrorSharedObjectSymbolNotFound = 40,




    cudaErrorSharedObjectInitFailed = 41,





    cudaErrorUnsupportedLimit = 42,





    cudaErrorDuplicateVariableName = 43,





    cudaErrorDuplicateTextureName = 44,





    cudaErrorDuplicateSurfaceName = 45,
# 488 "/usr/local/cuda/include/driver_types.h" 3
    cudaErrorDevicesUnavailable = 46,




    cudaErrorInvalidKernelImage = 47,







    cudaErrorNoKernelImageForDevice = 48,
# 514 "/usr/local/cuda/include/driver_types.h" 3
    cudaErrorIncompatibleDriverContext = 49,






    cudaErrorPeerAccessAlreadyEnabled = 50,






    cudaErrorPeerAccessNotEnabled = 51,





    cudaErrorDeviceAlreadyInUse = 54,






    cudaErrorProfilerDisabled = 55,







    cudaErrorProfilerNotInitialized = 56,






    cudaErrorProfilerAlreadyStarted = 57,






     cudaErrorProfilerAlreadyStopped = 58,







    cudaErrorAssert = 59,






    cudaErrorTooManyPeers = 60,





    cudaErrorHostMemoryAlreadyRegistered = 61,





    cudaErrorHostMemoryNotRegistered = 62,




    cudaErrorOperatingSystem = 63,





    cudaErrorPeerAccessUnsupported = 64,






    cudaErrorLaunchMaxDepthExceeded = 65,







    cudaErrorLaunchFileScopedTex = 66,







    cudaErrorLaunchFileScopedSurf = 67,
# 639 "/usr/local/cuda/include/driver_types.h" 3
    cudaErrorSyncDepthExceeded = 68,
# 651 "/usr/local/cuda/include/driver_types.h" 3
    cudaErrorLaunchPendingCountExceeded = 69,




    cudaErrorNotPermitted = 70,





    cudaErrorNotSupported = 71,
# 671 "/usr/local/cuda/include/driver_types.h" 3
    cudaErrorHardwareStackError = 72,







    cudaErrorIllegalInstruction = 73,
# 688 "/usr/local/cuda/include/driver_types.h" 3
    cudaErrorMisalignedAddress = 74,
# 699 "/usr/local/cuda/include/driver_types.h" 3
    cudaErrorInvalidAddressSpace = 75,







    cudaErrorInvalidPc = 76,







    cudaErrorIllegalAddress = 77,





    cudaErrorInvalidPtx = 78,




    cudaErrorInvalidGraphicsContext = 79,





    cudaErrorNvlinkUncorrectable = 80,




    cudaErrorStartupFailure = 0x7f,







    cudaErrorApiFailureBase = 10000
};




enum cudaChannelFormatKind
{
    cudaChannelFormatKindSigned = 0,
    cudaChannelFormatKindUnsigned = 1,
    cudaChannelFormatKindFloat = 2,
    cudaChannelFormatKindNone = 3
};




struct cudaChannelFormatDesc
{
    int x;
    int y;
    int z;
    int w;
    enum cudaChannelFormatKind f;
};




typedef struct cudaArray *cudaArray_t;




typedef const struct cudaArray *cudaArray_const_t;

struct cudaArray;




typedef struct cudaMipmappedArray *cudaMipmappedArray_t;




typedef const struct cudaMipmappedArray *cudaMipmappedArray_const_t;

struct cudaMipmappedArray;




enum cudaMemoryType
{
    cudaMemoryTypeHost = 1,
    cudaMemoryTypeDevice = 2
};




enum cudaMemcpyKind
{
    cudaMemcpyHostToHost = 0,
    cudaMemcpyHostToDevice = 1,
    cudaMemcpyDeviceToHost = 2,
    cudaMemcpyDeviceToDevice = 3,
    cudaMemcpyDefault = 4
};






struct cudaPitchedPtr
{
    void *ptr;
    size_t pitch;
    size_t xsize;
    size_t ysize;
};






struct cudaExtent
{
    size_t width;
    size_t height;
    size_t depth;
};






struct cudaPos
{
    size_t x;
    size_t y;
    size_t z;
};




struct cudaMemcpy3DParms
{
    cudaArray_t srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;

    cudaArray_t dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;

    struct cudaExtent extent;
    enum cudaMemcpyKind kind;
};




struct cudaMemcpy3DPeerParms
{
    cudaArray_t srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;
    int srcDevice;

    cudaArray_t dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;
    int dstDevice;

    struct cudaExtent extent;
};




struct cudaGraphicsResource;




enum cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone = 0,
    cudaGraphicsRegisterFlagsReadOnly = 1,
    cudaGraphicsRegisterFlagsWriteDiscard = 2,
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,
    cudaGraphicsRegisterFlagsTextureGather = 8
};




enum cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone = 0,
    cudaGraphicsMapFlagsReadOnly = 1,
    cudaGraphicsMapFlagsWriteDiscard = 2
};




enum cudaGraphicsCubeFace
{
    cudaGraphicsCubeFacePositiveX = 0x00,
    cudaGraphicsCubeFaceNegativeX = 0x01,
    cudaGraphicsCubeFacePositiveY = 0x02,
    cudaGraphicsCubeFaceNegativeY = 0x03,
    cudaGraphicsCubeFacePositiveZ = 0x04,
    cudaGraphicsCubeFaceNegativeZ = 0x05
};




enum cudaResourceType
{
    cudaResourceTypeArray = 0x00,
    cudaResourceTypeMipmappedArray = 0x01,
    cudaResourceTypeLinear = 0x02,
    cudaResourceTypePitch2D = 0x03
};




enum cudaResourceViewFormat
{
    cudaResViewFormatNone = 0x00,
    cudaResViewFormatUnsignedChar1 = 0x01,
    cudaResViewFormatUnsignedChar2 = 0x02,
    cudaResViewFormatUnsignedChar4 = 0x03,
    cudaResViewFormatSignedChar1 = 0x04,
    cudaResViewFormatSignedChar2 = 0x05,
    cudaResViewFormatSignedChar4 = 0x06,
    cudaResViewFormatUnsignedShort1 = 0x07,
    cudaResViewFormatUnsignedShort2 = 0x08,
    cudaResViewFormatUnsignedShort4 = 0x09,
    cudaResViewFormatSignedShort1 = 0x0a,
    cudaResViewFormatSignedShort2 = 0x0b,
    cudaResViewFormatSignedShort4 = 0x0c,
    cudaResViewFormatUnsignedInt1 = 0x0d,
    cudaResViewFormatUnsignedInt2 = 0x0e,
    cudaResViewFormatUnsignedInt4 = 0x0f,
    cudaResViewFormatSignedInt1 = 0x10,
    cudaResViewFormatSignedInt2 = 0x11,
    cudaResViewFormatSignedInt4 = 0x12,
    cudaResViewFormatHalf1 = 0x13,
    cudaResViewFormatHalf2 = 0x14,
    cudaResViewFormatHalf4 = 0x15,
    cudaResViewFormatFloat1 = 0x16,
    cudaResViewFormatFloat2 = 0x17,
    cudaResViewFormatFloat4 = 0x18,
    cudaResViewFormatUnsignedBlockCompressed1 = 0x19,
    cudaResViewFormatUnsignedBlockCompressed2 = 0x1a,
    cudaResViewFormatUnsignedBlockCompressed3 = 0x1b,
    cudaResViewFormatUnsignedBlockCompressed4 = 0x1c,
    cudaResViewFormatSignedBlockCompressed4 = 0x1d,
    cudaResViewFormatUnsignedBlockCompressed5 = 0x1e,
    cudaResViewFormatSignedBlockCompressed5 = 0x1f,
    cudaResViewFormatUnsignedBlockCompressed6H = 0x20,
    cudaResViewFormatSignedBlockCompressed6H = 0x21,
    cudaResViewFormatUnsignedBlockCompressed7 = 0x22
};




struct cudaResourceDesc {
 enum cudaResourceType resType;

 union {
  struct {
   cudaArray_t array;
  } array;
        struct {
            cudaMipmappedArray_t mipmap;
        } mipmap;
  struct {
   void *devPtr;
   struct cudaChannelFormatDesc desc;
   size_t sizeInBytes;
  } linear;
  struct {
   void *devPtr;
   struct cudaChannelFormatDesc desc;
   size_t width;
   size_t height;
   size_t pitchInBytes;
  } pitch2D;
 } res;
};




struct cudaResourceViewDesc
{
    enum cudaResourceViewFormat format;
    size_t width;
    size_t height;
    size_t depth;
    unsigned int firstMipmapLevel;
    unsigned int lastMipmapLevel;
    unsigned int firstLayer;
    unsigned int lastLayer;
};




struct cudaPointerAttributes
{




    enum cudaMemoryType memoryType;
# 1044 "/usr/local/cuda/include/driver_types.h" 3
    int device;





    void *devicePointer;





    void *hostPointer;




    int isManaged;
};




struct cudaFuncAttributes
{





   size_t sharedSizeBytes;





   size_t constSizeBytes;




   size_t localSizeBytes;






   int maxThreadsPerBlock;




   int numRegs;






   int ptxVersion;






   int binaryVersion;





   int cacheModeCA;
};




enum cudaFuncCache
{
    cudaFuncCachePreferNone = 0,
    cudaFuncCachePreferShared = 1,
    cudaFuncCachePreferL1 = 2,
    cudaFuncCachePreferEqual = 3
};





enum cudaSharedMemConfig
{
    cudaSharedMemBankSizeDefault = 0,
    cudaSharedMemBankSizeFourByte = 1,
    cudaSharedMemBankSizeEightByte = 2
};




enum cudaComputeMode
{
    cudaComputeModeDefault = 0,
    cudaComputeModeExclusive = 1,
    cudaComputeModeProhibited = 2,
    cudaComputeModeExclusiveProcess = 3
};




enum cudaLimit
{
    cudaLimitStackSize = 0x00,
    cudaLimitPrintfFifoSize = 0x01,
    cudaLimitMallocHeapSize = 0x02,
    cudaLimitDevRuntimeSyncDepth = 0x03,
    cudaLimitDevRuntimePendingLaunchCount = 0x04
};




enum cudaMemoryAdvise
{
    cudaMemAdviseSetReadMostly = 1,
    cudaMemAdviseUnsetReadMostly = 2,
    cudaMemAdviseSetPreferredLocation = 3,
    cudaMemAdviseUnsetPreferredLocation = 4,
    cudaMemAdviseSetAccessedBy = 5,
    cudaMemAdviseUnsetAccessedBy = 6
};




enum cudaMemRangeAttribute
{
    cudaMemRangeAttributeReadMostly = 1,
    cudaMemRangeAttributePreferredLocation = 2,
    cudaMemRangeAttributeAccessedBy = 3,
    cudaMemRangeAttributeLastPrefetchLocation = 4
};




enum cudaOutputMode
{
    cudaKeyValuePair = 0x00,
    cudaCSV = 0x01
};




enum cudaDeviceAttr
{
    cudaDevAttrMaxThreadsPerBlock = 1,
    cudaDevAttrMaxBlockDimX = 2,
    cudaDevAttrMaxBlockDimY = 3,
    cudaDevAttrMaxBlockDimZ = 4,
    cudaDevAttrMaxGridDimX = 5,
    cudaDevAttrMaxGridDimY = 6,
    cudaDevAttrMaxGridDimZ = 7,
    cudaDevAttrMaxSharedMemoryPerBlock = 8,
    cudaDevAttrTotalConstantMemory = 9,
    cudaDevAttrWarpSize = 10,
    cudaDevAttrMaxPitch = 11,
    cudaDevAttrMaxRegistersPerBlock = 12,
    cudaDevAttrClockRate = 13,
    cudaDevAttrTextureAlignment = 14,
    cudaDevAttrGpuOverlap = 15,
    cudaDevAttrMultiProcessorCount = 16,
    cudaDevAttrKernelExecTimeout = 17,
    cudaDevAttrIntegrated = 18,
    cudaDevAttrCanMapHostMemory = 19,
    cudaDevAttrComputeMode = 20,
    cudaDevAttrMaxTexture1DWidth = 21,
    cudaDevAttrMaxTexture2DWidth = 22,
    cudaDevAttrMaxTexture2DHeight = 23,
    cudaDevAttrMaxTexture3DWidth = 24,
    cudaDevAttrMaxTexture3DHeight = 25,
    cudaDevAttrMaxTexture3DDepth = 26,
    cudaDevAttrMaxTexture2DLayeredWidth = 27,
    cudaDevAttrMaxTexture2DLayeredHeight = 28,
    cudaDevAttrMaxTexture2DLayeredLayers = 29,
    cudaDevAttrSurfaceAlignment = 30,
    cudaDevAttrConcurrentKernels = 31,
    cudaDevAttrEccEnabled = 32,
    cudaDevAttrPciBusId = 33,
    cudaDevAttrPciDeviceId = 34,
    cudaDevAttrTccDriver = 35,
    cudaDevAttrMemoryClockRate = 36,
    cudaDevAttrGlobalMemoryBusWidth = 37,
    cudaDevAttrL2CacheSize = 38,
    cudaDevAttrMaxThreadsPerMultiProcessor = 39,
    cudaDevAttrAsyncEngineCount = 40,
    cudaDevAttrUnifiedAddressing = 41,
    cudaDevAttrMaxTexture1DLayeredWidth = 42,
    cudaDevAttrMaxTexture1DLayeredLayers = 43,
    cudaDevAttrMaxTexture2DGatherWidth = 45,
    cudaDevAttrMaxTexture2DGatherHeight = 46,
    cudaDevAttrMaxTexture3DWidthAlt = 47,
    cudaDevAttrMaxTexture3DHeightAlt = 48,
    cudaDevAttrMaxTexture3DDepthAlt = 49,
    cudaDevAttrPciDomainId = 50,
    cudaDevAttrTexturePitchAlignment = 51,
    cudaDevAttrMaxTextureCubemapWidth = 52,
    cudaDevAttrMaxTextureCubemapLayeredWidth = 53,
    cudaDevAttrMaxTextureCubemapLayeredLayers = 54,
    cudaDevAttrMaxSurface1DWidth = 55,
    cudaDevAttrMaxSurface2DWidth = 56,
    cudaDevAttrMaxSurface2DHeight = 57,
    cudaDevAttrMaxSurface3DWidth = 58,
    cudaDevAttrMaxSurface3DHeight = 59,
    cudaDevAttrMaxSurface3DDepth = 60,
    cudaDevAttrMaxSurface1DLayeredWidth = 61,
    cudaDevAttrMaxSurface1DLayeredLayers = 62,
    cudaDevAttrMaxSurface2DLayeredWidth = 63,
    cudaDevAttrMaxSurface2DLayeredHeight = 64,
    cudaDevAttrMaxSurface2DLayeredLayers = 65,
    cudaDevAttrMaxSurfaceCubemapWidth = 66,
    cudaDevAttrMaxSurfaceCubemapLayeredWidth = 67,
    cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68,
    cudaDevAttrMaxTexture1DLinearWidth = 69,
    cudaDevAttrMaxTexture2DLinearWidth = 70,
    cudaDevAttrMaxTexture2DLinearHeight = 71,
    cudaDevAttrMaxTexture2DLinearPitch = 72,
    cudaDevAttrMaxTexture2DMipmappedWidth = 73,
    cudaDevAttrMaxTexture2DMipmappedHeight = 74,
    cudaDevAttrComputeCapabilityMajor = 75,
    cudaDevAttrComputeCapabilityMinor = 76,
    cudaDevAttrMaxTexture1DMipmappedWidth = 77,
    cudaDevAttrStreamPrioritiesSupported = 78,
    cudaDevAttrGlobalL1CacheSupported = 79,
    cudaDevAttrLocalL1CacheSupported = 80,
    cudaDevAttrMaxSharedMemoryPerMultiprocessor = 81,
    cudaDevAttrMaxRegistersPerMultiprocessor = 82,
    cudaDevAttrManagedMemory = 83,
    cudaDevAttrIsMultiGpuBoard = 84,
    cudaDevAttrMultiGpuBoardGroupID = 85,
    cudaDevAttrHostNativeAtomicSupported = 86,
    cudaDevAttrSingleToDoublePrecisionPerfRatio = 87,
    cudaDevAttrPageableMemoryAccess = 88,
    cudaDevAttrConcurrentManagedAccess = 89,
    cudaDevAttrComputePreemptionSupported = 90,
    cudaDevAttrCanUseHostPointerForRegisteredMem = 91
};





enum cudaDeviceP2PAttr {
    cudaDevP2PAttrPerformanceRank = 1,
    cudaDevP2PAttrAccessSupported = 2,
    cudaDevP2PAttrNativeAtomicSupported = 3
};



struct cudaDeviceProp
{
    char name[256];
    size_t totalGlobalMem;
    size_t sharedMemPerBlock;
    int regsPerBlock;
    int warpSize;
    size_t memPitch;
    int maxThreadsPerBlock;
    int maxThreadsDim[3];
    int maxGridSize[3];
    int clockRate;
    size_t totalConstMem;
    int major;
    int minor;
    size_t textureAlignment;
    size_t texturePitchAlignment;
    int deviceOverlap;
    int multiProcessorCount;
    int kernelExecTimeoutEnabled;
    int integrated;
    int canMapHostMemory;
    int computeMode;
    int maxTexture1D;
    int maxTexture1DMipmap;
    int maxTexture1DLinear;
    int maxTexture2D[2];
    int maxTexture2DMipmap[2];
    int maxTexture2DLinear[3];
    int maxTexture2DGather[2];
    int maxTexture3D[3];
    int maxTexture3DAlt[3];
    int maxTextureCubemap;
    int maxTexture1DLayered[2];
    int maxTexture2DLayered[3];
    int maxTextureCubemapLayered[2];
    int maxSurface1D;
    int maxSurface2D[2];
    int maxSurface3D[3];
    int maxSurface1DLayered[2];
    int maxSurface2DLayered[3];
    int maxSurfaceCubemap;
    int maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;
    int concurrentKernels;
    int ECCEnabled;
    int pciBusID;
    int pciDeviceID;
    int pciDomainID;
    int tccDriver;
    int asyncEngineCount;
    int unifiedAddressing;
    int memoryClockRate;
    int memoryBusWidth;
    int l2CacheSize;
    int maxThreadsPerMultiProcessor;
    int streamPrioritiesSupported;
    int globalL1CacheSupported;
    int localL1CacheSupported;
    size_t sharedMemPerMultiprocessor;
    int regsPerMultiprocessor;
    int managedMemory;
    int isMultiGpuBoard;
    int multiGpuBoardGroupID;
    int hostNativeAtomicSupported;
    int singleToDoublePrecisionPerfRatio;
    int pageableMemoryAccess;
    int concurrentManagedAccess;
};
# 1455 "/usr/local/cuda/include/driver_types.h" 3
typedef struct cudaIpcEventHandle_st
{
    char reserved[64];
}cudaIpcEventHandle_t;




typedef struct cudaIpcMemHandle_st
{
    char reserved[64];
}cudaIpcMemHandle_t;
# 1477 "/usr/local/cuda/include/driver_types.h" 3
typedef enum cudaError cudaError_t;




typedef struct CUstream_st *cudaStream_t;




typedef struct CUevent_st *cudaEvent_t;




typedef struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef struct CUuuid_st cudaUUID_t;




typedef enum cudaOutputMode cudaOutputMode_t;
# 60 "/usr/local/cuda/include/builtin_types.h" 2 3


# 1 "/usr/local/cuda/include/surface_types.h" 1 3
# 84 "/usr/local/cuda/include/surface_types.h" 3
enum cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero = 0,
    cudaBoundaryModeClamp = 1,
    cudaBoundaryModeTrap = 2
};




enum cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,
    cudaFormatModeAuto = 1
};




struct surfaceReference
{



    struct cudaChannelFormatDesc channelDesc;
};




typedef unsigned long long cudaSurfaceObject_t;
# 63 "/usr/local/cuda/include/builtin_types.h" 2 3
# 1 "/usr/local/cuda/include/texture_types.h" 1 3
# 84 "/usr/local/cuda/include/texture_types.h" 3
enum cudaTextureAddressMode
{
    cudaAddressModeWrap = 0,
    cudaAddressModeClamp = 1,
    cudaAddressModeMirror = 2,
    cudaAddressModeBorder = 3
};




enum cudaTextureFilterMode
{
    cudaFilterModePoint = 0,
    cudaFilterModeLinear = 1
};




enum cudaTextureReadMode
{
    cudaReadModeElementType = 0,
    cudaReadModeNormalizedFloat = 1
};




struct textureReference
{



    int normalized;



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureAddressMode addressMode[3];



    struct cudaChannelFormatDesc channelDesc;



    int sRGB;



    unsigned int maxAnisotropy;



    enum cudaTextureFilterMode mipmapFilterMode;



    float mipmapLevelBias;



    float minMipmapLevelClamp;



    float maxMipmapLevelClamp;
    int __cudaReserved[15];
};




struct cudaTextureDesc
{



    enum cudaTextureAddressMode addressMode[3];



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureReadMode readMode;



    int sRGB;



    float borderColor[4];



    int normalizedCoords;



    unsigned int maxAnisotropy;



    enum cudaTextureFilterMode mipmapFilterMode;



    float mipmapLevelBias;



    float minMipmapLevelClamp;



    float maxMipmapLevelClamp;
};




typedef unsigned long long cudaTextureObject_t;
# 64 "/usr/local/cuda/include/builtin_types.h" 2 3
# 1 "/usr/local/cuda/include/vector_types.h" 1 3
# 61 "/usr/local/cuda/include/vector_types.h" 3
# 1 "/usr/local/cuda/include/builtin_types.h" 1 3
# 64 "/usr/local/cuda/include/builtin_types.h" 3
# 1 "/usr/local/cuda/include/vector_types.h" 1 3
# 64 "/usr/local/cuda/include/builtin_types.h" 2 3
# 62 "/usr/local/cuda/include/vector_types.h" 2 3
# 98 "/usr/local/cuda/include/vector_types.h" 3
struct char1
{
    signed char x;
};

struct uchar1
{
    unsigned char x;
};


struct __attribute__((aligned(2))) char2
{
    signed char x, y;
};

struct __attribute__((aligned(2))) uchar2
{
    unsigned char x, y;
};

struct char3
{
    signed char x, y, z;
};

struct uchar3
{
    unsigned char x, y, z;
};

struct __attribute__((aligned(4))) char4
{
    signed char x, y, z, w;
};

struct __attribute__((aligned(4))) uchar4
{
    unsigned char x, y, z, w;
};

struct short1
{
    short x;
};

struct ushort1
{
    unsigned short x;
};

struct __attribute__((aligned(4))) short2
{
    short x, y;
};

struct __attribute__((aligned(4))) ushort2
{
    unsigned short x, y;
};

struct short3
{
    short x, y, z;
};

struct ushort3
{
    unsigned short x, y, z;
};

struct __attribute__((aligned(8))) short4 { short x; short y; short z; short w; };
struct __attribute__((aligned(8))) ushort4 { unsigned short x; unsigned short y; unsigned short z; unsigned short w; };

struct int1
{
    int x;
};

struct uint1
{
    unsigned int x;
};

struct __attribute__((aligned(8))) int2 { int x; int y; };
struct __attribute__((aligned(8))) uint2 { unsigned int x; unsigned int y; };

struct int3
{
    int x, y, z;
};

struct uint3
{
    unsigned int x, y, z;
};

struct __attribute__((aligned(16))) int4
{
    int x, y, z, w;
};

struct __attribute__((aligned(16))) uint4
{
    unsigned int x, y, z, w;
};

struct long1
{
    long int x;
};

struct ulong1
{
    unsigned long x;
};






struct __attribute__((aligned(2*sizeof(long int)))) long2
{
    long int x, y;
};

struct __attribute__((aligned(2*sizeof(unsigned long int)))) ulong2
{
    unsigned long int x, y;
};



struct long3
{
    long int x, y, z;
};

struct ulong3
{
    unsigned long int x, y, z;
};

struct __attribute__((aligned(16))) long4
{
    long int x, y, z, w;
};

struct __attribute__((aligned(16))) ulong4
{
    unsigned long int x, y, z, w;
};

struct float1
{
    float x;
};
# 274 "/usr/local/cuda/include/vector_types.h" 3
struct __attribute__((aligned(8))) float2 { float x; float y; };




struct float3
{
    float x, y, z;
};

struct __attribute__((aligned(16))) float4
{
    float x, y, z, w;
};

struct longlong1
{
    long long int x;
};

struct ulonglong1
{
    unsigned long long int x;
};

struct __attribute__((aligned(16))) longlong2
{
    long long int x, y;
};

struct __attribute__((aligned(16))) ulonglong2
{
    unsigned long long int x, y;
};

struct longlong3
{
    long long int x, y, z;
};

struct ulonglong3
{
    unsigned long long int x, y, z;
};

struct __attribute__((aligned(16))) longlong4
{
    long long int x, y, z ,w;
};

struct __attribute__((aligned(16))) ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct double1
{
    double x;
};

struct __attribute__((aligned(16))) double2
{
    double x, y;
};

struct double3
{
    double x, y, z;
};

struct __attribute__((aligned(16))) double4
{
    double x, y, z, w;
};
# 362 "/usr/local/cuda/include/vector_types.h" 3
typedef struct char1 char1;
typedef struct uchar1 uchar1;
typedef struct char2 char2;
typedef struct uchar2 uchar2;
typedef struct char3 char3;
typedef struct uchar3 uchar3;
typedef struct char4 char4;
typedef struct uchar4 uchar4;
typedef struct short1 short1;
typedef struct ushort1 ushort1;
typedef struct short2 short2;
typedef struct ushort2 ushort2;
typedef struct short3 short3;
typedef struct ushort3 ushort3;
typedef struct short4 short4;
typedef struct ushort4 ushort4;
typedef struct int1 int1;
typedef struct uint1 uint1;
typedef struct int2 int2;
typedef struct uint2 uint2;
typedef struct int3 int3;
typedef struct uint3 uint3;
typedef struct int4 int4;
typedef struct uint4 uint4;
typedef struct long1 long1;
typedef struct ulong1 ulong1;
typedef struct long2 long2;
typedef struct ulong2 ulong2;
typedef struct long3 long3;
typedef struct ulong3 ulong3;
typedef struct long4 long4;
typedef struct ulong4 ulong4;
typedef struct float1 float1;
typedef struct float2 float2;
typedef struct float3 float3;
typedef struct float4 float4;
typedef struct longlong1 longlong1;
typedef struct ulonglong1 ulonglong1;
typedef struct longlong2 longlong2;
typedef struct ulonglong2 ulonglong2;
typedef struct longlong3 longlong3;
typedef struct ulonglong3 ulonglong3;
typedef struct longlong4 longlong4;
typedef struct ulonglong4 ulonglong4;
typedef struct double1 double1;
typedef struct double2 double2;
typedef struct double3 double3;
typedef struct double4 double4;







struct dim3
{
    unsigned int x, y, z;

    dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
    dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
    operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }

};

typedef struct dim3 dim3;
# 64 "/usr/local/cuda/include/builtin_types.h" 2 3
# 70 "/usr/local/cuda/include/crt/host_runtime.h" 2 3
# 1 "/usr/local/cuda/include/crt/storage_class.h" 1 3
# 71 "/usr/local/cuda/include/crt/host_runtime.h" 2 3
# 218 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 2 3
# 156 "/usr/local/cuda/include/driver_types.h"
# 751 "/usr/local/cuda/include/driver_types.h"
# 762 "/usr/local/cuda/include/driver_types.h"
# 774 "/usr/local/cuda/include/driver_types.h"

# 774 "/usr/local/cuda/include/driver_types.h"
typedef struct cudaArray *cudaArray_t;
# 779 "/usr/local/cuda/include/driver_types.h"
typedef const cudaArray *cudaArray_const_t;
# 781 "/usr/local/cuda/include/driver_types.h"
struct cudaArray;
# 786 "/usr/local/cuda/include/driver_types.h"
typedef struct cudaMipmappedArray *cudaMipmappedArray_t;
# 791 "/usr/local/cuda/include/driver_types.h"
typedef const cudaMipmappedArray *cudaMipmappedArray_const_t;
# 793 "/usr/local/cuda/include/driver_types.h"
struct cudaMipmappedArray;
# 798 "/usr/local/cuda/include/driver_types.h"
# 807 "/usr/local/cuda/include/driver_types.h"
# 821 "/usr/local/cuda/include/driver_types.h"
# 834 "/usr/local/cuda/include/driver_types.h"
# 846 "/usr/local/cuda/include/driver_types.h"
# 856 "/usr/local/cuda/include/driver_types.h"
# 873 "/usr/local/cuda/include/driver_types.h"
# 891 "/usr/local/cuda/include/driver_types.h"
struct cudaGraphicsResource;
# 896 "/usr/local/cuda/include/driver_types.h"
# 908 "/usr/local/cuda/include/driver_types.h"
# 918 "/usr/local/cuda/include/driver_types.h"
# 931 "/usr/local/cuda/include/driver_types.h"
# 942 "/usr/local/cuda/include/driver_types.h"
# 984 "/usr/local/cuda/include/driver_types.h"
# 1012 "/usr/local/cuda/include/driver_types.h"
# 1027 "/usr/local/cuda/include/driver_types.h"
# 1067 "/usr/local/cuda/include/driver_types.h"
# 1123 "/usr/local/cuda/include/driver_types.h"
# 1135 "/usr/local/cuda/include/driver_types.h"
# 1145 "/usr/local/cuda/include/driver_types.h"
# 1156 "/usr/local/cuda/include/driver_types.h"
# 1168 "/usr/local/cuda/include/driver_types.h"
# 1181 "/usr/local/cuda/include/driver_types.h"
# 1192 "/usr/local/cuda/include/driver_types.h"
# 1201 "/usr/local/cuda/include/driver_types.h"
# 1299 "/usr/local/cuda/include/driver_types.h"
# 1307 "/usr/local/cuda/include/driver_types.h"
# 1458 "/usr/local/cuda/include/driver_types.h"
# 1466 "/usr/local/cuda/include/driver_types.h"
# 1477 "/usr/local/cuda/include/driver_types.h"
# 1482 "/usr/local/cuda/include/driver_types.h"
# 1487 "/usr/local/cuda/include/driver_types.h"
# 1492 "/usr/local/cuda/include/driver_types.h"
# 1497 "/usr/local/cuda/include/driver_types.h"
# 1502 "/usr/local/cuda/include/driver_types.h"
# 84 "/usr/local/cuda/include/surface_types.h"
# 94 "/usr/local/cuda/include/surface_types.h"
# 103 "/usr/local/cuda/include/surface_types.h"
# 114 "/usr/local/cuda/include/surface_types.h"
# 84 "/usr/local/cuda/include/texture_types.h"
# 95 "/usr/local/cuda/include/texture_types.h"
# 104 "/usr/local/cuda/include/texture_types.h"
# 113 "/usr/local/cuda/include/texture_types.h"
# 161 "/usr/local/cuda/include/texture_types.h"
# 212 "/usr/local/cuda/include/texture_types.h"
# 98 "/usr/local/cuda/include/vector_types.h"
# 103 "/usr/local/cuda/include/vector_types.h"
# 109 "/usr/local/cuda/include/vector_types.h"
# 114 "/usr/local/cuda/include/vector_types.h"
# 119 "/usr/local/cuda/include/vector_types.h"
# 124 "/usr/local/cuda/include/vector_types.h"
# 129 "/usr/local/cuda/include/vector_types.h"
# 134 "/usr/local/cuda/include/vector_types.h"
# 139 "/usr/local/cuda/include/vector_types.h"
# 144 "/usr/local/cuda/include/vector_types.h"
# 149 "/usr/local/cuda/include/vector_types.h"
# 154 "/usr/local/cuda/include/vector_types.h"
# 159 "/usr/local/cuda/include/vector_types.h"
# 164 "/usr/local/cuda/include/vector_types.h"
# 169 "/usr/local/cuda/include/vector_types.h"
# 170 "/usr/local/cuda/include/vector_types.h"
# 172 "/usr/local/cuda/include/vector_types.h"
# 177 "/usr/local/cuda/include/vector_types.h"
# 182 "/usr/local/cuda/include/vector_types.h"
# 183 "/usr/local/cuda/include/vector_types.h"
# 185 "/usr/local/cuda/include/vector_types.h"
# 190 "/usr/local/cuda/include/vector_types.h"
# 195 "/usr/local/cuda/include/vector_types.h"
# 200 "/usr/local/cuda/include/vector_types.h"
# 205 "/usr/local/cuda/include/vector_types.h"
# 210 "/usr/local/cuda/include/vector_types.h"
# 220 "/usr/local/cuda/include/vector_types.h"
# 225 "/usr/local/cuda/include/vector_types.h"
# 232 "/usr/local/cuda/include/vector_types.h"
# 237 "/usr/local/cuda/include/vector_types.h"
# 242 "/usr/local/cuda/include/vector_types.h"
# 247 "/usr/local/cuda/include/vector_types.h"
# 252 "/usr/local/cuda/include/vector_types.h"
# 274 "/usr/local/cuda/include/vector_types.h"
# 279 "/usr/local/cuda/include/vector_types.h"
# 284 "/usr/local/cuda/include/vector_types.h"
# 289 "/usr/local/cuda/include/vector_types.h"
# 294 "/usr/local/cuda/include/vector_types.h"
# 299 "/usr/local/cuda/include/vector_types.h"
# 304 "/usr/local/cuda/include/vector_types.h"
# 309 "/usr/local/cuda/include/vector_types.h"
# 314 "/usr/local/cuda/include/vector_types.h"
# 319 "/usr/local/cuda/include/vector_types.h"
# 324 "/usr/local/cuda/include/vector_types.h"
# 329 "/usr/local/cuda/include/vector_types.h"
# 334 "/usr/local/cuda/include/vector_types.h"
# 339 "/usr/local/cuda/include/vector_types.h"
# 344 "/usr/local/cuda/include/vector_types.h"
# 362 "/usr/local/cuda/include/vector_types.h"
# 363 "/usr/local/cuda/include/vector_types.h"
# 364 "/usr/local/cuda/include/vector_types.h"
# 365 "/usr/local/cuda/include/vector_types.h"
# 366 "/usr/local/cuda/include/vector_types.h"
# 367 "/usr/local/cuda/include/vector_types.h"
# 368 "/usr/local/cuda/include/vector_types.h"
# 369 "/usr/local/cuda/include/vector_types.h"
# 370 "/usr/local/cuda/include/vector_types.h"
# 371 "/usr/local/cuda/include/vector_types.h"
# 372 "/usr/local/cuda/include/vector_types.h"
# 373 "/usr/local/cuda/include/vector_types.h"
# 374 "/usr/local/cuda/include/vector_types.h"
# 375 "/usr/local/cuda/include/vector_types.h"
# 376 "/usr/local/cuda/include/vector_types.h"
# 377 "/usr/local/cuda/include/vector_types.h"
# 378 "/usr/local/cuda/include/vector_types.h"
# 379 "/usr/local/cuda/include/vector_types.h"
# 380 "/usr/local/cuda/include/vector_types.h"
# 381 "/usr/local/cuda/include/vector_types.h"
# 382 "/usr/local/cuda/include/vector_types.h"
# 383 "/usr/local/cuda/include/vector_types.h"
# 384 "/usr/local/cuda/include/vector_types.h"
# 385 "/usr/local/cuda/include/vector_types.h"
# 386 "/usr/local/cuda/include/vector_types.h"
# 387 "/usr/local/cuda/include/vector_types.h"
# 388 "/usr/local/cuda/include/vector_types.h"
# 389 "/usr/local/cuda/include/vector_types.h"
# 390 "/usr/local/cuda/include/vector_types.h"
# 391 "/usr/local/cuda/include/vector_types.h"
# 392 "/usr/local/cuda/include/vector_types.h"
# 393 "/usr/local/cuda/include/vector_types.h"
# 394 "/usr/local/cuda/include/vector_types.h"
# 395 "/usr/local/cuda/include/vector_types.h"
# 396 "/usr/local/cuda/include/vector_types.h"
# 397 "/usr/local/cuda/include/vector_types.h"
# 398 "/usr/local/cuda/include/vector_types.h"
# 399 "/usr/local/cuda/include/vector_types.h"
# 400 "/usr/local/cuda/include/vector_types.h"
# 401 "/usr/local/cuda/include/vector_types.h"
# 402 "/usr/local/cuda/include/vector_types.h"
# 403 "/usr/local/cuda/include/vector_types.h"
# 404 "/usr/local/cuda/include/vector_types.h"
# 405 "/usr/local/cuda/include/vector_types.h"
# 406 "/usr/local/cuda/include/vector_types.h"
# 407 "/usr/local/cuda/include/vector_types.h"
# 408 "/usr/local/cuda/include/vector_types.h"
# 409 "/usr/local/cuda/include/vector_types.h"
# 417 "/usr/local/cuda/include/vector_types.h"
# 427 "/usr/local/cuda/include/vector_types.h"
# 70 "/usr/local/cuda/include/library_types.h"
typedef
# 54 "/usr/local/cuda/include/library_types.h"
enum cudaDataType_t {
# 56 "/usr/local/cuda/include/library_types.h"
CUDA_R_16F = 2,
# 57 "/usr/local/cuda/include/library_types.h"
CUDA_C_16F = 6,
# 58 "/usr/local/cuda/include/library_types.h"
CUDA_R_32F = 0,
# 59 "/usr/local/cuda/include/library_types.h"
CUDA_C_32F = 4,
# 60 "/usr/local/cuda/include/library_types.h"
CUDA_R_64F = 1,
# 61 "/usr/local/cuda/include/library_types.h"
CUDA_C_64F = 5,
# 62 "/usr/local/cuda/include/library_types.h"
CUDA_R_8I = 3,
# 63 "/usr/local/cuda/include/library_types.h"
CUDA_C_8I = 7,
# 64 "/usr/local/cuda/include/library_types.h"
CUDA_R_8U,
# 65 "/usr/local/cuda/include/library_types.h"
CUDA_C_8U,
# 66 "/usr/local/cuda/include/library_types.h"
CUDA_R_32I,
# 67 "/usr/local/cuda/include/library_types.h"
CUDA_C_32I,
# 68 "/usr/local/cuda/include/library_types.h"
CUDA_R_32U,
# 69 "/usr/local/cuda/include/library_types.h"
CUDA_C_32U
# 70 "/usr/local/cuda/include/library_types.h"
} cudaDataType;
# 78 "/usr/local/cuda/include/library_types.h"
typedef
# 73 "/usr/local/cuda/include/library_types.h"
enum libraryPropertyType_t {
# 75 "/usr/local/cuda/include/library_types.h"
MAJOR_VERSION,
# 76 "/usr/local/cuda/include/library_types.h"
MINOR_VERSION,
# 77 "/usr/local/cuda/include/library_types.h"
PATCH_LEVEL
# 78 "/usr/local/cuda/include/library_types.h"
} libraryPropertyType;
# 104 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern "C" {
# 106 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device);
# 107 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaDeviceGetLimit(size_t * pValue, cudaLimit limit);
# 108 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig);
# 109 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig);
# 110 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaDeviceSynchronize();
# 111 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaGetLastError();
# 112 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaPeekAtLastError();
# 113 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern const char *cudaGetErrorString(cudaError_t error);
# 114 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern const char *cudaGetErrorName(cudaError_t error);
# 115 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaGetDeviceCount(int * count);
# 116 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaGetDevice(int * device);
# 117 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags);
# 118 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaStreamDestroy(cudaStream_t stream);
# 119 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 120 "/usr/local/cuda/include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaStreamWaitEvent_ptsz(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 121 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags);
# 122 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaEventRecord(cudaEvent_t event, cudaStream_t stream);
# 123 "/usr/local/cuda/include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaEventRecord_ptsz(cudaEvent_t event, cudaStream_t stream);
# 124 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaEventDestroy(cudaEvent_t event);
# 125 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func);
# 126 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaFree(void * devPtr);
# 127 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaMalloc(void ** devPtr, size_t size);
# 128 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaMemcpyAsync(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream);
# 129 "/usr/local/cuda/include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaMemcpyAsync_ptsz(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream);
# 130 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaMemcpy2DAsync(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream);
# 131 "/usr/local/cuda/include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaMemcpy2DAsync_ptsz(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream);
# 132 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream);
# 133 "/usr/local/cuda/include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaMemcpy3DAsync_ptsz(const cudaMemcpy3DParms * p, cudaStream_t stream);
# 134 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaMemsetAsync(void * devPtr, int value, size_t count, cudaStream_t stream);
# 135 "/usr/local/cuda/include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaMemsetAsync_ptsz(void * devPtr, int value, size_t count, cudaStream_t stream);
# 136 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaMemset2DAsync(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream);
# 137 "/usr/local/cuda/include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaMemset2DAsync_ptsz(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream);
# 138 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream);
# 139 "/usr/local/cuda/include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaMemset3DAsync_ptsz(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream);
# 140 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaRuntimeGetVersion(int * runtimeVersion);
# 161 "/usr/local/cuda/include/cuda_device_runtime_api.h"
__attribute__((unused)) extern void *cudaGetParameterBuffer(size_t alignment, size_t size);
# 189 "/usr/local/cuda/include/cuda_device_runtime_api.h"
__attribute__((unused)) extern void *cudaGetParameterBufferV2(void * func, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize);
# 190 "/usr/local/cuda/include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaLaunchDevice_ptsz(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream);
# 191 "/usr/local/cuda/include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaLaunchDeviceV2_ptsz(void * parameterBuffer, cudaStream_t stream);
# 209 "/usr/local/cuda/include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaLaunchDevice(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream);
# 210 "/usr/local/cuda/include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaLaunchDeviceV2(void * parameterBuffer, cudaStream_t stream);
# 213 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, size_t dynamicSmemSize);
# 214 "/usr/local/cuda/include/cuda_device_runtime_api.h"
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, size_t dynamicSmemSize, unsigned flags);
# 216 "/usr/local/cuda/include/cuda_device_runtime_api.h"
}
# 218 "/usr/local/cuda/include/cuda_device_runtime_api.h"
template< class T> static inline cudaError_t cudaMalloc(T ** devPtr, size_t size);
# 219 "/usr/local/cuda/include/cuda_device_runtime_api.h"
template< class T> static inline cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, T * entry);
# 220 "/usr/local/cuda/include/cuda_device_runtime_api.h"
template< class T> static inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, T func, int blockSize, size_t dynamicSmemSize);
# 221 "/usr/local/cuda/include/cuda_device_runtime_api.h"
template< class T> static inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, T func, int blockSize, size_t dynamicSmemSize, unsigned flags);
# 219 "/usr/local/cuda/include/cuda_runtime_api.h"
extern "C" {
# 252 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceReset();
# 269 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceSynchronize();
# 344 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceSetLimit(cudaLimit limit, size_t value);
# 373 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetLimit(size_t * pValue, cudaLimit limit);
# 404 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig);
# 439 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetStreamPriorityRange(int * leastPriority, int * greatestPriority);
# 481 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceSetCacheConfig(cudaFuncCache cacheConfig);
# 510 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig);
# 552 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceSetSharedMemConfig(cudaSharedMemConfig config);
# 575 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetByPCIBusId(int * device, const char * pciBusId);
# 602 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetPCIBusId(char * pciBusId, int len, int device);
# 644 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaIpcGetEventHandle(cudaIpcEventHandle_t * handle, cudaEvent_t event);
# 679 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaIpcOpenEventHandle(cudaEvent_t * event, cudaIpcEventHandle_t handle);
# 717 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaIpcGetMemHandle(cudaIpcMemHandle_t * handle, void * devPtr);
# 767 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaIpcOpenMemHandle(void ** devPtr, cudaIpcMemHandle_t handle, unsigned flags);
# 797 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaIpcCloseMemHandle(void * devPtr);
# 837 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaThreadExit();
# 861 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaThreadSynchronize();
# 908 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaThreadSetLimit(cudaLimit limit, size_t value);
# 939 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaThreadGetLimit(size_t * pValue, cudaLimit limit);
# 974 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaThreadGetCacheConfig(cudaFuncCache * pCacheConfig);
# 1020 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaThreadSetCacheConfig(cudaFuncCache cacheConfig);
# 1074 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGetLastError();
# 1115 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaPeekAtLastError();
# 1130 "/usr/local/cuda/include/cuda_runtime_api.h"
extern const char *cudaGetErrorName(cudaError_t error);
# 1145 "/usr/local/cuda/include/cuda_runtime_api.h"
extern const char *cudaGetErrorString(cudaError_t error);
# 1175 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGetDeviceCount(int * count);
# 1421 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGetDeviceProperties(cudaDeviceProp * prop, int device);
# 1593 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device);
# 1628 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetP2PAttribute(int * value, cudaDeviceP2PAttr attr, int srcDevice, int dstDevice);
# 1647 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaChooseDevice(int * device, const cudaDeviceProp * prop);
# 1681 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaSetDevice(int device);
# 1698 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGetDevice(int * device);
# 1727 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaSetValidDevices(int * device_arr, int len);
# 1789 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaSetDeviceFlags(unsigned flags);
# 1830 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGetDeviceFlags(unsigned * flags);
# 1867 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaStreamCreate(cudaStream_t * pStream);
# 1896 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags);
# 1939 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaStreamCreateWithPriority(cudaStream_t * pStream, unsigned flags, int priority);
# 1963 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaStreamGetPriority(cudaStream_t hStream, int * priority);
# 1984 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaStreamGetFlags(cudaStream_t hStream, unsigned * flags);
# 2005 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaStreamDestroy(cudaStream_t stream);
# 2037 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 2051 "/usr/local/cuda/include/cuda_runtime_api.h"
typedef void (*cudaStreamCallback_t)(cudaStream_t stream, cudaError_t status, void * userData);
# 2108 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaStreamAddCallback(cudaStream_t stream, cudaStreamCallback_t callback, void * userData, unsigned flags);
# 2128 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaStreamSynchronize(cudaStream_t stream);
# 2149 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaStreamQuery(cudaStream_t stream);
# 2220 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaStreamAttachMemAsync(cudaStream_t stream, void * devPtr, size_t length = 0, unsigned flags = 4);
# 2256 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaEventCreate(cudaEvent_t * event);
# 2290 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags);
# 2321 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaEventRecord(cudaEvent_t event, cudaStream_t stream = 0);
# 2353 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaEventQuery(cudaEvent_t event);
# 2385 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaEventSynchronize(cudaEvent_t event);
# 2410 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaEventDestroy(cudaEvent_t event);
# 2451 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaEventElapsedTime(float * ms, cudaEvent_t start, cudaEvent_t end);
# 2510 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaLaunchKernel(const void * func, dim3 gridDim, dim3 blockDim, void ** args, size_t sharedMem, cudaStream_t stream);
# 2560 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaFuncSetCacheConfig(const void * func, cudaFuncCache cacheConfig);
# 2614 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaFuncSetSharedMemConfig(const void * func, cudaSharedMemConfig config);
# 2648 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func);
# 2671 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaSetDoubleForDevice(double * d);
# 2694 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaSetDoubleForHost(double * d);
# 2750 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, size_t dynamicSMemSize);
# 2794 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, size_t dynamicSMemSize, unsigned flags);
# 2845 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaConfigureCall(dim3 gridDim, dim3 blockDim, size_t sharedMem = 0, cudaStream_t stream = 0);
# 2874 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaSetupArgument(const void * arg, size_t size, size_t offset);
# 2912 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaLaunch(const void * func);
# 3030 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMallocManaged(void ** devPtr, size_t size, unsigned flags = 1);
# 3056 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMalloc(void ** devPtr, size_t size);
# 3085 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMallocHost(void ** ptr, size_t size);
# 3124 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMallocPitch(void ** devPtr, size_t * pitch, size_t width, size_t height);
# 3166 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMallocArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, size_t width, size_t height = 0, unsigned flags = 0);
# 3193 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaFree(void * devPtr);
# 3213 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaFreeHost(void * ptr);
# 3235 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaFreeArray(cudaArray_t array);
# 3257 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaFreeMipmappedArray(cudaMipmappedArray_t mipmappedArray);
# 3316 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaHostAlloc(void ** pHost, size_t size, unsigned flags);
# 3393 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaHostRegister(void * ptr, size_t size, unsigned flags);
# 3412 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaHostUnregister(void * ptr);
# 3454 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaHostGetDevicePointer(void ** pDevice, void * pHost, unsigned flags);
# 3473 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaHostGetFlags(unsigned * pFlags, void * pHost);
# 3508 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMalloc3D(cudaPitchedPtr * pitchedDevPtr, cudaExtent extent);
# 3643 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMalloc3DArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned flags = 0);
# 3764 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMallocMipmappedArray(cudaMipmappedArray_t * mipmappedArray, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned numLevels, unsigned flags = 0);
# 3790 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGetMipmappedArrayLevel(cudaArray_t * levelArray, cudaMipmappedArray_const_t mipmappedArray, unsigned level);
# 3890 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy3D(const cudaMemcpy3DParms * p);
# 3918 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy3DPeer(const cudaMemcpy3DPeerParms * p);
# 4029 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream = 0);
# 4052 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy3DPeerAsync(const cudaMemcpy3DPeerParms * p, cudaStream_t stream = 0);
# 4071 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemGetInfo(size_t * free, size_t * total);
# 4092 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaArrayGetInfo(cudaChannelFormatDesc * desc, cudaExtent * extent, unsigned * flags, cudaArray_t array);
# 4130 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy(void * dst, const void * src, size_t count, cudaMemcpyKind kind);
# 4162 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyPeer(void * dst, int dstDevice, const void * src, int srcDevice, size_t count);
# 4200 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyToArray(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t count, cudaMemcpyKind kind);
# 4237 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyFromArray(void * dst, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t count, cudaMemcpyKind kind);
# 4275 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyArrayToArray(cudaArray_t dst, size_t wOffsetDst, size_t hOffsetDst, cudaArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t count, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice);
# 4320 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2D(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind);
# 4366 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2DToArray(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind);
# 4412 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2DFromArray(void * dst, size_t dpitch, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, cudaMemcpyKind kind);
# 4455 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2DArrayToArray(cudaArray_t dst, size_t wOffsetDst, size_t hOffsetDst, cudaArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t width, size_t height, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice);
# 4493 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyToSymbol(const void * symbol, const void * src, size_t count, size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyHostToDevice);
# 4531 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyFromSymbol(void * dst, const void * symbol, size_t count, size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyDeviceToHost);
# 4582 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyAsync(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4614 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyPeerAsync(void * dst, int dstDevice, const void * src, int srcDevice, size_t count, cudaStream_t stream = 0);
# 4660 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyToArrayAsync(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4705 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyFromArrayAsync(void * dst, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4765 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2DAsync(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4820 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2DToArrayAsync(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4874 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2DFromArrayAsync(void * dst, size_t dpitch, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4920 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyToSymbolAsync(const void * symbol, const void * src, size_t count, size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4966 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyFromSymbolAsync(void * dst, const void * symbol, size_t count, size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4992 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemset(void * devPtr, int value, size_t count);
# 5022 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemset2D(void * devPtr, size_t pitch, int value, size_t width, size_t height);
# 5065 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemset3D(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent);
# 5097 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemsetAsync(void * devPtr, int value, size_t count, cudaStream_t stream = 0);
# 5134 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemset2DAsync(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream = 0);
# 5184 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream = 0);
# 5207 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGetSymbolAddress(void ** devPtr, const void * symbol);
# 5229 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGetSymbolSize(size_t * size, const void * symbol);
# 5296 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemPrefetchAsync(const void * devPtr, size_t count, int dstDevice, cudaStream_t stream = 0);
# 5382 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemAdvise(const void * devPtr, size_t count, cudaMemoryAdvise advice, int device);
# 5438 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemRangeGetAttribute(void * data, size_t dataSize, cudaMemRangeAttribute attribute, const void * devPtr, size_t count);
# 5474 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaMemRangeGetAttributes(void ** data, size_t * dataSizes, cudaMemRangeAttribute * attributes, size_t numAttributes, const void * devPtr, size_t count);
# 5627 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaPointerGetAttributes(cudaPointerAttributes * attributes, const void * ptr);
# 5665 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceCanAccessPeer(int * canAccessPeer, int device, int peerDevice);
# 5704 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceEnablePeerAccess(int peerDevice, unsigned flags);
# 5723 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceDisablePeerAccess(int peerDevice);
# 5783 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsUnregisterResource(cudaGraphicsResource_t resource);
# 5815 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t resource, unsigned flags);
# 5851 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsMapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0);
# 5883 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsUnmapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0);
# 5912 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsResourceGetMappedPointer(void ** devPtr, size_t * size, cudaGraphicsResource_t resource);
# 5946 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsSubResourceGetMappedArray(cudaArray_t * array, cudaGraphicsResource_t resource, unsigned arrayIndex, unsigned mipLevel);
# 5971 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsResourceGetMappedMipmappedArray(cudaMipmappedArray_t * mipmappedArray, cudaGraphicsResource_t resource);
# 6011 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGetChannelDesc(cudaChannelFormatDesc * desc, cudaArray_const_t array);
# 6046 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaChannelFormatDesc cudaCreateChannelDesc(int x, int y, int z, int w, cudaChannelFormatKind f);
# 6093 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaBindTexture(size_t * offset, const textureReference * texref, const void * devPtr, const cudaChannelFormatDesc * desc, size_t size = ((2147483647) * 2U) + 1U);
# 6144 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaBindTexture2D(size_t * offset, const textureReference * texref, const void * devPtr, const cudaChannelFormatDesc * desc, size_t width, size_t height, size_t pitch);
# 6172 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaBindTextureToArray(const textureReference * texref, cudaArray_const_t array, const cudaChannelFormatDesc * desc);
# 6200 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaBindTextureToMipmappedArray(const textureReference * texref, cudaMipmappedArray_const_t mipmappedArray, const cudaChannelFormatDesc * desc);
# 6221 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaUnbindTexture(const textureReference * texref);
# 6246 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGetTextureAlignmentOffset(size_t * offset, const textureReference * texref);
# 6271 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGetTextureReference(const textureReference ** texref, const void * symbol);
# 6311 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaBindSurfaceToArray(const surfaceReference * surfref, cudaArray_const_t array, const cudaChannelFormatDesc * desc);
# 6330 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGetSurfaceReference(const surfaceReference ** surfref, const void * symbol);
# 6556 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaCreateTextureObject(cudaTextureObject_t * pTexObject, const cudaResourceDesc * pResDesc, const cudaTextureDesc * pTexDesc, const cudaResourceViewDesc * pResViewDesc);
# 6571 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDestroyTextureObject(cudaTextureObject_t texObject);
# 6587 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGetTextureObjectResourceDesc(cudaResourceDesc * pResDesc, cudaTextureObject_t texObject);
# 6603 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGetTextureObjectTextureDesc(cudaTextureDesc * pTexDesc, cudaTextureObject_t texObject);
# 6620 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGetTextureObjectResourceViewDesc(cudaResourceViewDesc * pResViewDesc, cudaTextureObject_t texObject);
# 6659 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaCreateSurfaceObject(cudaSurfaceObject_t * pSurfObject, const cudaResourceDesc * pResDesc);
# 6674 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDestroySurfaceObject(cudaSurfaceObject_t surfObject);
# 6689 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGetSurfaceObjectResourceDesc(cudaResourceDesc * pResDesc, cudaSurfaceObject_t surfObject);
# 6716 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaDriverGetVersion(int * driverVersion);
# 6733 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaRuntimeGetVersion(int * runtimeVersion);
# 6738 "/usr/local/cuda/include/cuda_runtime_api.h"
extern cudaError_t cudaGetExportTable(const void ** ppExportTable, const cudaUUID_t * pExportTableId);
# 6964 "/usr/local/cuda/include/cuda_runtime_api.h"
}
# 107 "/usr/local/cuda/include/channel_descriptor.h"
template< class T> inline cudaChannelFormatDesc cudaCreateChannelDesc()
# 108 "/usr/local/cuda/include/channel_descriptor.h"
{
# 109 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone);
# 110 "/usr/local/cuda/include/channel_descriptor.h"
}
# 112 "/usr/local/cuda/include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf()
# 113 "/usr/local/cuda/include/channel_descriptor.h"
{
# 114 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 116 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 117 "/usr/local/cuda/include/channel_descriptor.h"
}
# 119 "/usr/local/cuda/include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf1()
# 120 "/usr/local/cuda/include/channel_descriptor.h"
{
# 121 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 123 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 124 "/usr/local/cuda/include/channel_descriptor.h"
}
# 126 "/usr/local/cuda/include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf2()
# 127 "/usr/local/cuda/include/channel_descriptor.h"
{
# 128 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 130 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 131 "/usr/local/cuda/include/channel_descriptor.h"
}
# 133 "/usr/local/cuda/include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf4()
# 134 "/usr/local/cuda/include/channel_descriptor.h"
{
# 135 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 137 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 138 "/usr/local/cuda/include/channel_descriptor.h"
}
# 140 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char> ()
# 141 "/usr/local/cuda/include/channel_descriptor.h"
{
# 142 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(char)) * 8);
# 147 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 149 "/usr/local/cuda/include/channel_descriptor.h"
}
# 151 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> ()
# 152 "/usr/local/cuda/include/channel_descriptor.h"
{
# 153 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 155 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 156 "/usr/local/cuda/include/channel_descriptor.h"
}
# 158 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> ()
# 159 "/usr/local/cuda/include/channel_descriptor.h"
{
# 160 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 162 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 163 "/usr/local/cuda/include/channel_descriptor.h"
}
# 165 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> ()
# 166 "/usr/local/cuda/include/channel_descriptor.h"
{
# 167 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 169 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 170 "/usr/local/cuda/include/channel_descriptor.h"
}
# 172 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> ()
# 173 "/usr/local/cuda/include/channel_descriptor.h"
{
# 174 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 176 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 177 "/usr/local/cuda/include/channel_descriptor.h"
}
# 179 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> ()
# 180 "/usr/local/cuda/include/channel_descriptor.h"
{
# 181 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 183 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 184 "/usr/local/cuda/include/channel_descriptor.h"
}
# 186 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> ()
# 187 "/usr/local/cuda/include/channel_descriptor.h"
{
# 188 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 190 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 191 "/usr/local/cuda/include/channel_descriptor.h"
}
# 193 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> ()
# 194 "/usr/local/cuda/include/channel_descriptor.h"
{
# 195 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 197 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 198 "/usr/local/cuda/include/channel_descriptor.h"
}
# 200 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> ()
# 201 "/usr/local/cuda/include/channel_descriptor.h"
{
# 202 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 204 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 205 "/usr/local/cuda/include/channel_descriptor.h"
}
# 207 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short> ()
# 208 "/usr/local/cuda/include/channel_descriptor.h"
{
# 209 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 211 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 212 "/usr/local/cuda/include/channel_descriptor.h"
}
# 214 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> ()
# 215 "/usr/local/cuda/include/channel_descriptor.h"
{
# 216 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 218 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 219 "/usr/local/cuda/include/channel_descriptor.h"
}
# 221 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> ()
# 222 "/usr/local/cuda/include/channel_descriptor.h"
{
# 223 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 225 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 226 "/usr/local/cuda/include/channel_descriptor.h"
}
# 228 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> ()
# 229 "/usr/local/cuda/include/channel_descriptor.h"
{
# 230 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 232 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 233 "/usr/local/cuda/include/channel_descriptor.h"
}
# 235 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> ()
# 236 "/usr/local/cuda/include/channel_descriptor.h"
{
# 237 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 239 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 240 "/usr/local/cuda/include/channel_descriptor.h"
}
# 242 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> ()
# 243 "/usr/local/cuda/include/channel_descriptor.h"
{
# 244 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 246 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 247 "/usr/local/cuda/include/channel_descriptor.h"
}
# 249 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> ()
# 250 "/usr/local/cuda/include/channel_descriptor.h"
{
# 251 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 253 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 254 "/usr/local/cuda/include/channel_descriptor.h"
}
# 256 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> ()
# 257 "/usr/local/cuda/include/channel_descriptor.h"
{
# 258 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 260 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 261 "/usr/local/cuda/include/channel_descriptor.h"
}
# 263 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int> ()
# 264 "/usr/local/cuda/include/channel_descriptor.h"
{
# 265 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 267 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 268 "/usr/local/cuda/include/channel_descriptor.h"
}
# 270 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> ()
# 271 "/usr/local/cuda/include/channel_descriptor.h"
{
# 272 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 274 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 275 "/usr/local/cuda/include/channel_descriptor.h"
}
# 277 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> ()
# 278 "/usr/local/cuda/include/channel_descriptor.h"
{
# 279 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 281 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 282 "/usr/local/cuda/include/channel_descriptor.h"
}
# 284 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> ()
# 285 "/usr/local/cuda/include/channel_descriptor.h"
{
# 286 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 288 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 289 "/usr/local/cuda/include/channel_descriptor.h"
}
# 291 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> ()
# 292 "/usr/local/cuda/include/channel_descriptor.h"
{
# 293 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 295 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 296 "/usr/local/cuda/include/channel_descriptor.h"
}
# 298 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> ()
# 299 "/usr/local/cuda/include/channel_descriptor.h"
{
# 300 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 302 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 303 "/usr/local/cuda/include/channel_descriptor.h"
}
# 305 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> ()
# 306 "/usr/local/cuda/include/channel_descriptor.h"
{
# 307 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 309 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 310 "/usr/local/cuda/include/channel_descriptor.h"
}
# 312 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> ()
# 313 "/usr/local/cuda/include/channel_descriptor.h"
{
# 314 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 316 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 317 "/usr/local/cuda/include/channel_descriptor.h"
}
# 379 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float> ()
# 380 "/usr/local/cuda/include/channel_descriptor.h"
{
# 381 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 383 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 384 "/usr/local/cuda/include/channel_descriptor.h"
}
# 386 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> ()
# 387 "/usr/local/cuda/include/channel_descriptor.h"
{
# 388 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 390 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 391 "/usr/local/cuda/include/channel_descriptor.h"
}
# 393 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> ()
# 394 "/usr/local/cuda/include/channel_descriptor.h"
{
# 395 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 397 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 398 "/usr/local/cuda/include/channel_descriptor.h"
}
# 400 "/usr/local/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> ()
# 401 "/usr/local/cuda/include/channel_descriptor.h"
{
# 402 "/usr/local/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 404 "/usr/local/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 405 "/usr/local/cuda/include/channel_descriptor.h"
}
# 79 "/usr/local/cuda/include/driver_functions.h"
static inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz)
# 80 "/usr/local/cuda/include/driver_functions.h"
{
# 81 "/usr/local/cuda/include/driver_functions.h"
cudaPitchedPtr s;
# 83 "/usr/local/cuda/include/driver_functions.h"
(s.ptr) = d;
# 84 "/usr/local/cuda/include/driver_functions.h"
(s.pitch) = p;
# 85 "/usr/local/cuda/include/driver_functions.h"
(s.xsize) = xsz;
# 86 "/usr/local/cuda/include/driver_functions.h"
(s.ysize) = ysz;
# 88 "/usr/local/cuda/include/driver_functions.h"
return s;
# 89 "/usr/local/cuda/include/driver_functions.h"
}
# 106 "/usr/local/cuda/include/driver_functions.h"
static inline cudaPos make_cudaPos(size_t x, size_t y, size_t z)
# 107 "/usr/local/cuda/include/driver_functions.h"
{
# 108 "/usr/local/cuda/include/driver_functions.h"
cudaPos p;
# 110 "/usr/local/cuda/include/driver_functions.h"
(p.x) = x;
# 111 "/usr/local/cuda/include/driver_functions.h"
(p.y) = y;
# 112 "/usr/local/cuda/include/driver_functions.h"
(p.z) = z;
# 114 "/usr/local/cuda/include/driver_functions.h"
return p;
# 115 "/usr/local/cuda/include/driver_functions.h"
}
# 132 "/usr/local/cuda/include/driver_functions.h"
static inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d)
# 133 "/usr/local/cuda/include/driver_functions.h"
{
# 134 "/usr/local/cuda/include/driver_functions.h"
cudaExtent e;
# 136 "/usr/local/cuda/include/driver_functions.h"
(e.width) = w;
# 137 "/usr/local/cuda/include/driver_functions.h"
(e.height) = h;
# 138 "/usr/local/cuda/include/driver_functions.h"
(e.depth) = d;
# 140 "/usr/local/cuda/include/driver_functions.h"
return e;
# 141 "/usr/local/cuda/include/driver_functions.h"
}
# 75 "/usr/local/cuda/include/vector_functions.hpp"
static inline char1 make_char1(signed char x)
# 76 "/usr/local/cuda/include/vector_functions.hpp"
{
# 77 "/usr/local/cuda/include/vector_functions.hpp"
char1 t; (t.x) = x; return t;
# 78 "/usr/local/cuda/include/vector_functions.hpp"
}
# 80 "/usr/local/cuda/include/vector_functions.hpp"
static inline uchar1 make_uchar1(unsigned char x)
# 81 "/usr/local/cuda/include/vector_functions.hpp"
{
# 82 "/usr/local/cuda/include/vector_functions.hpp"
uchar1 t; (t.x) = x; return t;
# 83 "/usr/local/cuda/include/vector_functions.hpp"
}
# 85 "/usr/local/cuda/include/vector_functions.hpp"
static inline char2 make_char2(signed char x, signed char y)
# 86 "/usr/local/cuda/include/vector_functions.hpp"
{
# 87 "/usr/local/cuda/include/vector_functions.hpp"
char2 t; (t.x) = x; (t.y) = y; return t;
# 88 "/usr/local/cuda/include/vector_functions.hpp"
}
# 90 "/usr/local/cuda/include/vector_functions.hpp"
static inline uchar2 make_uchar2(unsigned char x, unsigned char y)
# 91 "/usr/local/cuda/include/vector_functions.hpp"
{
# 92 "/usr/local/cuda/include/vector_functions.hpp"
uchar2 t; (t.x) = x; (t.y) = y; return t;
# 93 "/usr/local/cuda/include/vector_functions.hpp"
}
# 95 "/usr/local/cuda/include/vector_functions.hpp"
static inline char3 make_char3(signed char x, signed char y, signed char z)
# 96 "/usr/local/cuda/include/vector_functions.hpp"
{
# 97 "/usr/local/cuda/include/vector_functions.hpp"
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 98 "/usr/local/cuda/include/vector_functions.hpp"
}
# 100 "/usr/local/cuda/include/vector_functions.hpp"
static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z)
# 101 "/usr/local/cuda/include/vector_functions.hpp"
{
# 102 "/usr/local/cuda/include/vector_functions.hpp"
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 103 "/usr/local/cuda/include/vector_functions.hpp"
}
# 105 "/usr/local/cuda/include/vector_functions.hpp"
static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w)
# 106 "/usr/local/cuda/include/vector_functions.hpp"
{
# 107 "/usr/local/cuda/include/vector_functions.hpp"
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 108 "/usr/local/cuda/include/vector_functions.hpp"
}
# 110 "/usr/local/cuda/include/vector_functions.hpp"
static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
# 111 "/usr/local/cuda/include/vector_functions.hpp"
{
# 112 "/usr/local/cuda/include/vector_functions.hpp"
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 113 "/usr/local/cuda/include/vector_functions.hpp"
}
# 115 "/usr/local/cuda/include/vector_functions.hpp"
static inline short1 make_short1(short x)
# 116 "/usr/local/cuda/include/vector_functions.hpp"
{
# 117 "/usr/local/cuda/include/vector_functions.hpp"
short1 t; (t.x) = x; return t;
# 118 "/usr/local/cuda/include/vector_functions.hpp"
}
# 120 "/usr/local/cuda/include/vector_functions.hpp"
static inline ushort1 make_ushort1(unsigned short x)
# 121 "/usr/local/cuda/include/vector_functions.hpp"
{
# 122 "/usr/local/cuda/include/vector_functions.hpp"
ushort1 t; (t.x) = x; return t;
# 123 "/usr/local/cuda/include/vector_functions.hpp"
}
# 125 "/usr/local/cuda/include/vector_functions.hpp"
static inline short2 make_short2(short x, short y)
# 126 "/usr/local/cuda/include/vector_functions.hpp"
{
# 127 "/usr/local/cuda/include/vector_functions.hpp"
short2 t; (t.x) = x; (t.y) = y; return t;
# 128 "/usr/local/cuda/include/vector_functions.hpp"
}
# 130 "/usr/local/cuda/include/vector_functions.hpp"
static inline ushort2 make_ushort2(unsigned short x, unsigned short y)
# 131 "/usr/local/cuda/include/vector_functions.hpp"
{
# 132 "/usr/local/cuda/include/vector_functions.hpp"
ushort2 t; (t.x) = x; (t.y) = y; return t;
# 133 "/usr/local/cuda/include/vector_functions.hpp"
}
# 135 "/usr/local/cuda/include/vector_functions.hpp"
static inline short3 make_short3(short x, short y, short z)
# 136 "/usr/local/cuda/include/vector_functions.hpp"
{
# 137 "/usr/local/cuda/include/vector_functions.hpp"
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 138 "/usr/local/cuda/include/vector_functions.hpp"
}
# 140 "/usr/local/cuda/include/vector_functions.hpp"
static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z)
# 141 "/usr/local/cuda/include/vector_functions.hpp"
{
# 142 "/usr/local/cuda/include/vector_functions.hpp"
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 143 "/usr/local/cuda/include/vector_functions.hpp"
}
# 145 "/usr/local/cuda/include/vector_functions.hpp"
static inline short4 make_short4(short x, short y, short z, short w)
# 146 "/usr/local/cuda/include/vector_functions.hpp"
{
# 147 "/usr/local/cuda/include/vector_functions.hpp"
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 148 "/usr/local/cuda/include/vector_functions.hpp"
}
# 150 "/usr/local/cuda/include/vector_functions.hpp"
static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w)
# 151 "/usr/local/cuda/include/vector_functions.hpp"
{
# 152 "/usr/local/cuda/include/vector_functions.hpp"
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 153 "/usr/local/cuda/include/vector_functions.hpp"
}
# 155 "/usr/local/cuda/include/vector_functions.hpp"
static inline int1 make_int1(int x)
# 156 "/usr/local/cuda/include/vector_functions.hpp"
{
# 157 "/usr/local/cuda/include/vector_functions.hpp"
int1 t; (t.x) = x; return t;
# 158 "/usr/local/cuda/include/vector_functions.hpp"
}
# 160 "/usr/local/cuda/include/vector_functions.hpp"
static inline uint1 make_uint1(unsigned x)
# 161 "/usr/local/cuda/include/vector_functions.hpp"
{
# 162 "/usr/local/cuda/include/vector_functions.hpp"
uint1 t; (t.x) = x; return t;
# 163 "/usr/local/cuda/include/vector_functions.hpp"
}
# 165 "/usr/local/cuda/include/vector_functions.hpp"
static inline int2 make_int2(int x, int y)
# 166 "/usr/local/cuda/include/vector_functions.hpp"
{
# 167 "/usr/local/cuda/include/vector_functions.hpp"
int2 t; (t.x) = x; (t.y) = y; return t;
# 168 "/usr/local/cuda/include/vector_functions.hpp"
}
# 170 "/usr/local/cuda/include/vector_functions.hpp"
static inline uint2 make_uint2(unsigned x, unsigned y)
# 171 "/usr/local/cuda/include/vector_functions.hpp"
{
# 172 "/usr/local/cuda/include/vector_functions.hpp"
uint2 t; (t.x) = x; (t.y) = y; return t;
# 173 "/usr/local/cuda/include/vector_functions.hpp"
}
# 175 "/usr/local/cuda/include/vector_functions.hpp"
static inline int3 make_int3(int x, int y, int z)
# 176 "/usr/local/cuda/include/vector_functions.hpp"
{
# 177 "/usr/local/cuda/include/vector_functions.hpp"
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 178 "/usr/local/cuda/include/vector_functions.hpp"
}
# 180 "/usr/local/cuda/include/vector_functions.hpp"
static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z)
# 181 "/usr/local/cuda/include/vector_functions.hpp"
{
# 182 "/usr/local/cuda/include/vector_functions.hpp"
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 183 "/usr/local/cuda/include/vector_functions.hpp"
}
# 185 "/usr/local/cuda/include/vector_functions.hpp"
static inline int4 make_int4(int x, int y, int z, int w)
# 186 "/usr/local/cuda/include/vector_functions.hpp"
{
# 187 "/usr/local/cuda/include/vector_functions.hpp"
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 188 "/usr/local/cuda/include/vector_functions.hpp"
}
# 190 "/usr/local/cuda/include/vector_functions.hpp"
static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w)
# 191 "/usr/local/cuda/include/vector_functions.hpp"
{
# 192 "/usr/local/cuda/include/vector_functions.hpp"
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 193 "/usr/local/cuda/include/vector_functions.hpp"
}
# 195 "/usr/local/cuda/include/vector_functions.hpp"
static inline long1 make_long1(long x)
# 196 "/usr/local/cuda/include/vector_functions.hpp"
{
# 197 "/usr/local/cuda/include/vector_functions.hpp"
long1 t; (t.x) = x; return t;
# 198 "/usr/local/cuda/include/vector_functions.hpp"
}
# 200 "/usr/local/cuda/include/vector_functions.hpp"
static inline ulong1 make_ulong1(unsigned long x)
# 201 "/usr/local/cuda/include/vector_functions.hpp"
{
# 202 "/usr/local/cuda/include/vector_functions.hpp"
ulong1 t; (t.x) = x; return t;
# 203 "/usr/local/cuda/include/vector_functions.hpp"
}
# 205 "/usr/local/cuda/include/vector_functions.hpp"
static inline long2 make_long2(long x, long y)
# 206 "/usr/local/cuda/include/vector_functions.hpp"
{
# 207 "/usr/local/cuda/include/vector_functions.hpp"
long2 t; (t.x) = x; (t.y) = y; return t;
# 208 "/usr/local/cuda/include/vector_functions.hpp"
}
# 210 "/usr/local/cuda/include/vector_functions.hpp"
static inline ulong2 make_ulong2(unsigned long x, unsigned long y)
# 211 "/usr/local/cuda/include/vector_functions.hpp"
{
# 212 "/usr/local/cuda/include/vector_functions.hpp"
ulong2 t; (t.x) = x; (t.y) = y; return t;
# 213 "/usr/local/cuda/include/vector_functions.hpp"
}
# 215 "/usr/local/cuda/include/vector_functions.hpp"
static inline long3 make_long3(long x, long y, long z)
# 216 "/usr/local/cuda/include/vector_functions.hpp"
{
# 217 "/usr/local/cuda/include/vector_functions.hpp"
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 218 "/usr/local/cuda/include/vector_functions.hpp"
}
# 220 "/usr/local/cuda/include/vector_functions.hpp"
static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z)
# 221 "/usr/local/cuda/include/vector_functions.hpp"
{
# 222 "/usr/local/cuda/include/vector_functions.hpp"
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 223 "/usr/local/cuda/include/vector_functions.hpp"
}
# 225 "/usr/local/cuda/include/vector_functions.hpp"
static inline long4 make_long4(long x, long y, long z, long w)
# 226 "/usr/local/cuda/include/vector_functions.hpp"
{
# 227 "/usr/local/cuda/include/vector_functions.hpp"
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 228 "/usr/local/cuda/include/vector_functions.hpp"
}
# 230 "/usr/local/cuda/include/vector_functions.hpp"
static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w)
# 231 "/usr/local/cuda/include/vector_functions.hpp"
{
# 232 "/usr/local/cuda/include/vector_functions.hpp"
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 233 "/usr/local/cuda/include/vector_functions.hpp"
}
# 235 "/usr/local/cuda/include/vector_functions.hpp"
static inline float1 make_float1(float x)
# 236 "/usr/local/cuda/include/vector_functions.hpp"
{
# 237 "/usr/local/cuda/include/vector_functions.hpp"
float1 t; (t.x) = x; return t;
# 238 "/usr/local/cuda/include/vector_functions.hpp"
}
# 240 "/usr/local/cuda/include/vector_functions.hpp"
static inline float2 make_float2(float x, float y)
# 241 "/usr/local/cuda/include/vector_functions.hpp"
{
# 242 "/usr/local/cuda/include/vector_functions.hpp"
float2 t; (t.x) = x; (t.y) = y; return t;
# 243 "/usr/local/cuda/include/vector_functions.hpp"
}
# 245 "/usr/local/cuda/include/vector_functions.hpp"
static inline float3 make_float3(float x, float y, float z)
# 246 "/usr/local/cuda/include/vector_functions.hpp"
{
# 247 "/usr/local/cuda/include/vector_functions.hpp"
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 248 "/usr/local/cuda/include/vector_functions.hpp"
}
# 250 "/usr/local/cuda/include/vector_functions.hpp"
static inline float4 make_float4(float x, float y, float z, float w)
# 251 "/usr/local/cuda/include/vector_functions.hpp"
{
# 252 "/usr/local/cuda/include/vector_functions.hpp"
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 253 "/usr/local/cuda/include/vector_functions.hpp"
}
# 255 "/usr/local/cuda/include/vector_functions.hpp"
static inline longlong1 make_longlong1(long long x)
# 256 "/usr/local/cuda/include/vector_functions.hpp"
{
# 257 "/usr/local/cuda/include/vector_functions.hpp"
longlong1 t; (t.x) = x; return t;
# 258 "/usr/local/cuda/include/vector_functions.hpp"
}
# 260 "/usr/local/cuda/include/vector_functions.hpp"
static inline ulonglong1 make_ulonglong1(unsigned long long x)
# 261 "/usr/local/cuda/include/vector_functions.hpp"
{
# 262 "/usr/local/cuda/include/vector_functions.hpp"
ulonglong1 t; (t.x) = x; return t;
# 263 "/usr/local/cuda/include/vector_functions.hpp"
}
# 265 "/usr/local/cuda/include/vector_functions.hpp"
static inline longlong2 make_longlong2(long long x, long long y)
# 266 "/usr/local/cuda/include/vector_functions.hpp"
{
# 267 "/usr/local/cuda/include/vector_functions.hpp"
longlong2 t; (t.x) = x; (t.y) = y; return t;
# 268 "/usr/local/cuda/include/vector_functions.hpp"
}
# 270 "/usr/local/cuda/include/vector_functions.hpp"
static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y)
# 271 "/usr/local/cuda/include/vector_functions.hpp"
{
# 272 "/usr/local/cuda/include/vector_functions.hpp"
ulonglong2 t; (t.x) = x; (t.y) = y; return t;
# 273 "/usr/local/cuda/include/vector_functions.hpp"
}
# 275 "/usr/local/cuda/include/vector_functions.hpp"
static inline longlong3 make_longlong3(long long x, long long y, long long z)
# 276 "/usr/local/cuda/include/vector_functions.hpp"
{
# 277 "/usr/local/cuda/include/vector_functions.hpp"
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 278 "/usr/local/cuda/include/vector_functions.hpp"
}
# 280 "/usr/local/cuda/include/vector_functions.hpp"
static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z)
# 281 "/usr/local/cuda/include/vector_functions.hpp"
{
# 282 "/usr/local/cuda/include/vector_functions.hpp"
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 283 "/usr/local/cuda/include/vector_functions.hpp"
}
# 285 "/usr/local/cuda/include/vector_functions.hpp"
static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w)
# 286 "/usr/local/cuda/include/vector_functions.hpp"
{
# 287 "/usr/local/cuda/include/vector_functions.hpp"
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 288 "/usr/local/cuda/include/vector_functions.hpp"
}
# 290 "/usr/local/cuda/include/vector_functions.hpp"
static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w)
# 291 "/usr/local/cuda/include/vector_functions.hpp"
{
# 292 "/usr/local/cuda/include/vector_functions.hpp"
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 293 "/usr/local/cuda/include/vector_functions.hpp"
}
# 295 "/usr/local/cuda/include/vector_functions.hpp"
static inline double1 make_double1(double x)
# 296 "/usr/local/cuda/include/vector_functions.hpp"
{
# 297 "/usr/local/cuda/include/vector_functions.hpp"
double1 t; (t.x) = x; return t;
# 298 "/usr/local/cuda/include/vector_functions.hpp"
}
# 300 "/usr/local/cuda/include/vector_functions.hpp"
static inline double2 make_double2(double x, double y)
# 301 "/usr/local/cuda/include/vector_functions.hpp"
{
# 302 "/usr/local/cuda/include/vector_functions.hpp"
double2 t; (t.x) = x; (t.y) = y; return t;
# 303 "/usr/local/cuda/include/vector_functions.hpp"
}
# 305 "/usr/local/cuda/include/vector_functions.hpp"
static inline double3 make_double3(double x, double y, double z)
# 306 "/usr/local/cuda/include/vector_functions.hpp"
{
# 307 "/usr/local/cuda/include/vector_functions.hpp"
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 308 "/usr/local/cuda/include/vector_functions.hpp"
}
# 310 "/usr/local/cuda/include/vector_functions.hpp"
static inline double4 make_double4(double x, double y, double z, double w)
# 311 "/usr/local/cuda/include/vector_functions.hpp"
{
# 312 "/usr/local/cuda/include/vector_functions.hpp"
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 313 "/usr/local/cuda/include/vector_functions.hpp"
}
# 27 "/usr/include/string.h" 3

# 27 "/usr/include/string.h" 3
extern "C" {
# 42 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline void *memcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __n) throw()
# 43 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 46 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline void *memmove(void * __dest, const void * __src, size_t __n) throw()
# 47 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 54 "/usr/include/string.h" 3
extern void *memccpy(void *__restrict__ __dest, const void *__restrict__ __src, int __c, size_t __n) throw()
# 56 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 62 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline void *memset(void * __s, int __c, size_t __n) throw() __attribute((__nonnull__(1)));
# 65 "/usr/include/string.h" 3
extern int memcmp(const void * __s1, const void * __s2, size_t __n) throw()
# 66 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 70 "/usr/include/string.h" 3
extern "C++" {
# 72 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline void *memchr(void * __s, int __c, size_t __n) throw() __asm__("memchr")
# 73 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 74 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const void *memchr(const void * __s, int __c, size_t __n) throw() __asm__("memchr")
# 75 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 78 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline void *
# 79 "/usr/include/string.h" 3
memchr(void *__s, int __c, size_t __n) throw()
# 80 "/usr/include/string.h" 3
{
# 81 "/usr/include/string.h" 3
return __builtin_memchr(__s, __c, __n);
# 82 "/usr/include/string.h" 3
}
# 84 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const void *
# 85 "/usr/include/string.h" 3
memchr(const void *__s, int __c, size_t __n) throw()
# 86 "/usr/include/string.h" 3
{
# 87 "/usr/include/string.h" 3
return __builtin_memchr(__s, __c, __n);
# 88 "/usr/include/string.h" 3
}
# 90 "/usr/include/string.h" 3
}
# 101 "/usr/include/string.h" 3
extern "C++" void *rawmemchr(void * __s, int __c) throw() __asm__("rawmemchr")
# 102 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 103 "/usr/include/string.h" 3
extern "C++" const void *rawmemchr(const void * __s, int __c) throw() __asm__("rawmemchr")
# 104 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 112 "/usr/include/string.h" 3
extern "C++" void *memrchr(void * __s, int __c, size_t __n) throw() __asm__("memrchr")
# 113 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 114 "/usr/include/string.h" 3
extern "C++" const void *memrchr(const void * __s, int __c, size_t __n) throw() __asm__("memrchr")
# 115 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 125 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 126 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 128 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strncpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 130 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 133 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strcat(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 134 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 136 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strncat(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 137 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 140 "/usr/include/string.h" 3
extern int strcmp(const char * __s1, const char * __s2) throw()
# 141 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 143 "/usr/include/string.h" 3
extern int strncmp(const char * __s1, const char * __s2, size_t __n) throw()
# 144 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 147 "/usr/include/string.h" 3
extern int strcoll(const char * __s1, const char * __s2) throw()
# 148 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 150 "/usr/include/string.h" 3
extern size_t strxfrm(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 152 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 39 "/usr/include/xlocale.h" 3
typedef
# 27 "/usr/include/xlocale.h" 3
struct __locale_struct {
# 30 "/usr/include/xlocale.h" 3
struct __locale_data *__locales[13];
# 33 "/usr/include/xlocale.h" 3
const unsigned short *__ctype_b;
# 34 "/usr/include/xlocale.h" 3
const int *__ctype_tolower;
# 35 "/usr/include/xlocale.h" 3
const int *__ctype_toupper;
# 38 "/usr/include/xlocale.h" 3
const char *__names[13];
# 39 "/usr/include/xlocale.h" 3
} *__locale_t;
# 42 "/usr/include/xlocale.h" 3
typedef __locale_t locale_t;
# 162 "/usr/include/string.h" 3
extern int strcoll_l(const char * __s1, const char * __s2, __locale_t __l) throw()
# 163 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 165 "/usr/include/string.h" 3
extern size_t strxfrm_l(char * __dest, const char * __src, size_t __n, __locale_t __l) throw()
# 166 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 4)));
# 171 "/usr/include/string.h" 3
extern char *strdup(const char * __s) throw()
# 172 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 179 "/usr/include/string.h" 3
extern char *strndup(const char * __string, size_t __n) throw()
# 180 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 209 "/usr/include/string.h" 3
extern "C++" {
# 211 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strchr(char * __s, int __c) throw() __asm__("strchr")
# 212 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 213 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *strchr(const char * __s, int __c) throw() __asm__("strchr")
# 214 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 217 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 218 "/usr/include/string.h" 3
strchr(char *__s, int __c) throw()
# 219 "/usr/include/string.h" 3
{
# 220 "/usr/include/string.h" 3
return __builtin_strchr(__s, __c);
# 221 "/usr/include/string.h" 3
}
# 223 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 224 "/usr/include/string.h" 3
strchr(const char *__s, int __c) throw()
# 225 "/usr/include/string.h" 3
{
# 226 "/usr/include/string.h" 3
return __builtin_strchr(__s, __c);
# 227 "/usr/include/string.h" 3
}
# 229 "/usr/include/string.h" 3
}
# 236 "/usr/include/string.h" 3
extern "C++" {
# 238 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strrchr(char * __s, int __c) throw() __asm__("strrchr")
# 239 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 240 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *strrchr(const char * __s, int __c) throw() __asm__("strrchr")
# 241 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 244 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 245 "/usr/include/string.h" 3
strrchr(char *__s, int __c) throw()
# 246 "/usr/include/string.h" 3
{
# 247 "/usr/include/string.h" 3
return __builtin_strrchr(__s, __c);
# 248 "/usr/include/string.h" 3
}
# 250 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 251 "/usr/include/string.h" 3
strrchr(const char *__s, int __c) throw()
# 252 "/usr/include/string.h" 3
{
# 253 "/usr/include/string.h" 3
return __builtin_strrchr(__s, __c);
# 254 "/usr/include/string.h" 3
}
# 256 "/usr/include/string.h" 3
}
# 267 "/usr/include/string.h" 3
extern "C++" char *strchrnul(char * __s, int __c) throw() __asm__("strchrnul")
# 268 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 269 "/usr/include/string.h" 3
extern "C++" const char *strchrnul(const char * __s, int __c) throw() __asm__("strchrnul")
# 270 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 280 "/usr/include/string.h" 3
extern size_t strcspn(const char * __s, const char * __reject) throw()
# 281 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 284 "/usr/include/string.h" 3
extern size_t strspn(const char * __s, const char * __accept) throw()
# 285 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 288 "/usr/include/string.h" 3
extern "C++" {
# 290 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strpbrk(char * __s, const char * __accept) throw() __asm__("strpbrk")
# 291 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 292 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *strpbrk(const char * __s, const char * __accept) throw() __asm__("strpbrk")
# 293 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 296 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 297 "/usr/include/string.h" 3
strpbrk(char *__s, const char *__accept) throw()
# 298 "/usr/include/string.h" 3
{
# 299 "/usr/include/string.h" 3
return __builtin_strpbrk(__s, __accept);
# 300 "/usr/include/string.h" 3
}
# 302 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 303 "/usr/include/string.h" 3
strpbrk(const char *__s, const char *__accept) throw()
# 304 "/usr/include/string.h" 3
{
# 305 "/usr/include/string.h" 3
return __builtin_strpbrk(__s, __accept);
# 306 "/usr/include/string.h" 3
}
# 308 "/usr/include/string.h" 3
}
# 315 "/usr/include/string.h" 3
extern "C++" {
# 317 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strstr(char * __haystack, const char * __needle) throw() __asm__("strstr")
# 318 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 319 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *strstr(const char * __haystack, const char * __needle) throw() __asm__("strstr")
# 320 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 323 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 324 "/usr/include/string.h" 3
strstr(char *__haystack, const char *__needle) throw()
# 325 "/usr/include/string.h" 3
{
# 326 "/usr/include/string.h" 3
return __builtin_strstr(__haystack, __needle);
# 327 "/usr/include/string.h" 3
}
# 329 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 330 "/usr/include/string.h" 3
strstr(const char *__haystack, const char *__needle) throw()
# 331 "/usr/include/string.h" 3
{
# 332 "/usr/include/string.h" 3
return __builtin_strstr(__haystack, __needle);
# 333 "/usr/include/string.h" 3
}
# 335 "/usr/include/string.h" 3
}
# 343 "/usr/include/string.h" 3
extern char *strtok(char *__restrict__ __s, const char *__restrict__ __delim) throw()
# 344 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 349 "/usr/include/string.h" 3
extern char *__strtok_r(char *__restrict__ __s, const char *__restrict__ __delim, char **__restrict__ __save_ptr) throw()
# 352 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 354 "/usr/include/string.h" 3
extern char *strtok_r(char *__restrict__ __s, const char *__restrict__ __delim, char **__restrict__ __save_ptr) throw()
# 356 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 362 "/usr/include/string.h" 3
extern "C++" char *strcasestr(char * __haystack, const char * __needle) throw() __asm__("strcasestr")
# 363 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 364 "/usr/include/string.h" 3
extern "C++" const char *strcasestr(const char * __haystack, const char * __needle) throw() __asm__("strcasestr")
# 366 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 377 "/usr/include/string.h" 3
extern void *memmem(const void * __haystack, size_t __haystacklen, const void * __needle, size_t __needlelen) throw()
# 379 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 3)));
# 383 "/usr/include/string.h" 3
extern void *__mempcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __n) throw()
# 385 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 386 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline void *mempcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __n) throw()
# 388 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 394 "/usr/include/string.h" 3
extern size_t strlen(const char * __s) throw()
# 395 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 401 "/usr/include/string.h" 3
extern size_t strnlen(const char * __string, size_t __maxlen) throw()
# 402 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 408 "/usr/include/string.h" 3
extern char *strerror(int __errnum) throw();
# 433 "/usr/include/string.h" 3
extern char *strerror_r(int __errnum, char * __buf, size_t __buflen) throw()
# 434 "/usr/include/string.h" 3
 __attribute((__nonnull__(2))) __attribute((__warn_unused_result__));
# 440 "/usr/include/string.h" 3
extern char *strerror_l(int __errnum, __locale_t __l) throw();
# 446 "/usr/include/string.h" 3
extern void __bzero(void * __s, size_t __n) throw() __attribute((__nonnull__(1)));
# 450 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline void bcopy(const void * __src, void * __dest, size_t __n) throw()
# 451 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 454 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline void bzero(void * __s, size_t __n) throw() __attribute((__nonnull__(1)));
# 457 "/usr/include/string.h" 3
extern int bcmp(const void * __s1, const void * __s2, size_t __n) throw()
# 458 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 462 "/usr/include/string.h" 3
extern "C++" {
# 464 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *index(char * __s, int __c) throw() __asm__("index")
# 465 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 466 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *index(const char * __s, int __c) throw() __asm__("index")
# 467 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 470 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 471 "/usr/include/string.h" 3
index(char *__s, int __c) throw()
# 472 "/usr/include/string.h" 3
{
# 473 "/usr/include/string.h" 3
return __builtin_index(__s, __c);
# 474 "/usr/include/string.h" 3
}
# 476 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 477 "/usr/include/string.h" 3
index(const char *__s, int __c) throw()
# 478 "/usr/include/string.h" 3
{
# 479 "/usr/include/string.h" 3
return __builtin_index(__s, __c);
# 480 "/usr/include/string.h" 3
}
# 482 "/usr/include/string.h" 3
}
# 490 "/usr/include/string.h" 3
extern "C++" {
# 492 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *rindex(char * __s, int __c) throw() __asm__("rindex")
# 493 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 494 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *rindex(const char * __s, int __c) throw() __asm__("rindex")
# 495 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 498 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 499 "/usr/include/string.h" 3
rindex(char *__s, int __c) throw()
# 500 "/usr/include/string.h" 3
{
# 501 "/usr/include/string.h" 3
return __builtin_rindex(__s, __c);
# 502 "/usr/include/string.h" 3
}
# 504 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 505 "/usr/include/string.h" 3
rindex(const char *__s, int __c) throw()
# 506 "/usr/include/string.h" 3
{
# 507 "/usr/include/string.h" 3
return __builtin_rindex(__s, __c);
# 508 "/usr/include/string.h" 3
}
# 510 "/usr/include/string.h" 3
}
# 518 "/usr/include/string.h" 3
extern int ffs(int __i) throw() __attribute((const));
# 523 "/usr/include/string.h" 3
extern int ffsl(long __l) throw() __attribute((const));
# 524 "/usr/include/string.h" 3
__extension__ extern int ffsll(long long __ll) throw()
# 525 "/usr/include/string.h" 3
 __attribute((const));
# 529 "/usr/include/string.h" 3
extern int strcasecmp(const char * __s1, const char * __s2) throw()
# 530 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 533 "/usr/include/string.h" 3
extern int strncasecmp(const char * __s1, const char * __s2, size_t __n) throw()
# 534 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 540 "/usr/include/string.h" 3
extern int strcasecmp_l(const char * __s1, const char * __s2, __locale_t __loc) throw()
# 542 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 544 "/usr/include/string.h" 3
extern int strncasecmp_l(const char * __s1, const char * __s2, size_t __n, __locale_t __loc) throw()
# 546 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 4)));
# 552 "/usr/include/string.h" 3
extern char *strsep(char **__restrict__ __stringp, const char *__restrict__ __delim) throw()
# 554 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 559 "/usr/include/string.h" 3
extern char *strsignal(int __sig) throw();
# 562 "/usr/include/string.h" 3
extern char *__stpcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 563 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 564 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *stpcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 565 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 569 "/usr/include/string.h" 3
extern char *__stpncpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 571 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 572 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *stpncpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 574 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 579 "/usr/include/string.h" 3
extern int strverscmp(const char * __s1, const char * __s2) throw()
# 580 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 583 "/usr/include/string.h" 3
extern char *strfry(char * __string) throw() __attribute((__nonnull__(1)));
# 586 "/usr/include/string.h" 3
extern void *memfrob(void * __s, size_t __n) throw() __attribute((__nonnull__(1)));
# 594 "/usr/include/string.h" 3
extern "C++" char *basename(char * __filename) throw() __asm__("basename")
# 595 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 596 "/usr/include/string.h" 3
extern "C++" const char *basename(const char * __filename) throw() __asm__("basename")
# 597 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 49 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 50 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline void *memcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __len) throw()
# 52 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 53 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __builtin___memcpy_chk(__dest, __src, __len, __builtin_object_size(__dest, 0));
# 54 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 56 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 57 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline void *memmove(void *__dest, const void *__src, size_t __len) throw()
# 58 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 59 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __builtin___memmove_chk(__dest, __src, __len, __builtin_object_size(__dest, 0));
# 60 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 63 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 64 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline void *mempcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __len) throw()
# 66 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 67 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __builtin___mempcpy_chk(__dest, __src, __len, __builtin_object_size(__dest, 0));
# 68 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 77 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 78 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline void *memset(void *__dest, int __ch, size_t __len) throw()
# 79 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 90 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __builtin___memset_chk(__dest, __ch, __len, __builtin_object_size(__dest, 0));
# 91 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 94 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline void
# 95 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
 __attribute((__leaf__)) bcopy(const void *__src, void *__dest, size_t __len) throw()
# 96 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 97 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
(void)__builtin___memmove_chk(__dest, __src, __len, __builtin_object_size(__dest, 0));
# 98 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 100 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline void
# 101 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
 __attribute((__leaf__)) bzero(void *__dest, size_t __len) throw()
# 102 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 103 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
(void)__builtin___memset_chk(__dest, '\000', __len, __builtin_object_size(__dest, 0));
# 104 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 107 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 108 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline char *strcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 109 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 110 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __builtin___strcpy_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1));
# 111 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 114 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 115 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline char *stpcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 116 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 117 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __builtin___stpcpy_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1));
# 118 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 122 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 123 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline char *strncpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __len) throw()
# 125 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 126 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __builtin___strncpy_chk(__dest, __src, __len, __builtin_object_size(__dest, 2 > 1));
# 127 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 130 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
extern char *__stpncpy_chk(char * __dest, const char * __src, size_t __n, size_t __destlen) throw();
# 132 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
extern char *__stpncpy_alias(char * __dest, const char * __src, size_t __n) throw() __asm__("stpncpy");
# 135 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 136 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline char *stpncpy(char *__dest, const char *__src, size_t __n) throw()
# 137 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 138 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
if ((__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1))) && ((!(0)) || (__n > __builtin_object_size(__dest, 2 > 1)))) {
# 140 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __stpncpy_chk(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1)); }
# 141 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __stpncpy_alias(__dest, __src, __n);
# 142 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 145 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 146 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline char *strcat(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 147 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 148 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __builtin___strcat_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1));
# 149 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 152 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 153 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline char *strncat(char *__restrict__ __dest, const char *__restrict__ __src, size_t __len) throw()
# 155 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 156 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __builtin___strncat_chk(__dest, __src, __len, __builtin_object_size(__dest, 2 > 1));
# 157 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 648 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline void *
# 649 "/usr/include/string.h" 3
__mempcpy_inline(void *__restrict__ __dest, const void *__restrict__
# 650 "/usr/include/string.h" 3
__src, size_t __n)
# 651 "/usr/include/string.h" 3
{
# 652 "/usr/include/string.h" 3
return ((char *)memcpy(__dest, __src, __n)) + __n;
# 653 "/usr/include/string.h" 3
}
# 658 "/usr/include/string.h" 3
}
# 29 "/usr/include/time.h" 3
extern "C" {
# 30 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned char __u_char;
# 31 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned short __u_short;
# 32 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __u_int;
# 33 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __u_long;
# 36 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed char __int8_t;
# 37 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned char __uint8_t;
# 38 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed short __int16_t;
# 39 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned short __uint16_t;
# 40 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed int __int32_t;
# 41 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __uint32_t;
# 43 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed long __int64_t;
# 44 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __uint64_t;
# 52 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __quad_t;
# 53 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __u_quad_t;
# 124 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __dev_t;
# 125 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __uid_t;
# 126 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __gid_t;
# 127 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __ino_t;
# 128 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __ino64_t;
# 129 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __mode_t;
# 130 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __nlink_t;
# 131 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __off_t;
# 132 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __off64_t;
# 133 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __pid_t;
# 134 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef struct { int __val[2]; } __fsid_t;
# 135 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __clock_t;
# 136 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __rlim_t;
# 137 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __rlim64_t;
# 138 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __id_t;
# 139 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __time_t;
# 140 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __useconds_t;
# 141 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __suseconds_t;
# 143 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __daddr_t;
# 144 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __key_t;
# 147 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __clockid_t;
# 150 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef void *__timer_t;
# 153 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blksize_t;
# 158 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blkcnt_t;
# 159 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blkcnt64_t;
# 162 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsblkcnt_t;
# 163 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsblkcnt64_t;
# 166 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsfilcnt_t;
# 167 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsfilcnt64_t;
# 170 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __fsword_t;
# 172 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __ssize_t;
# 175 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __syscall_slong_t;
# 177 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __syscall_ulong_t;
# 181 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __off64_t __loff_t;
# 182 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __quad_t *__qaddr_t;
# 183 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef char *__caddr_t;
# 186 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __intptr_t;
# 189 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __socklen_t;
# 30 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
struct timeval {
# 32 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
__time_t tv_sec;
# 33 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
__suseconds_t tv_usec;
# 34 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
};
# 25 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
struct timex {
# 27 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
unsigned modes;
# 28 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t offset;
# 29 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t freq;
# 30 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t maxerror;
# 31 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t esterror;
# 32 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int status;
# 33 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t constant;
# 34 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t precision;
# 35 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t tolerance;
# 36 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
timeval time;
# 37 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t tick;
# 38 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t ppsfreq;
# 39 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t jitter;
# 40 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int shift;
# 41 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t stabil;
# 42 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t jitcnt;
# 43 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t calcnt;
# 44 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t errcnt;
# 45 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t stbcnt;
# 47 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int tai;
# 50 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32; int:32;
# 51 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32; int:32;
# 52 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32;
# 53 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
};
# 90 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
extern "C" {
# 93 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
extern int clock_adjtime(__clockid_t __clock_id, timex * __utx) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
}
# 59 "/usr/include/time.h" 3
typedef __clock_t clock_t;
# 75 "/usr/include/time.h" 3
typedef __time_t time_t;
# 91 "/usr/include/time.h" 3
typedef __clockid_t clockid_t;
# 103 "/usr/include/time.h" 3
typedef __timer_t timer_t;
# 120 "/usr/include/time.h" 3
struct timespec {
# 122 "/usr/include/time.h" 3
__time_t tv_sec;
# 123 "/usr/include/time.h" 3
__syscall_slong_t tv_nsec;
# 124 "/usr/include/time.h" 3
};
# 133 "/usr/include/time.h" 3
struct tm {
# 135 "/usr/include/time.h" 3
int tm_sec;
# 136 "/usr/include/time.h" 3
int tm_min;
# 137 "/usr/include/time.h" 3
int tm_hour;
# 138 "/usr/include/time.h" 3
int tm_mday;
# 139 "/usr/include/time.h" 3
int tm_mon;
# 140 "/usr/include/time.h" 3
int tm_year;
# 141 "/usr/include/time.h" 3
int tm_wday;
# 142 "/usr/include/time.h" 3
int tm_yday;
# 143 "/usr/include/time.h" 3
int tm_isdst;
# 146 "/usr/include/time.h" 3
long tm_gmtoff;
# 147 "/usr/include/time.h" 3
const char *tm_zone;
# 152 "/usr/include/time.h" 3
};
# 161 "/usr/include/time.h" 3
struct itimerspec {
# 163 "/usr/include/time.h" 3
timespec it_interval;
# 164 "/usr/include/time.h" 3
timespec it_value;
# 165 "/usr/include/time.h" 3
};
# 168 "/usr/include/time.h" 3
struct sigevent;
# 174 "/usr/include/time.h" 3
typedef __pid_t pid_t;
# 189 "/usr/include/time.h" 3
extern clock_t clock() throw();
# 192 "/usr/include/time.h" 3
extern time_t time(time_t * __timer) throw();
# 195 "/usr/include/time.h" 3
extern double difftime(time_t __time1, time_t __time0) throw()
# 196 "/usr/include/time.h" 3
 __attribute((const));
# 199 "/usr/include/time.h" 3
extern time_t mktime(tm * __tp) throw();
# 205 "/usr/include/time.h" 3
extern size_t strftime(char *__restrict__ __s, size_t __maxsize, const char *__restrict__ __format, const tm *__restrict__ __tp) throw();
# 213 "/usr/include/time.h" 3
extern char *strptime(const char *__restrict__ __s, const char *__restrict__ __fmt, tm * __tp) throw();
# 223 "/usr/include/time.h" 3
extern size_t strftime_l(char *__restrict__ __s, size_t __maxsize, const char *__restrict__ __format, const tm *__restrict__ __tp, __locale_t __loc) throw();
# 230 "/usr/include/time.h" 3
extern char *strptime_l(const char *__restrict__ __s, const char *__restrict__ __fmt, tm * __tp, __locale_t __loc) throw();
# 239 "/usr/include/time.h" 3
extern tm *gmtime(const time_t * __timer) throw();
# 243 "/usr/include/time.h" 3
extern tm *localtime(const time_t * __timer) throw();
# 249 "/usr/include/time.h" 3
extern tm *gmtime_r(const time_t *__restrict__ __timer, tm *__restrict__ __tp) throw();
# 254 "/usr/include/time.h" 3
extern tm *localtime_r(const time_t *__restrict__ __timer, tm *__restrict__ __tp) throw();
# 261 "/usr/include/time.h" 3
extern char *asctime(const tm * __tp) throw();
# 264 "/usr/include/time.h" 3
extern char *ctime(const time_t * __timer) throw();
# 272 "/usr/include/time.h" 3
extern char *asctime_r(const tm *__restrict__ __tp, char *__restrict__ __buf) throw();
# 276 "/usr/include/time.h" 3
extern char *ctime_r(const time_t *__restrict__ __timer, char *__restrict__ __buf) throw();
# 282 "/usr/include/time.h" 3
extern char *__tzname[2];
# 283 "/usr/include/time.h" 3
extern int __daylight;
# 284 "/usr/include/time.h" 3
extern long __timezone;
# 289 "/usr/include/time.h" 3
extern char *tzname[2];
# 293 "/usr/include/time.h" 3
extern void tzset() throw();
# 297 "/usr/include/time.h" 3
extern int daylight;
# 298 "/usr/include/time.h" 3
extern long timezone;
# 304 "/usr/include/time.h" 3
extern int stime(const time_t * __when) throw();
# 319 "/usr/include/time.h" 3
extern time_t timegm(tm * __tp) throw();
# 322 "/usr/include/time.h" 3
extern time_t timelocal(tm * __tp) throw();
# 325 "/usr/include/time.h" 3
extern int dysize(int __year) throw() __attribute((const));
# 334 "/usr/include/time.h" 3
extern int nanosleep(const timespec * __requested_time, timespec * __remaining);
# 339 "/usr/include/time.h" 3
extern int clock_getres(clockid_t __clock_id, timespec * __res) throw();
# 342 "/usr/include/time.h" 3
extern int clock_gettime(clockid_t __clock_id, timespec * __tp) throw();
# 345 "/usr/include/time.h" 3
extern int clock_settime(clockid_t __clock_id, const timespec * __tp) throw();
# 353 "/usr/include/time.h" 3
extern int clock_nanosleep(clockid_t __clock_id, int __flags, const timespec * __req, timespec * __rem);
# 358 "/usr/include/time.h" 3
extern int clock_getcpuclockid(pid_t __pid, clockid_t * __clock_id) throw();
# 363 "/usr/include/time.h" 3
extern int timer_create(clockid_t __clock_id, sigevent *__restrict__ __evp, timer_t *__restrict__ __timerid) throw();
# 368 "/usr/include/time.h" 3
extern int timer_delete(timer_t __timerid) throw();
# 371 "/usr/include/time.h" 3
extern int timer_settime(timer_t __timerid, int __flags, const itimerspec *__restrict__ __value, itimerspec *__restrict__ __ovalue) throw();
# 376 "/usr/include/time.h" 3
extern int timer_gettime(timer_t __timerid, itimerspec * __value) throw();
# 380 "/usr/include/time.h" 3
extern int timer_getoverrun(timer_t __timerid) throw();
# 386 "/usr/include/time.h" 3
extern int timespec_get(timespec * __ts, int __base) throw()
# 387 "/usr/include/time.h" 3
 __attribute((__nonnull__(1)));
# 403 "/usr/include/time.h" 3
extern int getdate_err;
# 412 "/usr/include/time.h" 3
extern tm *getdate(const char * __string);
# 426 "/usr/include/time.h" 3
extern int getdate_r(const char *__restrict__ __string, tm *__restrict__ __resbufp);
# 430 "/usr/include/time.h" 3
}
# 68 "/usr/local/cuda/include/common_functions.h"

# 68 "/usr/local/cuda/include/common_functions.h"
extern "C" {
# 71 "/usr/local/cuda/include/common_functions.h"
extern clock_t clock() throw();
# 72 "/usr/local/cuda/include/common_functions.h"
extern void *memset(void *, int, size_t) throw();
# 73 "/usr/local/cuda/include/common_functions.h"
extern void *memcpy(void *, const void *, size_t) throw();
# 75 "/usr/local/cuda/include/common_functions.h"
}
# 93 "/usr/local/cuda/include/math_functions.h"
extern "C" {
# 164 "/usr/local/cuda/include/math_functions.h"
extern int abs(int) throw();
# 165 "/usr/local/cuda/include/math_functions.h"
extern long labs(long) throw();
# 166 "/usr/local/cuda/include/math_functions.h"
extern long long llabs(long long) throw();
# 216 "/usr/local/cuda/include/math_functions.h"
extern double fabs(double x) throw();
# 257 "/usr/local/cuda/include/math_functions.h"
extern float fabsf(float x) throw();
# 261 "/usr/local/cuda/include/math_functions.h"
extern inline int min(int, int);
# 263 "/usr/local/cuda/include/math_functions.h"
extern inline unsigned umin(unsigned, unsigned);
# 264 "/usr/local/cuda/include/math_functions.h"
extern inline long long llmin(long long, long long);
# 265 "/usr/local/cuda/include/math_functions.h"
extern inline unsigned long long ullmin(unsigned long long, unsigned long long);
# 286 "/usr/local/cuda/include/math_functions.h"
extern float fminf(float x, float y) throw();
# 306 "/usr/local/cuda/include/math_functions.h"
extern double fmin(double x, double y) throw();
# 313 "/usr/local/cuda/include/math_functions.h"
extern inline int max(int, int);
# 315 "/usr/local/cuda/include/math_functions.h"
extern inline unsigned umax(unsigned, unsigned);
# 316 "/usr/local/cuda/include/math_functions.h"
extern inline long long llmax(long long, long long);
# 317 "/usr/local/cuda/include/math_functions.h"
extern inline unsigned long long ullmax(unsigned long long, unsigned long long);
# 338 "/usr/local/cuda/include/math_functions.h"
extern float fmaxf(float x, float y) throw();
# 358 "/usr/local/cuda/include/math_functions.h"
extern double fmax(double, double) throw();
# 402 "/usr/local/cuda/include/math_functions.h"
extern double sin(double x) throw();
# 435 "/usr/local/cuda/include/math_functions.h"
extern double cos(double x) throw();
# 454 "/usr/local/cuda/include/math_functions.h"
extern void sincos(double x, double * sptr, double * cptr) throw();
# 470 "/usr/local/cuda/include/math_functions.h"
extern void sincosf(float x, float * sptr, float * cptr) throw();
# 515 "/usr/local/cuda/include/math_functions.h"
extern double tan(double x) throw();
# 584 "/usr/local/cuda/include/math_functions.h"
extern double sqrt(double x) throw();
# 656 "/usr/local/cuda/include/math_functions.h"
extern double rsqrt(double x);
# 726 "/usr/local/cuda/include/math_functions.h"
extern float rsqrtf(float x);
# 782 "/usr/local/cuda/include/math_functions.h"
extern double log2(double x) throw();
# 807 "/usr/local/cuda/include/math_functions.h"
extern double exp2(double x) throw();
# 832 "/usr/local/cuda/include/math_functions.h"
extern float exp2f(float x) throw();
# 859 "/usr/local/cuda/include/math_functions.h"
extern double exp10(double x) throw();
# 882 "/usr/local/cuda/include/math_functions.h"
extern float exp10f(float x) throw();
# 928 "/usr/local/cuda/include/math_functions.h"
extern double expm1(double x) throw();
# 973 "/usr/local/cuda/include/math_functions.h"
extern float expm1f(float x) throw();
# 1028 "/usr/local/cuda/include/math_functions.h"
extern float log2f(float x) throw();
# 1082 "/usr/local/cuda/include/math_functions.h"
extern double log10(double x) throw();
# 1153 "/usr/local/cuda/include/math_functions.h"
extern double log(double x) throw();
# 1247 "/usr/local/cuda/include/math_functions.h"
extern double log1p(double x) throw();
# 1344 "/usr/local/cuda/include/math_functions.h"
extern float log1pf(float x) throw();
# 1419 "/usr/local/cuda/include/math_functions.h"
extern double floor(double x) throw();
# 1458 "/usr/local/cuda/include/math_functions.h"
extern double exp(double x) throw();
# 1489 "/usr/local/cuda/include/math_functions.h"
extern double cosh(double x) throw();
# 1519 "/usr/local/cuda/include/math_functions.h"
extern double sinh(double x) throw();
# 1549 "/usr/local/cuda/include/math_functions.h"
extern double tanh(double x) throw();
# 1584 "/usr/local/cuda/include/math_functions.h"
extern double acosh(double x) throw();
# 1622 "/usr/local/cuda/include/math_functions.h"
extern float acoshf(float x) throw();
# 1638 "/usr/local/cuda/include/math_functions.h"
extern double asinh(double x) throw();
# 1654 "/usr/local/cuda/include/math_functions.h"
extern float asinhf(float x) throw();
# 1708 "/usr/local/cuda/include/math_functions.h"
extern double atanh(double x) throw();
# 1762 "/usr/local/cuda/include/math_functions.h"
extern float atanhf(float x) throw();
# 1821 "/usr/local/cuda/include/math_functions.h"
extern double ldexp(double x, int exp) throw();
# 1877 "/usr/local/cuda/include/math_functions.h"
extern float ldexpf(float x, int exp) throw();
# 1929 "/usr/local/cuda/include/math_functions.h"
extern double logb(double x) throw();
# 1984 "/usr/local/cuda/include/math_functions.h"
extern float logbf(float x) throw();
# 2014 "/usr/local/cuda/include/math_functions.h"
extern int ilogb(double x) throw();
# 2044 "/usr/local/cuda/include/math_functions.h"
extern int ilogbf(float x) throw();
# 2120 "/usr/local/cuda/include/math_functions.h"
extern double scalbn(double x, int n) throw();
# 2196 "/usr/local/cuda/include/math_functions.h"
extern float scalbnf(float x, int n) throw();
# 2272 "/usr/local/cuda/include/math_functions.h"
extern double scalbln(double x, long n) throw();
# 2348 "/usr/local/cuda/include/math_functions.h"
extern float scalblnf(float x, long n) throw();
# 2426 "/usr/local/cuda/include/math_functions.h"
extern double frexp(double x, int * nptr) throw();
# 2501 "/usr/local/cuda/include/math_functions.h"
extern float frexpf(float x, int * nptr) throw();
# 2515 "/usr/local/cuda/include/math_functions.h"
extern double round(double x) throw();
# 2532 "/usr/local/cuda/include/math_functions.h"
extern float roundf(float x) throw();
# 2550 "/usr/local/cuda/include/math_functions.h"
extern long lround(double x) throw();
# 2568 "/usr/local/cuda/include/math_functions.h"
extern long lroundf(float x) throw();
# 2586 "/usr/local/cuda/include/math_functions.h"
extern long long llround(double x) throw();
# 2604 "/usr/local/cuda/include/math_functions.h"
extern long long llroundf(float x) throw();
# 2656 "/usr/local/cuda/include/math_functions.h"
extern float rintf(float x) throw();
# 2672 "/usr/local/cuda/include/math_functions.h"
extern long lrint(double x) throw();
# 2688 "/usr/local/cuda/include/math_functions.h"
extern long lrintf(float x) throw();
# 2704 "/usr/local/cuda/include/math_functions.h"
extern long long llrint(double x) throw();
# 2720 "/usr/local/cuda/include/math_functions.h"
extern long long llrintf(float x) throw();
# 2773 "/usr/local/cuda/include/math_functions.h"
extern double nearbyint(double x) throw();
# 2826 "/usr/local/cuda/include/math_functions.h"
extern float nearbyintf(float x) throw();
# 2888 "/usr/local/cuda/include/math_functions.h"
extern double ceil(double x) throw();
# 2900 "/usr/local/cuda/include/math_functions.h"
extern double trunc(double x) throw();
# 2915 "/usr/local/cuda/include/math_functions.h"
extern float truncf(float x) throw();
# 2941 "/usr/local/cuda/include/math_functions.h"
extern double fdim(double x, double y) throw();
# 2967 "/usr/local/cuda/include/math_functions.h"
extern float fdimf(float x, float y) throw();
# 3003 "/usr/local/cuda/include/math_functions.h"
extern double atan2(double y, double x) throw();
# 3034 "/usr/local/cuda/include/math_functions.h"
extern double atan(double x) throw();
# 3057 "/usr/local/cuda/include/math_functions.h"
extern double acos(double x) throw();
# 3089 "/usr/local/cuda/include/math_functions.h"
extern double asin(double x) throw();
# 3135 "/usr/local/cuda/include/math_functions.h"
extern double hypot(double x, double y) throw();
# 3187 "/usr/local/cuda/include/math_functions.h"
extern double rhypot(double x, double y) throw();
# 3233 "/usr/local/cuda/include/math_functions.h"
extern float hypotf(float x, float y) throw();
# 3285 "/usr/local/cuda/include/math_functions.h"
extern float rhypotf(float x, float y) throw();
# 3332 "/usr/local/cuda/include/math_functions.h"
extern double norm3d(double a, double b, double c) throw();
# 3383 "/usr/local/cuda/include/math_functions.h"
extern double rnorm3d(double a, double b, double c) throw();
# 3432 "/usr/local/cuda/include/math_functions.h"
extern double norm4d(double a, double b, double c, double d) throw();
# 3488 "/usr/local/cuda/include/math_functions.h"
extern double rnorm4d(double a, double b, double c, double d) throw();
# 3533 "/usr/local/cuda/include/math_functions.h"
extern double norm(int dim, const double * t) throw();
# 3584 "/usr/local/cuda/include/math_functions.h"
extern double rnorm(int dim, const double * t) throw();
# 3636 "/usr/local/cuda/include/math_functions.h"
extern float rnormf(int dim, const float * a) throw();
# 3680 "/usr/local/cuda/include/math_functions.h"
extern float normf(int dim, const float * a) throw();
# 3725 "/usr/local/cuda/include/math_functions.h"
extern float norm3df(float a, float b, float c) throw();
# 3776 "/usr/local/cuda/include/math_functions.h"
extern float rnorm3df(float a, float b, float c) throw();
# 3825 "/usr/local/cuda/include/math_functions.h"
extern float norm4df(float a, float b, float c, float d) throw();
# 3881 "/usr/local/cuda/include/math_functions.h"
extern float rnorm4df(float a, float b, float c, float d) throw();
# 3965 "/usr/local/cuda/include/math_functions.h"
extern double cbrt(double x) throw();
# 4051 "/usr/local/cuda/include/math_functions.h"
extern float cbrtf(float x) throw();
# 4106 "/usr/local/cuda/include/math_functions.h"
extern double rcbrt(double x);
# 4156 "/usr/local/cuda/include/math_functions.h"
extern float rcbrtf(float x);
# 4216 "/usr/local/cuda/include/math_functions.h"
extern double sinpi(double x);
# 4276 "/usr/local/cuda/include/math_functions.h"
extern float sinpif(float x);
# 4328 "/usr/local/cuda/include/math_functions.h"
extern double cospi(double x);
# 4380 "/usr/local/cuda/include/math_functions.h"
extern float cospif(float x);
# 4410 "/usr/local/cuda/include/math_functions.h"
extern void sincospi(double x, double * sptr, double * cptr);
# 4440 "/usr/local/cuda/include/math_functions.h"
extern void sincospif(float x, float * sptr, float * cptr);
# 4752 "/usr/local/cuda/include/math_functions.h"
extern double pow(double x, double y) throw();
# 4808 "/usr/local/cuda/include/math_functions.h"
extern double modf(double x, double * iptr) throw();
# 4867 "/usr/local/cuda/include/math_functions.h"
extern double fmod(double x, double y) throw();
# 4953 "/usr/local/cuda/include/math_functions.h"
extern double remainder(double x, double y) throw();
# 5043 "/usr/local/cuda/include/math_functions.h"
extern float remainderf(float x, float y) throw();
# 5097 "/usr/local/cuda/include/math_functions.h"
extern double remquo(double x, double y, int * quo) throw();
# 5151 "/usr/local/cuda/include/math_functions.h"
extern float remquof(float x, float y, int * quo) throw();
# 5192 "/usr/local/cuda/include/math_functions.h"
extern double j0(double x) throw();
# 5234 "/usr/local/cuda/include/math_functions.h"
extern float j0f(float x) throw();
# 5295 "/usr/local/cuda/include/math_functions.h"
extern double j1(double x) throw();
# 5356 "/usr/local/cuda/include/math_functions.h"
extern float j1f(float x) throw();
# 5399 "/usr/local/cuda/include/math_functions.h"
extern double jn(int n, double x) throw();
# 5442 "/usr/local/cuda/include/math_functions.h"
extern float jnf(int n, float x) throw();
# 5494 "/usr/local/cuda/include/math_functions.h"
extern double y0(double x) throw();
# 5546 "/usr/local/cuda/include/math_functions.h"
extern float y0f(float x) throw();
# 5598 "/usr/local/cuda/include/math_functions.h"
extern double y1(double x) throw();
# 5650 "/usr/local/cuda/include/math_functions.h"
extern float y1f(float x) throw();
# 5703 "/usr/local/cuda/include/math_functions.h"
extern double yn(int n, double x) throw();
# 5756 "/usr/local/cuda/include/math_functions.h"
extern float ynf(int n, float x) throw();
# 5783 "/usr/local/cuda/include/math_functions.h"
extern double cyl_bessel_i0(double x) throw();
# 5809 "/usr/local/cuda/include/math_functions.h"
extern float cyl_bessel_i0f(float x) throw();
# 5836 "/usr/local/cuda/include/math_functions.h"
extern double cyl_bessel_i1(double x) throw();
# 5862 "/usr/local/cuda/include/math_functions.h"
extern float cyl_bessel_i1f(float x) throw();
# 5945 "/usr/local/cuda/include/math_functions.h"
extern double erf(double x) throw();
# 6027 "/usr/local/cuda/include/math_functions.h"
extern float erff(float x) throw();
# 6091 "/usr/local/cuda/include/math_functions.h"
extern double erfinv(double y);
# 6148 "/usr/local/cuda/include/math_functions.h"
extern float erfinvf(float y);
# 6187 "/usr/local/cuda/include/math_functions.h"
extern double erfc(double x) throw();
# 6225 "/usr/local/cuda/include/math_functions.h"
extern float erfcf(float x) throw();
# 6353 "/usr/local/cuda/include/math_functions.h"
extern double lgamma(double x) throw();
# 6416 "/usr/local/cuda/include/math_functions.h"
extern double erfcinv(double y);
# 6472 "/usr/local/cuda/include/math_functions.h"
extern float erfcinvf(float y);
# 6530 "/usr/local/cuda/include/math_functions.h"
extern double normcdfinv(double y);
# 6588 "/usr/local/cuda/include/math_functions.h"
extern float normcdfinvf(float y);
# 6631 "/usr/local/cuda/include/math_functions.h"
extern double normcdf(double y);
# 6674 "/usr/local/cuda/include/math_functions.h"
extern float normcdff(float y);
# 6749 "/usr/local/cuda/include/math_functions.h"
extern double erfcx(double x);
# 6824 "/usr/local/cuda/include/math_functions.h"
extern float erfcxf(float x);
# 6958 "/usr/local/cuda/include/math_functions.h"
extern float lgammaf(float x) throw();
# 7067 "/usr/local/cuda/include/math_functions.h"
extern double tgamma(double x) throw();
# 7176 "/usr/local/cuda/include/math_functions.h"
extern float tgammaf(float x) throw();
# 7189 "/usr/local/cuda/include/math_functions.h"
extern double copysign(double x, double y) throw();
# 7202 "/usr/local/cuda/include/math_functions.h"
extern float copysignf(float x, float y) throw();
# 7239 "/usr/local/cuda/include/math_functions.h"
extern double nextafter(double x, double y) throw();
# 7276 "/usr/local/cuda/include/math_functions.h"
extern float nextafterf(float x, float y) throw();
# 7292 "/usr/local/cuda/include/math_functions.h"
extern double nan(const char * tagp) throw();
# 7308 "/usr/local/cuda/include/math_functions.h"
extern float nanf(const char * tagp) throw();
# 7315 "/usr/local/cuda/include/math_functions.h"
extern int __isinff(float) throw();
# 7316 "/usr/local/cuda/include/math_functions.h"
extern int __isnanf(float) throw();
# 7326 "/usr/local/cuda/include/math_functions.h"
extern int __finite(double) throw();
# 7327 "/usr/local/cuda/include/math_functions.h"
extern int __finitef(float) throw();
# 7328 "/usr/local/cuda/include/math_functions.h"
extern __attribute((gnu_inline)) inline int __signbit(double) throw();
# 7329 "/usr/local/cuda/include/math_functions.h"
extern int __isnan(double) throw();
# 7330 "/usr/local/cuda/include/math_functions.h"
extern int __isinf(double) throw();
# 7333 "/usr/local/cuda/include/math_functions.h"
extern __attribute((gnu_inline)) inline int __signbitf(float) throw();
# 7492 "/usr/local/cuda/include/math_functions.h"
extern double fma(double x, double y, double z) throw();
# 7650 "/usr/local/cuda/include/math_functions.h"
extern float fmaf(float x, float y, float z) throw();
# 7661 "/usr/local/cuda/include/math_functions.h"
extern __attribute((gnu_inline)) inline int __signbitl(long double) throw();
# 7667 "/usr/local/cuda/include/math_functions.h"
extern int __finitel(long double) throw();
# 7668 "/usr/local/cuda/include/math_functions.h"
extern int __isinfl(long double) throw();
# 7669 "/usr/local/cuda/include/math_functions.h"
extern int __isnanl(long double) throw();
# 7719 "/usr/local/cuda/include/math_functions.h"
extern float acosf(float x) throw();
# 7759 "/usr/local/cuda/include/math_functions.h"
extern float asinf(float x) throw();
# 7799 "/usr/local/cuda/include/math_functions.h"
extern float atanf(float x) throw();
# 7832 "/usr/local/cuda/include/math_functions.h"
extern float atan2f(float y, float x) throw();
# 7856 "/usr/local/cuda/include/math_functions.h"
extern float cosf(float x) throw();
# 7898 "/usr/local/cuda/include/math_functions.h"
extern float sinf(float x) throw();
# 7940 "/usr/local/cuda/include/math_functions.h"
extern float tanf(float x) throw();
# 7964 "/usr/local/cuda/include/math_functions.h"
extern float coshf(float x) throw();
# 8005 "/usr/local/cuda/include/math_functions.h"
extern float sinhf(float x) throw();
# 8035 "/usr/local/cuda/include/math_functions.h"
extern float tanhf(float x) throw();
# 8086 "/usr/local/cuda/include/math_functions.h"
extern float logf(float x) throw();
# 8136 "/usr/local/cuda/include/math_functions.h"
extern float expf(float x) throw();
# 8187 "/usr/local/cuda/include/math_functions.h"
extern float log10f(float x) throw();
# 8242 "/usr/local/cuda/include/math_functions.h"
extern float modff(float x, float * iptr) throw();
# 8550 "/usr/local/cuda/include/math_functions.h"
extern float powf(float x, float y) throw();
# 8619 "/usr/local/cuda/include/math_functions.h"
extern float sqrtf(float x) throw();
# 8678 "/usr/local/cuda/include/math_functions.h"
extern float ceilf(float x) throw();
# 8750 "/usr/local/cuda/include/math_functions.h"
extern float floorf(float x) throw();
# 8809 "/usr/local/cuda/include/math_functions.h"
extern float fmodf(float x, float y) throw();
# 8823 "/usr/local/cuda/include/math_functions.h"
}
# 28 "/usr/include/math.h" 3

# 28 "/usr/include/math.h" 3
extern "C" {
# 28 "/usr/include/x86_64-linux-gnu/bits/mathdef.h" 3
typedef float float_t;
# 29 "/usr/include/x86_64-linux-gnu/bits/mathdef.h" 3
typedef double double_t;
# 54 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double acos(double __x) throw(); extern double __acos(double __x) throw();
# 56 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double asin(double __x) throw(); extern double __asin(double __x) throw();
# 58 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double atan(double __x) throw(); extern double __atan(double __x) throw();
# 60 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double atan2(double __y, double __x) throw(); extern double __atan2(double __y, double __x) throw();
# 63 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double cos(double __x) throw(); extern double __cos(double __x) throw();
# 65 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double sin(double __x) throw(); extern double __sin(double __x) throw();
# 67 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double tan(double __x) throw(); extern double __tan(double __x) throw();
# 72 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double cosh(double __x) throw(); extern double __cosh(double __x) throw();
# 74 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double sinh(double __x) throw(); extern double __sinh(double __x) throw();
# 76 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double tanh(double __x) throw(); extern double __tanh(double __x) throw();
# 81 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincos(double __x, double * __sinx, double * __cosx) throw(); extern void __sincos(double __x, double * __sinx, double * __cosx) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double acosh(double __x) throw(); extern double __acosh(double __x) throw();
# 90 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double asinh(double __x) throw(); extern double __asinh(double __x) throw();
# 92 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double atanh(double __x) throw(); extern double __atanh(double __x) throw();
# 100 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double exp(double __x) throw(); extern double __exp(double __x) throw();
# 103 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double frexp(double __x, int * __exponent) throw(); extern double __frexp(double __x, int * __exponent) throw();
# 106 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double ldexp(double __x, int __exponent) throw(); extern double __ldexp(double __x, int __exponent) throw();
# 109 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log(double __x) throw(); extern double __log(double __x) throw();
# 112 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log10(double __x) throw(); extern double __log10(double __x) throw();
# 115 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double modf(double __x, double * __iptr) throw(); extern double __modf(double __x, double * __iptr) throw() __attribute((__nonnull__(2)));
# 120 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double exp10(double __x) throw(); extern double __exp10(double __x) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double pow10(double __x) throw(); extern double __pow10(double __x) throw();
# 128 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double expm1(double __x) throw(); extern double __expm1(double __x) throw();
# 131 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log1p(double __x) throw(); extern double __log1p(double __x) throw();
# 134 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double logb(double __x) throw(); extern double __logb(double __x) throw();
# 141 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double exp2(double __x) throw(); extern double __exp2(double __x) throw();
# 144 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log2(double __x) throw(); extern double __log2(double __x) throw();
# 153 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double pow(double __x, double __y) throw(); extern double __pow(double __x, double __y) throw();
# 156 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double sqrt(double __x) throw(); extern double __sqrt(double __x) throw();
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double hypot(double __x, double __y) throw(); extern double __hypot(double __x, double __y) throw();
# 169 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double cbrt(double __x) throw(); extern double __cbrt(double __x) throw();
# 178 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double ceil(double __x) throw() __attribute((const)); extern double __ceil(double __x) throw() __attribute((const));
# 181 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fabs(double __x) throw() __attribute((const)); extern double __fabs(double __x) throw() __attribute((const));
# 184 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double floor(double __x) throw() __attribute((const)); extern double __floor(double __x) throw() __attribute((const));
# 187 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmod(double __x, double __y) throw(); extern double __fmod(double __x, double __y) throw();
# 192 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __isinf(double __value) throw() __attribute((const));
# 195 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __finite(double __value) throw() __attribute((const));
# 204 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern inline int isinf(double __value) throw() __attribute((const));
# 208 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int finite(double __value) throw() __attribute((const));
# 211 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double drem(double __x, double __y) throw(); extern double __drem(double __x, double __y) throw();
# 215 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double significand(double __x) throw(); extern double __significand(double __x) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double copysign(double __x, double __y) throw() __attribute((const)); extern double __copysign(double __x, double __y) throw() __attribute((const));
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nan(const char * __tagb) throw() __attribute((const)); extern double __nan(const char * __tagb) throw() __attribute((const));
# 234 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __isnan(double __value) throw() __attribute((const));
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern inline int isnan(double __value) throw() __attribute((const));
# 247 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double j0(double) throw(); extern double __j0(double) throw();
# 248 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double j1(double) throw(); extern double __j1(double) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double jn(int, double) throw(); extern double __jn(int, double) throw();
# 250 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double y0(double) throw(); extern double __y0(double) throw();
# 251 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double y1(double) throw(); extern double __y1(double) throw();
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double yn(int, double) throw(); extern double __yn(int, double) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double erf(double) throw(); extern double __erf(double) throw();
# 260 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double erfc(double) throw(); extern double __erfc(double) throw();
# 261 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double lgamma(double) throw(); extern double __lgamma(double) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double tgamma(double) throw(); extern double __tgamma(double) throw();
# 274 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double gamma(double) throw(); extern double __gamma(double) throw();
# 281 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double lgamma_r(double, int * __signgamp) throw(); extern double __lgamma_r(double, int * __signgamp) throw();
# 289 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double rint(double __x) throw(); extern double __rint(double __x) throw();
# 292 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nextafter(double __x, double __y) throw() __attribute((const)); extern double __nextafter(double __x, double __y) throw() __attribute((const));
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nexttoward(double __x, long double __y) throw() __attribute((const)); extern double __nexttoward(double __x, long double __y) throw() __attribute((const));
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double remainder(double __x, double __y) throw(); extern double __remainder(double __x, double __y) throw();
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double scalbn(double __x, int __n) throw(); extern double __scalbn(double __x, int __n) throw();
# 306 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogb(double __x) throw(); extern int __ilogb(double __x) throw();
# 311 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double scalbln(double __x, long __n) throw(); extern double __scalbln(double __x, long __n) throw();
# 315 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nearbyint(double __x) throw(); extern double __nearbyint(double __x) throw();
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double round(double __x) throw() __attribute((const)); extern double __round(double __x) throw() __attribute((const));
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double trunc(double __x) throw() __attribute((const)); extern double __trunc(double __x) throw() __attribute((const));
# 328 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double remquo(double __x, double __y, int * __quo) throw(); extern double __remquo(double __x, double __y, int * __quo) throw();
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrint(double __x) throw(); extern long __lrint(double __x) throw();
# 337 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrint(double __x) throw(); extern long long __llrint(double __x) throw();
# 341 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lround(double __x) throw(); extern long __lround(double __x) throw();
# 343 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llround(double __x) throw(); extern long long __llround(double __x) throw();
# 347 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fdim(double __x, double __y) throw(); extern double __fdim(double __x, double __y) throw();
# 350 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmax(double __x, double __y) throw() __attribute((const)); extern double __fmax(double __x, double __y) throw() __attribute((const));
# 353 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmin(double __x, double __y) throw() __attribute((const)); extern double __fmin(double __x, double __y) throw() __attribute((const));
# 357 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __fpclassify(double __value) throw()
# 358 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __attribute((gnu_inline)) inline int __signbit(double __value) throw()
# 362 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fma(double __x, double __y, double __z) throw(); extern double __fma(double __x, double __y, double __z) throw();
# 375 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __issignaling(double __value) throw()
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double scalb(double __x, double __n) throw(); extern double __scalb(double __x, double __n) throw();
# 54 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float acosf(float __x) throw(); extern float __acosf(float __x) throw();
# 56 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float asinf(float __x) throw(); extern float __asinf(float __x) throw();
# 58 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float atanf(float __x) throw(); extern float __atanf(float __x) throw();
# 60 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float atan2f(float __y, float __x) throw(); extern float __atan2f(float __y, float __x) throw();
# 63 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float cosf(float __x) throw();
# 65 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float sinf(float __x) throw();
# 67 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float tanf(float __x) throw();
# 72 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float coshf(float __x) throw(); extern float __coshf(float __x) throw();
# 74 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float sinhf(float __x) throw(); extern float __sinhf(float __x) throw();
# 76 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float tanhf(float __x) throw(); extern float __tanhf(float __x) throw();
# 81 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincosf(float __x, float * __sinx, float * __cosx) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float acoshf(float __x) throw(); extern float __acoshf(float __x) throw();
# 90 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float asinhf(float __x) throw(); extern float __asinhf(float __x) throw();
# 92 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float atanhf(float __x) throw(); extern float __atanhf(float __x) throw();
# 100 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float expf(float __x) throw();
# 103 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float frexpf(float __x, int * __exponent) throw(); extern float __frexpf(float __x, int * __exponent) throw();
# 106 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float ldexpf(float __x, int __exponent) throw(); extern float __ldexpf(float __x, int __exponent) throw();
# 109 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float logf(float __x) throw();
# 112 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float log10f(float __x) throw();
# 115 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float modff(float __x, float * __iptr) throw(); extern float __modff(float __x, float * __iptr) throw() __attribute((__nonnull__(2)));
# 120 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float exp10f(float __x) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float pow10f(float __x) throw(); extern float __pow10f(float __x) throw();
# 128 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float expm1f(float __x) throw(); extern float __expm1f(float __x) throw();
# 131 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float log1pf(float __x) throw(); extern float __log1pf(float __x) throw();
# 134 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float logbf(float __x) throw(); extern float __logbf(float __x) throw();
# 141 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float exp2f(float __x) throw(); extern float __exp2f(float __x) throw();
# 144 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float log2f(float __x) throw();
# 153 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float powf(float __x, float __y) throw();
# 156 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float sqrtf(float __x) throw(); extern float __sqrtf(float __x) throw();
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float hypotf(float __x, float __y) throw(); extern float __hypotf(float __x, float __y) throw();
# 169 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float cbrtf(float __x) throw(); extern float __cbrtf(float __x) throw();
# 178 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float ceilf(float __x) throw() __attribute((const)); extern float __ceilf(float __x) throw() __attribute((const));
# 181 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fabsf(float __x) throw() __attribute((const)); extern float __fabsf(float __x) throw() __attribute((const));
# 184 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float floorf(float __x) throw() __attribute((const)); extern float __floorf(float __x) throw() __attribute((const));
# 187 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmodf(float __x, float __y) throw(); extern float __fmodf(float __x, float __y) throw();
# 192 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __isinff(float __value) throw() __attribute((const));
# 195 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __finitef(float __value) throw() __attribute((const));
# 204 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isinff(float __value) throw() __attribute((const));
# 208 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int finitef(float __value) throw() __attribute((const));
# 211 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float dremf(float __x, float __y) throw(); extern float __dremf(float __x, float __y) throw();
# 215 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float significandf(float __x) throw(); extern float __significandf(float __x) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float copysignf(float __x, float __y) throw() __attribute((const)); extern float __copysignf(float __x, float __y) throw() __attribute((const));
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nanf(const char * __tagb) throw() __attribute((const)); extern float __nanf(const char * __tagb) throw() __attribute((const));
# 234 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __isnanf(float __value) throw() __attribute((const));
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isnanf(float __value) throw() __attribute((const));
# 247 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float j0f(float) throw(); extern float __j0f(float) throw();
# 248 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float j1f(float) throw(); extern float __j1f(float) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float jnf(int, float) throw(); extern float __jnf(int, float) throw();
# 250 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float y0f(float) throw(); extern float __y0f(float) throw();
# 251 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float y1f(float) throw(); extern float __y1f(float) throw();
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float ynf(int, float) throw(); extern float __ynf(int, float) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float erff(float) throw(); extern float __erff(float) throw();
# 260 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float erfcf(float) throw(); extern float __erfcf(float) throw();
# 261 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float lgammaf(float) throw(); extern float __lgammaf(float) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float tgammaf(float) throw(); extern float __tgammaf(float) throw();
# 274 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float gammaf(float) throw(); extern float __gammaf(float) throw();
# 281 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float lgammaf_r(float, int * __signgamp) throw(); extern float __lgammaf_r(float, int * __signgamp) throw();
# 289 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float rintf(float __x) throw(); extern float __rintf(float __x) throw();
# 292 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nextafterf(float __x, float __y) throw() __attribute((const)); extern float __nextafterf(float __x, float __y) throw() __attribute((const));
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nexttowardf(float __x, long double __y) throw() __attribute((const)); extern float __nexttowardf(float __x, long double __y) throw() __attribute((const));
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float remainderf(float __x, float __y) throw(); extern float __remainderf(float __x, float __y) throw();
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float scalbnf(float __x, int __n) throw(); extern float __scalbnf(float __x, int __n) throw();
# 306 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogbf(float __x) throw(); extern int __ilogbf(float __x) throw();
# 311 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float scalblnf(float __x, long __n) throw(); extern float __scalblnf(float __x, long __n) throw();
# 315 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nearbyintf(float __x) throw(); extern float __nearbyintf(float __x) throw();
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float roundf(float __x) throw() __attribute((const)); extern float __roundf(float __x) throw() __attribute((const));
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float truncf(float __x) throw() __attribute((const)); extern float __truncf(float __x) throw() __attribute((const));
# 328 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float remquof(float __x, float __y, int * __quo) throw(); extern float __remquof(float __x, float __y, int * __quo) throw();
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrintf(float __x) throw(); extern long __lrintf(float __x) throw();
# 337 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrintf(float __x) throw(); extern long long __llrintf(float __x) throw();
# 341 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lroundf(float __x) throw(); extern long __lroundf(float __x) throw();
# 343 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llroundf(float __x) throw(); extern long long __llroundf(float __x) throw();
# 347 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fdimf(float __x, float __y) throw(); extern float __fdimf(float __x, float __y) throw();
# 350 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmaxf(float __x, float __y) throw() __attribute((const)); extern float __fmaxf(float __x, float __y) throw() __attribute((const));
# 353 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fminf(float __x, float __y) throw() __attribute((const)); extern float __fminf(float __x, float __y) throw() __attribute((const));
# 357 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __fpclassifyf(float __value) throw()
# 358 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __attribute((gnu_inline)) inline int __signbitf(float __value) throw()
# 362 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmaf(float __x, float __y, float __z) throw(); extern float __fmaf(float __x, float __y, float __z) throw();
# 375 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __issignalingf(float __value) throw()
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float scalbf(float __x, float __n) throw(); extern float __scalbf(float __x, float __n) throw();
# 54 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double acosl(long double __x) throw(); extern long double __acosl(long double __x) throw();
# 56 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double asinl(long double __x) throw(); extern long double __asinl(long double __x) throw();
# 58 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double atanl(long double __x) throw(); extern long double __atanl(long double __x) throw();
# 60 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double atan2l(long double __y, long double __x) throw(); extern long double __atan2l(long double __y, long double __x) throw();
# 63 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double cosl(long double __x) throw(); extern long double __cosl(long double __x) throw();
# 65 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double sinl(long double __x) throw(); extern long double __sinl(long double __x) throw();
# 67 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double tanl(long double __x) throw(); extern long double __tanl(long double __x) throw();
# 72 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double coshl(long double __x) throw(); extern long double __coshl(long double __x) throw();
# 74 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double sinhl(long double __x) throw(); extern long double __sinhl(long double __x) throw();
# 76 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double tanhl(long double __x) throw(); extern long double __tanhl(long double __x) throw();
# 81 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincosl(long double __x, long double * __sinx, long double * __cosx) throw(); extern void __sincosl(long double __x, long double * __sinx, long double * __cosx) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double acoshl(long double __x) throw(); extern long double __acoshl(long double __x) throw();
# 90 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double asinhl(long double __x) throw(); extern long double __asinhl(long double __x) throw();
# 92 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double atanhl(long double __x) throw(); extern long double __atanhl(long double __x) throw();
# 100 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double expl(long double __x) throw(); extern long double __expl(long double __x) throw();
# 103 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double frexpl(long double __x, int * __exponent) throw(); extern long double __frexpl(long double __x, int * __exponent) throw();
# 106 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double ldexpl(long double __x, int __exponent) throw(); extern long double __ldexpl(long double __x, int __exponent) throw();
# 109 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double logl(long double __x) throw(); extern long double __logl(long double __x) throw();
# 112 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double log10l(long double __x) throw(); extern long double __log10l(long double __x) throw();
# 115 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double modfl(long double __x, long double * __iptr) throw(); extern long double __modfl(long double __x, long double * __iptr) throw() __attribute((__nonnull__(2)));
# 120 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double exp10l(long double __x) throw(); extern long double __exp10l(long double __x) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double pow10l(long double __x) throw(); extern long double __pow10l(long double __x) throw();
# 128 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double expm1l(long double __x) throw(); extern long double __expm1l(long double __x) throw();
# 131 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double log1pl(long double __x) throw(); extern long double __log1pl(long double __x) throw();
# 134 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double logbl(long double __x) throw(); extern long double __logbl(long double __x) throw();
# 141 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double exp2l(long double __x) throw(); extern long double __exp2l(long double __x) throw();
# 144 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double log2l(long double __x) throw(); extern long double __log2l(long double __x) throw();
# 153 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double powl(long double __x, long double __y) throw(); extern long double __powl(long double __x, long double __y) throw();
# 156 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double sqrtl(long double __x) throw(); extern long double __sqrtl(long double __x) throw();
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double hypotl(long double __x, long double __y) throw(); extern long double __hypotl(long double __x, long double __y) throw();
# 169 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double cbrtl(long double __x) throw(); extern long double __cbrtl(long double __x) throw();
# 178 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double ceill(long double __x) throw() __attribute((const)); extern long double __ceill(long double __x) throw() __attribute((const));
# 181 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fabsl(long double __x) throw() __attribute((const)); extern long double __fabsl(long double __x) throw() __attribute((const));
# 184 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double floorl(long double __x) throw() __attribute((const)); extern long double __floorl(long double __x) throw() __attribute((const));
# 187 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmodl(long double __x, long double __y) throw(); extern long double __fmodl(long double __x, long double __y) throw();
# 192 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __isinfl(long double __value) throw() __attribute((const));
# 195 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __finitel(long double __value) throw() __attribute((const));
# 204 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isinfl(long double __value) throw() __attribute((const));
# 208 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int finitel(long double __value) throw() __attribute((const));
# 211 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double dreml(long double __x, long double __y) throw(); extern long double __dreml(long double __x, long double __y) throw();
# 215 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double significandl(long double __x) throw(); extern long double __significandl(long double __x) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double copysignl(long double __x, long double __y) throw() __attribute((const)); extern long double __copysignl(long double __x, long double __y) throw() __attribute((const));
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nanl(const char * __tagb) throw() __attribute((const)); extern long double __nanl(const char * __tagb) throw() __attribute((const));
# 234 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __isnanl(long double __value) throw() __attribute((const));
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isnanl(long double __value) throw() __attribute((const));
# 247 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double j0l(long double) throw(); extern long double __j0l(long double) throw();
# 248 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double j1l(long double) throw(); extern long double __j1l(long double) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double jnl(int, long double) throw(); extern long double __jnl(int, long double) throw();
# 250 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double y0l(long double) throw(); extern long double __y0l(long double) throw();
# 251 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double y1l(long double) throw(); extern long double __y1l(long double) throw();
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double ynl(int, long double) throw(); extern long double __ynl(int, long double) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double erfl(long double) throw(); extern long double __erfl(long double) throw();
# 260 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double erfcl(long double) throw(); extern long double __erfcl(long double) throw();
# 261 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double lgammal(long double) throw(); extern long double __lgammal(long double) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double tgammal(long double) throw(); extern long double __tgammal(long double) throw();
# 274 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double gammal(long double) throw(); extern long double __gammal(long double) throw();
# 281 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double lgammal_r(long double, int * __signgamp) throw(); extern long double __lgammal_r(long double, int * __signgamp) throw();
# 289 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double rintl(long double __x) throw(); extern long double __rintl(long double __x) throw();
# 292 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nextafterl(long double __x, long double __y) throw() __attribute((const)); extern long double __nextafterl(long double __x, long double __y) throw() __attribute((const));
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nexttowardl(long double __x, long double __y) throw() __attribute((const)); extern long double __nexttowardl(long double __x, long double __y) throw() __attribute((const));
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double remainderl(long double __x, long double __y) throw(); extern long double __remainderl(long double __x, long double __y) throw();
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double scalbnl(long double __x, int __n) throw(); extern long double __scalbnl(long double __x, int __n) throw();
# 306 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogbl(long double __x) throw(); extern int __ilogbl(long double __x) throw();
# 311 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double scalblnl(long double __x, long __n) throw(); extern long double __scalblnl(long double __x, long __n) throw();
# 315 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nearbyintl(long double __x) throw(); extern long double __nearbyintl(long double __x) throw();
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double roundl(long double __x) throw() __attribute((const)); extern long double __roundl(long double __x) throw() __attribute((const));
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double truncl(long double __x) throw() __attribute((const)); extern long double __truncl(long double __x) throw() __attribute((const));
# 328 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double remquol(long double __x, long double __y, int * __quo) throw(); extern long double __remquol(long double __x, long double __y, int * __quo) throw();
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrintl(long double __x) throw(); extern long __lrintl(long double __x) throw();
# 337 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrintl(long double __x) throw(); extern long long __llrintl(long double __x) throw();
# 341 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lroundl(long double __x) throw(); extern long __lroundl(long double __x) throw();
# 343 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llroundl(long double __x) throw(); extern long long __llroundl(long double __x) throw();
# 347 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fdiml(long double __x, long double __y) throw(); extern long double __fdiml(long double __x, long double __y) throw();
# 350 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmaxl(long double __x, long double __y) throw() __attribute((const)); extern long double __fmaxl(long double __x, long double __y) throw() __attribute((const));
# 353 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fminl(long double __x, long double __y) throw() __attribute((const)); extern long double __fminl(long double __x, long double __y) throw() __attribute((const));
# 357 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __fpclassifyl(long double __value) throw()
# 358 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __attribute((gnu_inline)) inline int __signbitl(long double __value) throw()
# 362 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmal(long double __x, long double __y, long double __z) throw(); extern long double __fmal(long double __x, long double __y, long double __z) throw();
# 375 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __issignalingl(long double __value) throw()
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double scalbl(long double __x, long double __n) throw(); extern long double __scalbl(long double __x, long double __n) throw();
# 168 "/usr/include/math.h" 3
extern int signgam;
# 210 "/usr/include/math.h" 3
enum {
# 211 "/usr/include/math.h" 3
FP_NAN,
# 214 "/usr/include/math.h" 3
FP_INFINITE,
# 217 "/usr/include/math.h" 3
FP_ZERO,
# 220 "/usr/include/math.h" 3
FP_SUBNORMAL,
# 223 "/usr/include/math.h" 3
FP_NORMAL
# 226 "/usr/include/math.h" 3
};
# 354 "/usr/include/math.h" 3
typedef
# 348 "/usr/include/math.h" 3
enum {
# 349 "/usr/include/math.h" 3
_IEEE_ = (-1),
# 350 "/usr/include/math.h" 3
_SVID_ = 0,
# 351 "/usr/include/math.h" 3
_XOPEN_,
# 352 "/usr/include/math.h" 3
_POSIX_,
# 353 "/usr/include/math.h" 3
_ISOC_
# 354 "/usr/include/math.h" 3
} _LIB_VERSION_TYPE;
# 359 "/usr/include/math.h" 3
extern _LIB_VERSION_TYPE _LIB_VERSION;
# 370 "/usr/include/math.h" 3
struct __exception {
# 375 "/usr/include/math.h" 3
int type;
# 376 "/usr/include/math.h" 3
char *name;
# 377 "/usr/include/math.h" 3
double arg1;
# 378 "/usr/include/math.h" 3
double arg2;
# 379 "/usr/include/math.h" 3
double retval;
# 380 "/usr/include/math.h" 3
};
# 383 "/usr/include/math.h" 3
extern int matherr(__exception * __exc) throw();
# 126 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline int
# 127 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
 __attribute((__leaf__)) __signbitf(float __x) throw()
# 128 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
{
# 130 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
int __m;
# 131 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
__asm__("pmovmskb %1, %0" : "=r" (__m) : "x" (__x));
# 132 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
return (__m & 8) != 0;
# 137 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
}
# 138 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline int
# 139 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
 __attribute((__leaf__)) __signbit(double __x) throw()
# 140 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
{
# 142 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
int __m;
# 143 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
__asm__("pmovmskb %1, %0" : "=r" (__m) : "x" (__x));
# 144 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
return (__m & 128) != 0;
# 149 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
}
# 150 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline int
# 151 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
 __attribute((__leaf__)) __signbitl(long double __x) throw()
# 152 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
{
# 153 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
__extension__ union { long double __l; int __i[3]; } __u = {__l: __x};
# 154 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
return (((__u.__i)[2]) & 32768) != 0;
# 155 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
}
# 534 "/usr/include/math.h" 3
}
# 34 "/usr/include/stdlib.h" 3
extern "C" {
# 55 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
typedef
# 51 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
enum {
# 52 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_ALL,
# 53 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_PID,
# 54 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_PGID
# 55 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
} idtype_t;
# 45 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
static inline unsigned __bswap_32(unsigned __bsx)
# 46 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 47 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return __builtin_bswap32(__bsx);
# 48 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
}
# 109 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
static inline __uint64_t __bswap_64(__uint64_t __bsx)
# 110 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 111 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return __builtin_bswap64(__bsx);
# 112 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
}
# 66 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
union wait {
# 68 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
int w_status;
# 70 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
struct {
# 72 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_termsig:7;
# 73 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_coredump:1;
# 74 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_retcode:8;
# 75 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned:16;
# 83 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
} __wait_terminated;
# 85 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
struct {
# 87 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_stopval:8;
# 88 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_stopsig:8;
# 89 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned:16;
# 96 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
} __wait_stopped;
# 97 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
};
# 101 "/usr/include/stdlib.h" 3
typedef
# 98 "/usr/include/stdlib.h" 3
struct {
# 99 "/usr/include/stdlib.h" 3
int quot;
# 100 "/usr/include/stdlib.h" 3
int rem;
# 101 "/usr/include/stdlib.h" 3
} div_t;
# 109 "/usr/include/stdlib.h" 3
typedef
# 106 "/usr/include/stdlib.h" 3
struct {
# 107 "/usr/include/stdlib.h" 3
long quot;
# 108 "/usr/include/stdlib.h" 3
long rem;
# 109 "/usr/include/stdlib.h" 3
} ldiv_t;
# 121 "/usr/include/stdlib.h" 3
__extension__ typedef
# 118 "/usr/include/stdlib.h" 3
struct {
# 119 "/usr/include/stdlib.h" 3
long long quot;
# 120 "/usr/include/stdlib.h" 3
long long rem;
# 121 "/usr/include/stdlib.h" 3
} lldiv_t;
# 139 "/usr/include/stdlib.h" 3
extern size_t __ctype_get_mb_cur_max() throw() __attribute((__warn_unused_result__));
# 144 "/usr/include/stdlib.h" 3
extern __attribute((gnu_inline)) inline double atof(const char * __nptr) throw()
# 145 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 147 "/usr/include/stdlib.h" 3
extern __attribute((gnu_inline)) inline int atoi(const char * __nptr) throw()
# 148 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 150 "/usr/include/stdlib.h" 3
extern __attribute((gnu_inline)) inline long atol(const char * __nptr) throw()
# 151 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 157 "/usr/include/stdlib.h" 3
__extension__ extern __attribute((gnu_inline)) inline long long atoll(const char * __nptr) throw()
# 158 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 164 "/usr/include/stdlib.h" 3
extern double strtod(const char *__restrict__ __nptr, char **__restrict__ __endptr) throw()
# 166 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 172 "/usr/include/stdlib.h" 3
extern float strtof(const char *__restrict__ __nptr, char **__restrict__ __endptr) throw()
# 173 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 175 "/usr/include/stdlib.h" 3
extern long double strtold(const char *__restrict__ __nptr, char **__restrict__ __endptr) throw()
# 177 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 183 "/usr/include/stdlib.h" 3
extern long strtol(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 185 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 187 "/usr/include/stdlib.h" 3
extern unsigned long strtoul(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 189 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 195 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoq(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 197 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 200 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtouq(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 202 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 209 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoll(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 211 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 214 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtoull(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 216 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 239 "/usr/include/stdlib.h" 3
extern long strtol_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 241 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 243 "/usr/include/stdlib.h" 3
extern unsigned long strtoul_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 246 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 249 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoll_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 252 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 255 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtoull_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 258 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 260 "/usr/include/stdlib.h" 3
extern double strtod_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, __locale_t __loc) throw()
# 262 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 264 "/usr/include/stdlib.h" 3
extern float strtof_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, __locale_t __loc) throw()
# 266 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 268 "/usr/include/stdlib.h" 3
extern long double strtold_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, __locale_t __loc) throw()
# 271 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 277 "/usr/include/stdlib.h" 3
__attribute((__gnu_inline__)) extern inline int
# 278 "/usr/include/stdlib.h" 3
 __attribute((__leaf__)) atoi(const char *__nptr) throw()
# 279 "/usr/include/stdlib.h" 3
{
# 280 "/usr/include/stdlib.h" 3
return (int)strtol(__nptr, (char **)__null, 10);
# 281 "/usr/include/stdlib.h" 3
}
# 282 "/usr/include/stdlib.h" 3
__attribute((__gnu_inline__)) extern inline long
# 283 "/usr/include/stdlib.h" 3
 __attribute((__leaf__)) atol(const char *__nptr) throw()
# 284 "/usr/include/stdlib.h" 3
{
# 285 "/usr/include/stdlib.h" 3
return strtol(__nptr, (char **)__null, 10);
# 286 "/usr/include/stdlib.h" 3
}
# 292 "/usr/include/stdlib.h" 3
__extension__
# 291 "/usr/include/stdlib.h" 3
__attribute((__gnu_inline__)) extern inline long long
# 292 "/usr/include/stdlib.h" 3
 __attribute((__leaf__)) atoll(const char *__nptr) throw()
# 293 "/usr/include/stdlib.h" 3
{
# 294 "/usr/include/stdlib.h" 3
return strtoll(__nptr, (char **)__null, 10);
# 295 "/usr/include/stdlib.h" 3
}
# 305 "/usr/include/stdlib.h" 3
extern char *l64a(long __n) throw() __attribute((__warn_unused_result__));
# 308 "/usr/include/stdlib.h" 3
extern long a64l(const char * __s) throw()
# 309 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 27 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" {
# 33 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_char u_char;
# 34 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_short u_short;
# 35 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_int u_int;
# 36 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_long u_long;
# 37 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __quad_t quad_t;
# 38 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_quad_t u_quad_t;
# 39 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsid_t fsid_t;
# 44 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __loff_t loff_t;
# 48 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __ino_t ino_t;
# 55 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __ino64_t ino64_t;
# 60 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __dev_t dev_t;
# 65 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __gid_t gid_t;
# 70 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __mode_t mode_t;
# 75 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __nlink_t nlink_t;
# 80 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __uid_t uid_t;
# 86 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __off_t off_t;
# 93 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __off64_t off64_t;
# 104 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __id_t id_t;
# 109 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __ssize_t ssize_t;
# 115 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __daddr_t daddr_t;
# 116 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __caddr_t caddr_t;
# 122 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __key_t key_t;
# 136 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __useconds_t useconds_t;
# 140 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __suseconds_t suseconds_t;
# 150 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned long ulong;
# 151 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned short ushort;
# 152 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned uint;
# 194 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef signed char int8_t __attribute((__mode__(__QI__)));
# 195 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef short int16_t __attribute((__mode__(__HI__)));
# 196 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef int int32_t __attribute((__mode__(__SI__)));
# 197 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef long int64_t __attribute((__mode__(__DI__)));
# 200 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned char u_int8_t __attribute((__mode__(__QI__)));
# 201 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned short u_int16_t __attribute((__mode__(__HI__)));
# 202 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned u_int32_t __attribute((__mode__(__SI__)));
# 203 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned long u_int64_t __attribute((__mode__(__DI__)));
# 205 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef long register_t __attribute((__mode__(__word__)));
# 22 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
typedef int __sig_atomic_t;
# 30 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
typedef
# 28 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
struct {
# 29 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
unsigned long __val[(1024) / ((8) * sizeof(unsigned long))];
# 30 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
} __sigset_t;
# 37 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
typedef __sigset_t sigset_t;
# 54 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
typedef long __fd_mask;
# 75 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
typedef
# 65 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
struct {
# 69 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
__fd_mask fds_bits[1024 / (8 * ((int)sizeof(__fd_mask)))];
# 75 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
} fd_set;
# 82 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
typedef __fd_mask fd_mask;
# 96 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" {
# 106 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern int select(int __nfds, fd_set *__restrict__ __readfds, fd_set *__restrict__ __writefds, fd_set *__restrict__ __exceptfds, timeval *__restrict__ __timeout);
# 118 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern int pselect(int __nfds, fd_set *__restrict__ __readfds, fd_set *__restrict__ __writefds, fd_set *__restrict__ __exceptfds, const timespec *__restrict__ __timeout, const __sigset_t *__restrict__ __sigmask);
# 24 "/usr/include/x86_64-linux-gnu/bits/select2.h" 3
extern long __fdelt_chk(long __d);
# 25 "/usr/include/x86_64-linux-gnu/bits/select2.h" 3
extern long __fdelt_warn(long __d)
# 26 "/usr/include/x86_64-linux-gnu/bits/select2.h" 3
 __attribute((__warning__("bit outside of fd_set selected")));
# 131 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
}
# 24 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
extern "C" {
# 27 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__extension__ extern __attribute((gnu_inline)) inline unsigned gnu_dev_major(unsigned long long __dev) throw()
# 28 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
 __attribute((const));
# 30 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__extension__ extern __attribute((gnu_inline)) inline unsigned gnu_dev_minor(unsigned long long __dev) throw()
# 31 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
 __attribute((const));
# 33 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__extension__ extern __attribute((gnu_inline)) inline unsigned long long gnu_dev_makedev(unsigned __major, unsigned __minor) throw()
# 35 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
 __attribute((const));
# 39 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__extension__
# 38 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__attribute((__gnu_inline__)) __attribute((const)) extern inline unsigned
# 39 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
 __attribute((__leaf__)) gnu_dev_major(unsigned long long __dev) throw()
# 40 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
{
# 41 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
return ((__dev >> 8) & (4095)) | (((unsigned)(__dev >> 32)) & (~4095));
# 42 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
}
# 45 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__extension__
# 44 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__attribute((__gnu_inline__)) __attribute((const)) extern inline unsigned
# 45 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
 __attribute((__leaf__)) gnu_dev_minor(unsigned long long __dev) throw()
# 46 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
{
# 47 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
return (__dev & (255)) | (((unsigned)(__dev >> 12)) & (~255));
# 48 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
}
# 51 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__extension__
# 50 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__attribute((__gnu_inline__)) __attribute((const)) extern inline unsigned long long
# 51 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
 __attribute((__leaf__)) gnu_dev_makedev(unsigned __major, unsigned __minor) throw()
# 52 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
{
# 53 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
return (((__minor & (255)) | ((__major & (4095)) << 8)) | (((unsigned long long)(__minor & (~255))) << 12)) | (((unsigned long long)(__major & (~4095))) << 32);
# 56 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
}
# 58 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
}
# 228 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __blksize_t blksize_t;
# 235 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __blkcnt_t blkcnt_t;
# 239 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsblkcnt_t fsblkcnt_t;
# 243 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsfilcnt_t fsfilcnt_t;
# 262 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __blkcnt64_t blkcnt64_t;
# 263 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsblkcnt64_t fsblkcnt64_t;
# 264 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsfilcnt64_t fsfilcnt64_t;
# 60 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef unsigned long pthread_t;
# 63 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union pthread_attr_t {
# 65 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[56];
# 66 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 67 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
};
# 69 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef pthread_attr_t pthread_attr_t;
# 79 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 75 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
struct __pthread_internal_list {
# 77 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_internal_list *__prev;
# 78 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_internal_list *__next;
# 79 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} __pthread_list_t;
# 128 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 91 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 92 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
struct __pthread_mutex_s {
# 94 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __lock;
# 95 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __count;
# 96 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __owner;
# 98 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nusers;
# 102 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __kind;
# 104 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
short __spins;
# 105 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
short __elision;
# 106 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_list_t __list;
# 125 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} __data;
# 126 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[40];
# 127 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 128 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_mutex_t;
# 134 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 131 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 132 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 133 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 134 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_mutexattr_t;
# 154 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 140 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 142 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
struct {
# 143 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __lock;
# 144 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __futex;
# 145 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ unsigned long long __total_seq;
# 146 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ unsigned long long __wakeup_seq;
# 147 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ unsigned long long __woken_seq;
# 148 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
void *__mutex;
# 149 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nwaiters;
# 150 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __broadcast_seq;
# 151 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} __data;
# 152 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[48];
# 153 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ long long __align;
# 154 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_cond_t;
# 160 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 157 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 158 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 159 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 160 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_condattr_t;
# 164 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef unsigned pthread_key_t;
# 168 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef int pthread_once_t;
# 222 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 175 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 178 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
struct {
# 179 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __lock;
# 180 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nr_readers;
# 181 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __readers_wakeup;
# 182 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __writer_wakeup;
# 183 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nr_readers_queued;
# 184 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nr_writers_queued;
# 185 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __writer;
# 186 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __shared;
# 187 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
signed char __rwelision;
# 192 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned char __pad1[7];
# 195 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned long __pad2;
# 198 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __flags;
# 200 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} __data;
# 220 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[56];
# 221 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 222 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_rwlock_t;
# 228 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 225 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 226 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[8];
# 227 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 228 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_rwlockattr_t;
# 234 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef volatile int pthread_spinlock_t;
# 243 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 240 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 241 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[32];
# 242 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 243 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_barrier_t;
# 249 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 246 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 247 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 248 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 249 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_barrierattr_t;
# 273 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
}
# 321 "/usr/include/stdlib.h" 3
extern long random() throw();
# 324 "/usr/include/stdlib.h" 3
extern void srandom(unsigned __seed) throw();
# 330 "/usr/include/stdlib.h" 3
extern char *initstate(unsigned __seed, char * __statebuf, size_t __statelen) throw()
# 331 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 335 "/usr/include/stdlib.h" 3
extern char *setstate(char * __statebuf) throw() __attribute((__nonnull__(1)));
# 343 "/usr/include/stdlib.h" 3
struct random_data {
# 345 "/usr/include/stdlib.h" 3
int32_t *fptr;
# 346 "/usr/include/stdlib.h" 3
int32_t *rptr;
# 347 "/usr/include/stdlib.h" 3
int32_t *state;
# 348 "/usr/include/stdlib.h" 3
int rand_type;
# 349 "/usr/include/stdlib.h" 3
int rand_deg;
# 350 "/usr/include/stdlib.h" 3
int rand_sep;
# 351 "/usr/include/stdlib.h" 3
int32_t *end_ptr;
# 352 "/usr/include/stdlib.h" 3
};
# 354 "/usr/include/stdlib.h" 3
extern int random_r(random_data *__restrict__ __buf, int32_t *__restrict__ __result) throw()
# 355 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 357 "/usr/include/stdlib.h" 3
extern int srandom_r(unsigned __seed, random_data * __buf) throw()
# 358 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 360 "/usr/include/stdlib.h" 3
extern int initstate_r(unsigned __seed, char *__restrict__ __statebuf, size_t __statelen, random_data *__restrict__ __buf) throw()
# 363 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2, 4)));
# 365 "/usr/include/stdlib.h" 3
extern int setstate_r(char *__restrict__ __statebuf, random_data *__restrict__ __buf) throw()
# 367 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 374 "/usr/include/stdlib.h" 3
extern int rand() throw();
# 376 "/usr/include/stdlib.h" 3
extern void srand(unsigned __seed) throw();
# 381 "/usr/include/stdlib.h" 3
extern int rand_r(unsigned * __seed) throw();
# 389 "/usr/include/stdlib.h" 3
extern double drand48() throw();
# 390 "/usr/include/stdlib.h" 3
extern double erand48(unsigned short __xsubi[3]) throw() __attribute((__nonnull__(1)));
# 393 "/usr/include/stdlib.h" 3
extern long lrand48() throw();
# 394 "/usr/include/stdlib.h" 3
extern long nrand48(unsigned short __xsubi[3]) throw()
# 395 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 398 "/usr/include/stdlib.h" 3
extern long mrand48() throw();
# 399 "/usr/include/stdlib.h" 3
extern long jrand48(unsigned short __xsubi[3]) throw()
# 400 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 403 "/usr/include/stdlib.h" 3
extern void srand48(long __seedval) throw();
# 404 "/usr/include/stdlib.h" 3
extern unsigned short *seed48(unsigned short __seed16v[3]) throw()
# 405 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 406 "/usr/include/stdlib.h" 3
extern void lcong48(unsigned short __param[7]) throw() __attribute((__nonnull__(1)));
# 412 "/usr/include/stdlib.h" 3
struct drand48_data {
# 414 "/usr/include/stdlib.h" 3
unsigned short __x[3];
# 415 "/usr/include/stdlib.h" 3
unsigned short __old_x[3];
# 416 "/usr/include/stdlib.h" 3
unsigned short __c;
# 417 "/usr/include/stdlib.h" 3
unsigned short __init;
# 418 "/usr/include/stdlib.h" 3
__extension__ unsigned long long __a;
# 420 "/usr/include/stdlib.h" 3
};
# 423 "/usr/include/stdlib.h" 3
extern int drand48_r(drand48_data *__restrict__ __buffer, double *__restrict__ __result) throw()
# 424 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 425 "/usr/include/stdlib.h" 3
extern int erand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, double *__restrict__ __result) throw()
# 427 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 430 "/usr/include/stdlib.h" 3
extern int lrand48_r(drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 432 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 433 "/usr/include/stdlib.h" 3
extern int nrand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 436 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 439 "/usr/include/stdlib.h" 3
extern int mrand48_r(drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 441 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 442 "/usr/include/stdlib.h" 3
extern int jrand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 445 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 448 "/usr/include/stdlib.h" 3
extern int srand48_r(long __seedval, drand48_data * __buffer) throw()
# 449 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 451 "/usr/include/stdlib.h" 3
extern int seed48_r(unsigned short __seed16v[3], drand48_data * __buffer) throw()
# 452 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 454 "/usr/include/stdlib.h" 3
extern int lcong48_r(unsigned short __param[7], drand48_data * __buffer) throw()
# 456 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 466 "/usr/include/stdlib.h" 3
extern void *malloc(size_t __size) throw() __attribute((__malloc__)) __attribute((__warn_unused_result__));
# 468 "/usr/include/stdlib.h" 3
extern void *calloc(size_t __nmemb, size_t __size) throw()
# 469 "/usr/include/stdlib.h" 3
 __attribute((__malloc__)) __attribute((__warn_unused_result__));
# 480 "/usr/include/stdlib.h" 3
extern void *realloc(void * __ptr, size_t __size) throw()
# 481 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 483 "/usr/include/stdlib.h" 3
extern void free(void * __ptr) throw();
# 488 "/usr/include/stdlib.h" 3
extern void cfree(void * __ptr) throw();
# 26 "/usr/include/alloca.h" 3
extern "C" {
# 32 "/usr/include/alloca.h" 3
extern void *alloca(size_t __size) throw();
# 38 "/usr/include/alloca.h" 3
}
# 498 "/usr/include/stdlib.h" 3
extern void *valloc(size_t __size) throw() __attribute((__malloc__)) __attribute((__warn_unused_result__));
# 503 "/usr/include/stdlib.h" 3
extern int posix_memalign(void ** __memptr, size_t __alignment, size_t __size) throw()
# 504 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 509 "/usr/include/stdlib.h" 3
extern void *aligned_alloc(size_t __alignment, size_t __size) throw()
# 510 "/usr/include/stdlib.h" 3
 __attribute((__malloc__)) __attribute((__alloc_size__(2))) __attribute((__warn_unused_result__));
# 515 "/usr/include/stdlib.h" 3
extern void abort() throw() __attribute((__noreturn__));
# 519 "/usr/include/stdlib.h" 3
extern int atexit(void (* __func)(void)) throw() __attribute((__nonnull__(1)));
# 524 "/usr/include/stdlib.h" 3
extern "C++" int at_quick_exit(void (* __func)(void)) throw() __asm__("at_quick_exit")
# 525 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 535 "/usr/include/stdlib.h" 3
extern int on_exit(void (* __func)(int __status, void * __arg), void * __arg) throw()
# 536 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 543 "/usr/include/stdlib.h" 3
extern void exit(int __status) throw() __attribute((__noreturn__));
# 549 "/usr/include/stdlib.h" 3
extern void quick_exit(int __status) throw() __attribute((__noreturn__));
# 557 "/usr/include/stdlib.h" 3
extern void _Exit(int __status) throw() __attribute((__noreturn__));
# 564 "/usr/include/stdlib.h" 3
extern char *getenv(const char * __name) throw() __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 570 "/usr/include/stdlib.h" 3
extern char *secure_getenv(const char * __name) throw()
# 571 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 578 "/usr/include/stdlib.h" 3
extern int putenv(char * __string) throw() __attribute((__nonnull__(1)));
# 584 "/usr/include/stdlib.h" 3
extern int setenv(const char * __name, const char * __value, int __replace) throw()
# 585 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 588 "/usr/include/stdlib.h" 3
extern int unsetenv(const char * __name) throw() __attribute((__nonnull__(1)));
# 595 "/usr/include/stdlib.h" 3
extern int clearenv() throw();
# 606 "/usr/include/stdlib.h" 3
extern char *mktemp(char * __template) throw() __attribute((__nonnull__(1)));
# 619 "/usr/include/stdlib.h" 3
extern int mkstemp(char * __template) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 629 "/usr/include/stdlib.h" 3
extern int mkstemp64(char * __template) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 641 "/usr/include/stdlib.h" 3
extern int mkstemps(char * __template, int __suffixlen) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 651 "/usr/include/stdlib.h" 3
extern int mkstemps64(char * __template, int __suffixlen)
# 652 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 662 "/usr/include/stdlib.h" 3
extern char *mkdtemp(char * __template) throw() __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 673 "/usr/include/stdlib.h" 3
extern int mkostemp(char * __template, int __flags) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 683 "/usr/include/stdlib.h" 3
extern int mkostemp64(char * __template, int __flags) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 693 "/usr/include/stdlib.h" 3
extern int mkostemps(char * __template, int __suffixlen, int __flags)
# 694 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 705 "/usr/include/stdlib.h" 3
extern int mkostemps64(char * __template, int __suffixlen, int __flags)
# 706 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 716 "/usr/include/stdlib.h" 3
extern int system(const char * __command) __attribute((__warn_unused_result__));
# 723 "/usr/include/stdlib.h" 3
extern char *canonicalize_file_name(const char * __name) throw()
# 724 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 733 "/usr/include/stdlib.h" 3
extern __attribute((gnu_inline)) inline char *realpath(const char *__restrict__ __name, char *__restrict__ __resolved) throw()
# 734 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 741 "/usr/include/stdlib.h" 3
typedef int (*__compar_fn_t)(const void *, const void *);
# 744 "/usr/include/stdlib.h" 3
typedef __compar_fn_t comparison_fn_t;
# 748 "/usr/include/stdlib.h" 3
typedef int (*__compar_d_fn_t)(const void *, const void *, void *);
# 754 "/usr/include/stdlib.h" 3
extern __attribute((gnu_inline)) inline void *bsearch(const void * __key, const void * __base, size_t __nmemb, size_t __size, __compar_fn_t __compar)
# 756 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 5))) __attribute((__warn_unused_result__));
# 19 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__attribute((__gnu_inline__)) extern inline void *
# 20 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
bsearch(const void *__key, const void *__base, size_t __nmemb, size_t __size, __compar_fn_t
# 21 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__compar)
# 22 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
{
# 23 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
size_t __l, __u, __idx;
# 24 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
const void *__p;
# 25 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
int __comparison;
# 27 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__l = (0);
# 28 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__u = __nmemb;
# 29 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
while (__l < __u)
# 30 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
{
# 31 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__idx = ((__l + __u) / (2));
# 32 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__p = ((void *)(((const char *)__base) + (__idx * __size)));
# 33 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__comparison = (*__compar)(__key, __p);
# 34 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
if (__comparison < 0) {
# 35 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__u = __idx; } else {
# 36 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
if (__comparison > 0) {
# 37 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__l = (__idx + (1)); } else {
# 39 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
return (void *)__p; } }
# 40 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
}
# 42 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
return __null;
# 43 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
}
# 764 "/usr/include/stdlib.h" 3
extern void qsort(void * __base, size_t __nmemb, size_t __size, __compar_fn_t __compar)
# 765 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 767 "/usr/include/stdlib.h" 3
extern void qsort_r(void * __base, size_t __nmemb, size_t __size, __compar_d_fn_t __compar, void * __arg)
# 769 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 774 "/usr/include/stdlib.h" 3
extern int abs(int __x) throw() __attribute((const)) __attribute((__warn_unused_result__));
# 775 "/usr/include/stdlib.h" 3
extern long labs(long __x) throw() __attribute((const)) __attribute((__warn_unused_result__));
# 779 "/usr/include/stdlib.h" 3
__extension__ extern long long llabs(long long __x) throw()
# 780 "/usr/include/stdlib.h" 3
 __attribute((const)) __attribute((__warn_unused_result__));
# 788 "/usr/include/stdlib.h" 3
extern div_t div(int __numer, int __denom) throw()
# 789 "/usr/include/stdlib.h" 3
 __attribute((const)) __attribute((__warn_unused_result__));
# 790 "/usr/include/stdlib.h" 3
extern ldiv_t ldiv(long __numer, long __denom) throw()
# 791 "/usr/include/stdlib.h" 3
 __attribute((const)) __attribute((__warn_unused_result__));
# 796 "/usr/include/stdlib.h" 3
__extension__ extern lldiv_t lldiv(long long __numer, long long __denom) throw()
# 798 "/usr/include/stdlib.h" 3
 __attribute((const)) __attribute((__warn_unused_result__));
# 811 "/usr/include/stdlib.h" 3
extern char *ecvt(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 812 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4))) __attribute((__warn_unused_result__));
# 817 "/usr/include/stdlib.h" 3
extern char *fcvt(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 818 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4))) __attribute((__warn_unused_result__));
# 823 "/usr/include/stdlib.h" 3
extern char *gcvt(double __value, int __ndigit, char * __buf) throw()
# 824 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3))) __attribute((__warn_unused_result__));
# 829 "/usr/include/stdlib.h" 3
extern char *qecvt(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 831 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4))) __attribute((__warn_unused_result__));
# 832 "/usr/include/stdlib.h" 3
extern char *qfcvt(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 834 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4))) __attribute((__warn_unused_result__));
# 835 "/usr/include/stdlib.h" 3
extern char *qgcvt(long double __value, int __ndigit, char * __buf) throw()
# 836 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3))) __attribute((__warn_unused_result__));
# 841 "/usr/include/stdlib.h" 3
extern int ecvt_r(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) throw()
# 843 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 844 "/usr/include/stdlib.h" 3
extern int fcvt_r(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) throw()
# 846 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 848 "/usr/include/stdlib.h" 3
extern int qecvt_r(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) throw()
# 851 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 852 "/usr/include/stdlib.h" 3
extern int qfcvt_r(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) throw()
# 855 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 862 "/usr/include/stdlib.h" 3
extern int mblen(const char * __s, size_t __n) throw();
# 865 "/usr/include/stdlib.h" 3
extern int mbtowc(wchar_t *__restrict__ __pwc, const char *__restrict__ __s, size_t __n) throw();
# 869 "/usr/include/stdlib.h" 3
extern __attribute((gnu_inline)) inline int wctomb(char * __s, wchar_t __wchar) throw();
# 873 "/usr/include/stdlib.h" 3
extern __attribute((gnu_inline)) inline size_t mbstowcs(wchar_t *__restrict__ __pwcs, const char *__restrict__ __s, size_t __n) throw();
# 876 "/usr/include/stdlib.h" 3
extern __attribute((gnu_inline)) inline size_t wcstombs(char *__restrict__ __s, const wchar_t *__restrict__ __pwcs, size_t __n) throw();
# 887 "/usr/include/stdlib.h" 3
extern int rpmatch(const char * __response) throw() __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 898 "/usr/include/stdlib.h" 3
extern int getsubopt(char **__restrict__ __optionp, char *const *__restrict__ __tokens, char **__restrict__ __valuep) throw()
# 901 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 3))) __attribute((__warn_unused_result__));
# 907 "/usr/include/stdlib.h" 3
extern void setkey(const char * __key) throw() __attribute((__nonnull__(1)));
# 915 "/usr/include/stdlib.h" 3
extern int posix_openpt(int __oflag) __attribute((__warn_unused_result__));
# 923 "/usr/include/stdlib.h" 3
extern int grantpt(int __fd) throw();
# 927 "/usr/include/stdlib.h" 3
extern int unlockpt(int __fd) throw();
# 932 "/usr/include/stdlib.h" 3
extern char *ptsname(int __fd) throw() __attribute((__warn_unused_result__));
# 939 "/usr/include/stdlib.h" 3
extern __attribute((gnu_inline)) inline int ptsname_r(int __fd, char * __buf, size_t __buflen) throw()
# 940 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 943 "/usr/include/stdlib.h" 3
extern int getpt();
# 950 "/usr/include/stdlib.h" 3
extern int getloadavg(double __loadavg[], int __nelem) throw()
# 951 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 25 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
__attribute((__gnu_inline__)) extern inline double
# 26 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
 __attribute((__leaf__)) atof(const char *__nptr) throw()
# 27 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
{
# 28 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
return strtod(__nptr, (char **)__null);
# 29 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
}
# 23 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern char *__realpath_chk(const char *__restrict__ __name, char *__restrict__ __resolved, size_t __resolvedlen) throw()
# 25 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 26 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern char *__realpath_alias(const char *__restrict__ __name, char *__restrict__ __resolved) throw() __asm__("realpath")
# 28 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 29 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern char *__realpath_chk_warn(const char *__restrict__ __name, char *__restrict__ __resolved, size_t __resolvedlen) throw() __asm__("__realpath_chk")
# 32 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warn_unused_result__))
# 33 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warning__("second argument of realpath must be either NULL or at least PATH_MAX bytes long buffer")));
# 36 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__))
# 37 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__leaf__)) extern inline char *realpath(const char *__restrict__ __name, char *__restrict__ __resolved) throw()
# 38 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 39 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__resolved, 2 > 1) != ((size_t)(-1)))
# 40 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 42 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__resolved, 2 > 1) < (4096)) {
# 43 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __realpath_chk_warn(__name, __resolved, __builtin_object_size(__resolved, 2 > 1)); }
# 45 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __realpath_chk(__name, __resolved, __builtin_object_size(__resolved, 2 > 1));
# 46 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 48 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __realpath_alias(__name, __resolved);
# 49 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 52 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern int __ptsname_r_chk(int __fd, char * __buf, size_t __buflen, size_t __nreal) throw()
# 53 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 54 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern int __ptsname_r_alias(int __fd, char * __buf, size_t __buflen) throw() __asm__("ptsname_r")
# 56 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 57 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern int __ptsname_r_chk_warn(int __fd, char * __buf, size_t __buflen, size_t __nreal) throw() __asm__("__ptsname_r_chk")
# 60 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__nonnull__(2))) __attribute((__warning__("ptsname_r called with buflen bigger than size of buf")));
# 63 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 64 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__leaf__)) ptsname_r(int __fd, char *__buf, size_t __buflen) throw()
# 65 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 66 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((size_t)(-1)))
# 67 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 68 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (!(0)) {
# 69 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __ptsname_r_chk(__fd, __buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 70 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__buflen > __builtin_object_size(__buf, 2 > 1)) {
# 71 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __ptsname_r_chk_warn(__fd, __buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 72 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 73 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __ptsname_r_alias(__fd, __buf, __buflen);
# 74 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 77 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern int __wctomb_chk(char * __s, wchar_t __wchar, size_t __buflen) throw()
# 78 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 79 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern int __wctomb_alias(char * __s, wchar_t __wchar) throw() __asm__("wctomb")
# 80 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 82 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline int
# 83 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__leaf__)) wctomb(char *__s, wchar_t __wchar) throw()
# 84 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 92 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if ((__builtin_object_size(__s, 2 > 1) != ((size_t)(-1))) && ((16) > __builtin_object_size(__s, 2 > 1))) {
# 93 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wctomb_chk(__s, __wchar, __builtin_object_size(__s, 2 > 1)); }
# 94 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wctomb_alias(__s, __wchar);
# 95 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 98 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern size_t __mbstowcs_chk(wchar_t *__restrict__ __dst, const char *__restrict__ __src, size_t __len, size_t __dstlen) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern size_t __mbstowcs_alias(wchar_t *__restrict__ __dst, const char *__restrict__ __src, size_t __len) throw() __asm__("mbstowcs");
# 105 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern size_t __mbstowcs_chk_warn(wchar_t *__restrict__ __dst, const char *__restrict__ __src, size_t __len, size_t __dstlen) throw() __asm__("__mbstowcs_chk")
# 109 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warning__("mbstowcs called with dst buffer smaller than len * sizeof (wchar_t)")));
# 112 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 113 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__leaf__)) mbstowcs(wchar_t *__restrict__ __dst, const char *__restrict__ __src, size_t __len) throw()
# 115 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 116 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((size_t)(-1)))
# 117 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 118 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (!(0)) {
# 119 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __mbstowcs_chk(__dst, __src, __len, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 122 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__len > (__builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t))) {
# 123 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __mbstowcs_chk_warn(__dst, __src, __len, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 125 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 126 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __mbstowcs_alias(__dst, __src, __len);
# 127 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 130 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern size_t __wcstombs_chk(char *__restrict__ __dst, const wchar_t *__restrict__ __src, size_t __len, size_t __dstlen) throw();
# 133 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern size_t __wcstombs_alias(char *__restrict__ __dst, const wchar_t *__restrict__ __src, size_t __len) throw() __asm__("wcstombs");
# 137 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern size_t __wcstombs_chk_warn(char *__restrict__ __dst, const wchar_t *__restrict__ __src, size_t __len, size_t __dstlen) throw() __asm__("__wcstombs_chk")
# 141 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warning__("wcstombs called with dst buffer smaller than len")));
# 143 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 144 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__leaf__)) wcstombs(char *__restrict__ __dst, const wchar_t *__restrict__ __src, size_t __len) throw()
# 146 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 147 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((size_t)(-1)))
# 148 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 149 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (!(0)) {
# 150 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wcstombs_chk(__dst, __src, __len, __builtin_object_size(__dst, 2 > 1)); }
# 151 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__len > __builtin_object_size(__dst, 2 > 1)) {
# 152 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wcstombs_chk_warn(__dst, __src, __len, __builtin_object_size(__dst, 2 > 1)); }
# 153 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 154 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wcstombs_alias(__dst, __src, __len);
# 155 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 967 "/usr/include/stdlib.h" 3
}
# 194 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
namespace std {
# 196 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
typedef unsigned long size_t;
# 197 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
typedef long ptrdiff_t;
# 202 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
}
# 216 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
namespace std {
# 218 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
inline namespace __cxx11 __attribute((__abi_tag__("cxx11" ))) { }
# 219 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
}
# 220 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
namespace __gnu_cxx {
# 222 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
inline namespace __cxx11 __attribute((__abi_tag__("cxx11" ))) { }
# 223 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
}
# 68 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 72 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container> class __normal_iterator;
# 76 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
}
# 78 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 82 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __true_type { };
# 83 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __false_type { };
# 85 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< bool >
# 86 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __truth_type {
# 87 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type; };
# 90 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __truth_type< true> {
# 91 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type; };
# 95 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Sp, class _Tp>
# 96 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __traitor {
# 98 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = ((bool)_Sp::__value) || ((bool)_Tp::__value)};
# 99 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef typename __truth_type< __value> ::__type __type;
# 100 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 103 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class , class >
# 104 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __are_same {
# 106 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 107 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 108 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 110 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 111 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __are_same< _Tp, _Tp> {
# 113 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 114 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 115 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 118 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 119 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_void {
# 121 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 122 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 123 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 126 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_void< void> {
# 128 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 129 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 130 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 135 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 136 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_integer {
# 138 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 139 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 140 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 147 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< bool> {
# 149 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 150 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 151 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 154 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char> {
# 156 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 157 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 158 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 161 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< signed char> {
# 163 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 164 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 165 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 168 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned char> {
# 170 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 171 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 172 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 176 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< wchar_t> {
# 178 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 179 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 180 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 200 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< short> {
# 202 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 203 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 204 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 207 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned short> {
# 209 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 210 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 211 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 214 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< int> {
# 216 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 217 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 218 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 221 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned> {
# 223 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 224 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 225 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 228 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long> {
# 230 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 231 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 232 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 235 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long> {
# 237 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 238 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 239 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 242 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long long> {
# 244 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 245 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 246 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 249 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long long> {
# 251 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 252 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 253 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 270 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< __int128_t> { enum { __value = 1}; typedef __true_type __type; }; template<> struct __is_integer< __uint128_t> { enum { __value = 1}; typedef __true_type __type; };
# 287 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 288 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_floating {
# 290 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 291 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 292 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 296 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< float> {
# 298 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 299 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 300 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 303 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< double> {
# 305 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 306 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 307 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 310 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< long double> {
# 312 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 313 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 314 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 319 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 320 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_pointer {
# 322 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 323 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 324 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 326 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 327 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_pointer< _Tp *> {
# 329 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 330 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 331 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 336 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 337 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_normal_iterator {
# 339 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 340 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 341 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 343 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container>
# 344 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_normal_iterator< __gnu_cxx::__normal_iterator< _Iterator, _Container> > {
# 347 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 348 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 349 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 354 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 355 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_arithmetic : public __traitor< __is_integer< _Tp> , __is_floating< _Tp> > {
# 357 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 362 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 363 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_scalar : public __traitor< __is_arithmetic< _Tp> , __is_pointer< _Tp> > {
# 365 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 370 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 371 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_char {
# 373 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 374 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 375 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 378 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_char< char> {
# 380 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 381 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 382 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 386 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_char< wchar_t> {
# 388 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 389 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 390 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 393 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 394 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_byte {
# 396 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 397 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 398 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 401 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< char> {
# 403 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 404 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 405 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 408 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< signed char> {
# 410 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 411 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 412 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 415 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< unsigned char> {
# 417 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 418 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 419 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 424 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 425 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_move_iterator {
# 427 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 428 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 429 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 444 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
}
# 37 "/usr/include/c++/5/ext/type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 42 "/usr/include/c++/5/ext/type_traits.h" 3
template< bool , class >
# 43 "/usr/include/c++/5/ext/type_traits.h" 3
struct __enable_if {
# 44 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 46 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 47 "/usr/include/c++/5/ext/type_traits.h" 3
struct __enable_if< true, _Tp> {
# 48 "/usr/include/c++/5/ext/type_traits.h" 3
typedef _Tp __type; };
# 52 "/usr/include/c++/5/ext/type_traits.h" 3
template< bool _Cond, class _Iftrue, class _Iffalse>
# 53 "/usr/include/c++/5/ext/type_traits.h" 3
struct __conditional_type {
# 54 "/usr/include/c++/5/ext/type_traits.h" 3
typedef _Iftrue __type; };
# 56 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Iftrue, class _Iffalse>
# 57 "/usr/include/c++/5/ext/type_traits.h" 3
struct __conditional_type< false, _Iftrue, _Iffalse> {
# 58 "/usr/include/c++/5/ext/type_traits.h" 3
typedef _Iffalse __type; };
# 62 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 63 "/usr/include/c++/5/ext/type_traits.h" 3
struct __add_unsigned {
# 66 "/usr/include/c++/5/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 69 "/usr/include/c++/5/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 70 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 73 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< char> {
# 74 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned char __type; };
# 77 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< signed char> {
# 78 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned char __type; };
# 81 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< short> {
# 82 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned short __type; };
# 85 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< int> {
# 86 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned __type; };
# 89 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< long> {
# 90 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned long __type; };
# 93 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< long long> {
# 94 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned long long __type; };
# 98 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< bool> ;
# 101 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< wchar_t> ;
# 105 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 106 "/usr/include/c++/5/ext/type_traits.h" 3
struct __remove_unsigned {
# 109 "/usr/include/c++/5/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 112 "/usr/include/c++/5/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 113 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 116 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< char> {
# 117 "/usr/include/c++/5/ext/type_traits.h" 3
typedef signed char __type; };
# 120 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned char> {
# 121 "/usr/include/c++/5/ext/type_traits.h" 3
typedef signed char __type; };
# 124 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned short> {
# 125 "/usr/include/c++/5/ext/type_traits.h" 3
typedef short __type; };
# 128 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned> {
# 129 "/usr/include/c++/5/ext/type_traits.h" 3
typedef int __type; };
# 132 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long> {
# 133 "/usr/include/c++/5/ext/type_traits.h" 3
typedef long __type; };
# 136 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long long> {
# 137 "/usr/include/c++/5/ext/type_traits.h" 3
typedef long long __type; };
# 141 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< bool> ;
# 144 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< wchar_t> ;
# 148 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Type> inline bool
# 150 "/usr/include/c++/5/ext/type_traits.h" 3
__is_null_pointer(_Type *__ptr)
# 151 "/usr/include/c++/5/ext/type_traits.h" 3
{ return __ptr == 0; }
# 153 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Type> inline bool
# 155 "/usr/include/c++/5/ext/type_traits.h" 3
__is_null_pointer(_Type)
# 156 "/usr/include/c++/5/ext/type_traits.h" 3
{ return false; }
# 165 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, bool = std::__is_integer< _Tp> ::__value>
# 166 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote {
# 167 "/usr/include/c++/5/ext/type_traits.h" 3
typedef double __type; };
# 172 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 173 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote< _Tp, false> {
# 174 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 177 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __promote< long double> {
# 178 "/usr/include/c++/5/ext/type_traits.h" 3
typedef long double __type; };
# 181 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __promote< double> {
# 182 "/usr/include/c++/5/ext/type_traits.h" 3
typedef double __type; };
# 185 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __promote< float> {
# 186 "/usr/include/c++/5/ext/type_traits.h" 3
typedef float __type; };
# 188 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, class _Up, class
# 189 "/usr/include/c++/5/ext/type_traits.h" 3
_Tp2 = typename __promote< _Tp> ::__type, class
# 190 "/usr/include/c++/5/ext/type_traits.h" 3
_Up2 = typename __promote< _Up> ::__type>
# 191 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote_2 {
# 193 "/usr/include/c++/5/ext/type_traits.h" 3
typedef __typeof__(_Tp2() + _Up2()) __type;
# 194 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 196 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class
# 197 "/usr/include/c++/5/ext/type_traits.h" 3
_Tp2 = typename __promote< _Tp> ::__type, class
# 198 "/usr/include/c++/5/ext/type_traits.h" 3
_Up2 = typename __promote< _Up> ::__type, class
# 199 "/usr/include/c++/5/ext/type_traits.h" 3
_Vp2 = typename __promote< _Vp> ::__type>
# 200 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote_3 {
# 202 "/usr/include/c++/5/ext/type_traits.h" 3
typedef __typeof__((_Tp2() + _Up2()) + _Vp2()) __type;
# 203 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 205 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class _Wp, class
# 206 "/usr/include/c++/5/ext/type_traits.h" 3
_Tp2 = typename __promote< _Tp> ::__type, class
# 207 "/usr/include/c++/5/ext/type_traits.h" 3
_Up2 = typename __promote< _Up> ::__type, class
# 208 "/usr/include/c++/5/ext/type_traits.h" 3
_Vp2 = typename __promote< _Vp> ::__type, class
# 209 "/usr/include/c++/5/ext/type_traits.h" 3
_Wp2 = typename __promote< _Wp> ::__type>
# 210 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote_4 {
# 212 "/usr/include/c++/5/ext/type_traits.h" 3
typedef __typeof__(((_Tp2() + _Up2()) + _Vp2()) + _Wp2()) __type;
# 213 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 216 "/usr/include/c++/5/ext/type_traits.h" 3
}
# 75 "/usr/include/c++/5/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 81 "/usr/include/c++/5/cmath" 3
inline double abs(double __x)
# 82 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabs(__x); }
# 87 "/usr/include/c++/5/cmath" 3
inline float abs(float __x)
# 88 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsf(__x); }
# 91 "/usr/include/c++/5/cmath" 3
inline long double abs(long double __x)
# 92 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsl(__x); }
# 95 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 99 "/usr/include/c++/5/cmath" 3
abs(_Tp __x)
# 100 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabs(__x); }
# 102 "/usr/include/c++/5/cmath" 3
using ::acos;
# 106 "/usr/include/c++/5/cmath" 3
inline float acos(float __x)
# 107 "/usr/include/c++/5/cmath" 3
{ return __builtin_acosf(__x); }
# 110 "/usr/include/c++/5/cmath" 3
inline long double acos(long double __x)
# 111 "/usr/include/c++/5/cmath" 3
{ return __builtin_acosl(__x); }
# 114 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 118 "/usr/include/c++/5/cmath" 3
acos(_Tp __x)
# 119 "/usr/include/c++/5/cmath" 3
{ return __builtin_acos(__x); }
# 121 "/usr/include/c++/5/cmath" 3
using ::asin;
# 125 "/usr/include/c++/5/cmath" 3
inline float asin(float __x)
# 126 "/usr/include/c++/5/cmath" 3
{ return __builtin_asinf(__x); }
# 129 "/usr/include/c++/5/cmath" 3
inline long double asin(long double __x)
# 130 "/usr/include/c++/5/cmath" 3
{ return __builtin_asinl(__x); }
# 133 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 137 "/usr/include/c++/5/cmath" 3
asin(_Tp __x)
# 138 "/usr/include/c++/5/cmath" 3
{ return __builtin_asin(__x); }
# 140 "/usr/include/c++/5/cmath" 3
using ::atan;
# 144 "/usr/include/c++/5/cmath" 3
inline float atan(float __x)
# 145 "/usr/include/c++/5/cmath" 3
{ return __builtin_atanf(__x); }
# 148 "/usr/include/c++/5/cmath" 3
inline long double atan(long double __x)
# 149 "/usr/include/c++/5/cmath" 3
{ return __builtin_atanl(__x); }
# 152 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 156 "/usr/include/c++/5/cmath" 3
atan(_Tp __x)
# 157 "/usr/include/c++/5/cmath" 3
{ return __builtin_atan(__x); }
# 159 "/usr/include/c++/5/cmath" 3
using ::atan2;
# 163 "/usr/include/c++/5/cmath" 3
inline float atan2(float __y, float __x)
# 164 "/usr/include/c++/5/cmath" 3
{ return __builtin_atan2f(__y, __x); }
# 167 "/usr/include/c++/5/cmath" 3
inline long double atan2(long double __y, long double __x)
# 168 "/usr/include/c++/5/cmath" 3
{ return __builtin_atan2l(__y, __x); }
# 171 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 174 "/usr/include/c++/5/cmath" 3
atan2(_Tp __y, _Up __x)
# 175 "/usr/include/c++/5/cmath" 3
{
# 176 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 177 "/usr/include/c++/5/cmath" 3
return atan2((__type)__y, (__type)__x);
# 178 "/usr/include/c++/5/cmath" 3
}
# 180 "/usr/include/c++/5/cmath" 3
using ::ceil;
# 184 "/usr/include/c++/5/cmath" 3
inline float ceil(float __x)
# 185 "/usr/include/c++/5/cmath" 3
{ return __builtin_ceilf(__x); }
# 188 "/usr/include/c++/5/cmath" 3
inline long double ceil(long double __x)
# 189 "/usr/include/c++/5/cmath" 3
{ return __builtin_ceill(__x); }
# 192 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 196 "/usr/include/c++/5/cmath" 3
ceil(_Tp __x)
# 197 "/usr/include/c++/5/cmath" 3
{ return __builtin_ceil(__x); }
# 199 "/usr/include/c++/5/cmath" 3
using ::cos;
# 203 "/usr/include/c++/5/cmath" 3
inline float cos(float __x)
# 204 "/usr/include/c++/5/cmath" 3
{ return __builtin_cosf(__x); }
# 207 "/usr/include/c++/5/cmath" 3
inline long double cos(long double __x)
# 208 "/usr/include/c++/5/cmath" 3
{ return __builtin_cosl(__x); }
# 211 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 215 "/usr/include/c++/5/cmath" 3
cos(_Tp __x)
# 216 "/usr/include/c++/5/cmath" 3
{ return __builtin_cos(__x); }
# 218 "/usr/include/c++/5/cmath" 3
using ::cosh;
# 222 "/usr/include/c++/5/cmath" 3
inline float cosh(float __x)
# 223 "/usr/include/c++/5/cmath" 3
{ return __builtin_coshf(__x); }
# 226 "/usr/include/c++/5/cmath" 3
inline long double cosh(long double __x)
# 227 "/usr/include/c++/5/cmath" 3
{ return __builtin_coshl(__x); }
# 230 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 234 "/usr/include/c++/5/cmath" 3
cosh(_Tp __x)
# 235 "/usr/include/c++/5/cmath" 3
{ return __builtin_cosh(__x); }
# 237 "/usr/include/c++/5/cmath" 3
using ::exp;
# 241 "/usr/include/c++/5/cmath" 3
inline float exp(float __x)
# 242 "/usr/include/c++/5/cmath" 3
{ return __builtin_expf(__x); }
# 245 "/usr/include/c++/5/cmath" 3
inline long double exp(long double __x)
# 246 "/usr/include/c++/5/cmath" 3
{ return __builtin_expl(__x); }
# 249 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 253 "/usr/include/c++/5/cmath" 3
exp(_Tp __x)
# 254 "/usr/include/c++/5/cmath" 3
{ return __builtin_exp(__x); }
# 256 "/usr/include/c++/5/cmath" 3
using ::fabs;
# 260 "/usr/include/c++/5/cmath" 3
inline float fabs(float __x)
# 261 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsf(__x); }
# 264 "/usr/include/c++/5/cmath" 3
inline long double fabs(long double __x)
# 265 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsl(__x); }
# 268 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 272 "/usr/include/c++/5/cmath" 3
fabs(_Tp __x)
# 273 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabs(__x); }
# 275 "/usr/include/c++/5/cmath" 3
using ::floor;
# 279 "/usr/include/c++/5/cmath" 3
inline float floor(float __x)
# 280 "/usr/include/c++/5/cmath" 3
{ return __builtin_floorf(__x); }
# 283 "/usr/include/c++/5/cmath" 3
inline long double floor(long double __x)
# 284 "/usr/include/c++/5/cmath" 3
{ return __builtin_floorl(__x); }
# 287 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 291 "/usr/include/c++/5/cmath" 3
floor(_Tp __x)
# 292 "/usr/include/c++/5/cmath" 3
{ return __builtin_floor(__x); }
# 294 "/usr/include/c++/5/cmath" 3
using ::fmod;
# 298 "/usr/include/c++/5/cmath" 3
inline float fmod(float __x, float __y)
# 299 "/usr/include/c++/5/cmath" 3
{ return __builtin_fmodf(__x, __y); }
# 302 "/usr/include/c++/5/cmath" 3
inline long double fmod(long double __x, long double __y)
# 303 "/usr/include/c++/5/cmath" 3
{ return __builtin_fmodl(__x, __y); }
# 306 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 309 "/usr/include/c++/5/cmath" 3
fmod(_Tp __x, _Up __y)
# 310 "/usr/include/c++/5/cmath" 3
{
# 311 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 312 "/usr/include/c++/5/cmath" 3
return fmod((__type)__x, (__type)__y);
# 313 "/usr/include/c++/5/cmath" 3
}
# 315 "/usr/include/c++/5/cmath" 3
using ::frexp;
# 319 "/usr/include/c++/5/cmath" 3
inline float frexp(float __x, int *__exp)
# 320 "/usr/include/c++/5/cmath" 3
{ return __builtin_frexpf(__x, __exp); }
# 323 "/usr/include/c++/5/cmath" 3
inline long double frexp(long double __x, int *__exp)
# 324 "/usr/include/c++/5/cmath" 3
{ return __builtin_frexpl(__x, __exp); }
# 327 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 331 "/usr/include/c++/5/cmath" 3
frexp(_Tp __x, int *__exp)
# 332 "/usr/include/c++/5/cmath" 3
{ return __builtin_frexp(__x, __exp); }
# 334 "/usr/include/c++/5/cmath" 3
using ::ldexp;
# 338 "/usr/include/c++/5/cmath" 3
inline float ldexp(float __x, int __exp)
# 339 "/usr/include/c++/5/cmath" 3
{ return __builtin_ldexpf(__x, __exp); }
# 342 "/usr/include/c++/5/cmath" 3
inline long double ldexp(long double __x, int __exp)
# 343 "/usr/include/c++/5/cmath" 3
{ return __builtin_ldexpl(__x, __exp); }
# 346 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 350 "/usr/include/c++/5/cmath" 3
ldexp(_Tp __x, int __exp)
# 351 "/usr/include/c++/5/cmath" 3
{ return __builtin_ldexp(__x, __exp); }
# 353 "/usr/include/c++/5/cmath" 3
using ::log;
# 357 "/usr/include/c++/5/cmath" 3
inline float log(float __x)
# 358 "/usr/include/c++/5/cmath" 3
{ return __builtin_logf(__x); }
# 361 "/usr/include/c++/5/cmath" 3
inline long double log(long double __x)
# 362 "/usr/include/c++/5/cmath" 3
{ return __builtin_logl(__x); }
# 365 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 369 "/usr/include/c++/5/cmath" 3
log(_Tp __x)
# 370 "/usr/include/c++/5/cmath" 3
{ return __builtin_log(__x); }
# 372 "/usr/include/c++/5/cmath" 3
using ::log10;
# 376 "/usr/include/c++/5/cmath" 3
inline float log10(float __x)
# 377 "/usr/include/c++/5/cmath" 3
{ return __builtin_log10f(__x); }
# 380 "/usr/include/c++/5/cmath" 3
inline long double log10(long double __x)
# 381 "/usr/include/c++/5/cmath" 3
{ return __builtin_log10l(__x); }
# 384 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 388 "/usr/include/c++/5/cmath" 3
log10(_Tp __x)
# 389 "/usr/include/c++/5/cmath" 3
{ return __builtin_log10(__x); }
# 391 "/usr/include/c++/5/cmath" 3
using ::modf;
# 395 "/usr/include/c++/5/cmath" 3
inline float modf(float __x, float *__iptr)
# 396 "/usr/include/c++/5/cmath" 3
{ return __builtin_modff(__x, __iptr); }
# 399 "/usr/include/c++/5/cmath" 3
inline long double modf(long double __x, long double *__iptr)
# 400 "/usr/include/c++/5/cmath" 3
{ return __builtin_modfl(__x, __iptr); }
# 403 "/usr/include/c++/5/cmath" 3
using ::pow;
# 407 "/usr/include/c++/5/cmath" 3
inline float pow(float __x, float __y)
# 408 "/usr/include/c++/5/cmath" 3
{ return __builtin_powf(__x, __y); }
# 411 "/usr/include/c++/5/cmath" 3
inline long double pow(long double __x, long double __y)
# 412 "/usr/include/c++/5/cmath" 3
{ return __builtin_powl(__x, __y); }
# 418 "/usr/include/c++/5/cmath" 3
inline double pow(double __x, int __i)
# 419 "/usr/include/c++/5/cmath" 3
{ return __builtin_powi(__x, __i); }
# 422 "/usr/include/c++/5/cmath" 3
inline float pow(float __x, int __n)
# 423 "/usr/include/c++/5/cmath" 3
{ return __builtin_powif(__x, __n); }
# 426 "/usr/include/c++/5/cmath" 3
inline long double pow(long double __x, int __n)
# 427 "/usr/include/c++/5/cmath" 3
{ return __builtin_powil(__x, __n); }
# 431 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 434 "/usr/include/c++/5/cmath" 3
pow(_Tp __x, _Up __y)
# 435 "/usr/include/c++/5/cmath" 3
{
# 436 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 437 "/usr/include/c++/5/cmath" 3
return pow((__type)__x, (__type)__y);
# 438 "/usr/include/c++/5/cmath" 3
}
# 440 "/usr/include/c++/5/cmath" 3
using ::sin;
# 444 "/usr/include/c++/5/cmath" 3
inline float sin(float __x)
# 445 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinf(__x); }
# 448 "/usr/include/c++/5/cmath" 3
inline long double sin(long double __x)
# 449 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinl(__x); }
# 452 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 456 "/usr/include/c++/5/cmath" 3
sin(_Tp __x)
# 457 "/usr/include/c++/5/cmath" 3
{ return __builtin_sin(__x); }
# 459 "/usr/include/c++/5/cmath" 3
using ::sinh;
# 463 "/usr/include/c++/5/cmath" 3
inline float sinh(float __x)
# 464 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinhf(__x); }
# 467 "/usr/include/c++/5/cmath" 3
inline long double sinh(long double __x)
# 468 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinhl(__x); }
# 471 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 475 "/usr/include/c++/5/cmath" 3
sinh(_Tp __x)
# 476 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinh(__x); }
# 478 "/usr/include/c++/5/cmath" 3
using ::sqrt;
# 482 "/usr/include/c++/5/cmath" 3
inline float sqrt(float __x)
# 483 "/usr/include/c++/5/cmath" 3
{ return __builtin_sqrtf(__x); }
# 486 "/usr/include/c++/5/cmath" 3
inline long double sqrt(long double __x)
# 487 "/usr/include/c++/5/cmath" 3
{ return __builtin_sqrtl(__x); }
# 490 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 494 "/usr/include/c++/5/cmath" 3
sqrt(_Tp __x)
# 495 "/usr/include/c++/5/cmath" 3
{ return __builtin_sqrt(__x); }
# 497 "/usr/include/c++/5/cmath" 3
using ::tan;
# 501 "/usr/include/c++/5/cmath" 3
inline float tan(float __x)
# 502 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanf(__x); }
# 505 "/usr/include/c++/5/cmath" 3
inline long double tan(long double __x)
# 506 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanl(__x); }
# 509 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 513 "/usr/include/c++/5/cmath" 3
tan(_Tp __x)
# 514 "/usr/include/c++/5/cmath" 3
{ return __builtin_tan(__x); }
# 516 "/usr/include/c++/5/cmath" 3
using ::tanh;
# 520 "/usr/include/c++/5/cmath" 3
inline float tanh(float __x)
# 521 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanhf(__x); }
# 524 "/usr/include/c++/5/cmath" 3
inline long double tanh(long double __x)
# 525 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanhl(__x); }
# 528 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 532 "/usr/include/c++/5/cmath" 3
tanh(_Tp __x)
# 533 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanh(__x); }
# 536 "/usr/include/c++/5/cmath" 3
}
# 555 "/usr/include/c++/5/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 831 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 834 "/usr/include/c++/5/cmath" 3
fpclassify(_Tp __f)
# 835 "/usr/include/c++/5/cmath" 3
{
# 836 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 837 "/usr/include/c++/5/cmath" 3
return __builtin_fpclassify(0, 1, 4, 3, 2, (__type)__f);
# 839 "/usr/include/c++/5/cmath" 3
}
# 841 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 844 "/usr/include/c++/5/cmath" 3
isfinite(_Tp __f)
# 845 "/usr/include/c++/5/cmath" 3
{
# 846 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 847 "/usr/include/c++/5/cmath" 3
return __builtin_isfinite((__type)__f);
# 848 "/usr/include/c++/5/cmath" 3
}
# 850 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 853 "/usr/include/c++/5/cmath" 3
isinf(_Tp __f)
# 854 "/usr/include/c++/5/cmath" 3
{
# 855 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 856 "/usr/include/c++/5/cmath" 3
return __builtin_isinf((__type)__f);
# 857 "/usr/include/c++/5/cmath" 3
}
# 859 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 862 "/usr/include/c++/5/cmath" 3
isnan(_Tp __f)
# 863 "/usr/include/c++/5/cmath" 3
{
# 864 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 865 "/usr/include/c++/5/cmath" 3
return __builtin_isnan((__type)__f);
# 866 "/usr/include/c++/5/cmath" 3
}
# 868 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 871 "/usr/include/c++/5/cmath" 3
isnormal(_Tp __f)
# 872 "/usr/include/c++/5/cmath" 3
{
# 873 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 874 "/usr/include/c++/5/cmath" 3
return __builtin_isnormal((__type)__f);
# 875 "/usr/include/c++/5/cmath" 3
}
# 877 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 880 "/usr/include/c++/5/cmath" 3
signbit(_Tp __f)
# 881 "/usr/include/c++/5/cmath" 3
{
# 882 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 883 "/usr/include/c++/5/cmath" 3
return (sizeof(__type) == sizeof(float)) ? __builtin_signbitf((__type)__f) : ((sizeof(__type) == sizeof(double)) ? __builtin_signbit((__type)__f) : __builtin_signbitl((__type)__f));
# 888 "/usr/include/c++/5/cmath" 3
}
# 890 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 893 "/usr/include/c++/5/cmath" 3
isgreater(_Tp __f1, _Tp __f2)
# 894 "/usr/include/c++/5/cmath" 3
{
# 895 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 896 "/usr/include/c++/5/cmath" 3
return __builtin_isgreater((__type)__f1, (__type)__f2);
# 897 "/usr/include/c++/5/cmath" 3
}
# 899 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 902 "/usr/include/c++/5/cmath" 3
isgreaterequal(_Tp __f1, _Tp __f2)
# 903 "/usr/include/c++/5/cmath" 3
{
# 904 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 905 "/usr/include/c++/5/cmath" 3
return __builtin_isgreaterequal((__type)__f1, (__type)__f2);
# 906 "/usr/include/c++/5/cmath" 3
}
# 908 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 911 "/usr/include/c++/5/cmath" 3
isless(_Tp __f1, _Tp __f2)
# 912 "/usr/include/c++/5/cmath" 3
{
# 913 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 914 "/usr/include/c++/5/cmath" 3
return __builtin_isless((__type)__f1, (__type)__f2);
# 915 "/usr/include/c++/5/cmath" 3
}
# 917 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 920 "/usr/include/c++/5/cmath" 3
islessequal(_Tp __f1, _Tp __f2)
# 921 "/usr/include/c++/5/cmath" 3
{
# 922 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 923 "/usr/include/c++/5/cmath" 3
return __builtin_islessequal((__type)__f1, (__type)__f2);
# 924 "/usr/include/c++/5/cmath" 3
}
# 926 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 929 "/usr/include/c++/5/cmath" 3
islessgreater(_Tp __f1, _Tp __f2)
# 930 "/usr/include/c++/5/cmath" 3
{
# 931 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 932 "/usr/include/c++/5/cmath" 3
return __builtin_islessgreater((__type)__f1, (__type)__f2);
# 933 "/usr/include/c++/5/cmath" 3
}
# 935 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 938 "/usr/include/c++/5/cmath" 3
isunordered(_Tp __f1, _Tp __f2)
# 939 "/usr/include/c++/5/cmath" 3
{
# 940 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 941 "/usr/include/c++/5/cmath" 3
return __builtin_isunordered((__type)__f1, (__type)__f2);
# 942 "/usr/include/c++/5/cmath" 3
}
# 947 "/usr/include/c++/5/cmath" 3
}
# 114 "/usr/include/c++/5/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 118 "/usr/include/c++/5/cstdlib" 3
using ::div_t;
# 119 "/usr/include/c++/5/cstdlib" 3
using ::ldiv_t;
# 121 "/usr/include/c++/5/cstdlib" 3
using ::abort;
# 122 "/usr/include/c++/5/cstdlib" 3
using ::abs;
# 123 "/usr/include/c++/5/cstdlib" 3
using ::atexit;
# 129 "/usr/include/c++/5/cstdlib" 3
using ::atof;
# 130 "/usr/include/c++/5/cstdlib" 3
using ::atoi;
# 131 "/usr/include/c++/5/cstdlib" 3
using ::atol;
# 132 "/usr/include/c++/5/cstdlib" 3
using ::bsearch;
# 133 "/usr/include/c++/5/cstdlib" 3
using ::calloc;
# 134 "/usr/include/c++/5/cstdlib" 3
using ::div;
# 135 "/usr/include/c++/5/cstdlib" 3
using ::exit;
# 136 "/usr/include/c++/5/cstdlib" 3
using ::free;
# 137 "/usr/include/c++/5/cstdlib" 3
using ::getenv;
# 138 "/usr/include/c++/5/cstdlib" 3
using ::labs;
# 139 "/usr/include/c++/5/cstdlib" 3
using ::ldiv;
# 140 "/usr/include/c++/5/cstdlib" 3
using ::malloc;
# 142 "/usr/include/c++/5/cstdlib" 3
using ::mblen;
# 143 "/usr/include/c++/5/cstdlib" 3
using ::mbstowcs;
# 144 "/usr/include/c++/5/cstdlib" 3
using ::mbtowc;
# 146 "/usr/include/c++/5/cstdlib" 3
using ::qsort;
# 152 "/usr/include/c++/5/cstdlib" 3
using ::rand;
# 153 "/usr/include/c++/5/cstdlib" 3
using ::realloc;
# 154 "/usr/include/c++/5/cstdlib" 3
using ::srand;
# 155 "/usr/include/c++/5/cstdlib" 3
using ::strtod;
# 156 "/usr/include/c++/5/cstdlib" 3
using ::strtol;
# 157 "/usr/include/c++/5/cstdlib" 3
using ::strtoul;
# 158 "/usr/include/c++/5/cstdlib" 3
using ::system;
# 160 "/usr/include/c++/5/cstdlib" 3
using ::wcstombs;
# 161 "/usr/include/c++/5/cstdlib" 3
using ::wctomb;
# 166 "/usr/include/c++/5/cstdlib" 3
inline long abs(long __i) { return __builtin_labs(__i); }
# 169 "/usr/include/c++/5/cstdlib" 3
inline ldiv_t div(long __i, long __j) { return ldiv(__i, __j); }
# 174 "/usr/include/c++/5/cstdlib" 3
inline long long abs(long long __x) { return __builtin_llabs(__x); }
# 179 "/usr/include/c++/5/cstdlib" 3
inline __int128_t abs(__int128_t __x) { return (__x >= (0)) ? __x : (-__x); }
# 196 "/usr/include/c++/5/cstdlib" 3
}
# 209 "/usr/include/c++/5/cstdlib" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 214 "/usr/include/c++/5/cstdlib" 3
using ::lldiv_t;
# 220 "/usr/include/c++/5/cstdlib" 3
using ::_Exit;
# 224 "/usr/include/c++/5/cstdlib" 3
using ::llabs;
# 227 "/usr/include/c++/5/cstdlib" 3
inline lldiv_t div(long long __n, long long __d)
# 228 "/usr/include/c++/5/cstdlib" 3
{ lldiv_t __q; (__q.quot) = (__n / __d); (__q.rem) = (__n % __d); return __q; }
# 230 "/usr/include/c++/5/cstdlib" 3
using ::lldiv;
# 241 "/usr/include/c++/5/cstdlib" 3
using ::atoll;
# 242 "/usr/include/c++/5/cstdlib" 3
using ::strtoll;
# 243 "/usr/include/c++/5/cstdlib" 3
using ::strtoull;
# 245 "/usr/include/c++/5/cstdlib" 3
using ::strtof;
# 246 "/usr/include/c++/5/cstdlib" 3
using ::strtold;
# 249 "/usr/include/c++/5/cstdlib" 3
}
# 251 "/usr/include/c++/5/cstdlib" 3
namespace std {
# 254 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::lldiv_t;
# 256 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::_Exit;
# 258 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::llabs;
# 259 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::div;
# 260 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::lldiv;
# 262 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::atoll;
# 263 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::strtof;
# 264 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::strtoll;
# 265 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::strtoull;
# 266 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::strtold;
# 267 "/usr/include/c++/5/cstdlib" 3
}
# 8925 "/usr/local/cuda/include/math_functions.h"

# 8925 "/usr/local/cuda/include/math_functions.h"
__attribute((always_inline)) inline int signbit(float x);
# 8929 "/usr/local/cuda/include/math_functions.h"
__attribute((always_inline)) inline int signbit(double x);
# 8931 "/usr/local/cuda/include/math_functions.h"
__attribute((always_inline)) inline int signbit(long double x);
# 8933 "/usr/local/cuda/include/math_functions.h"
__attribute((always_inline)) inline int isfinite(float x);
# 8937 "/usr/local/cuda/include/math_functions.h"
__attribute((always_inline)) inline int isfinite(double x);
# 8939 "/usr/local/cuda/include/math_functions.h"
__attribute((always_inline)) inline int isfinite(long double x);
# 8941 "/usr/local/cuda/include/math_functions.h"
__attribute((always_inline)) inline int isnan(float x);
# 8945 "/usr/local/cuda/include/math_functions.h"
extern "C" __attribute((always_inline)) inline int isnan(double x) throw();
# 8947 "/usr/local/cuda/include/math_functions.h"
__attribute((always_inline)) inline int isnan(long double x);
# 8949 "/usr/local/cuda/include/math_functions.h"
__attribute((always_inline)) inline int isinf(float x);
# 8953 "/usr/local/cuda/include/math_functions.h"
extern "C" __attribute((always_inline)) inline int isinf(double x) throw();
# 8955 "/usr/local/cuda/include/math_functions.h"
__attribute((always_inline)) inline int isinf(long double x);
# 9002 "/usr/local/cuda/include/math_functions.h"
namespace std {
# 9004 "/usr/local/cuda/include/math_functions.h"
template< class T> extern T __pow_helper(T, int);
# 9005 "/usr/local/cuda/include/math_functions.h"
template< class T> extern T __cmath_power(T, unsigned);
# 9006 "/usr/local/cuda/include/math_functions.h"
}
# 9008 "/usr/local/cuda/include/math_functions.h"
using std::abs;
# 9009 "/usr/local/cuda/include/math_functions.h"
using std::fabs;
# 9010 "/usr/local/cuda/include/math_functions.h"
using std::ceil;
# 9011 "/usr/local/cuda/include/math_functions.h"
using std::floor;
# 9012 "/usr/local/cuda/include/math_functions.h"
using std::sqrt;
# 9013 "/usr/local/cuda/include/math_functions.h"
using std::pow;
# 9014 "/usr/local/cuda/include/math_functions.h"
using std::log;
# 9015 "/usr/local/cuda/include/math_functions.h"
using std::log10;
# 9016 "/usr/local/cuda/include/math_functions.h"
using std::fmod;
# 9017 "/usr/local/cuda/include/math_functions.h"
using std::modf;
# 9018 "/usr/local/cuda/include/math_functions.h"
using std::exp;
# 9019 "/usr/local/cuda/include/math_functions.h"
using std::frexp;
# 9020 "/usr/local/cuda/include/math_functions.h"
using std::ldexp;
# 9021 "/usr/local/cuda/include/math_functions.h"
using std::asin;
# 9022 "/usr/local/cuda/include/math_functions.h"
using std::sin;
# 9023 "/usr/local/cuda/include/math_functions.h"
using std::sinh;
# 9024 "/usr/local/cuda/include/math_functions.h"
using std::acos;
# 9025 "/usr/local/cuda/include/math_functions.h"
using std::cos;
# 9026 "/usr/local/cuda/include/math_functions.h"
using std::cosh;
# 9027 "/usr/local/cuda/include/math_functions.h"
using std::atan;
# 9028 "/usr/local/cuda/include/math_functions.h"
using std::atan2;
# 9029 "/usr/local/cuda/include/math_functions.h"
using std::tan;
# 9030 "/usr/local/cuda/include/math_functions.h"
using std::tanh;
# 9393 "/usr/local/cuda/include/math_functions.h"
namespace std {
# 9406 "/usr/local/cuda/include/math_functions.h"
extern inline long long abs(long long);
# 9412 "/usr/local/cuda/include/math_functions.h"
extern inline long abs(long);
# 9413 "/usr/local/cuda/include/math_functions.h"
extern inline float abs(float);
# 9414 "/usr/local/cuda/include/math_functions.h"
extern inline double abs(double);
# 9415 "/usr/local/cuda/include/math_functions.h"
extern inline float fabs(float);
# 9416 "/usr/local/cuda/include/math_functions.h"
extern inline float ceil(float);
# 9417 "/usr/local/cuda/include/math_functions.h"
extern inline float floor(float);
# 9418 "/usr/local/cuda/include/math_functions.h"
extern inline float sqrt(float);
# 9419 "/usr/local/cuda/include/math_functions.h"
extern inline float pow(float, float);
# 9428 "/usr/local/cuda/include/math_functions.h"
extern inline float pow(float, int);
# 9429 "/usr/local/cuda/include/math_functions.h"
extern inline double pow(double, int);
# 9434 "/usr/local/cuda/include/math_functions.h"
extern inline float log(float);
# 9435 "/usr/local/cuda/include/math_functions.h"
extern inline float log10(float);
# 9436 "/usr/local/cuda/include/math_functions.h"
extern inline float fmod(float, float);
# 9437 "/usr/local/cuda/include/math_functions.h"
extern inline float modf(float, float *);
# 9438 "/usr/local/cuda/include/math_functions.h"
extern inline float exp(float);
# 9439 "/usr/local/cuda/include/math_functions.h"
extern inline float frexp(float, int *);
# 9440 "/usr/local/cuda/include/math_functions.h"
extern inline float ldexp(float, int);
# 9441 "/usr/local/cuda/include/math_functions.h"
extern inline float asin(float);
# 9442 "/usr/local/cuda/include/math_functions.h"
extern inline float sin(float);
# 9443 "/usr/local/cuda/include/math_functions.h"
extern inline float sinh(float);
# 9444 "/usr/local/cuda/include/math_functions.h"
extern inline float acos(float);
# 9445 "/usr/local/cuda/include/math_functions.h"
extern inline float cos(float);
# 9446 "/usr/local/cuda/include/math_functions.h"
extern inline float cosh(float);
# 9447 "/usr/local/cuda/include/math_functions.h"
extern inline float atan(float);
# 9448 "/usr/local/cuda/include/math_functions.h"
extern inline float atan2(float, float);
# 9449 "/usr/local/cuda/include/math_functions.h"
extern inline float tan(float);
# 9450 "/usr/local/cuda/include/math_functions.h"
extern inline float tanh(float);
# 9518 "/usr/local/cuda/include/math_functions.h"
}
# 9609 "/usr/local/cuda/include/math_functions.h"
static inline float logb(float a);
# 9611 "/usr/local/cuda/include/math_functions.h"
static inline int ilogb(float a);
# 9613 "/usr/local/cuda/include/math_functions.h"
static inline float scalbn(float a, int b);
# 9615 "/usr/local/cuda/include/math_functions.h"
static inline float scalbln(float a, long b);
# 9617 "/usr/local/cuda/include/math_functions.h"
static inline float exp2(float a);
# 9619 "/usr/local/cuda/include/math_functions.h"
static inline float expm1(float a);
# 9621 "/usr/local/cuda/include/math_functions.h"
static inline float log2(float a);
# 9623 "/usr/local/cuda/include/math_functions.h"
static inline float log1p(float a);
# 9625 "/usr/local/cuda/include/math_functions.h"
static inline float acosh(float a);
# 9627 "/usr/local/cuda/include/math_functions.h"
static inline float asinh(float a);
# 9629 "/usr/local/cuda/include/math_functions.h"
static inline float atanh(float a);
# 9631 "/usr/local/cuda/include/math_functions.h"
static inline float hypot(float a, float b);
# 9633 "/usr/local/cuda/include/math_functions.h"
static inline float norm3d(float a, float b, float c);
# 9635 "/usr/local/cuda/include/math_functions.h"
static inline float norm4d(float a, float b, float c, float d);
# 9637 "/usr/local/cuda/include/math_functions.h"
static inline float cbrt(float a);
# 9639 "/usr/local/cuda/include/math_functions.h"
static inline float erf(float a);
# 9641 "/usr/local/cuda/include/math_functions.h"
static inline float erfc(float a);
# 9643 "/usr/local/cuda/include/math_functions.h"
static inline float lgamma(float a);
# 9645 "/usr/local/cuda/include/math_functions.h"
static inline float tgamma(float a);
# 9647 "/usr/local/cuda/include/math_functions.h"
static inline float copysign(float a, float b);
# 9649 "/usr/local/cuda/include/math_functions.h"
static inline float nextafter(float a, float b);
# 9651 "/usr/local/cuda/include/math_functions.h"
static inline float remainder(float a, float b);
# 9653 "/usr/local/cuda/include/math_functions.h"
static inline float remquo(float a, float b, int * quo);
# 9655 "/usr/local/cuda/include/math_functions.h"
static inline float round(float a);
# 9657 "/usr/local/cuda/include/math_functions.h"
static inline long lround(float a);
# 9659 "/usr/local/cuda/include/math_functions.h"
static inline long long llround(float a);
# 9661 "/usr/local/cuda/include/math_functions.h"
static inline float trunc(float a);
# 9663 "/usr/local/cuda/include/math_functions.h"
static inline float rint(float a);
# 9665 "/usr/local/cuda/include/math_functions.h"
static inline long lrint(float a);
# 9667 "/usr/local/cuda/include/math_functions.h"
static inline long long llrint(float a);
# 9669 "/usr/local/cuda/include/math_functions.h"
static inline float nearbyint(float a);
# 9671 "/usr/local/cuda/include/math_functions.h"
static inline float fdim(float a, float b);
# 9673 "/usr/local/cuda/include/math_functions.h"
static inline float fma(float a, float b, float c);
# 9675 "/usr/local/cuda/include/math_functions.h"
static inline float fmax(float a, float b);
# 9677 "/usr/local/cuda/include/math_functions.h"
static inline float fmin(float a, float b);
# 9718 "/usr/local/cuda/include/math_functions.h"
static inline float exp10(float a);
# 9720 "/usr/local/cuda/include/math_functions.h"
static inline float rsqrt(float a);
# 9722 "/usr/local/cuda/include/math_functions.h"
static inline float rcbrt(float a);
# 9724 "/usr/local/cuda/include/math_functions.h"
static inline float sinpi(float a);
# 9726 "/usr/local/cuda/include/math_functions.h"
static inline float cospi(float a);
# 9728 "/usr/local/cuda/include/math_functions.h"
static inline void sincospi(float a, float * sptr, float * cptr);
# 9730 "/usr/local/cuda/include/math_functions.h"
static inline void sincos(float a, float * sptr, float * cptr);
# 9732 "/usr/local/cuda/include/math_functions.h"
static inline float j0(float a);
# 9734 "/usr/local/cuda/include/math_functions.h"
static inline float j1(float a);
# 9736 "/usr/local/cuda/include/math_functions.h"
static inline float jn(int n, float a);
# 9738 "/usr/local/cuda/include/math_functions.h"
static inline float y0(float a);
# 9740 "/usr/local/cuda/include/math_functions.h"
static inline float y1(float a);
# 9742 "/usr/local/cuda/include/math_functions.h"
static inline float yn(int n, float a);
# 9744 "/usr/local/cuda/include/math_functions.h"
static inline float cyl_bessel_i0(float a);
# 9746 "/usr/local/cuda/include/math_functions.h"
static inline float cyl_bessel_i1(float a);
# 9748 "/usr/local/cuda/include/math_functions.h"
static inline float erfinv(float a);
# 9750 "/usr/local/cuda/include/math_functions.h"
static inline float erfcinv(float a);
# 9752 "/usr/local/cuda/include/math_functions.h"
static inline float normcdfinv(float a);
# 9754 "/usr/local/cuda/include/math_functions.h"
static inline float normcdf(float a);
# 9756 "/usr/local/cuda/include/math_functions.h"
static inline float erfcx(float a);
# 9758 "/usr/local/cuda/include/math_functions.h"
static inline double copysign(double a, float b);
# 9760 "/usr/local/cuda/include/math_functions.h"
static inline float copysign(float a, double b);
# 9762 "/usr/local/cuda/include/math_functions.h"
static inline unsigned min(unsigned a, unsigned b);
# 9764 "/usr/local/cuda/include/math_functions.h"
static inline unsigned min(int a, unsigned b);
# 9766 "/usr/local/cuda/include/math_functions.h"
static inline unsigned min(unsigned a, int b);
# 9768 "/usr/local/cuda/include/math_functions.h"
static inline long min(long a, long b);
# 9770 "/usr/local/cuda/include/math_functions.h"
static inline unsigned long min(unsigned long a, unsigned long b);
# 9772 "/usr/local/cuda/include/math_functions.h"
static inline unsigned long min(long a, unsigned long b);
# 9774 "/usr/local/cuda/include/math_functions.h"
static inline unsigned long min(unsigned long a, long b);
# 9776 "/usr/local/cuda/include/math_functions.h"
static inline long long min(long long a, long long b);
# 9778 "/usr/local/cuda/include/math_functions.h"
static inline unsigned long long min(unsigned long long a, unsigned long long b);
# 9780 "/usr/local/cuda/include/math_functions.h"
static inline unsigned long long min(long long a, unsigned long long b);
# 9782 "/usr/local/cuda/include/math_functions.h"
static inline unsigned long long min(unsigned long long a, long long b);
# 9784 "/usr/local/cuda/include/math_functions.h"
static inline float min(float a, float b);
# 9786 "/usr/local/cuda/include/math_functions.h"
static inline double min(double a, double b);
# 9788 "/usr/local/cuda/include/math_functions.h"
static inline double min(float a, double b);
# 9790 "/usr/local/cuda/include/math_functions.h"
static inline double min(double a, float b);
# 9792 "/usr/local/cuda/include/math_functions.h"
static inline unsigned max(unsigned a, unsigned b);
# 9794 "/usr/local/cuda/include/math_functions.h"
static inline unsigned max(int a, unsigned b);
# 9796 "/usr/local/cuda/include/math_functions.h"
static inline unsigned max(unsigned a, int b);
# 9798 "/usr/local/cuda/include/math_functions.h"
static inline long max(long a, long b);
# 9800 "/usr/local/cuda/include/math_functions.h"
static inline unsigned long max(unsigned long a, unsigned long b);
# 9802 "/usr/local/cuda/include/math_functions.h"
static inline unsigned long max(long a, unsigned long b);
# 9804 "/usr/local/cuda/include/math_functions.h"
static inline unsigned long max(unsigned long a, long b);
# 9806 "/usr/local/cuda/include/math_functions.h"
static inline long long max(long long a, long long b);
# 9808 "/usr/local/cuda/include/math_functions.h"
static inline unsigned long long max(unsigned long long a, unsigned long long b);
# 9810 "/usr/local/cuda/include/math_functions.h"
static inline unsigned long long max(long long a, unsigned long long b);
# 9812 "/usr/local/cuda/include/math_functions.h"
static inline unsigned long long max(unsigned long long a, long long b);
# 9814 "/usr/local/cuda/include/math_functions.h"
static inline float max(float a, float b);
# 9816 "/usr/local/cuda/include/math_functions.h"
static inline double max(double a, double b);
# 9818 "/usr/local/cuda/include/math_functions.h"
static inline double max(float a, double b);
# 9820 "/usr/local/cuda/include/math_functions.h"
static inline double max(double a, float b);
# 248 "/usr/local/cuda/include/math_functions.hpp"
__attribute((always_inline)) inline int signbit(float x) { return __signbitf(x); }
# 252 "/usr/local/cuda/include/math_functions.hpp"
__attribute((always_inline)) inline int signbit(double x) { return __signbit(x); }
# 254 "/usr/local/cuda/include/math_functions.hpp"
__attribute((always_inline)) inline int signbit(long double x) { return __signbitl(x); }
# 265 "/usr/local/cuda/include/math_functions.hpp"
__attribute((always_inline)) inline int isfinite(float x) { return __finitef(x); }
# 280 "/usr/local/cuda/include/math_functions.hpp"
__attribute((always_inline)) inline int isfinite(double x) { return __finite(x); }
# 293 "/usr/local/cuda/include/math_functions.hpp"
__attribute((always_inline)) inline int isfinite(long double x) { return __finitel(x); }
# 296 "/usr/local/cuda/include/math_functions.hpp"
__attribute((always_inline)) inline int isnan(float x) { return __isnanf(x); }
# 300 "/usr/local/cuda/include/math_functions.hpp"
extern "C" __attribute((always_inline)) inline int isnan(double x) throw() { return __isnan(x); }
# 302 "/usr/local/cuda/include/math_functions.hpp"
__attribute((always_inline)) inline int isnan(long double x) { return __isnanl(x); }
# 304 "/usr/local/cuda/include/math_functions.hpp"
__attribute((always_inline)) inline int isinf(float x) { return __isinff(x); }
# 308 "/usr/local/cuda/include/math_functions.hpp"
extern "C" __attribute((always_inline)) inline int isinf(double x) throw() { return __isinf(x); }
# 310 "/usr/local/cuda/include/math_functions.hpp"
__attribute((always_inline)) inline int isinf(long double x) { return __isinfl(x); }
# 503 "/usr/local/cuda/include/math_functions.hpp"
static inline float logb(float a)
# 504 "/usr/local/cuda/include/math_functions.hpp"
{
# 505 "/usr/local/cuda/include/math_functions.hpp"
return logbf(a);
# 506 "/usr/local/cuda/include/math_functions.hpp"
}
# 508 "/usr/local/cuda/include/math_functions.hpp"
static inline int ilogb(float a)
# 509 "/usr/local/cuda/include/math_functions.hpp"
{
# 510 "/usr/local/cuda/include/math_functions.hpp"
return ilogbf(a);
# 511 "/usr/local/cuda/include/math_functions.hpp"
}
# 513 "/usr/local/cuda/include/math_functions.hpp"
static inline float scalbn(float a, int b)
# 514 "/usr/local/cuda/include/math_functions.hpp"
{
# 515 "/usr/local/cuda/include/math_functions.hpp"
return scalbnf(a, b);
# 516 "/usr/local/cuda/include/math_functions.hpp"
}
# 518 "/usr/local/cuda/include/math_functions.hpp"
static inline float scalbln(float a, long b)
# 519 "/usr/local/cuda/include/math_functions.hpp"
{
# 520 "/usr/local/cuda/include/math_functions.hpp"
return scalblnf(a, b);
# 521 "/usr/local/cuda/include/math_functions.hpp"
}
# 523 "/usr/local/cuda/include/math_functions.hpp"
static inline float exp2(float a)
# 524 "/usr/local/cuda/include/math_functions.hpp"
{
# 525 "/usr/local/cuda/include/math_functions.hpp"
return exp2f(a);
# 526 "/usr/local/cuda/include/math_functions.hpp"
}
# 528 "/usr/local/cuda/include/math_functions.hpp"
static inline float expm1(float a)
# 529 "/usr/local/cuda/include/math_functions.hpp"
{
# 530 "/usr/local/cuda/include/math_functions.hpp"
return expm1f(a);
# 531 "/usr/local/cuda/include/math_functions.hpp"
}
# 533 "/usr/local/cuda/include/math_functions.hpp"
static inline float log2(float a)
# 534 "/usr/local/cuda/include/math_functions.hpp"
{
# 535 "/usr/local/cuda/include/math_functions.hpp"
return log2f(a);
# 536 "/usr/local/cuda/include/math_functions.hpp"
}
# 538 "/usr/local/cuda/include/math_functions.hpp"
static inline float log1p(float a)
# 539 "/usr/local/cuda/include/math_functions.hpp"
{
# 540 "/usr/local/cuda/include/math_functions.hpp"
return log1pf(a);
# 541 "/usr/local/cuda/include/math_functions.hpp"
}
# 543 "/usr/local/cuda/include/math_functions.hpp"
static inline float acosh(float a)
# 544 "/usr/local/cuda/include/math_functions.hpp"
{
# 545 "/usr/local/cuda/include/math_functions.hpp"
return acoshf(a);
# 546 "/usr/local/cuda/include/math_functions.hpp"
}
# 548 "/usr/local/cuda/include/math_functions.hpp"
static inline float asinh(float a)
# 549 "/usr/local/cuda/include/math_functions.hpp"
{
# 550 "/usr/local/cuda/include/math_functions.hpp"
return asinhf(a);
# 551 "/usr/local/cuda/include/math_functions.hpp"
}
# 553 "/usr/local/cuda/include/math_functions.hpp"
static inline float atanh(float a)
# 554 "/usr/local/cuda/include/math_functions.hpp"
{
# 555 "/usr/local/cuda/include/math_functions.hpp"
return atanhf(a);
# 556 "/usr/local/cuda/include/math_functions.hpp"
}
# 558 "/usr/local/cuda/include/math_functions.hpp"
static inline float hypot(float a, float b)
# 559 "/usr/local/cuda/include/math_functions.hpp"
{
# 560 "/usr/local/cuda/include/math_functions.hpp"
return hypotf(a, b);
# 561 "/usr/local/cuda/include/math_functions.hpp"
}
# 563 "/usr/local/cuda/include/math_functions.hpp"
static inline float norm3d(float a, float b, float c)
# 564 "/usr/local/cuda/include/math_functions.hpp"
{
# 565 "/usr/local/cuda/include/math_functions.hpp"
return norm3df(a, b, c);
# 566 "/usr/local/cuda/include/math_functions.hpp"
}
# 568 "/usr/local/cuda/include/math_functions.hpp"
static inline float norm4d(float a, float b, float c, float d)
# 569 "/usr/local/cuda/include/math_functions.hpp"
{
# 570 "/usr/local/cuda/include/math_functions.hpp"
return norm4df(a, b, c, d);
# 571 "/usr/local/cuda/include/math_functions.hpp"
}
# 573 "/usr/local/cuda/include/math_functions.hpp"
static inline float cbrt(float a)
# 574 "/usr/local/cuda/include/math_functions.hpp"
{
# 575 "/usr/local/cuda/include/math_functions.hpp"
return cbrtf(a);
# 576 "/usr/local/cuda/include/math_functions.hpp"
}
# 578 "/usr/local/cuda/include/math_functions.hpp"
static inline float erf(float a)
# 579 "/usr/local/cuda/include/math_functions.hpp"
{
# 580 "/usr/local/cuda/include/math_functions.hpp"
return erff(a);
# 581 "/usr/local/cuda/include/math_functions.hpp"
}
# 583 "/usr/local/cuda/include/math_functions.hpp"
static inline float erfc(float a)
# 584 "/usr/local/cuda/include/math_functions.hpp"
{
# 585 "/usr/local/cuda/include/math_functions.hpp"
return erfcf(a);
# 586 "/usr/local/cuda/include/math_functions.hpp"
}
# 588 "/usr/local/cuda/include/math_functions.hpp"
static inline float lgamma(float a)
# 589 "/usr/local/cuda/include/math_functions.hpp"
{
# 590 "/usr/local/cuda/include/math_functions.hpp"
return lgammaf(a);
# 591 "/usr/local/cuda/include/math_functions.hpp"
}
# 593 "/usr/local/cuda/include/math_functions.hpp"
static inline float tgamma(float a)
# 594 "/usr/local/cuda/include/math_functions.hpp"
{
# 595 "/usr/local/cuda/include/math_functions.hpp"
return tgammaf(a);
# 596 "/usr/local/cuda/include/math_functions.hpp"
}
# 598 "/usr/local/cuda/include/math_functions.hpp"
static inline float copysign(float a, float b)
# 599 "/usr/local/cuda/include/math_functions.hpp"
{
# 600 "/usr/local/cuda/include/math_functions.hpp"
return copysignf(a, b);
# 601 "/usr/local/cuda/include/math_functions.hpp"
}
# 603 "/usr/local/cuda/include/math_functions.hpp"
static inline float nextafter(float a, float b)
# 604 "/usr/local/cuda/include/math_functions.hpp"
{
# 605 "/usr/local/cuda/include/math_functions.hpp"
return nextafterf(a, b);
# 606 "/usr/local/cuda/include/math_functions.hpp"
}
# 608 "/usr/local/cuda/include/math_functions.hpp"
static inline float remainder(float a, float b)
# 609 "/usr/local/cuda/include/math_functions.hpp"
{
# 610 "/usr/local/cuda/include/math_functions.hpp"
return remainderf(a, b);
# 611 "/usr/local/cuda/include/math_functions.hpp"
}
# 613 "/usr/local/cuda/include/math_functions.hpp"
static inline float remquo(float a, float b, int *quo)
# 614 "/usr/local/cuda/include/math_functions.hpp"
{
# 615 "/usr/local/cuda/include/math_functions.hpp"
return remquof(a, b, quo);
# 616 "/usr/local/cuda/include/math_functions.hpp"
}
# 618 "/usr/local/cuda/include/math_functions.hpp"
static inline float round(float a)
# 619 "/usr/local/cuda/include/math_functions.hpp"
{
# 620 "/usr/local/cuda/include/math_functions.hpp"
return roundf(a);
# 621 "/usr/local/cuda/include/math_functions.hpp"
}
# 623 "/usr/local/cuda/include/math_functions.hpp"
static inline long lround(float a)
# 624 "/usr/local/cuda/include/math_functions.hpp"
{
# 625 "/usr/local/cuda/include/math_functions.hpp"
return lroundf(a);
# 626 "/usr/local/cuda/include/math_functions.hpp"
}
# 628 "/usr/local/cuda/include/math_functions.hpp"
static inline long long llround(float a)
# 629 "/usr/local/cuda/include/math_functions.hpp"
{
# 630 "/usr/local/cuda/include/math_functions.hpp"
return llroundf(a);
# 631 "/usr/local/cuda/include/math_functions.hpp"
}
# 633 "/usr/local/cuda/include/math_functions.hpp"
static inline float trunc(float a)
# 634 "/usr/local/cuda/include/math_functions.hpp"
{
# 635 "/usr/local/cuda/include/math_functions.hpp"
return truncf(a);
# 636 "/usr/local/cuda/include/math_functions.hpp"
}
# 638 "/usr/local/cuda/include/math_functions.hpp"
static inline float rint(float a)
# 639 "/usr/local/cuda/include/math_functions.hpp"
{
# 640 "/usr/local/cuda/include/math_functions.hpp"
return rintf(a);
# 641 "/usr/local/cuda/include/math_functions.hpp"
}
# 643 "/usr/local/cuda/include/math_functions.hpp"
static inline long lrint(float a)
# 644 "/usr/local/cuda/include/math_functions.hpp"
{
# 645 "/usr/local/cuda/include/math_functions.hpp"
return lrintf(a);
# 646 "/usr/local/cuda/include/math_functions.hpp"
}
# 648 "/usr/local/cuda/include/math_functions.hpp"
static inline long long llrint(float a)
# 649 "/usr/local/cuda/include/math_functions.hpp"
{
# 650 "/usr/local/cuda/include/math_functions.hpp"
return llrintf(a);
# 651 "/usr/local/cuda/include/math_functions.hpp"
}
# 653 "/usr/local/cuda/include/math_functions.hpp"
static inline float nearbyint(float a)
# 654 "/usr/local/cuda/include/math_functions.hpp"
{
# 655 "/usr/local/cuda/include/math_functions.hpp"
return nearbyintf(a);
# 656 "/usr/local/cuda/include/math_functions.hpp"
}
# 658 "/usr/local/cuda/include/math_functions.hpp"
static inline float fdim(float a, float b)
# 659 "/usr/local/cuda/include/math_functions.hpp"
{
# 660 "/usr/local/cuda/include/math_functions.hpp"
return fdimf(a, b);
# 661 "/usr/local/cuda/include/math_functions.hpp"
}
# 663 "/usr/local/cuda/include/math_functions.hpp"
static inline float fma(float a, float b, float c)
# 664 "/usr/local/cuda/include/math_functions.hpp"
{
# 665 "/usr/local/cuda/include/math_functions.hpp"
return fmaf(a, b, c);
# 666 "/usr/local/cuda/include/math_functions.hpp"
}
# 668 "/usr/local/cuda/include/math_functions.hpp"
static inline float fmax(float a, float b)
# 669 "/usr/local/cuda/include/math_functions.hpp"
{
# 670 "/usr/local/cuda/include/math_functions.hpp"
return fmaxf(a, b);
# 671 "/usr/local/cuda/include/math_functions.hpp"
}
# 673 "/usr/local/cuda/include/math_functions.hpp"
static inline float fmin(float a, float b)
# 674 "/usr/local/cuda/include/math_functions.hpp"
{
# 675 "/usr/local/cuda/include/math_functions.hpp"
return fminf(a, b);
# 676 "/usr/local/cuda/include/math_functions.hpp"
}
# 681 "/usr/local/cuda/include/math_functions.hpp"
static inline float exp10(float a)
# 682 "/usr/local/cuda/include/math_functions.hpp"
{
# 683 "/usr/local/cuda/include/math_functions.hpp"
return exp10f(a);
# 684 "/usr/local/cuda/include/math_functions.hpp"
}
# 686 "/usr/local/cuda/include/math_functions.hpp"
static inline float rsqrt(float a)
# 687 "/usr/local/cuda/include/math_functions.hpp"
{
# 688 "/usr/local/cuda/include/math_functions.hpp"
return rsqrtf(a);
# 689 "/usr/local/cuda/include/math_functions.hpp"
}
# 691 "/usr/local/cuda/include/math_functions.hpp"
static inline float rcbrt(float a)
# 692 "/usr/local/cuda/include/math_functions.hpp"
{
# 693 "/usr/local/cuda/include/math_functions.hpp"
return rcbrtf(a);
# 694 "/usr/local/cuda/include/math_functions.hpp"
}
# 696 "/usr/local/cuda/include/math_functions.hpp"
static inline float sinpi(float a)
# 697 "/usr/local/cuda/include/math_functions.hpp"
{
# 698 "/usr/local/cuda/include/math_functions.hpp"
return sinpif(a);
# 699 "/usr/local/cuda/include/math_functions.hpp"
}
# 701 "/usr/local/cuda/include/math_functions.hpp"
static inline float cospi(float a)
# 702 "/usr/local/cuda/include/math_functions.hpp"
{
# 703 "/usr/local/cuda/include/math_functions.hpp"
return cospif(a);
# 704 "/usr/local/cuda/include/math_functions.hpp"
}
# 706 "/usr/local/cuda/include/math_functions.hpp"
static inline void sincospi(float a, float *sptr, float *cptr)
# 707 "/usr/local/cuda/include/math_functions.hpp"
{
# 708 "/usr/local/cuda/include/math_functions.hpp"
sincospif(a, sptr, cptr);
# 709 "/usr/local/cuda/include/math_functions.hpp"
}
# 711 "/usr/local/cuda/include/math_functions.hpp"
static inline void sincos(float a, float *sptr, float *cptr)
# 712 "/usr/local/cuda/include/math_functions.hpp"
{
# 713 "/usr/local/cuda/include/math_functions.hpp"
sincosf(a, sptr, cptr);
# 714 "/usr/local/cuda/include/math_functions.hpp"
}
# 716 "/usr/local/cuda/include/math_functions.hpp"
static inline float j0(float a)
# 717 "/usr/local/cuda/include/math_functions.hpp"
{
# 718 "/usr/local/cuda/include/math_functions.hpp"
return j0f(a);
# 719 "/usr/local/cuda/include/math_functions.hpp"
}
# 721 "/usr/local/cuda/include/math_functions.hpp"
static inline float j1(float a)
# 722 "/usr/local/cuda/include/math_functions.hpp"
{
# 723 "/usr/local/cuda/include/math_functions.hpp"
return j1f(a);
# 724 "/usr/local/cuda/include/math_functions.hpp"
}
# 726 "/usr/local/cuda/include/math_functions.hpp"
static inline float jn(int n, float a)
# 727 "/usr/local/cuda/include/math_functions.hpp"
{
# 728 "/usr/local/cuda/include/math_functions.hpp"
return jnf(n, a);
# 729 "/usr/local/cuda/include/math_functions.hpp"
}
# 731 "/usr/local/cuda/include/math_functions.hpp"
static inline float y0(float a)
# 732 "/usr/local/cuda/include/math_functions.hpp"
{
# 733 "/usr/local/cuda/include/math_functions.hpp"
return y0f(a);
# 734 "/usr/local/cuda/include/math_functions.hpp"
}
# 736 "/usr/local/cuda/include/math_functions.hpp"
static inline float y1(float a)
# 737 "/usr/local/cuda/include/math_functions.hpp"
{
# 738 "/usr/local/cuda/include/math_functions.hpp"
return y1f(a);
# 739 "/usr/local/cuda/include/math_functions.hpp"
}
# 741 "/usr/local/cuda/include/math_functions.hpp"
static inline float yn(int n, float a)
# 742 "/usr/local/cuda/include/math_functions.hpp"
{
# 743 "/usr/local/cuda/include/math_functions.hpp"
return ynf(n, a);
# 744 "/usr/local/cuda/include/math_functions.hpp"
}
# 746 "/usr/local/cuda/include/math_functions.hpp"
static inline float cyl_bessel_i0(float a)
# 747 "/usr/local/cuda/include/math_functions.hpp"
{
# 748 "/usr/local/cuda/include/math_functions.hpp"
return cyl_bessel_i0f(a);
# 749 "/usr/local/cuda/include/math_functions.hpp"
}
# 751 "/usr/local/cuda/include/math_functions.hpp"
static inline float cyl_bessel_i1(float a)
# 752 "/usr/local/cuda/include/math_functions.hpp"
{
# 753 "/usr/local/cuda/include/math_functions.hpp"
return cyl_bessel_i1f(a);
# 754 "/usr/local/cuda/include/math_functions.hpp"
}
# 756 "/usr/local/cuda/include/math_functions.hpp"
static inline float erfinv(float a)
# 757 "/usr/local/cuda/include/math_functions.hpp"
{
# 758 "/usr/local/cuda/include/math_functions.hpp"
return erfinvf(a);
# 759 "/usr/local/cuda/include/math_functions.hpp"
}
# 761 "/usr/local/cuda/include/math_functions.hpp"
static inline float erfcinv(float a)
# 762 "/usr/local/cuda/include/math_functions.hpp"
{
# 763 "/usr/local/cuda/include/math_functions.hpp"
return erfcinvf(a);
# 764 "/usr/local/cuda/include/math_functions.hpp"
}
# 766 "/usr/local/cuda/include/math_functions.hpp"
static inline float normcdfinv(float a)
# 767 "/usr/local/cuda/include/math_functions.hpp"
{
# 768 "/usr/local/cuda/include/math_functions.hpp"
return normcdfinvf(a);
# 769 "/usr/local/cuda/include/math_functions.hpp"
}
# 771 "/usr/local/cuda/include/math_functions.hpp"
static inline float normcdf(float a)
# 772 "/usr/local/cuda/include/math_functions.hpp"
{
# 773 "/usr/local/cuda/include/math_functions.hpp"
return normcdff(a);
# 774 "/usr/local/cuda/include/math_functions.hpp"
}
# 776 "/usr/local/cuda/include/math_functions.hpp"
static inline float erfcx(float a)
# 777 "/usr/local/cuda/include/math_functions.hpp"
{
# 778 "/usr/local/cuda/include/math_functions.hpp"
return erfcxf(a);
# 779 "/usr/local/cuda/include/math_functions.hpp"
}
# 781 "/usr/local/cuda/include/math_functions.hpp"
static inline double copysign(double a, float b)
# 782 "/usr/local/cuda/include/math_functions.hpp"
{
# 783 "/usr/local/cuda/include/math_functions.hpp"
return copysign(a, (double)b);
# 784 "/usr/local/cuda/include/math_functions.hpp"
}
# 786 "/usr/local/cuda/include/math_functions.hpp"
static inline float copysign(float a, double b)
# 787 "/usr/local/cuda/include/math_functions.hpp"
{
# 788 "/usr/local/cuda/include/math_functions.hpp"
return copysignf(a, (float)b);
# 789 "/usr/local/cuda/include/math_functions.hpp"
}
# 791 "/usr/local/cuda/include/math_functions.hpp"
static inline unsigned min(unsigned a, unsigned b)
# 792 "/usr/local/cuda/include/math_functions.hpp"
{
# 793 "/usr/local/cuda/include/math_functions.hpp"
return umin(a, b);
# 794 "/usr/local/cuda/include/math_functions.hpp"
}
# 796 "/usr/local/cuda/include/math_functions.hpp"
static inline unsigned min(int a, unsigned b)
# 797 "/usr/local/cuda/include/math_functions.hpp"
{
# 798 "/usr/local/cuda/include/math_functions.hpp"
return umin((unsigned)a, b);
# 799 "/usr/local/cuda/include/math_functions.hpp"
}
# 801 "/usr/local/cuda/include/math_functions.hpp"
static inline unsigned min(unsigned a, int b)
# 802 "/usr/local/cuda/include/math_functions.hpp"
{
# 803 "/usr/local/cuda/include/math_functions.hpp"
return umin(a, (unsigned)b);
# 804 "/usr/local/cuda/include/math_functions.hpp"
}
# 806 "/usr/local/cuda/include/math_functions.hpp"
static inline long min(long a, long b)
# 807 "/usr/local/cuda/include/math_functions.hpp"
{
# 813 "/usr/local/cuda/include/math_functions.hpp"
if (sizeof(long) == sizeof(int)) {
# 817 "/usr/local/cuda/include/math_functions.hpp"
return (long)min((int)a, (int)b);
# 818 "/usr/local/cuda/include/math_functions.hpp"
} else {
# 819 "/usr/local/cuda/include/math_functions.hpp"
return (long)llmin((long long)a, (long long)b);
# 820 "/usr/local/cuda/include/math_functions.hpp"
}
# 821 "/usr/local/cuda/include/math_functions.hpp"
}
# 823 "/usr/local/cuda/include/math_functions.hpp"
static inline unsigned long min(unsigned long a, unsigned long b)
# 824 "/usr/local/cuda/include/math_functions.hpp"
{
# 828 "/usr/local/cuda/include/math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 832 "/usr/local/cuda/include/math_functions.hpp"
return (unsigned long)umin((unsigned)a, (unsigned)b);
# 833 "/usr/local/cuda/include/math_functions.hpp"
} else {
# 834 "/usr/local/cuda/include/math_functions.hpp"
return (unsigned long)ullmin((unsigned long long)a, (unsigned long long)b);
# 835 "/usr/local/cuda/include/math_functions.hpp"
}
# 836 "/usr/local/cuda/include/math_functions.hpp"
}
# 838 "/usr/local/cuda/include/math_functions.hpp"
static inline unsigned long min(long a, unsigned long b)
# 839 "/usr/local/cuda/include/math_functions.hpp"
{
# 843 "/usr/local/cuda/include/math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 847 "/usr/local/cuda/include/math_functions.hpp"
return (unsigned long)umin((unsigned)a, (unsigned)b);
# 848 "/usr/local/cuda/include/math_functions.hpp"
} else {
# 849 "/usr/local/cuda/include/math_functions.hpp"
return (unsigned long)ullmin((unsigned long long)a, (unsigned long long)b);
# 850 "/usr/local/cuda/include/math_functions.hpp"
}
# 851 "/usr/local/cuda/include/math_functions.hpp"
}
# 853 "/usr/local/cuda/include/math_functions.hpp"
static inline unsigned long min(unsigned long a, long b)
# 854 "/usr/local/cuda/include/math_functions.hpp"
{
# 858 "/usr/local/cuda/include/math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 862 "/usr/local/cuda/include/math_functions.hpp"
return (unsigned long)umin((unsigned)a, (unsigned)b);
# 863 "/usr/local/cuda/include/math_functions.hpp"
} else {
# 864 "/usr/local/cuda/include/math_functions.hpp"
return (unsigned long)ullmin((unsigned long long)a, (unsigned long long)b);
# 865 "/usr/local/cuda/include/math_functions.hpp"
}
# 866 "/usr/local/cuda/include/math_functions.hpp"
}
# 868 "/usr/local/cuda/include/math_functions.hpp"
static inline long long min(long long a, long long b)
# 869 "/usr/local/cuda/include/math_functions.hpp"
{
# 870 "/usr/local/cuda/include/math_functions.hpp"
return llmin(a, b);
# 871 "/usr/local/cuda/include/math_functions.hpp"
}
# 873 "/usr/local/cuda/include/math_functions.hpp"
static inline unsigned long long min(unsigned long long a, unsigned long long b)
# 874 "/usr/local/cuda/include/math_functions.hpp"
{
# 875 "/usr/local/cuda/include/math_functions.hpp"
return ullmin(a, b);
# 876 "/usr/local/cuda/include/math_functions.hpp"
}
# 878 "/usr/local/cuda/include/math_functions.hpp"
static inline unsigned long long min(long long a, unsigned long long b)
# 879 "/usr/local/cuda/include/math_functions.hpp"
{
# 880 "/usr/local/cuda/include/math_functions.hpp"
return ullmin((unsigned long long)a, b);
# 881 "/usr/local/cuda/include/math_functions.hpp"
}
# 883 "/usr/local/cuda/include/math_functions.hpp"
static inline unsigned long long min(unsigned long long a, long long b)
# 884 "/usr/local/cuda/include/math_functions.hpp"
{
# 885 "/usr/local/cuda/include/math_functions.hpp"
return ullmin(a, (unsigned long long)b);
# 886 "/usr/local/cuda/include/math_functions.hpp"
}
# 888 "/usr/local/cuda/include/math_functions.hpp"
static inline float min(float a, float b)
# 889 "/usr/local/cuda/include/math_functions.hpp"
{
# 890 "/usr/local/cuda/include/math_functions.hpp"
return fminf(a, b);
# 891 "/usr/local/cuda/include/math_functions.hpp"
}
# 893 "/usr/local/cuda/include/math_functions.hpp"
static inline double min(double a, double b)
# 894 "/usr/local/cuda/include/math_functions.hpp"
{
# 895 "/usr/local/cuda/include/math_functions.hpp"
return fmin(a, b);
# 896 "/usr/local/cuda/include/math_functions.hpp"
}
# 898 "/usr/local/cuda/include/math_functions.hpp"
static inline double min(float a, double b)
# 899 "/usr/local/cuda/include/math_functions.hpp"
{
# 900 "/usr/local/cuda/include/math_functions.hpp"
return fmin((double)a, b);
# 901 "/usr/local/cuda/include/math_functions.hpp"
}
# 903 "/usr/local/cuda/include/math_functions.hpp"
static inline double min(double a, float b)
# 904 "/usr/local/cuda/include/math_functions.hpp"
{
# 905 "/usr/local/cuda/include/math_functions.hpp"
return fmin(a, (double)b);
# 906 "/usr/local/cuda/include/math_functions.hpp"
}
# 908 "/usr/local/cuda/include/math_functions.hpp"
static inline unsigned max(unsigned a, unsigned b)
# 909 "/usr/local/cuda/include/math_functions.hpp"
{
# 910 "/usr/local/cuda/include/math_functions.hpp"
return umax(a, b);
# 911 "/usr/local/cuda/include/math_functions.hpp"
}
# 913 "/usr/local/cuda/include/math_functions.hpp"
static inline unsigned max(int a, unsigned b)
# 914 "/usr/local/cuda/include/math_functions.hpp"
{
# 915 "/usr/local/cuda/include/math_functions.hpp"
return umax((unsigned)a, b);
# 916 "/usr/local/cuda/include/math_functions.hpp"
}
# 918 "/usr/local/cuda/include/math_functions.hpp"
static inline unsigned max(unsigned a, int b)
# 919 "/usr/local/cuda/include/math_functions.hpp"
{
# 920 "/usr/local/cuda/include/math_functions.hpp"
return umax(a, (unsigned)b);
# 921 "/usr/local/cuda/include/math_functions.hpp"
}
# 923 "/usr/local/cuda/include/math_functions.hpp"
static inline long max(long a, long b)
# 924 "/usr/local/cuda/include/math_functions.hpp"
{
# 929 "/usr/local/cuda/include/math_functions.hpp"
if (sizeof(long) == sizeof(int)) {
# 933 "/usr/local/cuda/include/math_functions.hpp"
return (long)max((int)a, (int)b);
# 934 "/usr/local/cuda/include/math_functions.hpp"
} else {
# 935 "/usr/local/cuda/include/math_functions.hpp"
return (long)llmax((long long)a, (long long)b);
# 936 "/usr/local/cuda/include/math_functions.hpp"
}
# 937 "/usr/local/cuda/include/math_functions.hpp"
}
# 939 "/usr/local/cuda/include/math_functions.hpp"
static inline unsigned long max(unsigned long a, unsigned long b)
# 940 "/usr/local/cuda/include/math_functions.hpp"
{
# 944 "/usr/local/cuda/include/math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 948 "/usr/local/cuda/include/math_functions.hpp"
return (unsigned long)umax((unsigned)a, (unsigned)b);
# 949 "/usr/local/cuda/include/math_functions.hpp"
} else {
# 950 "/usr/local/cuda/include/math_functions.hpp"
return (unsigned long)ullmax((unsigned long long)a, (unsigned long long)b);
# 951 "/usr/local/cuda/include/math_functions.hpp"
}
# 952 "/usr/local/cuda/include/math_functions.hpp"
}
# 954 "/usr/local/cuda/include/math_functions.hpp"
static inline unsigned long max(long a, unsigned long b)
# 955 "/usr/local/cuda/include/math_functions.hpp"
{
# 959 "/usr/local/cuda/include/math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 963 "/usr/local/cuda/include/math_functions.hpp"
return (unsigned long)umax((unsigned)a, (unsigned)b);
# 964 "/usr/local/cuda/include/math_functions.hpp"
} else {
# 965 "/usr/local/cuda/include/math_functions.hpp"
return (unsigned long)ullmax((unsigned long long)a, (unsigned long long)b);
# 966 "/usr/local/cuda/include/math_functions.hpp"
}
# 967 "/usr/local/cuda/include/math_functions.hpp"
}
# 969 "/usr/local/cuda/include/math_functions.hpp"
static inline unsigned long max(unsigned long a, long b)
# 970 "/usr/local/cuda/include/math_functions.hpp"
{
# 974 "/usr/local/cuda/include/math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 978 "/usr/local/cuda/include/math_functions.hpp"
return (unsigned long)umax((unsigned)a, (unsigned)b);
# 979 "/usr/local/cuda/include/math_functions.hpp"
} else {
# 980 "/usr/local/cuda/include/math_functions.hpp"
return (unsigned long)ullmax((unsigned long long)a, (unsigned long long)b);
# 981 "/usr/local/cuda/include/math_functions.hpp"
}
# 982 "/usr/local/cuda/include/math_functions.hpp"
}
# 984 "/usr/local/cuda/include/math_functions.hpp"
static inline long long max(long long a, long long b)
# 985 "/usr/local/cuda/include/math_functions.hpp"
{
# 986 "/usr/local/cuda/include/math_functions.hpp"
return llmax(a, b);
# 987 "/usr/local/cuda/include/math_functions.hpp"
}
# 989 "/usr/local/cuda/include/math_functions.hpp"
static inline unsigned long long max(unsigned long long a, unsigned long long b)
# 990 "/usr/local/cuda/include/math_functions.hpp"
{
# 991 "/usr/local/cuda/include/math_functions.hpp"
return ullmax(a, b);
# 992 "/usr/local/cuda/include/math_functions.hpp"
}
# 994 "/usr/local/cuda/include/math_functions.hpp"
static inline unsigned long long max(long long a, unsigned long long b)
# 995 "/usr/local/cuda/include/math_functions.hpp"
{
# 996 "/usr/local/cuda/include/math_functions.hpp"
return ullmax((unsigned long long)a, b);
# 997 "/usr/local/cuda/include/math_functions.hpp"
}
# 999 "/usr/local/cuda/include/math_functions.hpp"
static inline unsigned long long max(unsigned long long a, long long b)
# 1000 "/usr/local/cuda/include/math_functions.hpp"
{
# 1001 "/usr/local/cuda/include/math_functions.hpp"
return ullmax(a, (unsigned long long)b);
# 1002 "/usr/local/cuda/include/math_functions.hpp"
}
# 1004 "/usr/local/cuda/include/math_functions.hpp"
static inline float max(float a, float b)
# 1005 "/usr/local/cuda/include/math_functions.hpp"
{
# 1006 "/usr/local/cuda/include/math_functions.hpp"
return fmaxf(a, b);
# 1007 "/usr/local/cuda/include/math_functions.hpp"
}
# 1009 "/usr/local/cuda/include/math_functions.hpp"
static inline double max(double a, double b)
# 1010 "/usr/local/cuda/include/math_functions.hpp"
{
# 1011 "/usr/local/cuda/include/math_functions.hpp"
return fmax(a, b);
# 1012 "/usr/local/cuda/include/math_functions.hpp"
}
# 1014 "/usr/local/cuda/include/math_functions.hpp"
static inline double max(float a, double b)
# 1015 "/usr/local/cuda/include/math_functions.hpp"
{
# 1016 "/usr/local/cuda/include/math_functions.hpp"
return fmax((double)a, b);
# 1017 "/usr/local/cuda/include/math_functions.hpp"
}
# 1019 "/usr/local/cuda/include/math_functions.hpp"
static inline double max(double a, float b)
# 1020 "/usr/local/cuda/include/math_functions.hpp"
{
# 1021 "/usr/local/cuda/include/math_functions.hpp"
return fmax(a, (double)b);
# 1022 "/usr/local/cuda/include/math_functions.hpp"
}
# 1033 "/usr/local/cuda/include/math_functions.hpp"
extern "C" inline int min(int a, int b)
# 1034 "/usr/local/cuda/include/math_functions.hpp"
{
# 1035 "/usr/local/cuda/include/math_functions.hpp"
return (a < b) ? a : b;
# 1036 "/usr/local/cuda/include/math_functions.hpp"
}
# 1038 "/usr/local/cuda/include/math_functions.hpp"
extern "C" inline unsigned umin(unsigned a, unsigned b)
# 1039 "/usr/local/cuda/include/math_functions.hpp"
{
# 1040 "/usr/local/cuda/include/math_functions.hpp"
return (a < b) ? a : b;
# 1041 "/usr/local/cuda/include/math_functions.hpp"
}
# 1043 "/usr/local/cuda/include/math_functions.hpp"
extern "C" inline long long llmin(long long a, long long b)
# 1044 "/usr/local/cuda/include/math_functions.hpp"
{
# 1045 "/usr/local/cuda/include/math_functions.hpp"
return (a < b) ? a : b;
# 1046 "/usr/local/cuda/include/math_functions.hpp"
}
# 1048 "/usr/local/cuda/include/math_functions.hpp"
extern "C" inline unsigned long long ullmin(unsigned long long a, unsigned long long
# 1049 "/usr/local/cuda/include/math_functions.hpp"
b)
# 1050 "/usr/local/cuda/include/math_functions.hpp"
{
# 1051 "/usr/local/cuda/include/math_functions.hpp"
return (a < b) ? a : b;
# 1052 "/usr/local/cuda/include/math_functions.hpp"
}
# 1054 "/usr/local/cuda/include/math_functions.hpp"
extern "C" inline int max(int a, int b)
# 1055 "/usr/local/cuda/include/math_functions.hpp"
{
# 1056 "/usr/local/cuda/include/math_functions.hpp"
return (a > b) ? a : b;
# 1057 "/usr/local/cuda/include/math_functions.hpp"
}
# 1059 "/usr/local/cuda/include/math_functions.hpp"
extern "C" inline unsigned umax(unsigned a, unsigned b)
# 1060 "/usr/local/cuda/include/math_functions.hpp"
{
# 1061 "/usr/local/cuda/include/math_functions.hpp"
return (a > b) ? a : b;
# 1062 "/usr/local/cuda/include/math_functions.hpp"
}
# 1064 "/usr/local/cuda/include/math_functions.hpp"
extern "C" inline long long llmax(long long a, long long b)
# 1065 "/usr/local/cuda/include/math_functions.hpp"
{
# 1066 "/usr/local/cuda/include/math_functions.hpp"
return (a > b) ? a : b;
# 1067 "/usr/local/cuda/include/math_functions.hpp"
}
# 1069 "/usr/local/cuda/include/math_functions.hpp"
extern "C" inline unsigned long long ullmax(unsigned long long a, unsigned long long
# 1070 "/usr/local/cuda/include/math_functions.hpp"
b)
# 1071 "/usr/local/cuda/include/math_functions.hpp"
{
# 1072 "/usr/local/cuda/include/math_functions.hpp"
return (a > b) ? a : b;
# 1073 "/usr/local/cuda/include/math_functions.hpp"
}
# 77 "/usr/local/cuda/include/cuda_surface_types.h"
template< class T, int dim = 1>
# 78 "/usr/local/cuda/include/cuda_surface_types.h"
struct surface : public surfaceReference {
# 81 "/usr/local/cuda/include/cuda_surface_types.h"
surface()
# 82 "/usr/local/cuda/include/cuda_surface_types.h"
{
# 83 "/usr/local/cuda/include/cuda_surface_types.h"
(surfaceReference::channelDesc) = cudaCreateChannelDesc< T> ();
# 84 "/usr/local/cuda/include/cuda_surface_types.h"
}
# 86 "/usr/local/cuda/include/cuda_surface_types.h"
surface(cudaChannelFormatDesc desc)
# 87 "/usr/local/cuda/include/cuda_surface_types.h"
{
# 88 "/usr/local/cuda/include/cuda_surface_types.h"
(surfaceReference::channelDesc) = desc;
# 89 "/usr/local/cuda/include/cuda_surface_types.h"
}
# 91 "/usr/local/cuda/include/cuda_surface_types.h"
};
# 93 "/usr/local/cuda/include/cuda_surface_types.h"
template< int dim>
# 94 "/usr/local/cuda/include/cuda_surface_types.h"
struct surface< void, dim> : public surfaceReference {
# 97 "/usr/local/cuda/include/cuda_surface_types.h"
surface()
# 98 "/usr/local/cuda/include/cuda_surface_types.h"
{
# 99 "/usr/local/cuda/include/cuda_surface_types.h"
(surfaceReference::channelDesc) = cudaCreateChannelDesc< void> ();
# 100 "/usr/local/cuda/include/cuda_surface_types.h"
}
# 102 "/usr/local/cuda/include/cuda_surface_types.h"
};
# 77 "/usr/local/cuda/include/cuda_texture_types.h"
template< class T, int texType = 1, cudaTextureReadMode mode = cudaReadModeElementType>
# 78 "/usr/local/cuda/include/cuda_texture_types.h"
struct texture : public textureReference {
# 81 "/usr/local/cuda/include/cuda_texture_types.h"
texture(int norm = 0, cudaTextureFilterMode
# 82 "/usr/local/cuda/include/cuda_texture_types.h"
fMode = cudaFilterModePoint, cudaTextureAddressMode
# 83 "/usr/local/cuda/include/cuda_texture_types.h"
aMode = cudaAddressModeClamp)
# 84 "/usr/local/cuda/include/cuda_texture_types.h"
{
# 85 "/usr/local/cuda/include/cuda_texture_types.h"
(textureReference::normalized) = norm;
# 86 "/usr/local/cuda/include/cuda_texture_types.h"
(textureReference::filterMode) = fMode;
# 87 "/usr/local/cuda/include/cuda_texture_types.h"
((textureReference::addressMode)[0]) = aMode;
# 88 "/usr/local/cuda/include/cuda_texture_types.h"
((textureReference::addressMode)[1]) = aMode;
# 89 "/usr/local/cuda/include/cuda_texture_types.h"
((textureReference::addressMode)[2]) = aMode;
# 90 "/usr/local/cuda/include/cuda_texture_types.h"
(textureReference::channelDesc) = cudaCreateChannelDesc< T> ();
# 91 "/usr/local/cuda/include/cuda_texture_types.h"
(textureReference::sRGB) = 0;
# 92 "/usr/local/cuda/include/cuda_texture_types.h"
}
# 94 "/usr/local/cuda/include/cuda_texture_types.h"
texture(int norm, cudaTextureFilterMode
# 95 "/usr/local/cuda/include/cuda_texture_types.h"
fMode, cudaTextureAddressMode
# 96 "/usr/local/cuda/include/cuda_texture_types.h"
aMode, cudaChannelFormatDesc
# 97 "/usr/local/cuda/include/cuda_texture_types.h"
desc)
# 98 "/usr/local/cuda/include/cuda_texture_types.h"
{
# 99 "/usr/local/cuda/include/cuda_texture_types.h"
(textureReference::normalized) = norm;
# 100 "/usr/local/cuda/include/cuda_texture_types.h"
(textureReference::filterMode) = fMode;
# 101 "/usr/local/cuda/include/cuda_texture_types.h"
((textureReference::addressMode)[0]) = aMode;
# 102 "/usr/local/cuda/include/cuda_texture_types.h"
((textureReference::addressMode)[1]) = aMode;
# 103 "/usr/local/cuda/include/cuda_texture_types.h"
((textureReference::addressMode)[2]) = aMode;
# 104 "/usr/local/cuda/include/cuda_texture_types.h"
(textureReference::channelDesc) = desc;
# 105 "/usr/local/cuda/include/cuda_texture_types.h"
(textureReference::sRGB) = 0;
# 106 "/usr/local/cuda/include/cuda_texture_types.h"
}
# 108 "/usr/local/cuda/include/cuda_texture_types.h"
};
# 90 "/usr/local/cuda/include/device_functions.h"
extern "C" {
# 3230 "/usr/local/cuda/include/device_functions.h"
}
# 3238 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline int mulhi(int a, int b);
# 3240 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b);
# 3242 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b);
# 3244 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b);
# 3246 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline long long mul64hi(long long a, long long b);
# 3248 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b);
# 3250 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b);
# 3252 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b);
# 3254 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline int float_as_int(float a);
# 3256 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline float int_as_float(int a);
# 3258 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned float_as_uint(float a);
# 3260 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline float uint_as_float(unsigned a);
# 3262 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline float saturate(float a);
# 3264 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline int mul24(int a, int b);
# 3266 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b);
# 3268 "/usr/local/cuda/include/device_functions.h"
__attribute((deprecated("Please use __trap() instead."))) __attribute__((unused)) static inline void trap();
# 3271 "/usr/local/cuda/include/device_functions.h"
__attribute((deprecated("Please use __brkpt() instead."))) __attribute__((unused)) static inline void brkpt(int c = 0);
# 3273 "/usr/local/cuda/include/device_functions.h"
__attribute((deprecated("Please use __syncthreads() instead."))) __attribute__((unused)) static inline void syncthreads();
# 3275 "/usr/local/cuda/include/device_functions.h"
__attribute((deprecated("Please use __prof_trigger() instead."))) __attribute__((unused)) static inline void prof_trigger(int e);
# 3277 "/usr/local/cuda/include/device_functions.h"
__attribute((deprecated("Please use __threadfence() instead."))) __attribute__((unused)) static inline void threadfence(bool global = true);
# 3279 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode = cudaRoundZero);
# 3281 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode = cudaRoundZero);
# 3283 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode = cudaRoundNearest);
# 3285 "/usr/local/cuda/include/device_functions.h"
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode = cudaRoundNearest);
# 83 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline int mulhi(int a, int b)
# 84 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 86 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 88 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b)
# 89 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 91 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 93 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b)
# 94 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 96 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 98 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b)
# 99 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 101 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 103 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline long long mul64hi(long long a, long long b)
# 104 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 106 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 108 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b)
# 109 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 111 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 113 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b)
# 114 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 116 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 118 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b)
# 119 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 121 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 123 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline int float_as_int(float a)
# 124 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;
# 126 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 128 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline float int_as_float(int a)
# 129 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;
# 131 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 133 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline unsigned float_as_uint(float a)
# 134 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;
# 136 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 138 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline float uint_as_float(unsigned a)
# 139 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;
# 141 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 142 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline float saturate(float a)
# 143 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;
# 145 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 147 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline int mul24(int a, int b)
# 148 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 150 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 152 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b)
# 153 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 155 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 157 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline void trap()
# 158 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;
# 160 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 163 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline void brkpt(int c)
# 164 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)c;
# 166 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 168 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline void syncthreads()
# 169 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;
# 171 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 173 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline void prof_trigger(int e)
# 174 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)e;
# 191 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 193 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline void threadfence(bool global)
# 194 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)global;
# 196 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 198 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode)
# 199 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 204 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 206 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode)
# 207 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 212 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 214 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode)
# 215 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 220 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 222 "/usr/local/cuda/include/device_functions.hpp"
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode)
# 223 "/usr/local/cuda/include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 228 "/usr/local/cuda/include/device_functions.hpp"
::exit(___);}
# 111 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicAdd(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 113 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAdd(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 115 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicSub(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 117 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicSub(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 119 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicExch(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 121 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicExch(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 123 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline float atomicExch(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 125 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicMin(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 127 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMin(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 129 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicMax(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 131 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMax(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 133 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicInc(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 135 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicDec(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 137 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicAnd(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 139 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAnd(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 141 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicOr(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 143 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicOr(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 145 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicXor(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 147 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicXor(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 149 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicCAS(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 151 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 164 "/usr/local/cuda/include/device_atomic_functions.h"
extern "C" {
# 175 "/usr/local/cuda/include/device_atomic_functions.h"
}
# 185 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAdd(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 187 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicExch(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 189 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicCAS(unsigned long long *address, unsigned long long compare, unsigned long long val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 191 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline bool any(bool cond) {int volatile ___ = 1;(void)cond;::exit(___);}
# 193 "/usr/local/cuda/include/device_atomic_functions.h"
__attribute__((unused)) static inline bool all(bool cond) {int volatile ___ = 1;(void)cond;::exit(___);}
# 80 "/usr/local/cuda/include/device_double_functions.h"
extern "C" {
# 1134 "/usr/local/cuda/include/device_double_functions.h"
}
# 1143 "/usr/local/cuda/include/device_double_functions.h"
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode);
# 1145 "/usr/local/cuda/include/device_double_functions.h"
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1147 "/usr/local/cuda/include/device_double_functions.h"
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1149 "/usr/local/cuda/include/device_double_functions.h"
__attribute__((unused)) static inline double dsub(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1151 "/usr/local/cuda/include/device_double_functions.h"
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode = cudaRoundZero);
# 1153 "/usr/local/cuda/include/device_double_functions.h"
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode = cudaRoundZero);
# 1155 "/usr/local/cuda/include/device_double_functions.h"
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode = cudaRoundZero);
# 1157 "/usr/local/cuda/include/device_double_functions.h"
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode = cudaRoundZero);
# 1159 "/usr/local/cuda/include/device_double_functions.h"
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode = cudaRoundNearest);
# 1161 "/usr/local/cuda/include/device_double_functions.h"
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode = cudaRoundNearest);
# 1163 "/usr/local/cuda/include/device_double_functions.h"
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode = cudaRoundNearest);
# 1165 "/usr/local/cuda/include/device_double_functions.h"
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode = cudaRoundNearest);
# 1167 "/usr/local/cuda/include/device_double_functions.h"
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode = cudaRoundNearest);
# 85 "/usr/local/cuda/include/device_double_functions.hpp"
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode)
# 86 "/usr/local/cuda/include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)c;(void)mode;
# 91 "/usr/local/cuda/include/device_double_functions.hpp"
::exit(___);}
# 93 "/usr/local/cuda/include/device_double_functions.hpp"
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode)
# 94 "/usr/local/cuda/include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 99 "/usr/local/cuda/include/device_double_functions.hpp"
::exit(___);}
# 101 "/usr/local/cuda/include/device_double_functions.hpp"
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode)
# 102 "/usr/local/cuda/include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 107 "/usr/local/cuda/include/device_double_functions.hpp"
::exit(___);}
# 109 "/usr/local/cuda/include/device_double_functions.hpp"
__attribute__((unused)) static inline double dsub(double a, double b, cudaRoundMode mode)
# 110 "/usr/local/cuda/include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 115 "/usr/local/cuda/include/device_double_functions.hpp"
::exit(___);}
# 117 "/usr/local/cuda/include/device_double_functions.hpp"
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode)
# 118 "/usr/local/cuda/include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 123 "/usr/local/cuda/include/device_double_functions.hpp"
::exit(___);}
# 125 "/usr/local/cuda/include/device_double_functions.hpp"
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode)
# 126 "/usr/local/cuda/include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 131 "/usr/local/cuda/include/device_double_functions.hpp"
::exit(___);}
# 133 "/usr/local/cuda/include/device_double_functions.hpp"
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode)
# 134 "/usr/local/cuda/include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 139 "/usr/local/cuda/include/device_double_functions.hpp"
::exit(___);}
# 141 "/usr/local/cuda/include/device_double_functions.hpp"
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode)
# 142 "/usr/local/cuda/include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 147 "/usr/local/cuda/include/device_double_functions.hpp"
::exit(___);}
# 149 "/usr/local/cuda/include/device_double_functions.hpp"
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode)
# 150 "/usr/local/cuda/include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 155 "/usr/local/cuda/include/device_double_functions.hpp"
::exit(___);}
# 157 "/usr/local/cuda/include/device_double_functions.hpp"
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode)
# 158 "/usr/local/cuda/include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 163 "/usr/local/cuda/include/device_double_functions.hpp"
::exit(___);}
# 165 "/usr/local/cuda/include/device_double_functions.hpp"
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode)
# 166 "/usr/local/cuda/include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 168 "/usr/local/cuda/include/device_double_functions.hpp"
::exit(___);}
# 170 "/usr/local/cuda/include/device_double_functions.hpp"
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode)
# 171 "/usr/local/cuda/include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 173 "/usr/local/cuda/include/device_double_functions.hpp"
::exit(___);}
# 175 "/usr/local/cuda/include/device_double_functions.hpp"
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode)
# 176 "/usr/local/cuda/include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 178 "/usr/local/cuda/include/device_double_functions.hpp"
::exit(___);}
# 94 "/usr/local/cuda/include/sm_20_atomic_functions.h"
__attribute__((unused)) static inline float atomicAdd(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 102 "/usr/local/cuda/include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMin(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 104 "/usr/local/cuda/include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMax(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 106 "/usr/local/cuda/include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMin(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 108 "/usr/local/cuda/include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMax(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 110 "/usr/local/cuda/include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAnd(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 112 "/usr/local/cuda/include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicOr(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 114 "/usr/local/cuda/include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicXor(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 308 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline double atomicAdd(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 311 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicAdd_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 314 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicAdd_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 317 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAdd_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 320 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAdd_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 323 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAdd_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 326 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAdd_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 329 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline float atomicAdd_block(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 332 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline float atomicAdd_system(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 335 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline double atomicAdd_block(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 338 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline double atomicAdd_system(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 341 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicExch_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 344 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicExch_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 347 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicExch_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 350 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicExch_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 353 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicExch_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 356 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicExch_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 359 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline float atomicExch_block(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 362 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline float atomicExch_system(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 365 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicMin_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 368 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicMin_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 371 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMin_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 374 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMin_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 377 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMin_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 380 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMin_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 383 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMin_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 386 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMin_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 389 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicMax_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 392 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicMax_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 395 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMax_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 398 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMax_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 401 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMax_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 404 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMax_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 407 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMax_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 410 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMax_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 413 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicInc_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 416 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicInc_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 419 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicDec_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 422 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicDec_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 425 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicCAS_block(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 428 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicCAS_system(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 431 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicCAS_block(unsigned *address, unsigned compare, unsigned
# 432 "/usr/local/cuda/include/sm_60_atomic_functions.h"
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 435 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicCAS_system(unsigned *address, unsigned compare, unsigned
# 436 "/usr/local/cuda/include/sm_60_atomic_functions.h"
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 439 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicCAS_block(unsigned long long *address, unsigned long long
# 440 "/usr/local/cuda/include/sm_60_atomic_functions.h"
compare, unsigned long long
# 441 "/usr/local/cuda/include/sm_60_atomic_functions.h"
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 444 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicCAS_system(unsigned long long *address, unsigned long long
# 445 "/usr/local/cuda/include/sm_60_atomic_functions.h"
compare, unsigned long long
# 446 "/usr/local/cuda/include/sm_60_atomic_functions.h"
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 449 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicAnd_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 452 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicAnd_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 455 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicAnd_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 458 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicAnd_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 461 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAnd_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 464 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAnd_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 467 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAnd_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 470 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAnd_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 473 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicOr_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 476 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicOr_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 479 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicOr_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 482 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicOr_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 485 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicOr_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 488 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicOr_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 491 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicOr_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 494 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicOr_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 497 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicXor_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 500 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicXor_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 503 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicXor_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 506 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicXor_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 509 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicXor_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 512 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicXor_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 515 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicXor_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 518 "/usr/local/cuda/include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicXor_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 79 "/usr/local/cuda/include/sm_20_intrinsics.h"
extern "C" {
# 1466 "/usr/local/cuda/include/sm_20_intrinsics.h"
}
# 1475 "/usr/local/cuda/include/sm_20_intrinsics.h"
__attribute__((unused)) static inline unsigned ballot(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1477 "/usr/local/cuda/include/sm_20_intrinsics.h"
__attribute__((unused)) static inline int syncthreads_count(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1479 "/usr/local/cuda/include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_and(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1481 "/usr/local/cuda/include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_or(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1486 "/usr/local/cuda/include/sm_20_intrinsics.h"
__attribute__((unused)) static inline unsigned __isGlobal(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 98 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl(int var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 100 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned __shfl(unsigned var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 102 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_up(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 103 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned __shfl_up(unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 105 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_down(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 107 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned __shfl_down(unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 109 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_xor(int var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 111 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned __shfl_xor(unsigned var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 113 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl(float var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 115 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_up(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 117 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_down(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 119 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_xor(float var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 122 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long long __shfl(long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 124 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __shfl(unsigned long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 126 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long long __shfl_up(long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 128 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __shfl_up(unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 130 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long long __shfl_down(long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 132 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __shfl_down(unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 134 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long long __shfl_xor(long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 136 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __shfl_xor(unsigned long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 138 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline double __shfl(double var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 140 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline double __shfl_up(double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 142 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline double __shfl_down(double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 144 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline double __shfl_xor(double var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 148 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long __shfl(long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 150 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long __shfl(unsigned long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 152 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long __shfl_up(long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 154 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long __shfl_up(unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 156 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long __shfl_down(long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 158 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long __shfl_down(unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 160 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long __shfl_xor(long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 162 "/usr/local/cuda/include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long __shfl_xor(unsigned long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 89 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long __ldg(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 90 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long __ldg(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 92 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char __ldg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 93 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline signed char __ldg(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 94 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short __ldg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 95 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int __ldg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 96 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long long __ldg(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 97 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char2 __ldg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 98 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char4 __ldg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 99 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short2 __ldg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 100 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short4 __ldg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 101 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int2 __ldg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 102 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int4 __ldg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 103 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline longlong2 __ldg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 105 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned char __ldg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 106 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned short __ldg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 107 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __ldg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 108 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __ldg(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 109 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar2 __ldg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 110 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar4 __ldg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 111 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort2 __ldg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 112 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort4 __ldg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 113 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint2 __ldg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 114 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint4 __ldg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 115 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ulonglong2 __ldg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 117 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float __ldg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 118 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double __ldg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 119 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float2 __ldg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 120 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float4 __ldg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 121 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double2 __ldg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 125 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long __ldcg(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 126 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long __ldcg(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 128 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char __ldcg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 129 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline signed char __ldcg(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 130 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short __ldcg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 131 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int __ldcg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 132 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long long __ldcg(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 133 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char2 __ldcg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 134 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char4 __ldcg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 135 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short2 __ldcg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 136 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short4 __ldcg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 137 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int2 __ldcg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 138 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int4 __ldcg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 139 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline longlong2 __ldcg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 141 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned char __ldcg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 142 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned short __ldcg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 143 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __ldcg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 144 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __ldcg(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 145 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar2 __ldcg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 146 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar4 __ldcg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 147 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort2 __ldcg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 148 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort4 __ldcg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 149 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint2 __ldcg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 150 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint4 __ldcg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 151 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ulonglong2 __ldcg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 153 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float __ldcg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 154 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double __ldcg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 155 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float2 __ldcg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 156 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float4 __ldcg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 157 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double2 __ldcg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 161 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long __ldca(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 162 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long __ldca(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 164 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char __ldca(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 165 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline signed char __ldca(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 166 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short __ldca(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 167 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int __ldca(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 168 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long long __ldca(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 169 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char2 __ldca(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 170 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char4 __ldca(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 171 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short2 __ldca(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 172 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short4 __ldca(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 173 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int2 __ldca(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 174 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int4 __ldca(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 175 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline longlong2 __ldca(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 177 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned char __ldca(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 178 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned short __ldca(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 179 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __ldca(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 180 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __ldca(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 181 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar2 __ldca(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 182 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar4 __ldca(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 183 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort2 __ldca(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 184 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort4 __ldca(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 185 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint2 __ldca(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 186 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint4 __ldca(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 187 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ulonglong2 __ldca(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 189 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float __ldca(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 190 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double __ldca(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 191 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float2 __ldca(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 192 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float4 __ldca(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 193 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double2 __ldca(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 197 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long __ldcs(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 198 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long __ldcs(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 200 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char __ldcs(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 201 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline signed char __ldcs(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 202 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short __ldcs(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 203 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int __ldcs(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 204 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long long __ldcs(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 205 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char2 __ldcs(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 206 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char4 __ldcs(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 207 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short2 __ldcs(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 208 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short4 __ldcs(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 209 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int2 __ldcs(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 210 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int4 __ldcs(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 211 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline longlong2 __ldcs(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 213 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned char __ldcs(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 214 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned short __ldcs(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 215 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __ldcs(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 216 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __ldcs(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 217 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar2 __ldcs(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 218 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar4 __ldcs(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 219 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort2 __ldcs(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 220 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort4 __ldcs(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 221 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint2 __ldcs(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 222 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint4 __ldcs(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 223 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ulonglong2 __ldcs(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 225 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float __ldcs(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 226 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double __ldcs(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 227 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float2 __ldcs(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 228 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float4 __ldcs(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 229 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double2 __ldcs(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 236 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_l(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 237 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_lc(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 240 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_r(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 241 "/usr/local/cuda/include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_rc(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 91 "/usr/local/cuda/include/sm_61_intrinsics.h"
__attribute__((unused)) static inline int __dp2a_lo(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 92 "/usr/local/cuda/include/sm_61_intrinsics.h"
__attribute__((unused)) static inline unsigned __dp2a_lo(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 94 "/usr/local/cuda/include/sm_61_intrinsics.h"
__attribute__((unused)) static inline int __dp2a_lo(short2 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 95 "/usr/local/cuda/include/sm_61_intrinsics.h"
__attribute__((unused)) static inline unsigned __dp2a_lo(ushort2 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 97 "/usr/local/cuda/include/sm_61_intrinsics.h"
__attribute__((unused)) static inline int __dp2a_hi(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 98 "/usr/local/cuda/include/sm_61_intrinsics.h"
__attribute__((unused)) static inline unsigned __dp2a_hi(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 100 "/usr/local/cuda/include/sm_61_intrinsics.h"
__attribute__((unused)) static inline int __dp2a_hi(short2 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 101 "/usr/local/cuda/include/sm_61_intrinsics.h"
__attribute__((unused)) static inline unsigned __dp2a_hi(ushort2 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 108 "/usr/local/cuda/include/sm_61_intrinsics.h"
__attribute__((unused)) static inline int __dp4a(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 109 "/usr/local/cuda/include/sm_61_intrinsics.h"
__attribute__((unused)) static inline unsigned __dp4a(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 111 "/usr/local/cuda/include/sm_61_intrinsics.h"
__attribute__((unused)) static inline int __dp4a(char4 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 112 "/usr/local/cuda/include/sm_61_intrinsics.h"
__attribute__((unused)) static inline unsigned __dp4a(uchar4 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 100 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 101 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf1Dread(T *res, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 102 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)s;(void)mode;
# 111 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 113 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 114 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline T surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 115 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 123 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 125 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 126 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf1Dread(T *res, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 127 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)mode;
# 131 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 260 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 261 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf2Dread(T *res, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 262 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 271 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 273 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 274 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline T surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 275 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 283 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 285 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 286 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf2Dread(T *res, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 287 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)mode;
# 291 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 422 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 423 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 424 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 433 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 435 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 436 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline T surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 437 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 445 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 447 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 448 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 449 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 453 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 582 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 583 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 584 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 593 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 595 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 596 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline T surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 597 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 605 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 607 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 608 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 609 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)mode;
# 613 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 768 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 769 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 770 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 779 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 781 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 782 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline T surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 783 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 791 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 793 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 794 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 795 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 799 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 919 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 920 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 921 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 930 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 932 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 933 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline T surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 934 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 942 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 944 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 945 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 946 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 950 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 1070 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 1071 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1072 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 1081 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 1083 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 1084 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline T surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1085 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1093 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 1095 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 1096 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1097 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1101 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 1232 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 1233 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf1Dwrite(T val, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1234 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)s;(void)mode;
# 1254 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 1256 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 1257 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf1Dwrite(T val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1258 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 1262 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 1377 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 1378 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf2Dwrite(T val, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1379 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 1399 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 1401 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 1402 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf2Dwrite(T val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1403 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 1407 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 1520 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 1521 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1522 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 1542 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 1544 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 1545 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1546 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1550 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 1666 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 1667 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1668 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 1688 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 1690 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 1691 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1692 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 1696 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 1822 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 1823 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1824 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 1844 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 1846 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 1847 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1848 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1852 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 1958 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 1959 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1960 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 1980 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 1982 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 1983 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1984 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1988 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 2093 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 2094 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2095 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 2115 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 2117 "/usr/local/cuda/include/surface_functions.h"
template< class T>
# 2118 "/usr/local/cuda/include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2119 "/usr/local/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2123 "/usr/local/cuda/include/surface_functions.h"
::exit(___);}
# 70 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 71 "/usr/local/cuda/include/texture_fetch_functions.h"
tex1Dfetch(texture< T, 1, cudaReadModeElementType> , int) {int volatile ___ = 1;::exit(___);}
# 73 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T>
# 74 "/usr/local/cuda/include/texture_fetch_functions.h"
struct __nv_tex_rmnf_ret { };
# 76 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< char> { typedef float type; };
# 77 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< signed char> { typedef float type; };
# 78 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< unsigned char> { typedef float type; };
# 79 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< short> { typedef float type; };
# 80 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< unsigned short> { typedef float type; };
# 81 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< char1> { typedef float1 type; };
# 82 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< uchar1> { typedef float1 type; };
# 83 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< short1> { typedef float1 type; };
# 84 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< ushort1> { typedef float1 type; };
# 85 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< char2> { typedef float2 type; };
# 86 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< uchar2> { typedef float2 type; };
# 87 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< short2> { typedef float2 type; };
# 88 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< ushort2> { typedef float2 type; };
# 89 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< char4> { typedef float4 type; };
# 90 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< uchar4> { typedef float4 type; };
# 91 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< short4> { typedef float4 type; };
# 92 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< ushort4> { typedef float4 type; };
# 94 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 95 "/usr/local/cuda/include/texture_fetch_functions.h"
tex1Dfetch(texture< T, 1, cudaReadModeNormalizedFloat> , int) {int volatile ___ = 1;::exit(___);}
# 215 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 216 "/usr/local/cuda/include/texture_fetch_functions.h"
tex1D(texture< T, 1, cudaReadModeElementType> , float) {int volatile ___ = 1;::exit(___);}
# 218 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 219 "/usr/local/cuda/include/texture_fetch_functions.h"
tex1D(texture< T, 1, cudaReadModeNormalizedFloat> , float) {int volatile ___ = 1;::exit(___);}
# 345 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 346 "/usr/local/cuda/include/texture_fetch_functions.h"
tex2D(texture< T, 2, cudaReadModeElementType> , float, float) {int volatile ___ = 1;::exit(___);}
# 348 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 349 "/usr/local/cuda/include/texture_fetch_functions.h"
tex2D(texture< T, 2, cudaReadModeNormalizedFloat> , float, float) {int volatile ___ = 1;::exit(___);}
# 475 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 476 "/usr/local/cuda/include/texture_fetch_functions.h"
tex1DLayered(texture< T, 241, cudaReadModeElementType> , float, int) {int volatile ___ = 1;::exit(___);}
# 478 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 479 "/usr/local/cuda/include/texture_fetch_functions.h"
tex1DLayered(texture< T, 241, cudaReadModeNormalizedFloat> , float, int) {int volatile ___ = 1;::exit(___);}
# 603 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 604 "/usr/local/cuda/include/texture_fetch_functions.h"
tex2DLayered(texture< T, 242, cudaReadModeElementType> , float, float, int) {int volatile ___ = 1;::exit(___);}
# 606 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 607 "/usr/local/cuda/include/texture_fetch_functions.h"
tex2DLayered(texture< T, 242, cudaReadModeNormalizedFloat> , float, float, int) {int volatile ___ = 1;::exit(___);}
# 735 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 736 "/usr/local/cuda/include/texture_fetch_functions.h"
tex3D(texture< T, 3, cudaReadModeElementType> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 738 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 739 "/usr/local/cuda/include/texture_fetch_functions.h"
tex3D(texture< T, 3, cudaReadModeNormalizedFloat> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 864 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 865 "/usr/local/cuda/include/texture_fetch_functions.h"
texCubemap(texture< T, 12, cudaReadModeElementType> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 867 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 868 "/usr/local/cuda/include/texture_fetch_functions.h"
texCubemap(texture< T, 12, cudaReadModeNormalizedFloat> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 992 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 993 "/usr/local/cuda/include/texture_fetch_functions.h"
texCubemapLayered(texture< T, 252, cudaReadModeElementType> , float, float, float, int) {int volatile ___ = 1;::exit(___);}
# 995 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 996 "/usr/local/cuda/include/texture_fetch_functions.h"
texCubemapLayered(texture< T, 252, cudaReadModeNormalizedFloat> , float, float, float, int) {int volatile ___ = 1;::exit(___);}
# 1121 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T>
# 1122 "/usr/local/cuda/include/texture_fetch_functions.h"
struct __nv_tex2dgather_ret { };
# 1123 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< char> { typedef char4 type; };
# 1124 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< signed char> { typedef char4 type; };
# 1125 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< char1> { typedef char4 type; };
# 1126 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< char2> { typedef char4 type; };
# 1127 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< char3> { typedef char4 type; };
# 1128 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< char4> { typedef char4 type; };
# 1129 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< unsigned char> { typedef uchar4 type; };
# 1130 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uchar1> { typedef uchar4 type; };
# 1131 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uchar2> { typedef uchar4 type; };
# 1132 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uchar3> { typedef uchar4 type; };
# 1133 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uchar4> { typedef uchar4 type; };
# 1135 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< short> { typedef short4 type; };
# 1136 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< short1> { typedef short4 type; };
# 1137 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< short2> { typedef short4 type; };
# 1138 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< short3> { typedef short4 type; };
# 1139 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< short4> { typedef short4 type; };
# 1140 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< unsigned short> { typedef ushort4 type; };
# 1141 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< ushort1> { typedef ushort4 type; };
# 1142 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< ushort2> { typedef ushort4 type; };
# 1143 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< ushort3> { typedef ushort4 type; };
# 1144 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< ushort4> { typedef ushort4 type; };
# 1146 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< int> { typedef int4 type; };
# 1147 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< int1> { typedef int4 type; };
# 1148 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< int2> { typedef int4 type; };
# 1149 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< int3> { typedef int4 type; };
# 1150 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< int4> { typedef int4 type; };
# 1151 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< unsigned> { typedef uint4 type; };
# 1152 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uint1> { typedef uint4 type; };
# 1153 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uint2> { typedef uint4 type; };
# 1154 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uint3> { typedef uint4 type; };
# 1155 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uint4> { typedef uint4 type; };
# 1157 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< float> { typedef float4 type; };
# 1158 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< float1> { typedef float4 type; };
# 1159 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< float2> { typedef float4 type; };
# 1160 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< float3> { typedef float4 type; };
# 1161 "/usr/local/cuda/include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< float4> { typedef float4 type; };
# 1163 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex2dgather_ret< T> ::type
# 1164 "/usr/local/cuda/include/texture_fetch_functions.h"
tex2Dgather(texture< T, 2, cudaReadModeElementType> , float, float, int = 0) {int volatile ___ = 1;::exit(___);}
# 1166 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static float4
# 1167 "/usr/local/cuda/include/texture_fetch_functions.h"
tex2Dgather(texture< T, 2, cudaReadModeNormalizedFloat> , float, float, int = 0) {int volatile ___ = 1;::exit(___);}
# 1232 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 1233 "/usr/local/cuda/include/texture_fetch_functions.h"
tex1DLod(texture< T, 1, cudaReadModeElementType> , float, float) {int volatile ___ = 1;::exit(___);}
# 1235 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1236 "/usr/local/cuda/include/texture_fetch_functions.h"
tex1DLod(texture< T, 1, cudaReadModeNormalizedFloat> , float, float) {int volatile ___ = 1;::exit(___);}
# 1360 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 1361 "/usr/local/cuda/include/texture_fetch_functions.h"
tex2DLod(texture< T, 2, cudaReadModeElementType> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 1363 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1364 "/usr/local/cuda/include/texture_fetch_functions.h"
tex2DLod(texture< T, 2, cudaReadModeNormalizedFloat> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 1484 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 1485 "/usr/local/cuda/include/texture_fetch_functions.h"
tex1DLayeredLod(texture< T, 241, cudaReadModeElementType> , float, int, float) {int volatile ___ = 1;::exit(___);}
# 1487 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1488 "/usr/local/cuda/include/texture_fetch_functions.h"
tex1DLayeredLod(texture< T, 241, cudaReadModeNormalizedFloat> , float, int, float) {int volatile ___ = 1;::exit(___);}
# 1612 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 1613 "/usr/local/cuda/include/texture_fetch_functions.h"
tex2DLayeredLod(texture< T, 242, cudaReadModeElementType> , float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1615 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1616 "/usr/local/cuda/include/texture_fetch_functions.h"
tex2DLayeredLod(texture< T, 242, cudaReadModeNormalizedFloat> , float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1740 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 1741 "/usr/local/cuda/include/texture_fetch_functions.h"
tex3DLod(texture< T, 3, cudaReadModeElementType> , float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1743 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1744 "/usr/local/cuda/include/texture_fetch_functions.h"
tex3DLod(texture< T, 3, cudaReadModeNormalizedFloat> , float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1868 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 1869 "/usr/local/cuda/include/texture_fetch_functions.h"
texCubemapLod(texture< T, 12, cudaReadModeElementType> , float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1871 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1872 "/usr/local/cuda/include/texture_fetch_functions.h"
texCubemapLod(texture< T, 12, cudaReadModeNormalizedFloat> , float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1996 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 1997 "/usr/local/cuda/include/texture_fetch_functions.h"
texCubemapLayeredLod(texture< T, 252, cudaReadModeElementType> , float, float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1999 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2000 "/usr/local/cuda/include/texture_fetch_functions.h"
texCubemapLayeredLod(texture< T, 252, cudaReadModeNormalizedFloat> , float, float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 2124 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 2125 "/usr/local/cuda/include/texture_fetch_functions.h"
tex1DGrad(texture< T, 1, cudaReadModeElementType> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 2127 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2128 "/usr/local/cuda/include/texture_fetch_functions.h"
tex1DGrad(texture< T, 1, cudaReadModeNormalizedFloat> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 2252 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 2253 "/usr/local/cuda/include/texture_fetch_functions.h"
tex2DGrad(texture< T, 2, cudaReadModeElementType> , float, float, float2, float2) {int volatile ___ = 1;::exit(___);}
# 2255 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2256 "/usr/local/cuda/include/texture_fetch_functions.h"
tex2DGrad(texture< T, 2, cudaReadModeNormalizedFloat> , float, float, float2, float2) {int volatile ___ = 1;::exit(___);}
# 2380 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 2381 "/usr/local/cuda/include/texture_fetch_functions.h"
tex1DLayeredGrad(texture< T, 241, cudaReadModeElementType> , float, int, float, float) {int volatile ___ = 1;::exit(___);}
# 2383 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2384 "/usr/local/cuda/include/texture_fetch_functions.h"
tex1DLayeredGrad(texture< T, 241, cudaReadModeNormalizedFloat> , float, int, float, float) {int volatile ___ = 1;::exit(___);}
# 2509 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 2510 "/usr/local/cuda/include/texture_fetch_functions.h"
tex2DLayeredGrad(texture< T, 242, cudaReadModeElementType> , float, float, int, float2, float2) {int volatile ___ = 1;::exit(___);}
# 2512 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2513 "/usr/local/cuda/include/texture_fetch_functions.h"
tex2DLayeredGrad(texture< T, 242, cudaReadModeNormalizedFloat> , float, float, int, float2, float2) {int volatile ___ = 1;::exit(___);}
# 2637 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 2638 "/usr/local/cuda/include/texture_fetch_functions.h"
tex3DGrad(texture< T, 3, cudaReadModeElementType> , float, float, float, float4, float4) {int volatile ___ = 1;::exit(___);}
# 2640 "/usr/local/cuda/include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2641 "/usr/local/cuda/include/texture_fetch_functions.h"
tex3DGrad(texture< T, 3, cudaReadModeNormalizedFloat> , float, float, float, float4, float4) {int volatile ___ = 1;::exit(___);}
# 67 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 68 "/usr/local/cuda/include/texture_indirect_functions.h"
tex1Dfetch(T *, cudaTextureObject_t, int) {int volatile ___ = 1;::exit(___);}
# 121 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 122 "/usr/local/cuda/include/texture_indirect_functions.h"
tex1Dfetch(cudaTextureObject_t texObject, int x)
# 123 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;
# 127 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 135 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 136 "/usr/local/cuda/include/texture_indirect_functions.h"
tex1D(T *, cudaTextureObject_t, float) {int volatile ___ = 1;::exit(___);}
# 190 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 191 "/usr/local/cuda/include/texture_indirect_functions.h"
tex1D(cudaTextureObject_t texObject, float x)
# 192 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;
# 196 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 205 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 206 "/usr/local/cuda/include/texture_indirect_functions.h"
tex2D(T *, cudaTextureObject_t, float, float) {int volatile ___ = 1;::exit(___);}
# 258 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 259 "/usr/local/cuda/include/texture_indirect_functions.h"
tex2D(cudaTextureObject_t texObject, float x, float y)
# 260 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;
# 264 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 272 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 273 "/usr/local/cuda/include/texture_indirect_functions.h"
tex3D(T *, cudaTextureObject_t, float, float, float) {int volatile ___ = 1;::exit(___);}
# 325 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 326 "/usr/local/cuda/include/texture_indirect_functions.h"
tex3D(cudaTextureObject_t texObject, float x, float y, float z)
# 327 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
# 331 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 340 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 341 "/usr/local/cuda/include/texture_indirect_functions.h"
tex1DLayered(T *, cudaTextureObject_t, float, int) {int volatile ___ = 1;::exit(___);}
# 393 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 394 "/usr/local/cuda/include/texture_indirect_functions.h"
tex1DLayered(cudaTextureObject_t texObject, float x, int layer)
# 395 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;
# 399 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 408 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 409 "/usr/local/cuda/include/texture_indirect_functions.h"
tex2DLayered(T *, cudaTextureObject_t, float, float, int) {int volatile ___ = 1;::exit(___);}
# 461 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 462 "/usr/local/cuda/include/texture_indirect_functions.h"
tex2DLayered(cudaTextureObject_t texObject, float x, float y, int layer)
# 463 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;
# 467 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 476 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 477 "/usr/local/cuda/include/texture_indirect_functions.h"
texCubemap(T *, cudaTextureObject_t, float, float, float) {int volatile ___ = 1;::exit(___);}
# 529 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 530 "/usr/local/cuda/include/texture_indirect_functions.h"
texCubemap(cudaTextureObject_t texObject, float x, float y, float z)
# 531 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
# 535 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 544 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 545 "/usr/local/cuda/include/texture_indirect_functions.h"
texCubemapLayered(T *, cudaTextureObject_t, float, float, float, int) {int volatile ___ = 1;::exit(___);}
# 598 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 599 "/usr/local/cuda/include/texture_indirect_functions.h"
texCubemapLayered(cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 600 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 604 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 613 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 614 "/usr/local/cuda/include/texture_indirect_functions.h"
tex2Dgather(T *, cudaTextureObject_t, float, float, int = 0) {int volatile ___ = 1;::exit(___);}
# 660 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 661 "/usr/local/cuda/include/texture_indirect_functions.h"
tex2Dgather(cudaTextureObject_t to, float x, float y, int comp = 0)
# 662 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)to;(void)x;(void)y;(void)comp;
# 666 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 675 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 676 "/usr/local/cuda/include/texture_indirect_functions.h"
tex1DLod(T *, cudaTextureObject_t, float, float) {int volatile ___ = 1;::exit(___);}
# 728 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 729 "/usr/local/cuda/include/texture_indirect_functions.h"
tex1DLod(cudaTextureObject_t texObject, float x, float level)
# 730 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)level;
# 734 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 743 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 744 "/usr/local/cuda/include/texture_indirect_functions.h"
tex2DLod(T *, cudaTextureObject_t, float, float, float) {int volatile ___ = 1;::exit(___);}
# 797 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 798 "/usr/local/cuda/include/texture_indirect_functions.h"
tex2DLod(cudaTextureObject_t texObject, float x, float y, float level)
# 799 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)level;
# 803 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 812 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 813 "/usr/local/cuda/include/texture_indirect_functions.h"
tex3DLod(T *, cudaTextureObject_t, float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 865 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 866 "/usr/local/cuda/include/texture_indirect_functions.h"
tex3DLod(cudaTextureObject_t texObject, float x, float y, float z, float level)
# 867 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 871 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 879 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 880 "/usr/local/cuda/include/texture_indirect_functions.h"
tex1DLayeredLod(T *, cudaTextureObject_t, float, int, float) {int volatile ___ = 1;::exit(___);}
# 932 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 933 "/usr/local/cuda/include/texture_indirect_functions.h"
tex1DLayeredLod(cudaTextureObject_t texObject, float x, int layer, float level)
# 934 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)level;
# 938 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 947 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 948 "/usr/local/cuda/include/texture_indirect_functions.h"
tex2DLayeredLod(T *, cudaTextureObject_t, float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1000 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 1001 "/usr/local/cuda/include/texture_indirect_functions.h"
tex2DLayeredLod(cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 1002 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 1006 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 1014 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 1015 "/usr/local/cuda/include/texture_indirect_functions.h"
texCubemapLod(T *, cudaTextureObject_t, float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1067 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 1068 "/usr/local/cuda/include/texture_indirect_functions.h"
texCubemapLod(cudaTextureObject_t texObject, float x, float y, float z, float level)
# 1069 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 1073 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 1081 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 1082 "/usr/local/cuda/include/texture_indirect_functions.h"
texCubemapLayeredLod(T *, cudaTextureObject_t, float, float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1134 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 1135 "/usr/local/cuda/include/texture_indirect_functions.h"
texCubemapLayeredLod(cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 1136 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 1140 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 1148 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 1149 "/usr/local/cuda/include/texture_indirect_functions.h"
tex1DGrad(T *, cudaTextureObject_t, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1202 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 1203 "/usr/local/cuda/include/texture_indirect_functions.h"
tex1DGrad(cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 1204 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 1208 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 1216 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 1217 "/usr/local/cuda/include/texture_indirect_functions.h"
tex2DGrad(T *, cudaTextureObject_t, float, float, float2, float2) {int volatile ___ = 1;::exit(___);}
# 1269 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 1270 "/usr/local/cuda/include/texture_indirect_functions.h"
tex2DGrad(cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 1271 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 1275 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 1283 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 1284 "/usr/local/cuda/include/texture_indirect_functions.h"
tex3DGrad(T *, cudaTextureObject_t, float, float, float, float4, float4) {int volatile ___ = 1;::exit(___);}
# 1336 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 1337 "/usr/local/cuda/include/texture_indirect_functions.h"
tex3DGrad(cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 1338 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 1342 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 1350 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 1351 "/usr/local/cuda/include/texture_indirect_functions.h"
tex1DLayeredGrad(T *, cudaTextureObject_t, float, int, float, float) {int volatile ___ = 1;::exit(___);}
# 1404 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 1405 "/usr/local/cuda/include/texture_indirect_functions.h"
tex1DLayeredGrad(cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 1406 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 1410 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 1418 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 1419 "/usr/local/cuda/include/texture_indirect_functions.h"
tex2DLayeredGrad(T *, cudaTextureObject_t, float, float, int, float2, float2) {int volatile ___ = 1;::exit(___);}
# 1471 "/usr/local/cuda/include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 1472 "/usr/local/cuda/include/texture_indirect_functions.h"
tex2DLayeredGrad(cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 1473 "/usr/local/cuda/include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 1477 "/usr/local/cuda/include/texture_indirect_functions.h"
::exit(___);}
# 68 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 69 "/usr/local/cuda/include/surface_indirect_functions.h"
surf1Dread(T *, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 111 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 112 "/usr/local/cuda/include/surface_indirect_functions.h"
surf1Dread(cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 113 "/usr/local/cuda/include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)boundaryMode;
# 119 "/usr/local/cuda/include/surface_indirect_functions.h"
::exit(___);}
# 128 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 129 "/usr/local/cuda/include/surface_indirect_functions.h"
surf2Dread(T *, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 172 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 173 "/usr/local/cuda/include/surface_indirect_functions.h"
surf2Dread(cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 174 "/usr/local/cuda/include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 180 "/usr/local/cuda/include/surface_indirect_functions.h"
::exit(___);}
# 189 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 190 "/usr/local/cuda/include/surface_indirect_functions.h"
surf3Dread(T *, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 231 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 232 "/usr/local/cuda/include/surface_indirect_functions.h"
surf3Dread(cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 233 "/usr/local/cuda/include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 239 "/usr/local/cuda/include/surface_indirect_functions.h"
::exit(___);}
# 247 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 248 "/usr/local/cuda/include/surface_indirect_functions.h"
surf1DLayeredread(T *, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 290 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 291 "/usr/local/cuda/include/surface_indirect_functions.h"
surf1DLayeredread(cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 292 "/usr/local/cuda/include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 298 "/usr/local/cuda/include/surface_indirect_functions.h"
::exit(___);}
# 306 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 307 "/usr/local/cuda/include/surface_indirect_functions.h"
surf2DLayeredread(T *, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 348 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 349 "/usr/local/cuda/include/surface_indirect_functions.h"
surf2DLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 350 "/usr/local/cuda/include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 356 "/usr/local/cuda/include/surface_indirect_functions.h"
::exit(___);}
# 364 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 365 "/usr/local/cuda/include/surface_indirect_functions.h"
surfCubemapread(T *, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 406 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 407 "/usr/local/cuda/include/surface_indirect_functions.h"
surfCubemapread(cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 408 "/usr/local/cuda/include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 414 "/usr/local/cuda/include/surface_indirect_functions.h"
::exit(___);}
# 422 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 423 "/usr/local/cuda/include/surface_indirect_functions.h"
surfCubemapLayeredread(T *, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 464 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 465 "/usr/local/cuda/include/surface_indirect_functions.h"
surfCubemapLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 466 "/usr/local/cuda/include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 472 "/usr/local/cuda/include/surface_indirect_functions.h"
::exit(___);}
# 480 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 481 "/usr/local/cuda/include/surface_indirect_functions.h"
surf1Dwrite(T, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 528 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 529 "/usr/local/cuda/include/surface_indirect_functions.h"
surf2Dwrite(T, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 576 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 577 "/usr/local/cuda/include/surface_indirect_functions.h"
surf3Dwrite(T, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 626 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 627 "/usr/local/cuda/include/surface_indirect_functions.h"
surf1DLayeredwrite(T, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 675 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 676 "/usr/local/cuda/include/surface_indirect_functions.h"
surf2DLayeredwrite(T, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 723 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 724 "/usr/local/cuda/include/surface_indirect_functions.h"
surfCubemapwrite(T, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 771 "/usr/local/cuda/include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 772 "/usr/local/cuda/include/surface_indirect_functions.h"
surfCubemapLayeredwrite(T, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 68 "/usr/local/cuda/include/device_launch_parameters.h"
extern "C" {
# 71 "/usr/local/cuda/include/device_launch_parameters.h"
extern const uint3 __device_builtin_variable_threadIdx;
# 72 "/usr/local/cuda/include/device_launch_parameters.h"
extern const uint3 __device_builtin_variable_blockIdx;
# 73 "/usr/local/cuda/include/device_launch_parameters.h"
extern const dim3 __device_builtin_variable_blockDim;
# 74 "/usr/local/cuda/include/device_launch_parameters.h"
extern const dim3 __device_builtin_variable_gridDim;
# 75 "/usr/local/cuda/include/device_launch_parameters.h"
extern const int __device_builtin_variable_warpSize;
# 80 "/usr/local/cuda/include/device_launch_parameters.h"
}
# 183 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 184 "/usr/local/cuda/include/cuda_runtime.h"
cudaLaunchKernel(const T *
# 185 "/usr/local/cuda/include/cuda_runtime.h"
func, dim3
# 186 "/usr/local/cuda/include/cuda_runtime.h"
gridDim, dim3
# 187 "/usr/local/cuda/include/cuda_runtime.h"
blockDim, void **
# 188 "/usr/local/cuda/include/cuda_runtime.h"
args, size_t
# 189 "/usr/local/cuda/include/cuda_runtime.h"
sharedMem = 0, cudaStream_t
# 190 "/usr/local/cuda/include/cuda_runtime.h"
stream = 0)
# 192 "/usr/local/cuda/include/cuda_runtime.h"
{
# 193 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaLaunchKernel((const void *)func, gridDim, blockDim, args, sharedMem, stream);
# 194 "/usr/local/cuda/include/cuda_runtime.h"
}
# 221 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 222 "/usr/local/cuda/include/cuda_runtime.h"
cudaSetupArgument(T
# 223 "/usr/local/cuda/include/cuda_runtime.h"
arg, size_t
# 224 "/usr/local/cuda/include/cuda_runtime.h"
offset)
# 226 "/usr/local/cuda/include/cuda_runtime.h"
{
# 227 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaSetupArgument((const void *)(&arg), sizeof(T), offset);
# 228 "/usr/local/cuda/include/cuda_runtime.h"
}
# 260 "/usr/local/cuda/include/cuda_runtime.h"
static inline cudaError_t cudaEventCreate(cudaEvent_t *
# 261 "/usr/local/cuda/include/cuda_runtime.h"
event, unsigned
# 262 "/usr/local/cuda/include/cuda_runtime.h"
flags)
# 264 "/usr/local/cuda/include/cuda_runtime.h"
{
# 265 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaEventCreateWithFlags(event, flags);
# 266 "/usr/local/cuda/include/cuda_runtime.h"
}
# 323 "/usr/local/cuda/include/cuda_runtime.h"
static inline cudaError_t cudaMallocHost(void **
# 324 "/usr/local/cuda/include/cuda_runtime.h"
ptr, size_t
# 325 "/usr/local/cuda/include/cuda_runtime.h"
size, unsigned
# 326 "/usr/local/cuda/include/cuda_runtime.h"
flags)
# 328 "/usr/local/cuda/include/cuda_runtime.h"
{
# 329 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaHostAlloc(ptr, size, flags);
# 330 "/usr/local/cuda/include/cuda_runtime.h"
}
# 332 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 333 "/usr/local/cuda/include/cuda_runtime.h"
cudaHostAlloc(T **
# 334 "/usr/local/cuda/include/cuda_runtime.h"
ptr, size_t
# 335 "/usr/local/cuda/include/cuda_runtime.h"
size, unsigned
# 336 "/usr/local/cuda/include/cuda_runtime.h"
flags)
# 338 "/usr/local/cuda/include/cuda_runtime.h"
{
# 339 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaHostAlloc((void **)((void *)ptr), size, flags);
# 340 "/usr/local/cuda/include/cuda_runtime.h"
}
# 342 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 343 "/usr/local/cuda/include/cuda_runtime.h"
cudaHostGetDevicePointer(T **
# 344 "/usr/local/cuda/include/cuda_runtime.h"
pDevice, void *
# 345 "/usr/local/cuda/include/cuda_runtime.h"
pHost, unsigned
# 346 "/usr/local/cuda/include/cuda_runtime.h"
flags)
# 348 "/usr/local/cuda/include/cuda_runtime.h"
{
# 349 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags);
# 350 "/usr/local/cuda/include/cuda_runtime.h"
}
# 449 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 450 "/usr/local/cuda/include/cuda_runtime.h"
cudaMallocManaged(T **
# 451 "/usr/local/cuda/include/cuda_runtime.h"
devPtr, size_t
# 452 "/usr/local/cuda/include/cuda_runtime.h"
size, unsigned
# 453 "/usr/local/cuda/include/cuda_runtime.h"
flags = 1)
# 455 "/usr/local/cuda/include/cuda_runtime.h"
{
# 456 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaMallocManaged((void **)((void *)devPtr), size, flags);
# 457 "/usr/local/cuda/include/cuda_runtime.h"
}
# 528 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 529 "/usr/local/cuda/include/cuda_runtime.h"
cudaStreamAttachMemAsync(cudaStream_t
# 530 "/usr/local/cuda/include/cuda_runtime.h"
stream, T *
# 531 "/usr/local/cuda/include/cuda_runtime.h"
devPtr, size_t
# 532 "/usr/local/cuda/include/cuda_runtime.h"
length = 0, unsigned
# 533 "/usr/local/cuda/include/cuda_runtime.h"
flags = 4)
# 535 "/usr/local/cuda/include/cuda_runtime.h"
{
# 536 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaStreamAttachMemAsync(stream, (void *)devPtr, length, flags);
# 537 "/usr/local/cuda/include/cuda_runtime.h"
}
# 539 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 540 "/usr/local/cuda/include/cuda_runtime.h"
cudaMalloc(T **
# 541 "/usr/local/cuda/include/cuda_runtime.h"
devPtr, size_t
# 542 "/usr/local/cuda/include/cuda_runtime.h"
size)
# 544 "/usr/local/cuda/include/cuda_runtime.h"
{
# 545 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaMalloc((void **)((void *)devPtr), size);
# 546 "/usr/local/cuda/include/cuda_runtime.h"
}
# 548 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 549 "/usr/local/cuda/include/cuda_runtime.h"
cudaMallocHost(T **
# 550 "/usr/local/cuda/include/cuda_runtime.h"
ptr, size_t
# 551 "/usr/local/cuda/include/cuda_runtime.h"
size, unsigned
# 552 "/usr/local/cuda/include/cuda_runtime.h"
flags = 0)
# 554 "/usr/local/cuda/include/cuda_runtime.h"
{
# 555 "/usr/local/cuda/include/cuda_runtime.h"
return cudaMallocHost((void **)((void *)ptr), size, flags);
# 556 "/usr/local/cuda/include/cuda_runtime.h"
}
# 558 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 559 "/usr/local/cuda/include/cuda_runtime.h"
cudaMallocPitch(T **
# 560 "/usr/local/cuda/include/cuda_runtime.h"
devPtr, size_t *
# 561 "/usr/local/cuda/include/cuda_runtime.h"
pitch, size_t
# 562 "/usr/local/cuda/include/cuda_runtime.h"
width, size_t
# 563 "/usr/local/cuda/include/cuda_runtime.h"
height)
# 565 "/usr/local/cuda/include/cuda_runtime.h"
{
# 566 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaMallocPitch((void **)((void *)devPtr), pitch, width, height);
# 567 "/usr/local/cuda/include/cuda_runtime.h"
}
# 604 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 605 "/usr/local/cuda/include/cuda_runtime.h"
cudaMemcpyToSymbol(const T &
# 606 "/usr/local/cuda/include/cuda_runtime.h"
symbol, const void *
# 607 "/usr/local/cuda/include/cuda_runtime.h"
src, size_t
# 608 "/usr/local/cuda/include/cuda_runtime.h"
count, size_t
# 609 "/usr/local/cuda/include/cuda_runtime.h"
offset = 0, cudaMemcpyKind
# 610 "/usr/local/cuda/include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice)
# 612 "/usr/local/cuda/include/cuda_runtime.h"
{
# 613 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaMemcpyToSymbol((const void *)(&symbol), src, count, offset, kind);
# 614 "/usr/local/cuda/include/cuda_runtime.h"
}
# 656 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 657 "/usr/local/cuda/include/cuda_runtime.h"
cudaMemcpyToSymbolAsync(const T &
# 658 "/usr/local/cuda/include/cuda_runtime.h"
symbol, const void *
# 659 "/usr/local/cuda/include/cuda_runtime.h"
src, size_t
# 660 "/usr/local/cuda/include/cuda_runtime.h"
count, size_t
# 661 "/usr/local/cuda/include/cuda_runtime.h"
offset = 0, cudaMemcpyKind
# 662 "/usr/local/cuda/include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice, cudaStream_t
# 663 "/usr/local/cuda/include/cuda_runtime.h"
stream = 0)
# 665 "/usr/local/cuda/include/cuda_runtime.h"
{
# 666 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaMemcpyToSymbolAsync((const void *)(&symbol), src, count, offset, kind, stream);
# 667 "/usr/local/cuda/include/cuda_runtime.h"
}
# 702 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 703 "/usr/local/cuda/include/cuda_runtime.h"
cudaMemcpyFromSymbol(void *
# 704 "/usr/local/cuda/include/cuda_runtime.h"
dst, const T &
# 705 "/usr/local/cuda/include/cuda_runtime.h"
symbol, size_t
# 706 "/usr/local/cuda/include/cuda_runtime.h"
count, size_t
# 707 "/usr/local/cuda/include/cuda_runtime.h"
offset = 0, cudaMemcpyKind
# 708 "/usr/local/cuda/include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost)
# 710 "/usr/local/cuda/include/cuda_runtime.h"
{
# 711 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaMemcpyFromSymbol(dst, (const void *)(&symbol), count, offset, kind);
# 712 "/usr/local/cuda/include/cuda_runtime.h"
}
# 754 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 755 "/usr/local/cuda/include/cuda_runtime.h"
cudaMemcpyFromSymbolAsync(void *
# 756 "/usr/local/cuda/include/cuda_runtime.h"
dst, const T &
# 757 "/usr/local/cuda/include/cuda_runtime.h"
symbol, size_t
# 758 "/usr/local/cuda/include/cuda_runtime.h"
count, size_t
# 759 "/usr/local/cuda/include/cuda_runtime.h"
offset = 0, cudaMemcpyKind
# 760 "/usr/local/cuda/include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 761 "/usr/local/cuda/include/cuda_runtime.h"
stream = 0)
# 763 "/usr/local/cuda/include/cuda_runtime.h"
{
# 764 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaMemcpyFromSymbolAsync(dst, (const void *)(&symbol), count, offset, kind, stream);
# 765 "/usr/local/cuda/include/cuda_runtime.h"
}
# 787 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 788 "/usr/local/cuda/include/cuda_runtime.h"
cudaGetSymbolAddress(void **
# 789 "/usr/local/cuda/include/cuda_runtime.h"
devPtr, const T &
# 790 "/usr/local/cuda/include/cuda_runtime.h"
symbol)
# 792 "/usr/local/cuda/include/cuda_runtime.h"
{
# 793 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaGetSymbolAddress(devPtr, (const void *)(&symbol));
# 794 "/usr/local/cuda/include/cuda_runtime.h"
}
# 816 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 817 "/usr/local/cuda/include/cuda_runtime.h"
cudaGetSymbolSize(size_t *
# 818 "/usr/local/cuda/include/cuda_runtime.h"
size, const T &
# 819 "/usr/local/cuda/include/cuda_runtime.h"
symbol)
# 821 "/usr/local/cuda/include/cuda_runtime.h"
{
# 822 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaGetSymbolSize(size, (const void *)(&symbol));
# 823 "/usr/local/cuda/include/cuda_runtime.h"
}
# 859 "/usr/local/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 860 "/usr/local/cuda/include/cuda_runtime.h"
cudaBindTexture(size_t *
# 861 "/usr/local/cuda/include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 862 "/usr/local/cuda/include/cuda_runtime.h"
tex, const void *
# 863 "/usr/local/cuda/include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 864 "/usr/local/cuda/include/cuda_runtime.h"
desc, size_t
# 865 "/usr/local/cuda/include/cuda_runtime.h"
size = ((2147483647) * 2U) + 1U)
# 867 "/usr/local/cuda/include/cuda_runtime.h"
{
# 868 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaBindTexture(offset, &tex, devPtr, &desc, size);
# 869 "/usr/local/cuda/include/cuda_runtime.h"
}
# 904 "/usr/local/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 905 "/usr/local/cuda/include/cuda_runtime.h"
cudaBindTexture(size_t *
# 906 "/usr/local/cuda/include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 907 "/usr/local/cuda/include/cuda_runtime.h"
tex, const void *
# 908 "/usr/local/cuda/include/cuda_runtime.h"
devPtr, size_t
# 909 "/usr/local/cuda/include/cuda_runtime.h"
size = ((2147483647) * 2U) + 1U)
# 911 "/usr/local/cuda/include/cuda_runtime.h"
{
# 912 "/usr/local/cuda/include/cuda_runtime.h"
return cudaBindTexture(offset, tex, devPtr, (tex.channelDesc), size);
# 913 "/usr/local/cuda/include/cuda_runtime.h"
}
# 960 "/usr/local/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 961 "/usr/local/cuda/include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 962 "/usr/local/cuda/include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 963 "/usr/local/cuda/include/cuda_runtime.h"
tex, const void *
# 964 "/usr/local/cuda/include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 965 "/usr/local/cuda/include/cuda_runtime.h"
desc, size_t
# 966 "/usr/local/cuda/include/cuda_runtime.h"
width, size_t
# 967 "/usr/local/cuda/include/cuda_runtime.h"
height, size_t
# 968 "/usr/local/cuda/include/cuda_runtime.h"
pitch)
# 970 "/usr/local/cuda/include/cuda_runtime.h"
{
# 971 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch);
# 972 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1018 "/usr/local/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1019 "/usr/local/cuda/include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 1020 "/usr/local/cuda/include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 1021 "/usr/local/cuda/include/cuda_runtime.h"
tex, const void *
# 1022 "/usr/local/cuda/include/cuda_runtime.h"
devPtr, size_t
# 1023 "/usr/local/cuda/include/cuda_runtime.h"
width, size_t
# 1024 "/usr/local/cuda/include/cuda_runtime.h"
height, size_t
# 1025 "/usr/local/cuda/include/cuda_runtime.h"
pitch)
# 1027 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1028 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaBindTexture2D(offset, &tex, devPtr, &(tex.channelDesc), width, height, pitch);
# 1029 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1060 "/usr/local/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1061 "/usr/local/cuda/include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 1062 "/usr/local/cuda/include/cuda_runtime.h"
tex, cudaArray_const_t
# 1063 "/usr/local/cuda/include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 1064 "/usr/local/cuda/include/cuda_runtime.h"
desc)
# 1066 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1067 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaBindTextureToArray(&tex, array, &desc);
# 1068 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1098 "/usr/local/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1099 "/usr/local/cuda/include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 1100 "/usr/local/cuda/include/cuda_runtime.h"
tex, cudaArray_const_t
# 1101 "/usr/local/cuda/include/cuda_runtime.h"
array)
# 1103 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1104 "/usr/local/cuda/include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 1105 "/usr/local/cuda/include/cuda_runtime.h"
cudaError_t err = ::cudaGetChannelDesc(&desc, array);
# 1107 "/usr/local/cuda/include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err;
# 1108 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1139 "/usr/local/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1140 "/usr/local/cuda/include/cuda_runtime.h"
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode> &
# 1141 "/usr/local/cuda/include/cuda_runtime.h"
tex, cudaMipmappedArray_const_t
# 1142 "/usr/local/cuda/include/cuda_runtime.h"
mipmappedArray, const cudaChannelFormatDesc &
# 1143 "/usr/local/cuda/include/cuda_runtime.h"
desc)
# 1145 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1146 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaBindTextureToMipmappedArray(&tex, mipmappedArray, &desc);
# 1147 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1177 "/usr/local/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1178 "/usr/local/cuda/include/cuda_runtime.h"
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode> &
# 1179 "/usr/local/cuda/include/cuda_runtime.h"
tex, cudaMipmappedArray_const_t
# 1180 "/usr/local/cuda/include/cuda_runtime.h"
mipmappedArray)
# 1182 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1183 "/usr/local/cuda/include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 1184 "/usr/local/cuda/include/cuda_runtime.h"
cudaArray_t levelArray;
# 1185 "/usr/local/cuda/include/cuda_runtime.h"
cudaError_t err = ::cudaGetMipmappedArrayLevel(&levelArray, mipmappedArray, 0);
# 1187 "/usr/local/cuda/include/cuda_runtime.h"
if (err != (cudaSuccess)) {
# 1188 "/usr/local/cuda/include/cuda_runtime.h"
return err;
# 1189 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1190 "/usr/local/cuda/include/cuda_runtime.h"
err = ::cudaGetChannelDesc(&desc, levelArray);
# 1192 "/usr/local/cuda/include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToMipmappedArray(tex, mipmappedArray, desc) : err;
# 1193 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1216 "/usr/local/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1217 "/usr/local/cuda/include/cuda_runtime.h"
cudaUnbindTexture(const texture< T, dim, readMode> &
# 1218 "/usr/local/cuda/include/cuda_runtime.h"
tex)
# 1220 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1221 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaUnbindTexture(&tex);
# 1222 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1250 "/usr/local/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1251 "/usr/local/cuda/include/cuda_runtime.h"
cudaGetTextureAlignmentOffset(size_t *
# 1252 "/usr/local/cuda/include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 1253 "/usr/local/cuda/include/cuda_runtime.h"
tex)
# 1255 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1256 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaGetTextureAlignmentOffset(offset, &tex);
# 1257 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1302 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 1303 "/usr/local/cuda/include/cuda_runtime.h"
cudaFuncSetCacheConfig(T *
# 1304 "/usr/local/cuda/include/cuda_runtime.h"
func, cudaFuncCache
# 1305 "/usr/local/cuda/include/cuda_runtime.h"
cacheConfig)
# 1307 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1308 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaFuncSetCacheConfig((const void *)func, cacheConfig);
# 1309 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1311 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 1312 "/usr/local/cuda/include/cuda_runtime.h"
cudaFuncSetSharedMemConfig(T *
# 1313 "/usr/local/cuda/include/cuda_runtime.h"
func, cudaSharedMemConfig
# 1314 "/usr/local/cuda/include/cuda_runtime.h"
config)
# 1316 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1317 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaFuncSetSharedMemConfig((const void *)func, config);
# 1318 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1347 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 1348 "/usr/local/cuda/include/cuda_runtime.h"
cudaOccupancyMaxActiveBlocksPerMultiprocessor(int *
# 1349 "/usr/local/cuda/include/cuda_runtime.h"
numBlocks, T
# 1350 "/usr/local/cuda/include/cuda_runtime.h"
func, int
# 1351 "/usr/local/cuda/include/cuda_runtime.h"
blockSize, size_t
# 1352 "/usr/local/cuda/include/cuda_runtime.h"
dynamicSMemSize)
# 1353 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1354 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, 0);
# 1355 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1398 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 1399 "/usr/local/cuda/include/cuda_runtime.h"
cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int *
# 1400 "/usr/local/cuda/include/cuda_runtime.h"
numBlocks, T
# 1401 "/usr/local/cuda/include/cuda_runtime.h"
func, int
# 1402 "/usr/local/cuda/include/cuda_runtime.h"
blockSize, size_t
# 1403 "/usr/local/cuda/include/cuda_runtime.h"
dynamicSMemSize, unsigned
# 1404 "/usr/local/cuda/include/cuda_runtime.h"
flags)
# 1405 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1406 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, flags);
# 1407 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1412 "/usr/local/cuda/include/cuda_runtime.h"
class __cudaOccupancyB2DHelper {
# 1413 "/usr/local/cuda/include/cuda_runtime.h"
size_t n;
# 1415 "/usr/local/cuda/include/cuda_runtime.h"
public: __cudaOccupancyB2DHelper(size_t n_) : n(n_) { }
# 1416 "/usr/local/cuda/include/cuda_runtime.h"
size_t operator()(int)
# 1417 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1418 "/usr/local/cuda/include/cuda_runtime.h"
return n;
# 1419 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1420 "/usr/local/cuda/include/cuda_runtime.h"
};
# 1467 "/usr/local/cuda/include/cuda_runtime.h"
template< class UnaryFunction, class T> static inline cudaError_t
# 1468 "/usr/local/cuda/include/cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(int *
# 1469 "/usr/local/cuda/include/cuda_runtime.h"
minGridSize, int *
# 1470 "/usr/local/cuda/include/cuda_runtime.h"
blockSize, T
# 1471 "/usr/local/cuda/include/cuda_runtime.h"
func, UnaryFunction
# 1472 "/usr/local/cuda/include/cuda_runtime.h"
blockSizeToDynamicSMemSize, int
# 1473 "/usr/local/cuda/include/cuda_runtime.h"
blockSizeLimit = 0, unsigned
# 1474 "/usr/local/cuda/include/cuda_runtime.h"
flags = 0)
# 1475 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1476 "/usr/local/cuda/include/cuda_runtime.h"
cudaError_t status;
# 1479 "/usr/local/cuda/include/cuda_runtime.h"
int device;
# 1480 "/usr/local/cuda/include/cuda_runtime.h"
cudaFuncAttributes attr;
# 1483 "/usr/local/cuda/include/cuda_runtime.h"
int maxThreadsPerMultiProcessor;
# 1484 "/usr/local/cuda/include/cuda_runtime.h"
int warpSize;
# 1485 "/usr/local/cuda/include/cuda_runtime.h"
int devMaxThreadsPerBlock;
# 1486 "/usr/local/cuda/include/cuda_runtime.h"
int multiProcessorCount;
# 1487 "/usr/local/cuda/include/cuda_runtime.h"
int funcMaxThreadsPerBlock;
# 1488 "/usr/local/cuda/include/cuda_runtime.h"
int occupancyLimit;
# 1489 "/usr/local/cuda/include/cuda_runtime.h"
int granularity;
# 1492 "/usr/local/cuda/include/cuda_runtime.h"
int maxBlockSize = 0;
# 1493 "/usr/local/cuda/include/cuda_runtime.h"
int numBlocks = 0;
# 1494 "/usr/local/cuda/include/cuda_runtime.h"
int maxOccupancy = 0;
# 1497 "/usr/local/cuda/include/cuda_runtime.h"
int blockSizeToTryAligned;
# 1498 "/usr/local/cuda/include/cuda_runtime.h"
int blockSizeToTry;
# 1499 "/usr/local/cuda/include/cuda_runtime.h"
int blockSizeLimitAligned;
# 1500 "/usr/local/cuda/include/cuda_runtime.h"
int occupancyInBlocks;
# 1501 "/usr/local/cuda/include/cuda_runtime.h"
int occupancyInThreads;
# 1502 "/usr/local/cuda/include/cuda_runtime.h"
size_t dynamicSMemSize;
# 1508 "/usr/local/cuda/include/cuda_runtime.h"
if (((!minGridSize) || (!blockSize)) || (!func)) {
# 1509 "/usr/local/cuda/include/cuda_runtime.h"
return cudaErrorInvalidValue;
# 1510 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1516 "/usr/local/cuda/include/cuda_runtime.h"
status = ::cudaGetDevice(&device);
# 1517 "/usr/local/cuda/include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1518 "/usr/local/cuda/include/cuda_runtime.h"
return status;
# 1519 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1521 "/usr/local/cuda/include/cuda_runtime.h"
status = cudaDeviceGetAttribute(&maxThreadsPerMultiProcessor, cudaDevAttrMaxThreadsPerMultiProcessor, device);
# 1525 "/usr/local/cuda/include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1526 "/usr/local/cuda/include/cuda_runtime.h"
return status;
# 1527 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1529 "/usr/local/cuda/include/cuda_runtime.h"
status = cudaDeviceGetAttribute(&warpSize, cudaDevAttrWarpSize, device);
# 1533 "/usr/local/cuda/include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1534 "/usr/local/cuda/include/cuda_runtime.h"
return status;
# 1535 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1537 "/usr/local/cuda/include/cuda_runtime.h"
status = cudaDeviceGetAttribute(&devMaxThreadsPerBlock, cudaDevAttrMaxThreadsPerBlock, device);
# 1541 "/usr/local/cuda/include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1542 "/usr/local/cuda/include/cuda_runtime.h"
return status;
# 1543 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1545 "/usr/local/cuda/include/cuda_runtime.h"
status = cudaDeviceGetAttribute(&multiProcessorCount, cudaDevAttrMultiProcessorCount, device);
# 1549 "/usr/local/cuda/include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1550 "/usr/local/cuda/include/cuda_runtime.h"
return status;
# 1551 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1553 "/usr/local/cuda/include/cuda_runtime.h"
status = cudaFuncGetAttributes(&attr, func);
# 1554 "/usr/local/cuda/include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1555 "/usr/local/cuda/include/cuda_runtime.h"
return status;
# 1556 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1558 "/usr/local/cuda/include/cuda_runtime.h"
funcMaxThreadsPerBlock = (attr.maxThreadsPerBlock);
# 1564 "/usr/local/cuda/include/cuda_runtime.h"
occupancyLimit = maxThreadsPerMultiProcessor;
# 1565 "/usr/local/cuda/include/cuda_runtime.h"
granularity = warpSize;
# 1567 "/usr/local/cuda/include/cuda_runtime.h"
if (blockSizeLimit == 0) {
# 1568 "/usr/local/cuda/include/cuda_runtime.h"
blockSizeLimit = devMaxThreadsPerBlock;
# 1569 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1571 "/usr/local/cuda/include/cuda_runtime.h"
if (devMaxThreadsPerBlock < blockSizeLimit) {
# 1572 "/usr/local/cuda/include/cuda_runtime.h"
blockSizeLimit = devMaxThreadsPerBlock;
# 1573 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1575 "/usr/local/cuda/include/cuda_runtime.h"
if (funcMaxThreadsPerBlock < blockSizeLimit) {
# 1576 "/usr/local/cuda/include/cuda_runtime.h"
blockSizeLimit = funcMaxThreadsPerBlock;
# 1577 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1579 "/usr/local/cuda/include/cuda_runtime.h"
blockSizeLimitAligned = (((blockSizeLimit + (granularity - 1)) / granularity) * granularity);
# 1581 "/usr/local/cuda/include/cuda_runtime.h"
for (blockSizeToTryAligned = blockSizeLimitAligned; blockSizeToTryAligned > 0; blockSizeToTryAligned -= granularity) {
# 1585 "/usr/local/cuda/include/cuda_runtime.h"
if (blockSizeLimit < blockSizeToTryAligned) {
# 1586 "/usr/local/cuda/include/cuda_runtime.h"
blockSizeToTry = blockSizeLimit;
# 1587 "/usr/local/cuda/include/cuda_runtime.h"
} else {
# 1588 "/usr/local/cuda/include/cuda_runtime.h"
blockSizeToTry = blockSizeToTryAligned;
# 1589 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1591 "/usr/local/cuda/include/cuda_runtime.h"
dynamicSMemSize = blockSizeToDynamicSMemSize(blockSizeToTry);
# 1593 "/usr/local/cuda/include/cuda_runtime.h"
status = cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(&occupancyInBlocks, func, blockSizeToTry, dynamicSMemSize, flags);
# 1600 "/usr/local/cuda/include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1601 "/usr/local/cuda/include/cuda_runtime.h"
return status;
# 1602 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1604 "/usr/local/cuda/include/cuda_runtime.h"
occupancyInThreads = (blockSizeToTry * occupancyInBlocks);
# 1606 "/usr/local/cuda/include/cuda_runtime.h"
if (occupancyInThreads > maxOccupancy) {
# 1607 "/usr/local/cuda/include/cuda_runtime.h"
maxBlockSize = blockSizeToTry;
# 1608 "/usr/local/cuda/include/cuda_runtime.h"
numBlocks = occupancyInBlocks;
# 1609 "/usr/local/cuda/include/cuda_runtime.h"
maxOccupancy = occupancyInThreads;
# 1610 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1614 "/usr/local/cuda/include/cuda_runtime.h"
if (occupancyLimit == maxOccupancy) {
# 1615 "/usr/local/cuda/include/cuda_runtime.h"
break;
# 1616 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1617 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1625 "/usr/local/cuda/include/cuda_runtime.h"
(*minGridSize) = (numBlocks * multiProcessorCount);
# 1626 "/usr/local/cuda/include/cuda_runtime.h"
(*blockSize) = maxBlockSize;
# 1628 "/usr/local/cuda/include/cuda_runtime.h"
return status;
# 1629 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1662 "/usr/local/cuda/include/cuda_runtime.h"
template< class UnaryFunction, class T> static inline cudaError_t
# 1663 "/usr/local/cuda/include/cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSizeVariableSMem(int *
# 1664 "/usr/local/cuda/include/cuda_runtime.h"
minGridSize, int *
# 1665 "/usr/local/cuda/include/cuda_runtime.h"
blockSize, T
# 1666 "/usr/local/cuda/include/cuda_runtime.h"
func, UnaryFunction
# 1667 "/usr/local/cuda/include/cuda_runtime.h"
blockSizeToDynamicSMemSize, int
# 1668 "/usr/local/cuda/include/cuda_runtime.h"
blockSizeLimit = 0)
# 1669 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1670 "/usr/local/cuda/include/cuda_runtime.h"
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, blockSizeLimit, 0);
# 1671 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1707 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 1708 "/usr/local/cuda/include/cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSize(int *
# 1709 "/usr/local/cuda/include/cuda_runtime.h"
minGridSize, int *
# 1710 "/usr/local/cuda/include/cuda_runtime.h"
blockSize, T
# 1711 "/usr/local/cuda/include/cuda_runtime.h"
func, size_t
# 1712 "/usr/local/cuda/include/cuda_runtime.h"
dynamicSMemSize = 0, int
# 1713 "/usr/local/cuda/include/cuda_runtime.h"
blockSizeLimit = 0)
# 1714 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1715 "/usr/local/cuda/include/cuda_runtime.h"
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, 0);
# 1716 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1766 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 1767 "/usr/local/cuda/include/cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSizeWithFlags(int *
# 1768 "/usr/local/cuda/include/cuda_runtime.h"
minGridSize, int *
# 1769 "/usr/local/cuda/include/cuda_runtime.h"
blockSize, T
# 1770 "/usr/local/cuda/include/cuda_runtime.h"
func, size_t
# 1771 "/usr/local/cuda/include/cuda_runtime.h"
dynamicSMemSize = 0, int
# 1772 "/usr/local/cuda/include/cuda_runtime.h"
blockSizeLimit = 0, unsigned
# 1773 "/usr/local/cuda/include/cuda_runtime.h"
flags = 0)
# 1774 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1775 "/usr/local/cuda/include/cuda_runtime.h"
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, flags);
# 1776 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1814 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 1815 "/usr/local/cuda/include/cuda_runtime.h"
cudaLaunch(T *
# 1816 "/usr/local/cuda/include/cuda_runtime.h"
func)
# 1818 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1819 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaLaunch((const void *)func);
# 1820 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1851 "/usr/local/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 1852 "/usr/local/cuda/include/cuda_runtime.h"
cudaFuncGetAttributes(cudaFuncAttributes *
# 1853 "/usr/local/cuda/include/cuda_runtime.h"
attr, T *
# 1854 "/usr/local/cuda/include/cuda_runtime.h"
entry)
# 1856 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1857 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaFuncGetAttributes(attr, (const void *)entry);
# 1858 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1880 "/usr/local/cuda/include/cuda_runtime.h"
template< class T, int dim> static inline cudaError_t
# 1881 "/usr/local/cuda/include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 1882 "/usr/local/cuda/include/cuda_runtime.h"
surf, cudaArray_const_t
# 1883 "/usr/local/cuda/include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 1884 "/usr/local/cuda/include/cuda_runtime.h"
desc)
# 1886 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1887 "/usr/local/cuda/include/cuda_runtime.h"
return ::cudaBindSurfaceToArray(&surf, array, &desc);
# 1888 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1909 "/usr/local/cuda/include/cuda_runtime.h"
template< class T, int dim> static inline cudaError_t
# 1910 "/usr/local/cuda/include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 1911 "/usr/local/cuda/include/cuda_runtime.h"
surf, cudaArray_const_t
# 1912 "/usr/local/cuda/include/cuda_runtime.h"
array)
# 1914 "/usr/local/cuda/include/cuda_runtime.h"
{
# 1915 "/usr/local/cuda/include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 1916 "/usr/local/cuda/include/cuda_runtime.h"
cudaError_t err = ::cudaGetChannelDesc(&desc, array);
# 1918 "/usr/local/cuda/include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err;
# 1919 "/usr/local/cuda/include/cuda_runtime.h"
}
# 1930 "/usr/local/cuda/include/cuda_runtime.h"
#pragma GCC diagnostic pop
# 48 "/usr/include/stdint.h" 3

# 48 "/usr/include/stdint.h" 3
typedef unsigned char uint8_t;
# 49 "/usr/include/stdint.h" 3
typedef unsigned short uint16_t;
# 51 "/usr/include/stdint.h" 3
typedef unsigned uint32_t;
# 55 "/usr/include/stdint.h" 3
typedef unsigned long uint64_t;
# 65 "/usr/include/stdint.h" 3
typedef signed char int_least8_t;
# 66 "/usr/include/stdint.h" 3
typedef short int_least16_t;
# 67 "/usr/include/stdint.h" 3
typedef int int_least32_t;
# 69 "/usr/include/stdint.h" 3
typedef long int_least64_t;
# 76 "/usr/include/stdint.h" 3
typedef unsigned char uint_least8_t;
# 77 "/usr/include/stdint.h" 3
typedef unsigned short uint_least16_t;
# 78 "/usr/include/stdint.h" 3
typedef unsigned uint_least32_t;
# 80 "/usr/include/stdint.h" 3
typedef unsigned long uint_least64_t;
# 90 "/usr/include/stdint.h" 3
typedef signed char int_fast8_t;
# 92 "/usr/include/stdint.h" 3
typedef long int_fast16_t;
# 93 "/usr/include/stdint.h" 3
typedef long int_fast32_t;
# 94 "/usr/include/stdint.h" 3
typedef long int_fast64_t;
# 103 "/usr/include/stdint.h" 3
typedef unsigned char uint_fast8_t;
# 105 "/usr/include/stdint.h" 3
typedef unsigned long uint_fast16_t;
# 106 "/usr/include/stdint.h" 3
typedef unsigned long uint_fast32_t;
# 107 "/usr/include/stdint.h" 3
typedef unsigned long uint_fast64_t;
# 119 "/usr/include/stdint.h" 3
typedef long intptr_t;
# 122 "/usr/include/stdint.h" 3
typedef unsigned long uintptr_t;
# 134 "/usr/include/stdint.h" 3
typedef long intmax_t;
# 135 "/usr/include/stdint.h" 3
typedef unsigned long uintmax_t;
# 59 "/usr/local/cuda/include/cuda.h"

# 59 "/usr/local/cuda/include/cuda.h"
typedef uint32_t cuuint32_t;
# 60 "/usr/local/cuda/include/cuda.h"
typedef uint64_t cuuint64_t;
# 211 "/usr/local/cuda/include/cuda.h"
extern "C" {
# 221 "/usr/local/cuda/include/cuda.h"
typedef unsigned long long CUdeviceptr;
# 228 "/usr/local/cuda/include/cuda.h"
typedef int CUdevice;
# 229 "/usr/local/cuda/include/cuda.h"
typedef struct CUctx_st *CUcontext;
# 230 "/usr/local/cuda/include/cuda.h"
typedef struct CUmod_st *CUmodule;
# 231 "/usr/local/cuda/include/cuda.h"
typedef struct CUfunc_st *CUfunction;
# 232 "/usr/local/cuda/include/cuda.h"
typedef struct CUarray_st *CUarray;
# 233 "/usr/local/cuda/include/cuda.h"
typedef struct CUmipmappedArray_st *CUmipmappedArray;
# 234 "/usr/local/cuda/include/cuda.h"
typedef struct CUtexref_st *CUtexref;
# 235 "/usr/local/cuda/include/cuda.h"
typedef struct CUsurfref_st *CUsurfref;
# 236 "/usr/local/cuda/include/cuda.h"
typedef CUevent_st *CUevent;
# 237 "/usr/local/cuda/include/cuda.h"
typedef CUstream_st *CUstream;
# 238 "/usr/local/cuda/include/cuda.h"
typedef struct CUgraphicsResource_st *CUgraphicsResource;
# 239 "/usr/local/cuda/include/cuda.h"
typedef unsigned long long CUtexObject;
# 240 "/usr/local/cuda/include/cuda.h"
typedef unsigned long long CUsurfObject;
# 244 "/usr/local/cuda/include/cuda.h"
typedef
# 242 "/usr/local/cuda/include/cuda.h"
struct CUuuid_st {
# 243 "/usr/local/cuda/include/cuda.h"
char bytes[16];
# 244 "/usr/local/cuda/include/cuda.h"
} CUuuid;
# 259 "/usr/local/cuda/include/cuda.h"
typedef
# 257 "/usr/local/cuda/include/cuda.h"
struct CUipcEventHandle_st {
# 258 "/usr/local/cuda/include/cuda.h"
char reserved[64];
# 259 "/usr/local/cuda/include/cuda.h"
} CUipcEventHandle;
# 266 "/usr/local/cuda/include/cuda.h"
typedef
# 264 "/usr/local/cuda/include/cuda.h"
struct CUipcMemHandle_st {
# 265 "/usr/local/cuda/include/cuda.h"
char reserved[64];
# 266 "/usr/local/cuda/include/cuda.h"
} CUipcMemHandle;
# 273 "/usr/local/cuda/include/cuda.h"
typedef
# 271 "/usr/local/cuda/include/cuda.h"
enum CUipcMem_flags_enum {
# 272 "/usr/local/cuda/include/cuda.h"
CU_IPC_MEM_LAZY_ENABLE_PEER_ACCESS = 1
# 273 "/usr/local/cuda/include/cuda.h"
} CUipcMem_flags;
# 284 "/usr/local/cuda/include/cuda.h"
typedef
# 280 "/usr/local/cuda/include/cuda.h"
enum CUmemAttach_flags_enum {
# 281 "/usr/local/cuda/include/cuda.h"
CU_MEM_ATTACH_GLOBAL = 1,
# 282 "/usr/local/cuda/include/cuda.h"
CU_MEM_ATTACH_HOST,
# 283 "/usr/local/cuda/include/cuda.h"
CU_MEM_ATTACH_SINGLE = 4
# 284 "/usr/local/cuda/include/cuda.h"
} CUmemAttach_flags;
# 301 "/usr/local/cuda/include/cuda.h"
typedef
# 289 "/usr/local/cuda/include/cuda.h"
enum CUctx_flags_enum {
# 290 "/usr/local/cuda/include/cuda.h"
CU_CTX_SCHED_AUTO,
# 291 "/usr/local/cuda/include/cuda.h"
CU_CTX_SCHED_SPIN,
# 292 "/usr/local/cuda/include/cuda.h"
CU_CTX_SCHED_YIELD,
# 293 "/usr/local/cuda/include/cuda.h"
CU_CTX_SCHED_BLOCKING_SYNC = 4,
# 294 "/usr/local/cuda/include/cuda.h"
CU_CTX_BLOCKING_SYNC = 4,
# 297 "/usr/local/cuda/include/cuda.h"
CU_CTX_SCHED_MASK = 7,
# 298 "/usr/local/cuda/include/cuda.h"
CU_CTX_MAP_HOST,
# 299 "/usr/local/cuda/include/cuda.h"
CU_CTX_LMEM_RESIZE_TO_MAX = 16,
# 300 "/usr/local/cuda/include/cuda.h"
CU_CTX_FLAGS_MASK = 31
# 301 "/usr/local/cuda/include/cuda.h"
} CUctx_flags;
# 309 "/usr/local/cuda/include/cuda.h"
typedef
# 306 "/usr/local/cuda/include/cuda.h"
enum CUstream_flags_enum {
# 307 "/usr/local/cuda/include/cuda.h"
CU_STREAM_DEFAULT,
# 308 "/usr/local/cuda/include/cuda.h"
CU_STREAM_NON_BLOCKING
# 309 "/usr/local/cuda/include/cuda.h"
} CUstream_flags;
# 339 "/usr/local/cuda/include/cuda.h"
typedef
# 334 "/usr/local/cuda/include/cuda.h"
enum CUevent_flags_enum {
# 335 "/usr/local/cuda/include/cuda.h"
CU_EVENT_DEFAULT,
# 336 "/usr/local/cuda/include/cuda.h"
CU_EVENT_BLOCKING_SYNC,
# 337 "/usr/local/cuda/include/cuda.h"
CU_EVENT_DISABLE_TIMING,
# 338 "/usr/local/cuda/include/cuda.h"
CU_EVENT_INTERPROCESS = 4
# 339 "/usr/local/cuda/include/cuda.h"
} CUevent_flags;
# 357 "/usr/local/cuda/include/cuda.h"
typedef
# 345 "/usr/local/cuda/include/cuda.h"
enum CUstreamWaitValue_flags_enum {
# 346 "/usr/local/cuda/include/cuda.h"
CU_STREAM_WAIT_VALUE_GEQ,
# 348 "/usr/local/cuda/include/cuda.h"
CU_STREAM_WAIT_VALUE_EQ,
# 349 "/usr/local/cuda/include/cuda.h"
CU_STREAM_WAIT_VALUE_AND,
# 350 "/usr/local/cuda/include/cuda.h"
CU_STREAM_WAIT_VALUE_FLUSH = 1073741824
# 357 "/usr/local/cuda/include/cuda.h"
} CUstreamWaitValue_flags;
# 370 "/usr/local/cuda/include/cuda.h"
typedef
# 362 "/usr/local/cuda/include/cuda.h"
enum CUstreamWriteValue_flags_enum {
# 363 "/usr/local/cuda/include/cuda.h"
CU_STREAM_WRITE_VALUE_DEFAULT,
# 364 "/usr/local/cuda/include/cuda.h"
CU_STREAM_WRITE_VALUE_NO_MEMORY_BARRIER
# 370 "/usr/local/cuda/include/cuda.h"
} CUstreamWriteValue_flags;
# 380 "/usr/local/cuda/include/cuda.h"
typedef
# 375 "/usr/local/cuda/include/cuda.h"
enum CUstreamBatchMemOpType_enum {
# 376 "/usr/local/cuda/include/cuda.h"
CU_STREAM_MEM_OP_WAIT_VALUE_32 = 1,
# 377 "/usr/local/cuda/include/cuda.h"
CU_STREAM_MEM_OP_WRITE_VALUE_32,
# 378 "/usr/local/cuda/include/cuda.h"
CU_STREAM_MEM_OP_FLUSH_REMOTE_WRITES
# 380 "/usr/local/cuda/include/cuda.h"
} CUstreamBatchMemOpType;
# 412 "/usr/local/cuda/include/cuda.h"
typedef
# 385 "/usr/local/cuda/include/cuda.h"
union CUstreamBatchMemOpParams_union {
# 386 "/usr/local/cuda/include/cuda.h"
CUstreamBatchMemOpType operation;
# 387 "/usr/local/cuda/include/cuda.h"
struct CUstreamMemOpWaitValueParams_st {
# 388 "/usr/local/cuda/include/cuda.h"
CUstreamBatchMemOpType operation;
# 389 "/usr/local/cuda/include/cuda.h"
CUdeviceptr address;
# 390 "/usr/local/cuda/include/cuda.h"
union {
# 391 "/usr/local/cuda/include/cuda.h"
cuuint32_t value;
# 392 "/usr/local/cuda/include/cuda.h"
cuuint64_t pad;
# 393 "/usr/local/cuda/include/cuda.h"
};
# 394 "/usr/local/cuda/include/cuda.h"
unsigned flags;
# 395 "/usr/local/cuda/include/cuda.h"
CUdeviceptr alias;
# 396 "/usr/local/cuda/include/cuda.h"
} waitValue;
# 397 "/usr/local/cuda/include/cuda.h"
struct CUstreamMemOpWriteValueParams_st {
# 398 "/usr/local/cuda/include/cuda.h"
CUstreamBatchMemOpType operation;
# 399 "/usr/local/cuda/include/cuda.h"
CUdeviceptr address;
# 400 "/usr/local/cuda/include/cuda.h"
union {
# 401 "/usr/local/cuda/include/cuda.h"
cuuint32_t value;
# 402 "/usr/local/cuda/include/cuda.h"
cuuint64_t pad;
# 403 "/usr/local/cuda/include/cuda.h"
};
# 404 "/usr/local/cuda/include/cuda.h"
unsigned flags;
# 405 "/usr/local/cuda/include/cuda.h"
CUdeviceptr alias;
# 406 "/usr/local/cuda/include/cuda.h"
} writeValue;
# 407 "/usr/local/cuda/include/cuda.h"
struct CUstreamMemOpFlushRemoteWritesParams_st {
# 408 "/usr/local/cuda/include/cuda.h"
CUstreamBatchMemOpType operation;
# 409 "/usr/local/cuda/include/cuda.h"
unsigned flags;
# 410 "/usr/local/cuda/include/cuda.h"
} flushRemoteWrites;
# 411 "/usr/local/cuda/include/cuda.h"
cuuint64_t pad[6];
# 412 "/usr/local/cuda/include/cuda.h"
} CUstreamBatchMemOpParams;
# 421 "/usr/local/cuda/include/cuda.h"
typedef
# 418 "/usr/local/cuda/include/cuda.h"
enum CUoccupancy_flags_enum {
# 419 "/usr/local/cuda/include/cuda.h"
CU_OCCUPANCY_DEFAULT,
# 420 "/usr/local/cuda/include/cuda.h"
CU_OCCUPANCY_DISABLE_CACHING_OVERRIDE
# 421 "/usr/local/cuda/include/cuda.h"
} CUoccupancy_flags;
# 435 "/usr/local/cuda/include/cuda.h"
typedef
# 426 "/usr/local/cuda/include/cuda.h"
enum CUarray_format_enum {
# 427 "/usr/local/cuda/include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT8 = 1,
# 428 "/usr/local/cuda/include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT16,
# 429 "/usr/local/cuda/include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT32,
# 430 "/usr/local/cuda/include/cuda.h"
CU_AD_FORMAT_SIGNED_INT8 = 8,
# 431 "/usr/local/cuda/include/cuda.h"
CU_AD_FORMAT_SIGNED_INT16,
# 432 "/usr/local/cuda/include/cuda.h"
CU_AD_FORMAT_SIGNED_INT32,
# 433 "/usr/local/cuda/include/cuda.h"
CU_AD_FORMAT_HALF = 16,
# 434 "/usr/local/cuda/include/cuda.h"
CU_AD_FORMAT_FLOAT = 32
# 435 "/usr/local/cuda/include/cuda.h"
} CUarray_format;
# 445 "/usr/local/cuda/include/cuda.h"
typedef
# 440 "/usr/local/cuda/include/cuda.h"
enum CUaddress_mode_enum {
# 441 "/usr/local/cuda/include/cuda.h"
CU_TR_ADDRESS_MODE_WRAP,
# 442 "/usr/local/cuda/include/cuda.h"
CU_TR_ADDRESS_MODE_CLAMP,
# 443 "/usr/local/cuda/include/cuda.h"
CU_TR_ADDRESS_MODE_MIRROR,
# 444 "/usr/local/cuda/include/cuda.h"
CU_TR_ADDRESS_MODE_BORDER
# 445 "/usr/local/cuda/include/cuda.h"
} CUaddress_mode;
# 453 "/usr/local/cuda/include/cuda.h"
typedef
# 450 "/usr/local/cuda/include/cuda.h"
enum CUfilter_mode_enum {
# 451 "/usr/local/cuda/include/cuda.h"
CU_TR_FILTER_MODE_POINT,
# 452 "/usr/local/cuda/include/cuda.h"
CU_TR_FILTER_MODE_LINEAR
# 453 "/usr/local/cuda/include/cuda.h"
} CUfilter_mode;
# 556 "/usr/local/cuda/include/cuda.h"
typedef
# 458 "/usr/local/cuda/include/cuda.h"
enum CUdevice_attribute_enum {
# 459 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK = 1,
# 460 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_X,
# 461 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Y,
# 462 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Z,
# 463 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_X,
# 464 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Y,
# 465 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Z,
# 466 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK,
# 467 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_SHARED_MEMORY_PER_BLOCK = 8,
# 468 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_TOTAL_CONSTANT_MEMORY,
# 469 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_WARP_SIZE,
# 470 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_PITCH,
# 471 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_BLOCK,
# 472 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_REGISTERS_PER_BLOCK = 12,
# 473 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_CLOCK_RATE,
# 474 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_ALIGNMENT,
# 475 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_GPU_OVERLAP,
# 476 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT,
# 477 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_KERNEL_EXEC_TIMEOUT,
# 478 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_INTEGRATED,
# 479 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_MAP_HOST_MEMORY,
# 480 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_MODE,
# 481 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_WIDTH,
# 482 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_WIDTH,
# 483 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_HEIGHT,
# 484 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH,
# 485 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT,
# 486 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH,
# 487 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_WIDTH,
# 488 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_HEIGHT,
# 489 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_LAYERS,
# 490 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_WIDTH = 27,
# 491 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_HEIGHT,
# 492 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_NUMSLICES,
# 493 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_SURFACE_ALIGNMENT,
# 494 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_CONCURRENT_KERNELS,
# 495 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_ECC_ENABLED,
# 496 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_BUS_ID,
# 497 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DEVICE_ID,
# 498 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_TCC_DRIVER,
# 499 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MEMORY_CLOCK_RATE,
# 500 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_GLOBAL_MEMORY_BUS_WIDTH,
# 501 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_L2_CACHE_SIZE,
# 502 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_MULTIPROCESSOR,
# 503 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_ASYNC_ENGINE_COUNT,
# 504 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_UNIFIED_ADDRESSING,
# 505 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_WIDTH,
# 506 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_LAYERS,
# 507 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_TEX2D_GATHER,
# 508 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_WIDTH,
# 509 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_HEIGHT,
# 510 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH_ALTERNATE,
# 511 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT_ALTERNATE,
# 512 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH_ALTERNATE,
# 513 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DOMAIN_ID,
# 514 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_PITCH_ALIGNMENT,
# 515 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_WIDTH,
# 516 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_WIDTH,
# 517 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_LAYERS,
# 518 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_WIDTH,
# 519 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_WIDTH,
# 520 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_HEIGHT,
# 521 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_WIDTH,
# 522 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_HEIGHT,
# 523 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_DEPTH,
# 524 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_WIDTH,
# 525 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_LAYERS,
# 526 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_WIDTH,
# 527 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_HEIGHT,
# 528 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_LAYERS,
# 529 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_WIDTH,
# 530 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_WIDTH,
# 531 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_LAYERS,
# 532 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LINEAR_WIDTH,
# 533 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_WIDTH,
# 534 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_HEIGHT,
# 535 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_PITCH,
# 536 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_MIPMAPPED_WIDTH,
# 537 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_MIPMAPPED_HEIGHT,
# 538 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MAJOR,
# 539 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MINOR,
# 540 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_MIPMAPPED_WIDTH,
# 541 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_STREAM_PRIORITIES_SUPPORTED,
# 542 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_GLOBAL_L1_CACHE_SUPPORTED,
# 543 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_LOCAL_L1_CACHE_SUPPORTED,
# 544 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_MULTIPROCESSOR,
# 545 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_MULTIPROCESSOR,
# 546 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MANAGED_MEMORY,
# 547 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MULTI_GPU_BOARD,
# 548 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MULTI_GPU_BOARD_GROUP_ID,
# 549 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_HOST_NATIVE_ATOMIC_SUPPORTED,
# 550 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_SINGLE_TO_DOUBLE_PRECISION_PERF_RATIO,
# 551 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_PAGEABLE_MEMORY_ACCESS,
# 552 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_CONCURRENT_MANAGED_ACCESS,
# 553 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_PREEMPTION_SUPPORTED,
# 554 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_USE_HOST_POINTER_FOR_REGISTERED_MEM,
# 555 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX
# 556 "/usr/local/cuda/include/cuda.h"
} CUdevice_attribute;
# 572 "/usr/local/cuda/include/cuda.h"
typedef
# 561 "/usr/local/cuda/include/cuda.h"
struct CUdevprop_st {
# 562 "/usr/local/cuda/include/cuda.h"
int maxThreadsPerBlock;
# 563 "/usr/local/cuda/include/cuda.h"
int maxThreadsDim[3];
# 564 "/usr/local/cuda/include/cuda.h"
int maxGridSize[3];
# 565 "/usr/local/cuda/include/cuda.h"
int sharedMemPerBlock;
# 566 "/usr/local/cuda/include/cuda.h"
int totalConstantMemory;
# 567 "/usr/local/cuda/include/cuda.h"
int SIMDWidth;
# 568 "/usr/local/cuda/include/cuda.h"
int memPitch;
# 569 "/usr/local/cuda/include/cuda.h"
int regsPerBlock;
# 570 "/usr/local/cuda/include/cuda.h"
int clockRate;
# 571 "/usr/local/cuda/include/cuda.h"
int textureAlign;
# 572 "/usr/local/cuda/include/cuda.h"
} CUdevprop;
# 586 "/usr/local/cuda/include/cuda.h"
typedef
# 577 "/usr/local/cuda/include/cuda.h"
enum CUpointer_attribute_enum {
# 578 "/usr/local/cuda/include/cuda.h"
CU_POINTER_ATTRIBUTE_CONTEXT = 1,
# 579 "/usr/local/cuda/include/cuda.h"
CU_POINTER_ATTRIBUTE_MEMORY_TYPE,
# 580 "/usr/local/cuda/include/cuda.h"
CU_POINTER_ATTRIBUTE_DEVICE_POINTER,
# 581 "/usr/local/cuda/include/cuda.h"
CU_POINTER_ATTRIBUTE_HOST_POINTER,
# 582 "/usr/local/cuda/include/cuda.h"
CU_POINTER_ATTRIBUTE_P2P_TOKENS,
# 583 "/usr/local/cuda/include/cuda.h"
CU_POINTER_ATTRIBUTE_SYNC_MEMOPS,
# 584 "/usr/local/cuda/include/cuda.h"
CU_POINTER_ATTRIBUTE_BUFFER_ID,
# 585 "/usr/local/cuda/include/cuda.h"
CU_POINTER_ATTRIBUTE_IS_MANAGED
# 586 "/usr/local/cuda/include/cuda.h"
} CUpointer_attribute;
# 647 "/usr/local/cuda/include/cuda.h"
typedef
# 591 "/usr/local/cuda/include/cuda.h"
enum CUfunction_attribute_enum {
# 597 "/usr/local/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX_THREADS_PER_BLOCK,
# 604 "/usr/local/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_SHARED_SIZE_BYTES,
# 610 "/usr/local/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_CONST_SIZE_BYTES,
# 615 "/usr/local/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_LOCAL_SIZE_BYTES,
# 620 "/usr/local/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_NUM_REGS,
# 629 "/usr/local/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_PTX_VERSION,
# 638 "/usr/local/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_BINARY_VERSION,
# 644 "/usr/local/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_CACHE_MODE_CA,
# 646 "/usr/local/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX
# 647 "/usr/local/cuda/include/cuda.h"
} CUfunction_attribute;
# 657 "/usr/local/cuda/include/cuda.h"
typedef
# 652 "/usr/local/cuda/include/cuda.h"
enum CUfunc_cache_enum {
# 653 "/usr/local/cuda/include/cuda.h"
CU_FUNC_CACHE_PREFER_NONE,
# 654 "/usr/local/cuda/include/cuda.h"
CU_FUNC_CACHE_PREFER_SHARED,
# 655 "/usr/local/cuda/include/cuda.h"
CU_FUNC_CACHE_PREFER_L1,
# 656 "/usr/local/cuda/include/cuda.h"
CU_FUNC_CACHE_PREFER_EQUAL
# 657 "/usr/local/cuda/include/cuda.h"
} CUfunc_cache;
# 666 "/usr/local/cuda/include/cuda.h"
typedef
# 662 "/usr/local/cuda/include/cuda.h"
enum CUsharedconfig_enum {
# 663 "/usr/local/cuda/include/cuda.h"
CU_SHARED_MEM_CONFIG_DEFAULT_BANK_SIZE,
# 664 "/usr/local/cuda/include/cuda.h"
CU_SHARED_MEM_CONFIG_FOUR_BYTE_BANK_SIZE,
# 665 "/usr/local/cuda/include/cuda.h"
CU_SHARED_MEM_CONFIG_EIGHT_BYTE_BANK_SIZE
# 666 "/usr/local/cuda/include/cuda.h"
} CUsharedconfig;
# 676 "/usr/local/cuda/include/cuda.h"
typedef
# 671 "/usr/local/cuda/include/cuda.h"
enum CUmemorytype_enum {
# 672 "/usr/local/cuda/include/cuda.h"
CU_MEMORYTYPE_HOST = 1,
# 673 "/usr/local/cuda/include/cuda.h"
CU_MEMORYTYPE_DEVICE,
# 674 "/usr/local/cuda/include/cuda.h"
CU_MEMORYTYPE_ARRAY,
# 675 "/usr/local/cuda/include/cuda.h"
CU_MEMORYTYPE_UNIFIED
# 676 "/usr/local/cuda/include/cuda.h"
} CUmemorytype;
# 685 "/usr/local/cuda/include/cuda.h"
typedef
# 681 "/usr/local/cuda/include/cuda.h"
enum CUcomputemode_enum {
# 682 "/usr/local/cuda/include/cuda.h"
CU_COMPUTEMODE_DEFAULT,
# 683 "/usr/local/cuda/include/cuda.h"
CU_COMPUTEMODE_PROHIBITED = 2,
# 684 "/usr/local/cuda/include/cuda.h"
CU_COMPUTEMODE_EXCLUSIVE_PROCESS
# 685 "/usr/local/cuda/include/cuda.h"
} CUcomputemode;
# 697 "/usr/local/cuda/include/cuda.h"
typedef
# 690 "/usr/local/cuda/include/cuda.h"
enum CUmem_advise_enum {
# 691 "/usr/local/cuda/include/cuda.h"
CU_MEM_ADVISE_SET_READ_MOSTLY = 1,
# 692 "/usr/local/cuda/include/cuda.h"
CU_MEM_ADVISE_UNSET_READ_MOSTLY,
# 693 "/usr/local/cuda/include/cuda.h"
CU_MEM_ADVISE_SET_PREFERRED_LOCATION,
# 694 "/usr/local/cuda/include/cuda.h"
CU_MEM_ADVISE_UNSET_PREFERRED_LOCATION,
# 695 "/usr/local/cuda/include/cuda.h"
CU_MEM_ADVISE_SET_ACCESSED_BY,
# 696 "/usr/local/cuda/include/cuda.h"
CU_MEM_ADVISE_UNSET_ACCESSED_BY
# 697 "/usr/local/cuda/include/cuda.h"
} CUmem_advise;
# 704 "/usr/local/cuda/include/cuda.h"
typedef
# 699 "/usr/local/cuda/include/cuda.h"
enum CUmem_range_attribute_enum {
# 700 "/usr/local/cuda/include/cuda.h"
CU_MEM_RANGE_ATTRIBUTE_READ_MOSTLY = 1,
# 701 "/usr/local/cuda/include/cuda.h"
CU_MEM_RANGE_ATTRIBUTE_PREFERRED_LOCATION,
# 702 "/usr/local/cuda/include/cuda.h"
CU_MEM_RANGE_ATTRIBUTE_ACCESSED_BY,
# 703 "/usr/local/cuda/include/cuda.h"
CU_MEM_RANGE_ATTRIBUTE_LAST_PREFETCH_LOCATION
# 704 "/usr/local/cuda/include/cuda.h"
} CUmem_range_attribute;
# 848 "/usr/local/cuda/include/cuda.h"
typedef
# 709 "/usr/local/cuda/include/cuda.h"
enum CUjit_option_enum {
# 716 "/usr/local/cuda/include/cuda.h"
CU_JIT_MAX_REGISTERS,
# 731 "/usr/local/cuda/include/cuda.h"
CU_JIT_THREADS_PER_BLOCK,
# 739 "/usr/local/cuda/include/cuda.h"
CU_JIT_WALL_TIME,
# 748 "/usr/local/cuda/include/cuda.h"
CU_JIT_INFO_LOG_BUFFER,
# 757 "/usr/local/cuda/include/cuda.h"
CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES,
# 766 "/usr/local/cuda/include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER,
# 775 "/usr/local/cuda/include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES,
# 783 "/usr/local/cuda/include/cuda.h"
CU_JIT_OPTIMIZATION_LEVEL,
# 791 "/usr/local/cuda/include/cuda.h"
CU_JIT_TARGET_FROM_CUCONTEXT,
# 799 "/usr/local/cuda/include/cuda.h"
CU_JIT_TARGET,
# 808 "/usr/local/cuda/include/cuda.h"
CU_JIT_FALLBACK_STRATEGY,
# 816 "/usr/local/cuda/include/cuda.h"
CU_JIT_GENERATE_DEBUG_INFO,
# 823 "/usr/local/cuda/include/cuda.h"
CU_JIT_LOG_VERBOSE,
# 830 "/usr/local/cuda/include/cuda.h"
CU_JIT_GENERATE_LINE_INFO,
# 838 "/usr/local/cuda/include/cuda.h"
CU_JIT_CACHE_MODE,
# 843 "/usr/local/cuda/include/cuda.h"
CU_JIT_NEW_SM3X_OPT,
# 844 "/usr/local/cuda/include/cuda.h"
CU_JIT_FAST_COMPILE,
# 846 "/usr/local/cuda/include/cuda.h"
CU_JIT_NUM_OPTIONS
# 848 "/usr/local/cuda/include/cuda.h"
} CUjit_option;
# 871 "/usr/local/cuda/include/cuda.h"
typedef
# 853 "/usr/local/cuda/include/cuda.h"
enum CUjit_target_enum {
# 855 "/usr/local/cuda/include/cuda.h"
CU_TARGET_COMPUTE_10 = 10,
# 856 "/usr/local/cuda/include/cuda.h"
CU_TARGET_COMPUTE_11,
# 857 "/usr/local/cuda/include/cuda.h"
CU_TARGET_COMPUTE_12,
# 858 "/usr/local/cuda/include/cuda.h"
CU_TARGET_COMPUTE_13,
# 859 "/usr/local/cuda/include/cuda.h"
CU_TARGET_COMPUTE_20 = 20,
# 860 "/usr/local/cuda/include/cuda.h"
CU_TARGET_COMPUTE_21,
# 861 "/usr/local/cuda/include/cuda.h"
CU_TARGET_COMPUTE_30 = 30,
# 862 "/usr/local/cuda/include/cuda.h"
CU_TARGET_COMPUTE_32 = 32,
# 863 "/usr/local/cuda/include/cuda.h"
CU_TARGET_COMPUTE_35 = 35,
# 864 "/usr/local/cuda/include/cuda.h"
CU_TARGET_COMPUTE_37 = 37,
# 865 "/usr/local/cuda/include/cuda.h"
CU_TARGET_COMPUTE_50 = 50,
# 866 "/usr/local/cuda/include/cuda.h"
CU_TARGET_COMPUTE_52 = 52,
# 867 "/usr/local/cuda/include/cuda.h"
CU_TARGET_COMPUTE_53,
# 868 "/usr/local/cuda/include/cuda.h"
CU_TARGET_COMPUTE_60 = 60,
# 869 "/usr/local/cuda/include/cuda.h"
CU_TARGET_COMPUTE_61,
# 870 "/usr/local/cuda/include/cuda.h"
CU_TARGET_COMPUTE_62
# 871 "/usr/local/cuda/include/cuda.h"
} CUjit_target;
# 882 "/usr/local/cuda/include/cuda.h"
typedef
# 876 "/usr/local/cuda/include/cuda.h"
enum CUjit_fallback_enum {
# 878 "/usr/local/cuda/include/cuda.h"
CU_PREFER_PTX,
# 880 "/usr/local/cuda/include/cuda.h"
CU_PREFER_BINARY
# 882 "/usr/local/cuda/include/cuda.h"
} CUjit_fallback;
# 892 "/usr/local/cuda/include/cuda.h"
typedef
# 887 "/usr/local/cuda/include/cuda.h"
enum CUjit_cacheMode_enum {
# 889 "/usr/local/cuda/include/cuda.h"
CU_JIT_CACHE_OPTION_NONE,
# 890 "/usr/local/cuda/include/cuda.h"
CU_JIT_CACHE_OPTION_CG,
# 891 "/usr/local/cuda/include/cuda.h"
CU_JIT_CACHE_OPTION_CA
# 892 "/usr/local/cuda/include/cuda.h"
} CUjit_cacheMode;
# 930 "/usr/local/cuda/include/cuda.h"
typedef
# 897 "/usr/local/cuda/include/cuda.h"
enum CUjitInputType_enum {
# 903 "/usr/local/cuda/include/cuda.h"
CU_JIT_INPUT_CUBIN,
# 909 "/usr/local/cuda/include/cuda.h"
CU_JIT_INPUT_PTX,
# 915 "/usr/local/cuda/include/cuda.h"
CU_JIT_INPUT_FATBINARY,
# 921 "/usr/local/cuda/include/cuda.h"
CU_JIT_INPUT_OBJECT,
# 927 "/usr/local/cuda/include/cuda.h"
CU_JIT_INPUT_LIBRARY,
# 929 "/usr/local/cuda/include/cuda.h"
CU_JIT_NUM_INPUT_TYPES
# 930 "/usr/local/cuda/include/cuda.h"
} CUjitInputType;
# 933 "/usr/local/cuda/include/cuda.h"
typedef struct CUlinkState_st *CUlinkState;
# 945 "/usr/local/cuda/include/cuda.h"
typedef
# 939 "/usr/local/cuda/include/cuda.h"
enum CUgraphicsRegisterFlags_enum {
# 940 "/usr/local/cuda/include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_NONE,
# 941 "/usr/local/cuda/include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_READ_ONLY,
# 942 "/usr/local/cuda/include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_WRITE_DISCARD,
# 943 "/usr/local/cuda/include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_SURFACE_LDST = 4,
# 944 "/usr/local/cuda/include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_TEXTURE_GATHER = 8
# 945 "/usr/local/cuda/include/cuda.h"
} CUgraphicsRegisterFlags;
# 954 "/usr/local/cuda/include/cuda.h"
typedef
# 950 "/usr/local/cuda/include/cuda.h"
enum CUgraphicsMapResourceFlags_enum {
# 951 "/usr/local/cuda/include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_NONE,
# 952 "/usr/local/cuda/include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_READ_ONLY,
# 953 "/usr/local/cuda/include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_WRITE_DISCARD
# 954 "/usr/local/cuda/include/cuda.h"
} CUgraphicsMapResourceFlags;
# 966 "/usr/local/cuda/include/cuda.h"
typedef
# 959 "/usr/local/cuda/include/cuda.h"
enum CUarray_cubemap_face_enum {
# 960 "/usr/local/cuda/include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_X,
# 961 "/usr/local/cuda/include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_X,
# 962 "/usr/local/cuda/include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Y,
# 963 "/usr/local/cuda/include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Y,
# 964 "/usr/local/cuda/include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Z,
# 965 "/usr/local/cuda/include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Z
# 966 "/usr/local/cuda/include/cuda.h"
} CUarray_cubemap_face;
# 978 "/usr/local/cuda/include/cuda.h"
typedef
# 971 "/usr/local/cuda/include/cuda.h"
enum CUlimit_enum {
# 972 "/usr/local/cuda/include/cuda.h"
CU_LIMIT_STACK_SIZE,
# 973 "/usr/local/cuda/include/cuda.h"
CU_LIMIT_PRINTF_FIFO_SIZE,
# 974 "/usr/local/cuda/include/cuda.h"
CU_LIMIT_MALLOC_HEAP_SIZE,
# 975 "/usr/local/cuda/include/cuda.h"
CU_LIMIT_DEV_RUNTIME_SYNC_DEPTH,
# 976 "/usr/local/cuda/include/cuda.h"
CU_LIMIT_DEV_RUNTIME_PENDING_LAUNCH_COUNT,
# 977 "/usr/local/cuda/include/cuda.h"
CU_LIMIT_MAX
# 978 "/usr/local/cuda/include/cuda.h"
} CUlimit;
# 988 "/usr/local/cuda/include/cuda.h"
typedef
# 983 "/usr/local/cuda/include/cuda.h"
enum CUresourcetype_enum {
# 984 "/usr/local/cuda/include/cuda.h"
CU_RESOURCE_TYPE_ARRAY,
# 985 "/usr/local/cuda/include/cuda.h"
CU_RESOURCE_TYPE_MIPMAPPED_ARRAY,
# 986 "/usr/local/cuda/include/cuda.h"
CU_RESOURCE_TYPE_LINEAR,
# 987 "/usr/local/cuda/include/cuda.h"
CU_RESOURCE_TYPE_PITCH2D
# 988 "/usr/local/cuda/include/cuda.h"
} CUresourcetype;
# 1390 "/usr/local/cuda/include/cuda.h"
typedef
# 993 "/usr/local/cuda/include/cuda.h"
enum cudaError_enum {
# 999 "/usr/local/cuda/include/cuda.h"
CUDA_SUCCESS,
# 1005 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_INVALID_VALUE,
# 1011 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_OUT_OF_MEMORY,
# 1017 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_NOT_INITIALIZED,
# 1022 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_DEINITIALIZED,
# 1029 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_PROFILER_DISABLED,
# 1037 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_PROFILER_NOT_INITIALIZED,
# 1044 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STARTED,
# 1051 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STOPPED,
# 1057 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_NO_DEVICE = 100,
# 1063 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_INVALID_DEVICE,
# 1070 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_INVALID_IMAGE = 200,
# 1080 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_INVALID_CONTEXT,
# 1089 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_CURRENT,
# 1094 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_MAP_FAILED = 205,
# 1099 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_UNMAP_FAILED,
# 1105 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_ARRAY_IS_MAPPED,
# 1110 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_ALREADY_MAPPED,
# 1118 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_NO_BINARY_FOR_GPU,
# 1123 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_ALREADY_ACQUIRED,
# 1128 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_NOT_MAPPED,
# 1134 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_ARRAY,
# 1140 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_POINTER,
# 1146 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_ECC_UNCORRECTABLE,
# 1152 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_UNSUPPORTED_LIMIT,
# 1159 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_IN_USE,
# 1165 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_PEER_ACCESS_UNSUPPORTED,
# 1170 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_INVALID_PTX,
# 1175 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_INVALID_GRAPHICS_CONTEXT,
# 1181 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_NVLINK_UNCORRECTABLE,
# 1186 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_INVALID_SOURCE = 300,
# 1191 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_FILE_NOT_FOUND,
# 1196 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND,
# 1201 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_INIT_FAILED,
# 1206 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_OPERATING_SYSTEM,
# 1212 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_INVALID_HANDLE = 400,
# 1218 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_NOT_FOUND = 500,
# 1226 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_NOT_READY = 600,
# 1235 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_ILLEGAL_ADDRESS = 700,
# 1246 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES,
# 1257 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_LAUNCH_TIMEOUT,
# 1263 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING,
# 1270 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED,
# 1277 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_PEER_ACCESS_NOT_ENABLED,
# 1283 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE = 708,
# 1290 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_CONTEXT_IS_DESTROYED,
# 1298 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_ASSERT,
# 1305 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_TOO_MANY_PEERS,
# 1311 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED,
# 1317 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED,
# 1326 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_HARDWARE_STACK_ERROR,
# 1334 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_ILLEGAL_INSTRUCTION,
# 1343 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_MISALIGNED_ADDRESS,
# 1354 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_INVALID_ADDRESS_SPACE,
# 1362 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_INVALID_PC,
# 1372 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_LAUNCH_FAILED,
# 1378 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_NOT_PERMITTED = 800,
# 1384 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_NOT_SUPPORTED,
# 1389 "/usr/local/cuda/include/cuda.h"
CUDA_ERROR_UNKNOWN = 999
# 1390 "/usr/local/cuda/include/cuda.h"
} CUresult;
# 1399 "/usr/local/cuda/include/cuda.h"
typedef
# 1395 "/usr/local/cuda/include/cuda.h"
enum CUdevice_P2PAttribute_enum {
# 1396 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_P2P_ATTRIBUTE_PERFORMANCE_RANK = 1,
# 1397 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_P2P_ATTRIBUTE_ACCESS_SUPPORTED,
# 1398 "/usr/local/cuda/include/cuda.h"
CU_DEVICE_P2P_ATTRIBUTE_NATIVE_ATOMIC_SUPPORTED
# 1399 "/usr/local/cuda/include/cuda.h"
} CUdevice_P2PAttribute;
# 1413 "/usr/local/cuda/include/cuda.h"
typedef void (*CUstreamCallback)(CUstream hStream, CUresult status, void * userData);
# 1421 "/usr/local/cuda/include/cuda.h"
typedef size_t (*CUoccupancyB2DSize)(int blockSize);
# 1497 "/usr/local/cuda/include/cuda.h"
typedef
# 1476 "/usr/local/cuda/include/cuda.h"
struct CUDA_MEMCPY2D_st {
# 1477 "/usr/local/cuda/include/cuda.h"
size_t srcXInBytes;
# 1478 "/usr/local/cuda/include/cuda.h"
size_t srcY;
# 1480 "/usr/local/cuda/include/cuda.h"
CUmemorytype srcMemoryType;
# 1481 "/usr/local/cuda/include/cuda.h"
const void *srcHost;
# 1482 "/usr/local/cuda/include/cuda.h"
CUdeviceptr srcDevice;
# 1483 "/usr/local/cuda/include/cuda.h"
CUarray srcArray;
# 1484 "/usr/local/cuda/include/cuda.h"
size_t srcPitch;
# 1486 "/usr/local/cuda/include/cuda.h"
size_t dstXInBytes;
# 1487 "/usr/local/cuda/include/cuda.h"
size_t dstY;
# 1489 "/usr/local/cuda/include/cuda.h"
CUmemorytype dstMemoryType;
# 1490 "/usr/local/cuda/include/cuda.h"
void *dstHost;
# 1491 "/usr/local/cuda/include/cuda.h"
CUdeviceptr dstDevice;
# 1492 "/usr/local/cuda/include/cuda.h"
CUarray dstArray;
# 1493 "/usr/local/cuda/include/cuda.h"
size_t dstPitch;
# 1495 "/usr/local/cuda/include/cuda.h"
size_t WidthInBytes;
# 1496 "/usr/local/cuda/include/cuda.h"
size_t Height;
# 1497 "/usr/local/cuda/include/cuda.h"
} CUDA_MEMCPY2D;
# 1530 "/usr/local/cuda/include/cuda.h"
typedef
# 1502 "/usr/local/cuda/include/cuda.h"
struct CUDA_MEMCPY3D_st {
# 1503 "/usr/local/cuda/include/cuda.h"
size_t srcXInBytes;
# 1504 "/usr/local/cuda/include/cuda.h"
size_t srcY;
# 1505 "/usr/local/cuda/include/cuda.h"
size_t srcZ;
# 1506 "/usr/local/cuda/include/cuda.h"
size_t srcLOD;
# 1507 "/usr/local/cuda/include/cuda.h"
CUmemorytype srcMemoryType;
# 1508 "/usr/local/cuda/include/cuda.h"
const void *srcHost;
# 1509 "/usr/local/cuda/include/cuda.h"
CUdeviceptr srcDevice;
# 1510 "/usr/local/cuda/include/cuda.h"
CUarray srcArray;
# 1511 "/usr/local/cuda/include/cuda.h"
void *reserved0;
# 1512 "/usr/local/cuda/include/cuda.h"
size_t srcPitch;
# 1513 "/usr/local/cuda/include/cuda.h"
size_t srcHeight;
# 1515 "/usr/local/cuda/include/cuda.h"
size_t dstXInBytes;
# 1516 "/usr/local/cuda/include/cuda.h"
size_t dstY;
# 1517 "/usr/local/cuda/include/cuda.h"
size_t dstZ;
# 1518 "/usr/local/cuda/include/cuda.h"
size_t dstLOD;
# 1519 "/usr/local/cuda/include/cuda.h"
CUmemorytype dstMemoryType;
# 1520 "/usr/local/cuda/include/cuda.h"
void *dstHost;
# 1521 "/usr/local/cuda/include/cuda.h"
CUdeviceptr dstDevice;
# 1522 "/usr/local/cuda/include/cuda.h"
CUarray dstArray;
# 1523 "/usr/local/cuda/include/cuda.h"
void *reserved1;
# 1524 "/usr/local/cuda/include/cuda.h"
size_t dstPitch;
# 1525 "/usr/local/cuda/include/cuda.h"
size_t dstHeight;
# 1527 "/usr/local/cuda/include/cuda.h"
size_t WidthInBytes;
# 1528 "/usr/local/cuda/include/cuda.h"
size_t Height;
# 1529 "/usr/local/cuda/include/cuda.h"
size_t Depth;
# 1530 "/usr/local/cuda/include/cuda.h"
} CUDA_MEMCPY3D;
# 1563 "/usr/local/cuda/include/cuda.h"
typedef
# 1535 "/usr/local/cuda/include/cuda.h"
struct CUDA_MEMCPY3D_PEER_st {
# 1536 "/usr/local/cuda/include/cuda.h"
size_t srcXInBytes;
# 1537 "/usr/local/cuda/include/cuda.h"
size_t srcY;
# 1538 "/usr/local/cuda/include/cuda.h"
size_t srcZ;
# 1539 "/usr/local/cuda/include/cuda.h"
size_t srcLOD;
# 1540 "/usr/local/cuda/include/cuda.h"
CUmemorytype srcMemoryType;
# 1541 "/usr/local/cuda/include/cuda.h"
const void *srcHost;
# 1542 "/usr/local/cuda/include/cuda.h"
CUdeviceptr srcDevice;
# 1543 "/usr/local/cuda/include/cuda.h"
CUarray srcArray;
# 1544 "/usr/local/cuda/include/cuda.h"
CUcontext srcContext;
# 1545 "/usr/local/cuda/include/cuda.h"
size_t srcPitch;
# 1546 "/usr/local/cuda/include/cuda.h"
size_t srcHeight;
# 1548 "/usr/local/cuda/include/cuda.h"
size_t dstXInBytes;
# 1549 "/usr/local/cuda/include/cuda.h"
size_t dstY;
# 1550 "/usr/local/cuda/include/cuda.h"
size_t dstZ;
# 1551 "/usr/local/cuda/include/cuda.h"
size_t dstLOD;
# 1552 "/usr/local/cuda/include/cuda.h"
CUmemorytype dstMemoryType;
# 1553 "/usr/local/cuda/include/cuda.h"
void *dstHost;
# 1554 "/usr/local/cuda/include/cuda.h"
CUdeviceptr dstDevice;
# 1555 "/usr/local/cuda/include/cuda.h"
CUarray dstArray;
# 1556 "/usr/local/cuda/include/cuda.h"
CUcontext dstContext;
# 1557 "/usr/local/cuda/include/cuda.h"
size_t dstPitch;
# 1558 "/usr/local/cuda/include/cuda.h"
size_t dstHeight;
# 1560 "/usr/local/cuda/include/cuda.h"
size_t WidthInBytes;
# 1561 "/usr/local/cuda/include/cuda.h"
size_t Height;
# 1562 "/usr/local/cuda/include/cuda.h"
size_t Depth;
# 1563 "/usr/local/cuda/include/cuda.h"
} CUDA_MEMCPY3D_PEER;
# 1575 "/usr/local/cuda/include/cuda.h"
typedef
# 1568 "/usr/local/cuda/include/cuda.h"
struct CUDA_ARRAY_DESCRIPTOR_st {
# 1570 "/usr/local/cuda/include/cuda.h"
size_t Width;
# 1571 "/usr/local/cuda/include/cuda.h"
size_t Height;
# 1573 "/usr/local/cuda/include/cuda.h"
CUarray_format Format;
# 1574 "/usr/local/cuda/include/cuda.h"
unsigned NumChannels;
# 1575 "/usr/local/cuda/include/cuda.h"
} CUDA_ARRAY_DESCRIPTOR;
# 1589 "/usr/local/cuda/include/cuda.h"
typedef
# 1580 "/usr/local/cuda/include/cuda.h"
struct CUDA_ARRAY3D_DESCRIPTOR_st {
# 1582 "/usr/local/cuda/include/cuda.h"
size_t Width;
# 1583 "/usr/local/cuda/include/cuda.h"
size_t Height;
# 1584 "/usr/local/cuda/include/cuda.h"
size_t Depth;
# 1586 "/usr/local/cuda/include/cuda.h"
CUarray_format Format;
# 1587 "/usr/local/cuda/include/cuda.h"
unsigned NumChannels;
# 1588 "/usr/local/cuda/include/cuda.h"
unsigned Flags;
# 1589 "/usr/local/cuda/include/cuda.h"
} CUDA_ARRAY3D_DESCRIPTOR;
# 1629 "/usr/local/cuda/include/cuda.h"
typedef
# 1598 "/usr/local/cuda/include/cuda.h"
struct CUDA_RESOURCE_DESC_st {
# 1600 "/usr/local/cuda/include/cuda.h"
CUresourcetype resType;
# 1602 "/usr/local/cuda/include/cuda.h"
union {
# 1603 "/usr/local/cuda/include/cuda.h"
struct {
# 1604 "/usr/local/cuda/include/cuda.h"
CUarray hArray;
# 1605 "/usr/local/cuda/include/cuda.h"
} array;
# 1606 "/usr/local/cuda/include/cuda.h"
struct {
# 1607 "/usr/local/cuda/include/cuda.h"
CUmipmappedArray hMipmappedArray;
# 1608 "/usr/local/cuda/include/cuda.h"
} mipmap;
# 1609 "/usr/local/cuda/include/cuda.h"
struct {
# 1610 "/usr/local/cuda/include/cuda.h"
CUdeviceptr devPtr;
# 1611 "/usr/local/cuda/include/cuda.h"
CUarray_format format;
# 1612 "/usr/local/cuda/include/cuda.h"
unsigned numChannels;
# 1613 "/usr/local/cuda/include/cuda.h"
size_t sizeInBytes;
# 1614 "/usr/local/cuda/include/cuda.h"
} linear;
# 1615 "/usr/local/cuda/include/cuda.h"
struct {
# 1616 "/usr/local/cuda/include/cuda.h"
CUdeviceptr devPtr;
# 1617 "/usr/local/cuda/include/cuda.h"
CUarray_format format;
# 1618 "/usr/local/cuda/include/cuda.h"
unsigned numChannels;
# 1619 "/usr/local/cuda/include/cuda.h"
size_t width;
# 1620 "/usr/local/cuda/include/cuda.h"
size_t height;
# 1621 "/usr/local/cuda/include/cuda.h"
size_t pitchInBytes;
# 1622 "/usr/local/cuda/include/cuda.h"
} pitch2D;
# 1623 "/usr/local/cuda/include/cuda.h"
struct {
# 1624 "/usr/local/cuda/include/cuda.h"
int reserved[32];
# 1625 "/usr/local/cuda/include/cuda.h"
} reserved;
# 1626 "/usr/local/cuda/include/cuda.h"
} res;
# 1628 "/usr/local/cuda/include/cuda.h"
unsigned flags;
# 1629 "/usr/local/cuda/include/cuda.h"
} CUDA_RESOURCE_DESC;
# 1645 "/usr/local/cuda/include/cuda.h"
typedef
# 1634 "/usr/local/cuda/include/cuda.h"
struct CUDA_TEXTURE_DESC_st {
# 1635 "/usr/local/cuda/include/cuda.h"
CUaddress_mode addressMode[3];
# 1636 "/usr/local/cuda/include/cuda.h"
CUfilter_mode filterMode;
# 1637 "/usr/local/cuda/include/cuda.h"
unsigned flags;
# 1638 "/usr/local/cuda/include/cuda.h"
unsigned maxAnisotropy;
# 1639 "/usr/local/cuda/include/cuda.h"
CUfilter_mode mipmapFilterMode;
# 1640 "/usr/local/cuda/include/cuda.h"
float mipmapLevelBias;
# 1641 "/usr/local/cuda/include/cuda.h"
float minMipmapLevelClamp;
# 1642 "/usr/local/cuda/include/cuda.h"
float maxMipmapLevelClamp;
# 1643 "/usr/local/cuda/include/cuda.h"
float borderColor[4];
# 1644 "/usr/local/cuda/include/cuda.h"
int reserved[12];
# 1645 "/usr/local/cuda/include/cuda.h"
} CUDA_TEXTURE_DESC;
# 1687 "/usr/local/cuda/include/cuda.h"
typedef
# 1650 "/usr/local/cuda/include/cuda.h"
enum CUresourceViewFormat_enum {
# 1652 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_NONE,
# 1653 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_1X8,
# 1654 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_2X8,
# 1655 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_4X8,
# 1656 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_1X8,
# 1657 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_2X8,
# 1658 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_4X8,
# 1659 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_1X16,
# 1660 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_2X16,
# 1661 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_4X16,
# 1662 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_1X16,
# 1663 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_2X16,
# 1664 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_4X16,
# 1665 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_1X32,
# 1666 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_2X32,
# 1667 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_4X32,
# 1668 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_1X32,
# 1669 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_2X32,
# 1670 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_4X32,
# 1671 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_1X16,
# 1672 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_2X16,
# 1673 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_4X16,
# 1674 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_1X32,
# 1675 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_2X32,
# 1676 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_4X32,
# 1677 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC1,
# 1678 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC2,
# 1679 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC3,
# 1680 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC4,
# 1681 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_SIGNED_BC4,
# 1682 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC5,
# 1683 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_SIGNED_BC5,
# 1684 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC6H,
# 1685 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_SIGNED_BC6H,
# 1686 "/usr/local/cuda/include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC7
# 1687 "/usr/local/cuda/include/cuda.h"
} CUresourceViewFormat;
# 1703 "/usr/local/cuda/include/cuda.h"
typedef
# 1692 "/usr/local/cuda/include/cuda.h"
struct CUDA_RESOURCE_VIEW_DESC_st {
# 1694 "/usr/local/cuda/include/cuda.h"
CUresourceViewFormat format;
# 1695 "/usr/local/cuda/include/cuda.h"
size_t width;
# 1696 "/usr/local/cuda/include/cuda.h"
size_t height;
# 1697 "/usr/local/cuda/include/cuda.h"
size_t depth;
# 1698 "/usr/local/cuda/include/cuda.h"
unsigned firstMipmapLevel;
# 1699 "/usr/local/cuda/include/cuda.h"
unsigned lastMipmapLevel;
# 1700 "/usr/local/cuda/include/cuda.h"
unsigned firstLayer;
# 1701 "/usr/local/cuda/include/cuda.h"
unsigned lastLayer;
# 1702 "/usr/local/cuda/include/cuda.h"
unsigned reserved[16];
# 1703 "/usr/local/cuda/include/cuda.h"
} CUDA_RESOURCE_VIEW_DESC;
# 1711 "/usr/local/cuda/include/cuda.h"
typedef
# 1708 "/usr/local/cuda/include/cuda.h"
struct CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_st {
# 1709 "/usr/local/cuda/include/cuda.h"
unsigned long long p2pToken;
# 1710 "/usr/local/cuda/include/cuda.h"
unsigned vaSpaceToken;
# 1711 "/usr/local/cuda/include/cuda.h"
} CUDA_POINTER_ATTRIBUTE_P2P_TOKENS;
# 1858 "/usr/local/cuda/include/cuda.h"
CUresult cuGetErrorString(CUresult error, const char ** pStr);
# 1877 "/usr/local/cuda/include/cuda.h"
CUresult cuGetErrorName(CUresult error, const char ** pStr);
# 1909 "/usr/local/cuda/include/cuda.h"
CUresult cuInit(unsigned Flags);
# 1939 "/usr/local/cuda/include/cuda.h"
CUresult cuDriverGetVersion(int * driverVersion);
# 1979 "/usr/local/cuda/include/cuda.h"
CUresult cuDeviceGet(CUdevice * device, int ordinal);
# 2004 "/usr/local/cuda/include/cuda.h"
CUresult cuDeviceGetCount(int * count);
# 2032 "/usr/local/cuda/include/cuda.h"
CUresult cuDeviceGetName(char * name, int len, CUdevice dev);
# 2059 "/usr/local/cuda/include/cuda.h"
CUresult cuDeviceTotalMem_v2(size_t * bytes, CUdevice dev);
# 2254 "/usr/local/cuda/include/cuda.h"
CUresult cuDeviceGetAttribute(int * pi, CUdevice_attribute attrib, CUdevice dev);
# 2331 "/usr/local/cuda/include/cuda.h"
CUresult cuDeviceGetProperties(CUdevprop * prop, CUdevice dev);
# 2364 "/usr/local/cuda/include/cuda.h"
CUresult cuDeviceComputeCapability(int * major, int * minor, CUdevice dev);
# 2432 "/usr/local/cuda/include/cuda.h"
CUresult cuDevicePrimaryCtxRetain(CUcontext * pctx, CUdevice dev);
# 2466 "/usr/local/cuda/include/cuda.h"
CUresult cuDevicePrimaryCtxRelease(CUdevice dev);
# 2529 "/usr/local/cuda/include/cuda.h"
CUresult cuDevicePrimaryCtxSetFlags(CUdevice dev, unsigned flags);
# 2553 "/usr/local/cuda/include/cuda.h"
CUresult cuDevicePrimaryCtxGetState(CUdevice dev, unsigned * flags, int * active);
# 2591 "/usr/local/cuda/include/cuda.h"
CUresult cuDevicePrimaryCtxReset(CUdevice dev);
# 2697 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxCreate_v2(CUcontext * pctx, unsigned flags, CUdevice dev);
# 2737 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxDestroy_v2(CUcontext ctx);
# 2773 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxPushCurrent_v2(CUcontext ctx);
# 2807 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxPopCurrent_v2(CUcontext * pctx);
# 2833 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxSetCurrent(CUcontext ctx);
# 2852 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxGetCurrent(CUcontext * pctx);
# 2882 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxGetDevice(CUdevice * device);
# 2910 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxGetFlags(unsigned * flags);
# 2940 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxSynchronize();
# 3035 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxSetLimit(CUlimit limit, size_t value);
# 3074 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxGetLimit(size_t * pvalue, CUlimit limit);
# 3117 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxGetCacheConfig(CUfunc_cache * pconfig);
# 3167 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxSetCacheConfig(CUfunc_cache config);
# 3209 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxGetSharedMemConfig(CUsharedconfig * pConfig);
# 3261 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxSetSharedMemConfig(CUsharedconfig config);
# 3299 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxGetApiVersion(CUcontext ctx, unsigned * version);
# 3338 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxGetStreamPriorityRange(int * leastPriority, int * greatestPriority);
# 3393 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxAttach(CUcontext * pctx, unsigned flags);
# 3429 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxDetach(CUcontext ctx);
# 3483 "/usr/local/cuda/include/cuda.h"
CUresult cuModuleLoad(CUmodule * module, const char * fname);
# 3519 "/usr/local/cuda/include/cuda.h"
CUresult cuModuleLoadData(CUmodule * module, const void * image);
# 3561 "/usr/local/cuda/include/cuda.h"
CUresult cuModuleLoadDataEx(CUmodule * module, const void * image, unsigned numOptions, CUjit_option * options, void ** optionValues);
# 3602 "/usr/local/cuda/include/cuda.h"
CUresult cuModuleLoadFatBinary(CUmodule * module, const void * fatCubin);
# 3627 "/usr/local/cuda/include/cuda.h"
CUresult cuModuleUnload(CUmodule hmod);
# 3657 "/usr/local/cuda/include/cuda.h"
CUresult cuModuleGetFunction(CUfunction * hfunc, CUmodule hmod, const char * name);
# 3691 "/usr/local/cuda/include/cuda.h"
CUresult cuModuleGetGlobal_v2(CUdeviceptr * dptr, size_t * bytes, CUmodule hmod, const char * name);
# 3725 "/usr/local/cuda/include/cuda.h"
CUresult cuModuleGetTexRef(CUtexref * pTexRef, CUmodule hmod, const char * name);
# 3756 "/usr/local/cuda/include/cuda.h"
CUresult cuModuleGetSurfRef(CUsurfref * pSurfRef, CUmodule hmod, const char * name);
# 3798 "/usr/local/cuda/include/cuda.h"
CUresult cuLinkCreate_v2(unsigned numOptions, CUjit_option * options, void ** optionValues, CUlinkState * stateOut);
# 3835 "/usr/local/cuda/include/cuda.h"
CUresult cuLinkAddData_v2(CUlinkState state, CUjitInputType type, void * data, size_t size, const char * name, unsigned numOptions, CUjit_option * options, void ** optionValues);
# 3874 "/usr/local/cuda/include/cuda.h"
CUresult cuLinkAddFile_v2(CUlinkState state, CUjitInputType type, const char * path, unsigned numOptions, CUjit_option * options, void ** optionValues);
# 3901 "/usr/local/cuda/include/cuda.h"
CUresult cuLinkComplete(CUlinkState state, void ** cubinOut, size_t * sizeOut);
# 3915 "/usr/local/cuda/include/cuda.h"
CUresult cuLinkDestroy(CUlinkState state);
# 3963 "/usr/local/cuda/include/cuda.h"
CUresult cuMemGetInfo_v2(size_t * free, size_t * total);
# 3996 "/usr/local/cuda/include/cuda.h"
CUresult cuMemAlloc_v2(CUdeviceptr * dptr, size_t bytesize);
# 4057 "/usr/local/cuda/include/cuda.h"
CUresult cuMemAllocPitch_v2(CUdeviceptr * dptr, size_t * pPitch, size_t WidthInBytes, size_t Height, unsigned ElementSizeBytes);
# 4086 "/usr/local/cuda/include/cuda.h"
CUresult cuMemFree_v2(CUdeviceptr dptr);
# 4119 "/usr/local/cuda/include/cuda.h"
CUresult cuMemGetAddressRange_v2(CUdeviceptr * pbase, size_t * psize, CUdeviceptr dptr);
# 4165 "/usr/local/cuda/include/cuda.h"
CUresult cuMemAllocHost_v2(void ** pp, size_t bytesize);
# 4195 "/usr/local/cuda/include/cuda.h"
CUresult cuMemFreeHost(void * p);
# 4277 "/usr/local/cuda/include/cuda.h"
CUresult cuMemHostAlloc(void ** pp, size_t bytesize, unsigned Flags);
# 4330 "/usr/local/cuda/include/cuda.h"
CUresult cuMemHostGetDevicePointer_v2(CUdeviceptr * pdptr, void * p, unsigned Flags);
# 4355 "/usr/local/cuda/include/cuda.h"
CUresult cuMemHostGetFlags(unsigned * pFlags, void * p);
# 4465 "/usr/local/cuda/include/cuda.h"
CUresult cuMemAllocManaged(CUdeviceptr * dptr, size_t bytesize, unsigned flags);
# 4494 "/usr/local/cuda/include/cuda.h"
CUresult cuDeviceGetByPCIBusId(CUdevice * dev, const char * pciBusId);
# 4522 "/usr/local/cuda/include/cuda.h"
CUresult cuDeviceGetPCIBusId(char * pciBusId, int len, CUdevice dev);
# 4564 "/usr/local/cuda/include/cuda.h"
CUresult cuIpcGetEventHandle(CUipcEventHandle * pHandle, CUevent event);
# 4601 "/usr/local/cuda/include/cuda.h"
CUresult cuIpcOpenEventHandle(CUevent * phEvent, CUipcEventHandle handle);
# 4638 "/usr/local/cuda/include/cuda.h"
CUresult cuIpcGetMemHandle(CUipcMemHandle * pHandle, CUdeviceptr dptr);
# 4689 "/usr/local/cuda/include/cuda.h"
CUresult cuIpcOpenMemHandle(CUdeviceptr * pdptr, CUipcMemHandle handle, unsigned Flags);
# 4720 "/usr/local/cuda/include/cuda.h"
CUresult cuIpcCloseMemHandle(CUdeviceptr dptr);
# 4803 "/usr/local/cuda/include/cuda.h"
CUresult cuMemHostRegister_v2(void * p, size_t bytesize, unsigned Flags);
# 4827 "/usr/local/cuda/include/cuda.h"
CUresult cuMemHostUnregister(void * p);
# 4863 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpy(CUdeviceptr dst, CUdeviceptr src, size_t ByteCount);
# 4892 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpyPeer(CUdeviceptr dstDevice, CUcontext dstContext, CUdeviceptr srcDevice, CUcontext srcContext, size_t ByteCount);
# 4928 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpyHtoD_v2(CUdeviceptr dstDevice, const void * srcHost, size_t ByteCount);
# 4961 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpyDtoH_v2(void * dstHost, CUdeviceptr srcDevice, size_t ByteCount);
# 4994 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpyDtoD_v2(CUdeviceptr dstDevice, CUdeviceptr srcDevice, size_t ByteCount);
# 5029 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpyDtoA_v2(CUarray dstArray, size_t dstOffset, CUdeviceptr srcDevice, size_t ByteCount);
# 5066 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpyAtoD_v2(CUdeviceptr dstDevice, CUarray srcArray, size_t srcOffset, size_t ByteCount);
# 5101 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpyHtoA_v2(CUarray dstArray, size_t dstOffset, const void * srcHost, size_t ByteCount);
# 5136 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpyAtoH_v2(void * dstHost, CUarray srcArray, size_t srcOffset, size_t ByteCount);
# 5175 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpyAtoA_v2(CUarray dstArray, size_t dstOffset, CUarray srcArray, size_t srcOffset, size_t ByteCount);
# 5336 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpy2D_v2(const CUDA_MEMCPY2D * pCopy);
# 5495 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpy2DUnaligned_v2(const CUDA_MEMCPY2D * pCopy);
# 5663 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpy3D_v2(const CUDA_MEMCPY3D * pCopy);
# 5688 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpy3DPeer(const CUDA_MEMCPY3D_PEER * pCopy);
# 5728 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpyAsync(CUdeviceptr dst, CUdeviceptr src, size_t ByteCount, CUstream hStream);
# 5759 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpyPeerAsync(CUdeviceptr dstDevice, CUcontext dstContext, CUdeviceptr srcDevice, CUcontext srcContext, size_t ByteCount, CUstream hStream);
# 5798 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpyHtoDAsync_v2(CUdeviceptr dstDevice, const void * srcHost, size_t ByteCount, CUstream hStream);
# 5835 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpyDtoHAsync_v2(void * dstHost, CUdeviceptr srcDevice, size_t ByteCount, CUstream hStream);
# 5872 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpyDtoDAsync_v2(CUdeviceptr dstDevice, CUdeviceptr srcDevice, size_t ByteCount, CUstream hStream);
# 5911 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpyHtoAAsync_v2(CUarray dstArray, size_t dstOffset, const void * srcHost, size_t ByteCount, CUstream hStream);
# 5950 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpyAtoHAsync_v2(void * dstHost, CUarray srcArray, size_t srcOffset, size_t ByteCount, CUstream hStream);
# 6115 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpy2DAsync_v2(const CUDA_MEMCPY2D * pCopy, CUstream hStream);
# 6287 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpy3DAsync_v2(const CUDA_MEMCPY3D * pCopy, CUstream hStream);
# 6314 "/usr/local/cuda/include/cuda.h"
CUresult cuMemcpy3DPeerAsync(const CUDA_MEMCPY3D_PEER * pCopy, CUstream hStream);
# 6350 "/usr/local/cuda/include/cuda.h"
CUresult cuMemsetD8_v2(CUdeviceptr dstDevice, unsigned char uc, size_t N);
# 6384 "/usr/local/cuda/include/cuda.h"
CUresult cuMemsetD16_v2(CUdeviceptr dstDevice, unsigned short us, size_t N);
# 6418 "/usr/local/cuda/include/cuda.h"
CUresult cuMemsetD32_v2(CUdeviceptr dstDevice, unsigned ui, size_t N);
# 6457 "/usr/local/cuda/include/cuda.h"
CUresult cuMemsetD2D8_v2(CUdeviceptr dstDevice, size_t dstPitch, unsigned char uc, size_t Width, size_t Height);
# 6497 "/usr/local/cuda/include/cuda.h"
CUresult cuMemsetD2D16_v2(CUdeviceptr dstDevice, size_t dstPitch, unsigned short us, size_t Width, size_t Height);
# 6537 "/usr/local/cuda/include/cuda.h"
CUresult cuMemsetD2D32_v2(CUdeviceptr dstDevice, size_t dstPitch, unsigned ui, size_t Width, size_t Height);
# 6573 "/usr/local/cuda/include/cuda.h"
CUresult cuMemsetD8Async(CUdeviceptr dstDevice, unsigned char uc, size_t N, CUstream hStream);
# 6609 "/usr/local/cuda/include/cuda.h"
CUresult cuMemsetD16Async(CUdeviceptr dstDevice, unsigned short us, size_t N, CUstream hStream);
# 6644 "/usr/local/cuda/include/cuda.h"
CUresult cuMemsetD32Async(CUdeviceptr dstDevice, unsigned ui, size_t N, CUstream hStream);
# 6685 "/usr/local/cuda/include/cuda.h"
CUresult cuMemsetD2D8Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned char uc, size_t Width, size_t Height, CUstream hStream);
# 6727 "/usr/local/cuda/include/cuda.h"
CUresult cuMemsetD2D16Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned short us, size_t Width, size_t Height, CUstream hStream);
# 6769 "/usr/local/cuda/include/cuda.h"
CUresult cuMemsetD2D32Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned ui, size_t Width, size_t Height, CUstream hStream);
# 6872 "/usr/local/cuda/include/cuda.h"
CUresult cuArrayCreate_v2(CUarray * pHandle, const CUDA_ARRAY_DESCRIPTOR * pAllocateArray);
# 6905 "/usr/local/cuda/include/cuda.h"
CUresult cuArrayGetDescriptor_v2(CUDA_ARRAY_DESCRIPTOR * pArrayDescriptor, CUarray hArray);
# 6936 "/usr/local/cuda/include/cuda.h"
CUresult cuArrayDestroy(CUarray hArray);
# 7116 "/usr/local/cuda/include/cuda.h"
CUresult cuArray3DCreate_v2(CUarray * pHandle, const CUDA_ARRAY3D_DESCRIPTOR * pAllocateArray);
# 7152 "/usr/local/cuda/include/cuda.h"
CUresult cuArray3DGetDescriptor_v2(CUDA_ARRAY3D_DESCRIPTOR * pArrayDescriptor, CUarray hArray);
# 7279 "/usr/local/cuda/include/cuda.h"
CUresult cuMipmappedArrayCreate(CUmipmappedArray * pHandle, const CUDA_ARRAY3D_DESCRIPTOR * pMipmappedArrayDesc, unsigned numMipmapLevels);
# 7305 "/usr/local/cuda/include/cuda.h"
CUresult cuMipmappedArrayGetLevel(CUarray * pLevelArray, CUmipmappedArray hMipmappedArray, unsigned level);
# 7325 "/usr/local/cuda/include/cuda.h"
CUresult cuMipmappedArrayDestroy(CUmipmappedArray hMipmappedArray);
# 7571 "/usr/local/cuda/include/cuda.h"
CUresult cuPointerGetAttribute(void * data, CUpointer_attribute attribute, CUdeviceptr ptr);
# 7640 "/usr/local/cuda/include/cuda.h"
CUresult cuMemPrefetchAsync(CUdeviceptr devPtr, size_t count, CUdevice dstDevice, CUstream hStream);
# 7726 "/usr/local/cuda/include/cuda.h"
CUresult cuMemAdvise(CUdeviceptr devPtr, size_t count, CUmem_advise advice, CUdevice device);
# 7783 "/usr/local/cuda/include/cuda.h"
CUresult cuMemRangeGetAttribute(void * data, size_t dataSize, CUmem_range_attribute attribute, CUdeviceptr devPtr, size_t count);
# 7822 "/usr/local/cuda/include/cuda.h"
CUresult cuMemRangeGetAttributes(void ** data, size_t * dataSizes, CUmem_range_attribute * attributes, size_t numAttributes, CUdeviceptr devPtr, size_t count);
# 7866 "/usr/local/cuda/include/cuda.h"
CUresult cuPointerSetAttribute(const void * value, CUpointer_attribute attribute, CUdeviceptr ptr);
# 7908 "/usr/local/cuda/include/cuda.h"
CUresult cuPointerGetAttributes(unsigned numAttributes, CUpointer_attribute * attributes, void ** data, CUdeviceptr ptr);
# 7956 "/usr/local/cuda/include/cuda.h"
CUresult cuStreamCreate(CUstream * phStream, unsigned Flags);
# 8004 "/usr/local/cuda/include/cuda.h"
CUresult cuStreamCreateWithPriority(CUstream * phStream, unsigned flags, int priority);
# 8034 "/usr/local/cuda/include/cuda.h"
CUresult cuStreamGetPriority(CUstream hStream, int * priority);
# 8061 "/usr/local/cuda/include/cuda.h"
CUresult cuStreamGetFlags(CUstream hStream, unsigned * flags);
# 8102 "/usr/local/cuda/include/cuda.h"
CUresult cuStreamWaitEvent(CUstream hStream, CUevent hEvent, unsigned Flags);
# 8173 "/usr/local/cuda/include/cuda.h"
CUresult cuStreamAddCallback(CUstream hStream, CUstreamCallback callback, void * userData, unsigned flags);
# 8252 "/usr/local/cuda/include/cuda.h"
CUresult cuStreamAttachMemAsync(CUstream hStream, CUdeviceptr dptr, size_t length, unsigned flags);
# 8283 "/usr/local/cuda/include/cuda.h"
CUresult cuStreamQuery(CUstream hStream);
# 8310 "/usr/local/cuda/include/cuda.h"
CUresult cuStreamSynchronize(CUstream hStream);
# 8339 "/usr/local/cuda/include/cuda.h"
CUresult cuStreamDestroy_v2(CUstream hStream);
# 8394 "/usr/local/cuda/include/cuda.h"
CUresult cuEventCreate(CUevent * phEvent, unsigned Flags);
# 8430 "/usr/local/cuda/include/cuda.h"
CUresult cuEventRecord(CUevent hEvent, CUstream hStream);
# 8464 "/usr/local/cuda/include/cuda.h"
CUresult cuEventQuery(CUevent hEvent);
# 8498 "/usr/local/cuda/include/cuda.h"
CUresult cuEventSynchronize(CUevent hEvent);
# 8527 "/usr/local/cuda/include/cuda.h"
CUresult cuEventDestroy_v2(CUevent hEvent);
# 8571 "/usr/local/cuda/include/cuda.h"
CUresult cuEventElapsedTime(float * pMilliseconds, CUevent hStart, CUevent hEnd);
# 8606 "/usr/local/cuda/include/cuda.h"
CUresult cuStreamWaitValue32(CUstream stream, CUdeviceptr addr, cuuint32_t value, unsigned flags);
# 8639 "/usr/local/cuda/include/cuda.h"
CUresult cuStreamWriteValue32(CUstream stream, CUdeviceptr addr, cuuint32_t value, unsigned flags);
# 8671 "/usr/local/cuda/include/cuda.h"
CUresult cuStreamBatchMemOp(CUstream stream, unsigned count, CUstreamBatchMemOpParams * paramArray, unsigned flags);
# 8739 "/usr/local/cuda/include/cuda.h"
CUresult cuFuncGetAttribute(int * pi, CUfunction_attribute attrib, CUfunction hfunc);
# 8782 "/usr/local/cuda/include/cuda.h"
CUresult cuFuncSetCacheConfig(CUfunction hfunc, CUfunc_cache config);
# 8834 "/usr/local/cuda/include/cuda.h"
CUresult cuFuncSetSharedMemConfig(CUfunction hfunc, CUsharedconfig config);
# 8948 "/usr/local/cuda/include/cuda.h"
CUresult cuLaunchKernel(CUfunction f, unsigned gridDimX, unsigned gridDimY, unsigned gridDimZ, unsigned blockDimX, unsigned blockDimY, unsigned blockDimZ, unsigned sharedMemBytes, CUstream hStream, void ** kernelParams, void ** extra);
# 9009 "/usr/local/cuda/include/cuda.h"
CUresult cuFuncSetBlockShape(CUfunction hfunc, int x, int y, int z);
# 9043 "/usr/local/cuda/include/cuda.h"
CUresult cuFuncSetSharedSize(CUfunction hfunc, unsigned bytes);
# 9075 "/usr/local/cuda/include/cuda.h"
CUresult cuParamSetSize(CUfunction hfunc, unsigned numbytes);
# 9108 "/usr/local/cuda/include/cuda.h"
CUresult cuParamSeti(CUfunction hfunc, int offset, unsigned value);
# 9141 "/usr/local/cuda/include/cuda.h"
CUresult cuParamSetf(CUfunction hfunc, int offset, float value);
# 9176 "/usr/local/cuda/include/cuda.h"
CUresult cuParamSetv(CUfunction hfunc, int offset, void * ptr, unsigned numbytes);
# 9213 "/usr/local/cuda/include/cuda.h"
CUresult cuLaunch(CUfunction f);
# 9252 "/usr/local/cuda/include/cuda.h"
CUresult cuLaunchGrid(CUfunction f, int grid_width, int grid_height);
# 9299 "/usr/local/cuda/include/cuda.h"
CUresult cuLaunchGridAsync(CUfunction f, int grid_width, int grid_height, CUstream hStream);
# 9324 "/usr/local/cuda/include/cuda.h"
CUresult cuParamSetTexRef(CUfunction hfunc, int texunit, CUtexref hTexRef);
# 9362 "/usr/local/cuda/include/cuda.h"
CUresult cuOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, CUfunction func, int blockSize, size_t dynamicSMemSize);
# 9402 "/usr/local/cuda/include/cuda.h"
CUresult cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, CUfunction func, int blockSize, size_t dynamicSMemSize, unsigned flags);
# 9452 "/usr/local/cuda/include/cuda.h"
CUresult cuOccupancyMaxPotentialBlockSize(int * minGridSize, int * blockSize, CUfunction func, CUoccupancyB2DSize blockSizeToDynamicSMemSize, size_t dynamicSMemSize, int blockSizeLimit);
# 9496 "/usr/local/cuda/include/cuda.h"
CUresult cuOccupancyMaxPotentialBlockSizeWithFlags(int * minGridSize, int * blockSize, CUfunction func, CUoccupancyB2DSize blockSizeToDynamicSMemSize, size_t dynamicSMemSize, int blockSizeLimit, unsigned flags);
# 9539 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefSetArray(CUtexref hTexRef, CUarray hArray, unsigned Flags);
# 9566 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefSetMipmappedArray(CUtexref hTexRef, CUmipmappedArray hMipmappedArray, unsigned Flags);
# 9610 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefSetAddress_v2(size_t * ByteOffset, CUtexref hTexRef, CUdeviceptr dptr, size_t bytes);
# 9662 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefSetAddress2D_v3(CUtexref hTexRef, const CUDA_ARRAY_DESCRIPTOR * desc, CUdeviceptr dptr, size_t Pitch);
# 9691 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefSetFormat(CUtexref hTexRef, CUarray_format fmt, int NumPackedComponents);
# 9731 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefSetAddressMode(CUtexref hTexRef, int dim, CUaddress_mode am);
# 9764 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefSetFilterMode(CUtexref hTexRef, CUfilter_mode fm);
# 9797 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefSetMipmapFilterMode(CUtexref hTexRef, CUfilter_mode fm);
# 9823 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefSetMipmapLevelBias(CUtexref hTexRef, float bias);
# 9851 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefSetMipmapLevelClamp(CUtexref hTexRef, float minMipmapLevelClamp, float maxMipmapLevelClamp);
# 9877 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefSetMaxAnisotropy(CUtexref hTexRef, unsigned maxAniso);
# 9907 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefSetBorderColor(CUtexref hTexRef, float * pBorderColor);
# 9942 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefSetFlags(CUtexref hTexRef, unsigned Flags);
# 9968 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefGetAddress_v2(CUdeviceptr * pdptr, CUtexref hTexRef);
# 9994 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefGetArray(CUarray * phArray, CUtexref hTexRef);
# 10019 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefGetMipmappedArray(CUmipmappedArray * phMipmappedArray, CUtexref hTexRef);
# 10045 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefGetAddressMode(CUaddress_mode * pam, CUtexref hTexRef, int dim);
# 10069 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefGetFilterMode(CUfilter_mode * pfm, CUtexref hTexRef);
# 10095 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefGetFormat(CUarray_format * pFormat, int * pNumChannels, CUtexref hTexRef);
# 10119 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefGetMipmapFilterMode(CUfilter_mode * pfm, CUtexref hTexRef);
# 10143 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefGetMipmapLevelBias(float * pbias, CUtexref hTexRef);
# 10168 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefGetMipmapLevelClamp(float * pminMipmapLevelClamp, float * pmaxMipmapLevelClamp, CUtexref hTexRef);
# 10192 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefGetMaxAnisotropy(int * pmaxAniso, CUtexref hTexRef);
# 10219 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefGetBorderColor(float * pBorderColor, CUtexref hTexRef);
# 10242 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefGetFlags(unsigned * pFlags, CUtexref hTexRef);
# 10281 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefCreate(CUtexref * pTexRef);
# 10301 "/usr/local/cuda/include/cuda.h"
CUresult cuTexRefDestroy(CUtexref hTexRef);
# 10340 "/usr/local/cuda/include/cuda.h"
CUresult cuSurfRefSetArray(CUsurfref hSurfRef, CUarray hArray, unsigned Flags);
# 10361 "/usr/local/cuda/include/cuda.h"
CUresult cuSurfRefGetArray(CUarray * phArray, CUsurfref hSurfRef);
# 10583 "/usr/local/cuda/include/cuda.h"
CUresult cuTexObjectCreate(CUtexObject * pTexObject, const CUDA_RESOURCE_DESC * pResDesc, const CUDA_TEXTURE_DESC * pTexDesc, const CUDA_RESOURCE_VIEW_DESC * pResViewDesc);
# 10601 "/usr/local/cuda/include/cuda.h"
CUresult cuTexObjectDestroy(CUtexObject texObject);
# 10620 "/usr/local/cuda/include/cuda.h"
CUresult cuTexObjectGetResourceDesc(CUDA_RESOURCE_DESC * pResDesc, CUtexObject texObject);
# 10639 "/usr/local/cuda/include/cuda.h"
CUresult cuTexObjectGetTextureDesc(CUDA_TEXTURE_DESC * pTexDesc, CUtexObject texObject);
# 10659 "/usr/local/cuda/include/cuda.h"
CUresult cuTexObjectGetResourceViewDesc(CUDA_RESOURCE_VIEW_DESC * pResViewDesc, CUtexObject texObject);
# 10700 "/usr/local/cuda/include/cuda.h"
CUresult cuSurfObjectCreate(CUsurfObject * pSurfObject, const CUDA_RESOURCE_DESC * pResDesc);
# 10718 "/usr/local/cuda/include/cuda.h"
CUresult cuSurfObjectDestroy(CUsurfObject surfObject);
# 10737 "/usr/local/cuda/include/cuda.h"
CUresult cuSurfObjectGetResourceDesc(CUDA_RESOURCE_DESC * pResDesc, CUsurfObject surfObject);
# 10779 "/usr/local/cuda/include/cuda.h"
CUresult cuDeviceCanAccessPeer(int * canAccessPeer, CUdevice dev, CUdevice peerDev);
# 10816 "/usr/local/cuda/include/cuda.h"
CUresult cuDeviceGetP2PAttribute(int * value, CUdevice_P2PAttribute attrib, CUdevice srcDevice, CUdevice dstDevice);
# 10865 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxEnablePeerAccess(CUcontext peerContext, unsigned Flags);
# 10890 "/usr/local/cuda/include/cuda.h"
CUresult cuCtxDisablePeerAccess(CUcontext peerContext);
# 10934 "/usr/local/cuda/include/cuda.h"
CUresult cuGraphicsUnregisterResource(CUgraphicsResource resource);
# 10972 "/usr/local/cuda/include/cuda.h"
CUresult cuGraphicsSubResourceGetMappedArray(CUarray * pArray, CUgraphicsResource resource, unsigned arrayIndex, unsigned mipLevel);
# 11003 "/usr/local/cuda/include/cuda.h"
CUresult cuGraphicsResourceGetMappedMipmappedArray(CUmipmappedArray * pMipmappedArray, CUgraphicsResource resource);
# 11039 "/usr/local/cuda/include/cuda.h"
CUresult cuGraphicsResourceGetMappedPointer_v2(CUdeviceptr * pDevPtr, size_t * pSize, CUgraphicsResource resource);
# 11080 "/usr/local/cuda/include/cuda.h"
CUresult cuGraphicsResourceSetMapFlags_v2(CUgraphicsResource resource, unsigned flags);
# 11119 "/usr/local/cuda/include/cuda.h"
CUresult cuGraphicsMapResources(unsigned count, CUgraphicsResource * resources, CUstream hStream);
# 11155 "/usr/local/cuda/include/cuda.h"
CUresult cuGraphicsUnmapResources(unsigned count, CUgraphicsResource * resources, CUstream hStream);
# 11159 "/usr/local/cuda/include/cuda.h"
CUresult cuGetExportTable(const void ** ppExportTable, const CUuuid * pExportTableId);
# 11478 "/usr/local/cuda/include/cuda.h"
}
# 24 "/usr/local/cuda/include/thrust/detail/config/global_workarounds.h"
#pragma GCC diagnostic ignored "-Wunused-local-typedefs"
# 45 "/usr/local/cuda/include/thrust/detail/type_traits.h"
namespace thrust {
# 49 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> class device_reference;
# 51 "/usr/local/cuda/include/thrust/detail/type_traits.h"
namespace detail {
# 54 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class _Tp, _Tp __v>
# 55 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct integral_constant {
# 57 "/usr/local/cuda/include/thrust/detail/type_traits.h"
static const _Tp value = __v;
# 58 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef _Tp value_type;
# 59 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef integral_constant type;
# 60 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 63 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef integral_constant< bool, true> true_type;
# 66 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef integral_constant< bool, false> false_type;
# 69 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct is_integral : public false_type { };
# 70 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< bool> : public true_type { };
# 71 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< char> : public true_type { };
# 72 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< signed char> : public true_type { };
# 73 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< unsigned char> : public true_type { };
# 74 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< short> : public true_type { };
# 75 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< unsigned short> : public true_type { };
# 76 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< int> : public true_type { };
# 77 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< unsigned> : public true_type { };
# 78 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< long> : public true_type { };
# 79 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< unsigned long> : public true_type { };
# 80 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< long long> : public true_type { };
# 81 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< unsigned long long> : public true_type { };
# 82 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< const bool> : public true_type { };
# 83 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< const char> : public true_type { };
# 84 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< const unsigned char> : public true_type { };
# 85 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< const short> : public true_type { };
# 86 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< const unsigned short> : public true_type { };
# 87 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< const int> : public true_type { };
# 88 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< const unsigned> : public true_type { };
# 89 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< const long> : public true_type { };
# 90 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< const unsigned long> : public true_type { };
# 91 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< const long long> : public true_type { };
# 92 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_integral< const unsigned long long> : public true_type { };
# 94 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct is_floating_point : public false_type { };
# 95 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_floating_point< float> : public true_type { };
# 96 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_floating_point< double> : public true_type { };
# 97 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_floating_point< long double> : public true_type { };
# 99 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct is_arithmetic : public is_integral< T> { };
# 100 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_arithmetic< float> : public true_type { };
# 101 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_arithmetic< double> : public true_type { };
# 102 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_arithmetic< const float> : public true_type { };
# 103 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_arithmetic< const double> : public true_type { };
# 105 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct is_pointer : public false_type { };
# 106 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct is_pointer< T *> : public true_type { };
# 108 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct is_device_ptr : public false_type { };
# 110 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct is_void : public false_type { };
# 111 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_void< void> : public true_type { };
# 112 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct is_void< const void> : public true_type { };
# 115 "/usr/local/cuda/include/thrust/detail/type_traits.h"
namespace tt_detail {
# 119 "/usr/local/cuda/include/thrust/detail/type_traits.h"
}
# 121 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct is_pod : public integral_constant< bool, ((is_void< T> ::value || is_pointer< T> ::value) || is_arithmetic< T> ::value) || __is_pod(T)> {
# 135 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 138 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct has_trivial_constructor : public integral_constant< bool, is_pod< T> ::value || __has_trivial_constructor(T)> {
# 151 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 153 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct has_trivial_copy_constructor : public integral_constant< bool, is_pod< T> ::value || __has_trivial_copy(T)> {
# 166 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 168 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct has_trivial_destructor : public is_pod< T> { };
# 170 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct is_const : public false_type { };
# 171 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct is_const< const T> : public true_type { };
# 173 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct is_volatile : public false_type { };
# 174 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct is_volatile< volatile T> : public true_type { };
# 176 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T>
# 177 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct add_const {
# 179 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef const T type;
# 180 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 182 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T>
# 183 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct remove_const {
# 185 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef T type;
# 186 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 188 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T>
# 189 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct remove_const< const T> {
# 191 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef T type;
# 192 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 194 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T>
# 195 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct add_volatile {
# 197 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef volatile T type;
# 198 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 200 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T>
# 201 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct remove_volatile {
# 203 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef T type;
# 204 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 206 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T>
# 207 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct remove_volatile< volatile T> {
# 209 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef T type;
# 210 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 212 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T>
# 213 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct add_cv {
# 215 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef const volatile T type;
# 216 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 218 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T>
# 219 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct remove_cv {
# 221 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef typename remove_const< typename remove_volatile< T> ::type> ::type type;
# 222 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 225 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct is_reference : public false_type { };
# 226 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct is_reference< T &> : public true_type { };
# 228 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct is_device_reference : public false_type { };
# 229 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct is_device_reference< device_reference< T> > : public true_type { };
# 233 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class _Tp, bool = is_void< _Tp> ::value || is_reference< _Tp> ::value>
# 234 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct __add_reference_helper {
# 235 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef _Tp &type; };
# 237 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class _Tp>
# 238 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct __add_reference_helper< _Tp, true> {
# 239 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef _Tp type; };
# 241 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class _Tp>
# 242 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct add_reference : public __add_reference_helper< _Tp> {
# 243 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 245 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T>
# 246 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct remove_reference {
# 248 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef T type;
# 249 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 251 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T>
# 252 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct remove_reference< T &> {
# 254 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef T type;
# 255 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 257 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T1, class T2>
# 258 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct is_same : public false_type {
# 261 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 263 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T>
# 264 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct is_same< T, T> : public true_type {
# 267 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 269 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T1, class T2>
# 270 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct lazy_is_same : public is_same< typename T1::type, typename T2::type> {
# 273 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 275 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T1, class T2>
# 276 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct is_different : public true_type {
# 279 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 281 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T>
# 282 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct is_different< T, T> : public false_type {
# 285 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 287 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T1, class T2>
# 288 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct lazy_is_different : public is_different< typename T1::type, typename T2::type> {
# 291 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 293 "/usr/local/cuda/include/thrust/detail/type_traits.h"
namespace tt_detail {
# 296 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T>
# 297 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct is_int_or_cref {
# 299 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef typename remove_reference< T> ::type type_sans_ref;
# 300 "/usr/local/cuda/include/thrust/detail/type_traits.h"
static const bool value = (is_integral< T> ::value || (is_integral< typename remove_reference< T> ::type> ::value && is_const< typename remove_reference< T> ::type> ::value && (!is_volatile< typename remove_reference< T> ::type> ::value)));
# 304 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 311 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class From, class To>
# 312 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct is_convertible_sfinae {
# 315 "/usr/local/cuda/include/thrust/detail/type_traits.h"
private: typedef char yes;
# 316 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef struct { char two_chars[2]; } no;
# 318 "/usr/local/cuda/include/thrust/detail/type_traits.h"
static yes test(To) { return yes(); }
# 319 "/usr/local/cuda/include/thrust/detail/type_traits.h"
static no test(...) { return no(); }
# 320 "/usr/local/cuda/include/thrust/detail/type_traits.h"
static typename remove_reference< From> ::type &from() { typename remove_reference< From> ::type *ptr = (0); return *ptr; }
# 323 "/usr/local/cuda/include/thrust/detail/type_traits.h"
public: static const bool value = (sizeof(test((from)())) == sizeof(yes));
# 324 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 331 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class From, class To>
# 332 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct is_convertible_needs_simple_test {
# 334 "/usr/local/cuda/include/thrust/detail/type_traits.h"
static const bool from_is_void = (is_void< From> ::value);
# 335 "/usr/local/cuda/include/thrust/detail/type_traits.h"
static const bool to_is_void = (is_void< To> ::value);
# 336 "/usr/local/cuda/include/thrust/detail/type_traits.h"
static const bool from_is_float = (is_floating_point< typename remove_reference< From> ::type> ::value);
# 337 "/usr/local/cuda/include/thrust/detail/type_traits.h"
static const bool to_is_int_or_cref = (is_int_or_cref< To> ::value);
# 339 "/usr/local/cuda/include/thrust/detail/type_traits.h"
static const bool value = ((from_is_void || to_is_void) || (from_is_float && to_is_int_or_cref));
# 340 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 343 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class From, class To, bool
# 344 "/usr/local/cuda/include/thrust/detail/type_traits.h"
 = is_convertible_needs_simple_test< From, To> ::value>
# 345 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct is_convertible {
# 347 "/usr/local/cuda/include/thrust/detail/type_traits.h"
static const bool value = (is_void< To> ::value || (is_int_or_cref< To> ::value && (!is_void< From> ::value)));
# 350 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 353 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class From, class To>
# 354 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct is_convertible< From, To, false> {
# 356 "/usr/local/cuda/include/thrust/detail/type_traits.h"
static const bool value = (is_convertible_sfinae< typename add_reference< From> ::type, To> ::value);
# 358 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 361 "/usr/local/cuda/include/thrust/detail/type_traits.h"
}
# 363 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class From, class To>
# 364 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct is_convertible : public integral_constant< bool, tt_detail::is_convertible< From, To> ::value> {
# 367 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 370 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T1, class T2>
# 371 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct is_one_convertible_to_the_other : public integral_constant< bool, is_convertible< T1, T2> ::value || is_convertible< T2, T1> ::value> {
# 376 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 381 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class Condition1, class Condition2, class Condition3 = false_type, class
# 382 "/usr/local/cuda/include/thrust/detail/type_traits.h"
Condition4 = false_type, class Condition5 = false_type, class Condition6 = false_type, class
# 383 "/usr/local/cuda/include/thrust/detail/type_traits.h"
Condition7 = false_type, class Condition8 = false_type, class Condition9 = false_type, class
# 384 "/usr/local/cuda/include/thrust/detail/type_traits.h"
Condition10 = false_type>
# 385 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct or_ : public integral_constant< bool, ((((((((Condition1::value || Condition2::value) || Condition3::value) || Condition4::value) || Condition5::value) || Condition6::value) || Condition7::value) || Condition8::value) || Condition9::value) || Condition10::value> {
# 391 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 393 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class Condition1, class Condition2, class Condition3 = true_type>
# 394 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct and_ : public integral_constant< bool, Condition1::value && Condition2::value && Condition3::value> {
# 397 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 399 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class Boolean>
# 400 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct not_ : public integral_constant< bool, !Boolean::value> {
# 403 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 405 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< bool , class Then, class Else>
# 406 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct eval_if {
# 408 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 410 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class Then, class Else>
# 411 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct eval_if< true, Then, Else> {
# 413 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef typename Then::type type;
# 414 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 416 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class Then, class Else>
# 417 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct eval_if< false, Then, Else> {
# 419 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef typename Else::type type;
# 420 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 422 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T>
# 425 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct identity_ {
# 427 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef T type;
# 428 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 430 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< bool , class T = void> struct enable_if { };
# 431 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct enable_if< true, T> { typedef T type; };
# 433 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< bool , class T> struct lazy_enable_if { };
# 434 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct lazy_enable_if< true, T> { typedef typename T::type type; };
# 436 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< bool condition, class T = void> struct disable_if : public enable_if< !condition, T> { };
# 437 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< bool condition, class T> struct lazy_disable_if : public lazy_enable_if< !condition, T> { };
# 440 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T1, class T2, class T = void>
# 441 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct enable_if_convertible : public enable_if< is_convertible< T1, T2> ::value, T> {
# 443 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 446 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T1, class T2, class T = void>
# 447 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct disable_if_convertible : public disable_if< is_convertible< T1, T2> ::value, T> {
# 449 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 452 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T1, class T2, class Result = void>
# 453 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct enable_if_different : public enable_if< is_different< T1, T2> ::value, Result> {
# 455 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 458 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T>
# 459 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct is_numeric : public and_< is_convertible< int, T> , is_convertible< T, int> > {
# 465 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 468 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class > struct is_reference_to_const : public false_type { };
# 469 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct is_reference_to_const< const T &> : public true_type { };
# 474 "/usr/local/cuda/include/thrust/detail/type_traits.h"
namespace tt_detail {
# 477 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> struct make_unsigned_simple;
# 479 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct make_unsigned_simple< char> { typedef unsigned char type; };
# 480 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct make_unsigned_simple< signed char> { typedef signed char type; };
# 481 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct make_unsigned_simple< unsigned char> { typedef unsigned char type; };
# 482 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct make_unsigned_simple< short> { typedef unsigned short type; };
# 483 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct make_unsigned_simple< unsigned short> { typedef unsigned short type; };
# 484 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct make_unsigned_simple< int> { typedef unsigned type; };
# 485 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct make_unsigned_simple< unsigned> { typedef unsigned type; };
# 486 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct make_unsigned_simple< long> { typedef unsigned long type; };
# 487 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct make_unsigned_simple< unsigned long> { typedef unsigned long type; };
# 488 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct make_unsigned_simple< long long> { typedef unsigned long long type; };
# 489 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template<> struct make_unsigned_simple< unsigned long long> { typedef unsigned long long type; };
# 491 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T>
# 492 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct make_unsigned_base {
# 495 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef typename remove_cv< T> ::type remove_cv_t;
# 498 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef typename make_unsigned_simple< typename remove_cv< T> ::type> ::type unsigned_remove_cv_t;
# 518 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef typename eval_if< is_const< T> ::value && is_volatile< T> ::value, add_cv< typename make_unsigned_simple< typename remove_cv< T> ::type> ::type> , eval_if< is_const< T> ::value, add_const< typename make_unsigned_simple< typename remove_cv< T> ::type> ::type> , eval_if< is_volatile< T> ::value, add_volatile< typename make_unsigned_simple< typename remove_cv< T> ::type> ::type> , identity_< typename make_unsigned_simple< typename remove_cv< T> ::type> ::type> > > > ::type type;
# 519 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 521 "/usr/local/cuda/include/thrust/detail/type_traits.h"
}
# 523 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T>
# 524 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct make_unsigned : public tt_detail::make_unsigned_base< T> {
# 526 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 528 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct largest_available_float {
# 537 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef double type;
# 539 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 542 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T1, class T2>
# 543 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct larger_type : public eval_if< (sizeof(T2) > sizeof(T1)), identity_< T2> , identity_< T1> > {
# 549 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 552 "/usr/local/cuda/include/thrust/detail/type_traits.h"
namespace is_base_of_ns {
# 555 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef char yes;
# 556 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef struct { char two_chars[2]; } no;
# 558 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class Base, class Derived>
# 559 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct host {
# 561 "/usr/local/cuda/include/thrust/detail/type_traits.h"
operator Base *() const;
# 562 "/usr/local/cuda/include/thrust/detail/type_traits.h"
operator Derived *();
# 563 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 565 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class Base, class Derived>
# 566 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct impl {
# 568 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> static yes check(Derived *, T);
# 569 "/usr/local/cuda/include/thrust/detail/type_traits.h"
static no check(Base *, int);
# 571 "/usr/local/cuda/include/thrust/detail/type_traits.h"
static const bool value = (sizeof(check(host< Base, Derived> (), ((int)0))) == sizeof(yes));
# 572 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 574 "/usr/local/cuda/include/thrust/detail/type_traits.h"
}
# 577 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class Base, class Derived>
# 578 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct is_base_of : public integral_constant< bool, is_base_of_ns::impl< Base, Derived> ::value> {
# 583 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 585 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class Base, class Derived, class Result = void>
# 586 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct enable_if_base_of : public enable_if< is_base_of< Base, Derived> ::value, Result> {
# 591 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 594 "/usr/local/cuda/include/thrust/detail/type_traits.h"
namespace is_assignable_ns {
# 597 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T1, class T2>
# 598 "/usr/local/cuda/include/thrust/detail/type_traits.h"
class is_assignable {
# 600 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef char yes_type;
# 601 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef struct { char array[2]; } no_type;
# 603 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T> static typename add_reference< T> ::type declval();
# 605 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< unsigned > struct helper { typedef void *type; };
# 607 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class U1, class U2> static yes_type test(typename helper< sizeof((declval< U1> () = declval< U2> ()))> ::type);
# 609 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class , class > static no_type test(...);
# 612 "/usr/local/cuda/include/thrust/detail/type_traits.h"
public: static const bool value = (sizeof(test< T1, T2> (0)) == (1));
# 613 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 615 "/usr/local/cuda/include/thrust/detail/type_traits.h"
}
# 618 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T1, class T2>
# 619 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct is_assignable : public integral_constant< bool, is_assignable_ns::is_assignable< T1, T2> ::value> {
# 624 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 627 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T>
# 628 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct is_copy_assignable : public is_assignable< typename add_reference< T> ::type, typename add_reference< typename add_const< T> ::type> ::type> {
# 633 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 636 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T1, class T2, class Enable = void> struct promoted_numerical_type;
# 638 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T1, class T2>
# 639 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct promoted_numerical_type< T1, T2, typename enable_if< and_< typename is_floating_point< T1> ::type, typename is_floating_point< T2> ::type> ::value> ::type> {
# 643 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef larger_type< T1, T2> type;
# 644 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 646 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T1, class T2>
# 647 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct promoted_numerical_type< T1, T2, typename enable_if< and_< typename is_integral< T1> ::type, typename is_floating_point< T2> ::type> ::value> ::type> {
# 651 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef T2 type;
# 652 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 654 "/usr/local/cuda/include/thrust/detail/type_traits.h"
template< class T1, class T2>
# 655 "/usr/local/cuda/include/thrust/detail/type_traits.h"
struct promoted_numerical_type< T1, T2, typename enable_if< and_< typename is_floating_point< T1> ::type, typename is_integral< T2> ::type> ::value> ::type> {
# 659 "/usr/local/cuda/include/thrust/detail/type_traits.h"
typedef T1 type;
# 660 "/usr/local/cuda/include/thrust/detail/type_traits.h"
};
# 662 "/usr/local/cuda/include/thrust/detail/type_traits.h"
}
# 664 "/usr/local/cuda/include/thrust/detail/type_traits.h"
}
# 28 "/usr/local/cuda/include/thrust/detail/type_traits/has_trivial_assign.h"
namespace thrust {
# 31 "/usr/local/cuda/include/thrust/detail/type_traits/has_trivial_assign.h"
namespace detail {
# 34 "/usr/local/cuda/include/thrust/detail/type_traits/has_trivial_assign.h"
template< class T> struct has_trivial_assign : public integral_constant< bool, (is_pod< T> ::value && (!is_const< T> ::value)) || __has_trivial_assign(T)> {
# 47 "/usr/local/cuda/include/thrust/detail/type_traits/has_trivial_assign.h"
};
# 49 "/usr/local/cuda/include/thrust/detail/type_traits/has_trivial_assign.h"
}
# 51 "/usr/local/cuda/include/thrust/detail/type_traits/has_trivial_assign.h"
}
# 22 "/usr/local/cuda/include/thrust/detail/type_traits/is_metafunction_defined.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/detail/type_traits/is_metafunction_defined.h"
namespace detail {
# 28 "/usr/local/cuda/include/thrust/detail/type_traits/is_metafunction_defined.h"
template< class T> struct is_metafunction_defined { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::type *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 30 "/usr/local/cuda/include/thrust/detail/type_traits/is_metafunction_defined.h"
template< class Metafunction>
# 31 "/usr/local/cuda/include/thrust/detail/type_traits/is_metafunction_defined.h"
struct enable_if_defined : public lazy_enable_if< is_metafunction_defined< Metafunction> ::value, Metafunction> {
# 36 "/usr/local/cuda/include/thrust/detail/type_traits/is_metafunction_defined.h"
};
# 38 "/usr/local/cuda/include/thrust/detail/type_traits/is_metafunction_defined.h"
}
# 40 "/usr/local/cuda/include/thrust/detail/type_traits/is_metafunction_defined.h"
}
# 70 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3

# 70 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
namespace std __attribute((__visibility__("default"))) {
# 89 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct input_iterator_tag { };
# 92 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct output_iterator_tag { };
# 95 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct forward_iterator_tag : public input_iterator_tag { };
# 99 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct bidirectional_iterator_tag : public forward_iterator_tag { };
# 103 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct random_access_iterator_tag : public bidirectional_iterator_tag { };
# 116 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Category, class _Tp, class _Distance = ptrdiff_t, class
# 117 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
_Pointer = _Tp *, class _Reference = _Tp &>
# 118 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct iterator {
# 121 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Category iterator_category;
# 123 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 125 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Distance difference_type;
# 127 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Pointer pointer;
# 129 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Reference reference;
# 130 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 165 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Iterator>
# 166 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct iterator_traits {
# 168 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::iterator_category iterator_category;
# 169 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::value_type value_type;
# 170 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::difference_type difference_type;
# 171 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::pointer pointer;
# 172 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::reference reference;
# 173 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 177 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 178 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct iterator_traits< _Tp *> {
# 180 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 181 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 182 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 183 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Tp *pointer;
# 184 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Tp &reference;
# 185 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 188 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 189 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct iterator_traits< const _Tp *> {
# 191 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 192 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 193 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 194 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef const _Tp *pointer;
# 195 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef const _Tp &reference;
# 196 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 202 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Iter> inline typename iterator_traits< _Iter> ::iterator_category
# 204 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
__iterator_category(const _Iter &)
# 205 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
{ return typename iterator_traits< _Iter> ::iterator_category(); }
# 211 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Iterator, bool _HasBase>
# 212 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct _Iter_base {
# 214 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Iterator iterator_type;
# 215 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
static iterator_type _S_base(_Iterator __it)
# 216 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
{ return __it; }
# 217 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 219 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Iterator>
# 220 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct _Iter_base< _Iterator, true> {
# 222 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::iterator_type iterator_type;
# 223 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
static iterator_type _S_base(_Iterator __it)
# 224 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
{ return (__it.base()); }
# 225 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 236 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
}
# 46 "/usr/include/c++/5/debug/debug.h" 3
namespace std {
# 48 "/usr/include/c++/5/debug/debug.h" 3
namespace __debug { }
# 49 "/usr/include/c++/5/debug/debug.h" 3
}
# 54 "/usr/include/c++/5/debug/debug.h" 3
namespace __gnu_debug {
# 56 "/usr/include/c++/5/debug/debug.h" 3
using namespace std::__debug;
# 57 "/usr/include/c++/5/debug/debug.h" 3
}
# 67 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
namespace std __attribute((__visibility__("default"))) {
# 71 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator> inline typename iterator_traits< _InputIterator> ::difference_type
# 73 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__distance(_InputIterator __first, _InputIterator __last, input_iterator_tag)
# 75 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 79 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
typename iterator_traits< _InputIterator> ::difference_type __n = (0);
# 80 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
while (__first != __last)
# 81 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 82 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
++__first;
# 83 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
++__n;
# 84 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 85 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
return __n;
# 86 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 88 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _RandomAccessIterator> inline typename iterator_traits< _RandomAccessIterator> ::difference_type
# 90 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__distance(_RandomAccessIterator __first, _RandomAccessIterator __last, random_access_iterator_tag)
# 92 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 96 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
return __last - __first;
# 97 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 112 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator> inline typename iterator_traits< _InputIterator> ::difference_type
# 114 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
distance(_InputIterator __first, _InputIterator __last)
# 115 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 117 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
return std::__distance(__first, __last, std::__iterator_category(__first));
# 119 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 121 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator, class _Distance> inline void
# 123 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__advance(_InputIterator &__i, _Distance __n, input_iterator_tag)
# 124 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 127 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
;
# 128 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
while (__n--) {
# 129 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
++__i; }
# 130 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 132 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _BidirectionalIterator, class _Distance> inline void
# 134 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__advance(_BidirectionalIterator &__i, _Distance __n, bidirectional_iterator_tag)
# 136 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 140 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
if (__n > 0) {
# 141 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
while (__n--) {
# 142 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
++__i; } } else {
# 144 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
while (__n++) {
# 145 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
--__i; } }
# 146 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 148 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _RandomAccessIterator, class _Distance> inline void
# 150 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__advance(_RandomAccessIterator &__i, _Distance __n, random_access_iterator_tag)
# 152 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 156 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__i += __n;
# 157 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 171 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator, class _Distance> inline void
# 173 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
advance(_InputIterator &__i, _Distance __n)
# 174 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 176 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
typename iterator_traits< _InputIterator> ::difference_type __d = __n;
# 177 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
std::__advance(__i, __d, std::__iterator_category(__i));
# 178 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 203 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 36 "/usr/include/c++/5/bits/move.h" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp> inline _Tp *
# 47 "/usr/include/c++/5/bits/move.h" 3
__addressof(_Tp &__r)
# 48 "/usr/include/c++/5/bits/move.h" 3
{
# 49 "/usr/include/c++/5/bits/move.h" 3
return reinterpret_cast< _Tp *>(&(const_cast< char &>(reinterpret_cast< const volatile char &>(__r))));
# 51 "/usr/include/c++/5/bits/move.h" 3
}
# 54 "/usr/include/c++/5/bits/move.h" 3
}
# 159 "/usr/include/c++/5/bits/move.h" 3
namespace std __attribute((__visibility__("default"))) {
# 174 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp> inline void
# 176 "/usr/include/c++/5/bits/move.h" 3
swap(_Tp &__a, _Tp &__b)
# 181 "/usr/include/c++/5/bits/move.h" 3
{
# 185 "/usr/include/c++/5/bits/move.h" 3
_Tp __tmp = __a;
# 186 "/usr/include/c++/5/bits/move.h" 3
__a = __b;
# 187 "/usr/include/c++/5/bits/move.h" 3
__b = __tmp;
# 188 "/usr/include/c++/5/bits/move.h" 3
}
# 193 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp, size_t _Nm> inline void
# 195 "/usr/include/c++/5/bits/move.h" 3
swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
# 199 "/usr/include/c++/5/bits/move.h" 3
{
# 200 "/usr/include/c++/5/bits/move.h" 3
for (size_t __n = (0); __n < _Nm; ++__n) {
# 201 "/usr/include/c++/5/bits/move.h" 3
swap((__a)[__n], (__b)[__n]); }
# 202 "/usr/include/c++/5/bits/move.h" 3
}
# 206 "/usr/include/c++/5/bits/move.h" 3
}
# 68 "/usr/include/c++/5/bits/stl_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 96 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator>
# 97 "/usr/include/c++/5/bits/stl_iterator.h" 3
class reverse_iterator : public iterator< typename iterator_traits< _Iterator> ::iterator_category, typename iterator_traits< _Iterator> ::value_type, typename iterator_traits< _Iterator> ::difference_type, typename iterator_traits< _Iterator> ::pointer, typename iterator_traits< _Iterator> ::reference> {
# 105 "/usr/include/c++/5/bits/stl_iterator.h" 3
protected: _Iterator current;
# 107 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef iterator_traits< _Iterator> __traits_type;
# 110 "/usr/include/c++/5/bits/stl_iterator.h" 3
public: typedef _Iterator iterator_type;
# 111 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::difference_type difference_type;
# 112 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::pointer pointer;
# 113 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::reference reference;
# 121 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator() : current() { }
# 127 "/usr/include/c++/5/bits/stl_iterator.h" 3
explicit reverse_iterator(iterator_type __x) : current(__x) { }
# 132 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator(const reverse_iterator &__x) : current(__x.current)
# 133 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 139 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iter>
# 140 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator(const ::std::reverse_iterator< _Iter> &__x) : current((__x.base()))
# 141 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 147 "/usr/include/c++/5/bits/stl_iterator.h" 3
iterator_type base() const
# 148 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return current; }
# 161 "/usr/include/c++/5/bits/stl_iterator.h" 3
reference operator*() const
# 162 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 163 "/usr/include/c++/5/bits/stl_iterator.h" 3
_Iterator __tmp = current;
# 164 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *(--__tmp);
# 165 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 173 "/usr/include/c++/5/bits/stl_iterator.h" 3
pointer operator->() const
# 174 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return &operator*(); }
# 182 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator &operator++()
# 183 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 184 "/usr/include/c++/5/bits/stl_iterator.h" 3
--(current);
# 185 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 186 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 194 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator operator++(int)
# 195 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 196 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator __tmp = *this;
# 197 "/usr/include/c++/5/bits/stl_iterator.h" 3
--(current);
# 198 "/usr/include/c++/5/bits/stl_iterator.h" 3
return __tmp;
# 199 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 207 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator &operator--()
# 208 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 209 "/usr/include/c++/5/bits/stl_iterator.h" 3
++(current);
# 210 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 211 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 219 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator operator--(int)
# 220 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 221 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator __tmp = *this;
# 222 "/usr/include/c++/5/bits/stl_iterator.h" 3
++(current);
# 223 "/usr/include/c++/5/bits/stl_iterator.h" 3
return __tmp;
# 224 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 232 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator operator+(difference_type __n) const
# 233 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((reverse_iterator)((current) - __n)); }
# 242 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator &operator+=(difference_type __n)
# 243 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 244 "/usr/include/c++/5/bits/stl_iterator.h" 3
(current) -= __n;
# 245 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 246 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 254 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator operator-(difference_type __n) const
# 255 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((reverse_iterator)((current) + __n)); }
# 264 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator &operator-=(difference_type __n)
# 265 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 266 "/usr/include/c++/5/bits/stl_iterator.h" 3
(current) += __n;
# 267 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 268 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 276 "/usr/include/c++/5/bits/stl_iterator.h" 3
reference operator[](difference_type __n) const
# 277 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *((*this) + __n); }
# 278 "/usr/include/c++/5/bits/stl_iterator.h" 3
};
# 290 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 292 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator==(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 293 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 294 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__x.base()) == (__y.base()); }
# 296 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 298 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 299 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 300 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__y.base()) < (__x.base()); }
# 302 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 304 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator!=(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 305 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 306 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x == __y); }
# 308 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 310 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 311 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 312 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return __y < __x; }
# 314 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 316 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<=(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 317 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 318 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__y < __x); }
# 320 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 322 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>=(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 323 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 324 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x < __y); }
# 326 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline typename reverse_iterator< _Iterator> ::difference_type
# 328 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator-(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 329 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 330 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__y.base()) - (__x.base()); }
# 332 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline reverse_iterator< _Iterator>
# 334 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator+(typename reverse_iterator< _Iterator> ::difference_type __n, const reverse_iterator< _Iterator> &
# 335 "/usr/include/c++/5/bits/stl_iterator.h" 3
__x)
# 336 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((reverse_iterator< _Iterator> )((__x.base()) - __n)); }
# 340 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 342 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator==(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 343 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 344 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__x.base()) == (__y.base()); }
# 346 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 348 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 349 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 350 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__y.base()) < (__x.base()); }
# 352 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 354 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator!=(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 355 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 356 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x == __y); }
# 358 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 360 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 361 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 362 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return __y < __x; }
# 364 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 366 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<=(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 367 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 368 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__y < __x); }
# 370 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 372 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>=(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 373 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 374 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x < __y); }
# 376 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline typename reverse_iterator< _IteratorL> ::difference_type
# 385 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator-(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 386 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 388 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__y.base()) - (__x.base()); }
# 414 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Container>
# 415 "/usr/include/c++/5/bits/stl_iterator.h" 3
class back_insert_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 419 "/usr/include/c++/5/bits/stl_iterator.h" 3
protected: _Container *container;
# 423 "/usr/include/c++/5/bits/stl_iterator.h" 3
public: typedef _Container container_type;
# 427 "/usr/include/c++/5/bits/stl_iterator.h" 3
explicit back_insert_iterator(_Container &__x) : container((&__x)) { }
# 442 "/usr/include/c++/5/bits/stl_iterator.h" 3
back_insert_iterator &operator=(typename _Container::const_reference __value)
# 443 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 444 "/usr/include/c++/5/bits/stl_iterator.h" 3
((container)->push_back(__value));
# 445 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 446 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 465 "/usr/include/c++/5/bits/stl_iterator.h" 3
back_insert_iterator &operator*()
# 466 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 470 "/usr/include/c++/5/bits/stl_iterator.h" 3
back_insert_iterator &operator++()
# 471 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 475 "/usr/include/c++/5/bits/stl_iterator.h" 3
back_insert_iterator operator++(int)
# 476 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 477 "/usr/include/c++/5/bits/stl_iterator.h" 3
};
# 490 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Container> inline back_insert_iterator< _Container>
# 492 "/usr/include/c++/5/bits/stl_iterator.h" 3
back_inserter(_Container &__x)
# 493 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((back_insert_iterator< _Container> )(__x)); }
# 505 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Container>
# 506 "/usr/include/c++/5/bits/stl_iterator.h" 3
class front_insert_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 510 "/usr/include/c++/5/bits/stl_iterator.h" 3
protected: _Container *container;
# 514 "/usr/include/c++/5/bits/stl_iterator.h" 3
public: typedef _Container container_type;
# 517 "/usr/include/c++/5/bits/stl_iterator.h" 3
explicit front_insert_iterator(_Container &__x) : container((&__x)) { }
# 532 "/usr/include/c++/5/bits/stl_iterator.h" 3
front_insert_iterator &operator=(typename _Container::const_reference __value)
# 533 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 534 "/usr/include/c++/5/bits/stl_iterator.h" 3
((container)->push_front(__value));
# 535 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 536 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 555 "/usr/include/c++/5/bits/stl_iterator.h" 3
front_insert_iterator &operator*()
# 556 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 560 "/usr/include/c++/5/bits/stl_iterator.h" 3
front_insert_iterator &operator++()
# 561 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 565 "/usr/include/c++/5/bits/stl_iterator.h" 3
front_insert_iterator operator++(int)
# 566 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 567 "/usr/include/c++/5/bits/stl_iterator.h" 3
};
# 580 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Container> inline front_insert_iterator< _Container>
# 582 "/usr/include/c++/5/bits/stl_iterator.h" 3
front_inserter(_Container &__x)
# 583 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((front_insert_iterator< _Container> )(__x)); }
# 599 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Container>
# 600 "/usr/include/c++/5/bits/stl_iterator.h" 3
class insert_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 604 "/usr/include/c++/5/bits/stl_iterator.h" 3
protected: _Container *container;
# 605 "/usr/include/c++/5/bits/stl_iterator.h" 3
typename _Container::iterator iter;
# 609 "/usr/include/c++/5/bits/stl_iterator.h" 3
public: typedef _Container container_type;
# 615 "/usr/include/c++/5/bits/stl_iterator.h" 3
insert_iterator(_Container &__x, typename _Container::iterator __i) : container((&__x)), iter(__i)
# 616 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 643 "/usr/include/c++/5/bits/stl_iterator.h" 3
insert_iterator &operator=(typename _Container::const_reference __value)
# 644 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 645 "/usr/include/c++/5/bits/stl_iterator.h" 3
(iter) = ((container)->insert(iter, __value));
# 646 "/usr/include/c++/5/bits/stl_iterator.h" 3
++(iter);
# 647 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 648 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 669 "/usr/include/c++/5/bits/stl_iterator.h" 3
insert_iterator &operator*()
# 670 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 674 "/usr/include/c++/5/bits/stl_iterator.h" 3
insert_iterator &operator++()
# 675 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 679 "/usr/include/c++/5/bits/stl_iterator.h" 3
insert_iterator &operator++(int)
# 680 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 681 "/usr/include/c++/5/bits/stl_iterator.h" 3
};
# 694 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Container, class _Iterator> inline insert_iterator< _Container>
# 696 "/usr/include/c++/5/bits/stl_iterator.h" 3
inserter(_Container &__x, _Iterator __i)
# 697 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 698 "/usr/include/c++/5/bits/stl_iterator.h" 3
return insert_iterator< _Container> (__x, (typename _Container::iterator)__i);
# 700 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 705 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 707 "/usr/include/c++/5/bits/stl_iterator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 718 "/usr/include/c++/5/bits/stl_iterator.h" 3
using std::iterator_traits;
# 719 "/usr/include/c++/5/bits/stl_iterator.h" 3
using std::iterator;
# 720 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container>
# 721 "/usr/include/c++/5/bits/stl_iterator.h" 3
class __normal_iterator {
# 724 "/usr/include/c++/5/bits/stl_iterator.h" 3
protected: _Iterator _M_current;
# 726 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef std::iterator_traits< _Iterator> __traits_type;
# 729 "/usr/include/c++/5/bits/stl_iterator.h" 3
public: typedef _Iterator iterator_type;
# 730 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::iterator_category iterator_category;
# 731 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::value_type value_type;
# 732 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::difference_type difference_type;
# 733 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::reference reference;
# 734 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::pointer pointer;
# 736 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator() : _M_current(_Iterator())
# 737 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 740 "/usr/include/c++/5/bits/stl_iterator.h" 3
explicit __normal_iterator(const _Iterator &__i) : _M_current(__i)
# 741 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 744 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iter>
# 745 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator(const __gnu_cxx::__normal_iterator< _Iter, typename __enable_if< std::__are_same< _Iter, typename _Container::pointer> ::__value, _Container> ::__type> &
# 748 "/usr/include/c++/5/bits/stl_iterator.h" 3
__i) : _M_current((__i.base()))
# 749 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 753 "/usr/include/c++/5/bits/stl_iterator.h" 3
reference operator*() const
# 754 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *(_M_current); }
# 757 "/usr/include/c++/5/bits/stl_iterator.h" 3
pointer operator->() const
# 758 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return _M_current; }
# 761 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator &operator++()
# 762 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 763 "/usr/include/c++/5/bits/stl_iterator.h" 3
++(_M_current);
# 764 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 765 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 768 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator operator++(int)
# 769 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current)++)); }
# 773 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator &operator--()
# 774 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 775 "/usr/include/c++/5/bits/stl_iterator.h" 3
--(_M_current);
# 776 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 777 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 780 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator operator--(int)
# 781 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current)--)); }
# 785 "/usr/include/c++/5/bits/stl_iterator.h" 3
reference operator[](difference_type __n) const
# 786 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (_M_current)[__n]; }
# 789 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator &operator+=(difference_type __n)
# 790 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ (_M_current) += __n; return *this; }
# 793 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator operator+(difference_type __n) const
# 794 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current) + __n)); }
# 797 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator &operator-=(difference_type __n)
# 798 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ (_M_current) -= __n; return *this; }
# 801 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator operator-(difference_type __n) const
# 802 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current) - __n)); }
# 805 "/usr/include/c++/5/bits/stl_iterator.h" 3
const _Iterator &base() const
# 806 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return _M_current; }
# 807 "/usr/include/c++/5/bits/stl_iterator.h" 3
};
# 818 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 820 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator==(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 821 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs)
# 823 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) == (__rhs.base()); }
# 825 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 827 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator==(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 828 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs)
# 830 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) == (__rhs.base()); }
# 832 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 834 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator!=(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 835 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs)
# 837 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) != (__rhs.base()); }
# 839 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 841 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator!=(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 842 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs)
# 844 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) != (__rhs.base()); }
# 847 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 849 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 850 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs)
# 852 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) < (__rhs.base()); }
# 854 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 856 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 857 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs)
# 859 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) < (__rhs.base()); }
# 861 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 863 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 864 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs)
# 866 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) > (__rhs.base()); }
# 868 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 870 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 871 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs)
# 873 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) > (__rhs.base()); }
# 875 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 877 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<=(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 878 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs)
# 880 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) <= (__rhs.base()); }
# 882 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 884 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<=(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 885 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs)
# 887 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) <= (__rhs.base()); }
# 889 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 891 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>=(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 892 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs)
# 894 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) >= (__rhs.base()); }
# 896 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 898 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>=(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 899 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs)
# 901 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) >= (__rhs.base()); }
# 907 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline typename __normal_iterator< _IteratorL, _Container> ::difference_type
# 916 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator-(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 917 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs)
# 919 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) - (__rhs.base()); }
# 921 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline typename __normal_iterator< _Iterator, _Container> ::difference_type
# 923 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator-(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 924 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs)
# 926 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) - (__rhs.base()); }
# 928 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline __normal_iterator< _Iterator, _Container>
# 930 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator+(typename __normal_iterator< _Iterator, _Container> ::difference_type
# 931 "/usr/include/c++/5/bits/stl_iterator.h" 3
__n, const __normal_iterator< _Iterator, _Container> &__i)
# 933 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((__normal_iterator< _Iterator, _Container> )((__i.base()) + __n)); }
# 936 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 50 "/usr/include/c++/5/bits/memoryfwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 63 "/usr/include/c++/5/bits/memoryfwd.h" 3
template< class > class allocator;
# 67 "/usr/include/c++/5/bits/memoryfwd.h" 3
template<> class allocator< void> ;
# 70 "/usr/include/c++/5/bits/memoryfwd.h" 3
template< class , class > struct uses_allocator;
# 76 "/usr/include/c++/5/bits/memoryfwd.h" 3
}
# 42 "/usr/include/c++/5/bits/stringfwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/5/bits/stringfwd.h" 3
template< class _CharT> struct char_traits;
# 55 "/usr/include/c++/5/bits/stringfwd.h" 3
template<> struct char_traits< char> ;
# 58 "/usr/include/c++/5/bits/stringfwd.h" 3
template<> struct char_traits< wchar_t> ;
# 67 "/usr/include/c++/5/bits/stringfwd.h" 3
inline namespace __cxx11 {
# 69 "/usr/include/c++/5/bits/stringfwd.h" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 70 "/usr/include/c++/5/bits/stringfwd.h" 3
_Alloc = allocator< _CharT> > class basic_string;
# 74 "/usr/include/c++/5/bits/stringfwd.h" 3
typedef basic_string< char> string;
# 78 "/usr/include/c++/5/bits/stringfwd.h" 3
typedef basic_string< wchar_t> wstring;
# 90 "/usr/include/c++/5/bits/stringfwd.h" 3
}
# 95 "/usr/include/c++/5/bits/stringfwd.h" 3
}
# 44 "/usr/include/stdio.h" 3
struct _IO_FILE;
# 48 "/usr/include/stdio.h" 3
typedef _IO_FILE FILE;
# 64 "/usr/include/stdio.h" 3
typedef _IO_FILE __FILE;
# 40 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stdarg.h" 3
typedef __builtin_va_list __gnuc_va_list;
# 357 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
typedef unsigned wint_t;
# 94 "/usr/include/wchar.h" 3
typedef
# 83 "/usr/include/wchar.h" 3
struct {
# 84 "/usr/include/wchar.h" 3
int __count;
# 86 "/usr/include/wchar.h" 3
union {
# 88 "/usr/include/wchar.h" 3
unsigned __wch;
# 92 "/usr/include/wchar.h" 3
char __wchb[4];
# 93 "/usr/include/wchar.h" 3
} __value;
# 94 "/usr/include/wchar.h" 3
} __mbstate_t;
# 106 "/usr/include/wchar.h" 3
typedef __mbstate_t mbstate_t;
# 132 "/usr/include/wchar.h" 3
extern "C" {
# 137 "/usr/include/wchar.h" 3
struct tm;
# 147 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wcscpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw()
# 149 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2)));
# 152 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wcsncpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw()
# 154 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2)));
# 157 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wcscat(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw()
# 159 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2)));
# 161 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wcsncat(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw()
# 163 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2)));
# 166 "/usr/include/wchar.h" 3
extern int wcscmp(const wchar_t * __s1, const wchar_t * __s2) throw()
# 167 "/usr/include/wchar.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 169 "/usr/include/wchar.h" 3
extern int wcsncmp(const wchar_t * __s1, const wchar_t * __s2, size_t __n) throw()
# 170 "/usr/include/wchar.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 175 "/usr/include/wchar.h" 3
extern int wcscasecmp(const wchar_t * __s1, const wchar_t * __s2) throw();
# 178 "/usr/include/wchar.h" 3
extern int wcsncasecmp(const wchar_t * __s1, const wchar_t * __s2, size_t __n) throw();
# 185 "/usr/include/wchar.h" 3
extern int wcscasecmp_l(const wchar_t * __s1, const wchar_t * __s2, __locale_t __loc) throw();
# 188 "/usr/include/wchar.h" 3
extern int wcsncasecmp_l(const wchar_t * __s1, const wchar_t * __s2, size_t __n, __locale_t __loc) throw();
# 195 "/usr/include/wchar.h" 3
extern int wcscoll(const wchar_t * __s1, const wchar_t * __s2) throw();
# 199 "/usr/include/wchar.h" 3
extern size_t wcsxfrm(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, size_t __n) throw();
# 209 "/usr/include/wchar.h" 3
extern int wcscoll_l(const wchar_t * __s1, const wchar_t * __s2, __locale_t __loc) throw();
# 215 "/usr/include/wchar.h" 3
extern size_t wcsxfrm_l(wchar_t * __s1, const wchar_t * __s2, size_t __n, __locale_t __loc) throw();
# 219 "/usr/include/wchar.h" 3
extern wchar_t *wcsdup(const wchar_t * __s) throw() __attribute((__malloc__));
# 225 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcschr(wchar_t * __wcs, wchar_t __wc) throw() __asm__("wcschr")
# 226 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 227 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcschr(const wchar_t * __wcs, wchar_t __wc) throw() __asm__("wcschr")
# 228 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 235 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcsrchr(wchar_t * __wcs, wchar_t __wc) throw() __asm__("wcsrchr")
# 236 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 237 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcsrchr(const wchar_t * __wcs, wchar_t __wc) throw() __asm__("wcsrchr")
# 238 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 248 "/usr/include/wchar.h" 3
extern wchar_t *wcschrnul(const wchar_t * __s, wchar_t __wc) throw()
# 249 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 255 "/usr/include/wchar.h" 3
extern size_t wcscspn(const wchar_t * __wcs, const wchar_t * __reject) throw()
# 256 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 259 "/usr/include/wchar.h" 3
extern size_t wcsspn(const wchar_t * __wcs, const wchar_t * __accept) throw()
# 260 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 263 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcspbrk(wchar_t * __wcs, const wchar_t * __accept) throw() __asm__("wcspbrk")
# 264 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 265 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcspbrk(const wchar_t * __wcs, const wchar_t * __accept) throw() __asm__("wcspbrk")
# 267 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 274 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcsstr(wchar_t * __haystack, const wchar_t * __needle) throw() __asm__("wcsstr")
# 275 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 276 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcsstr(const wchar_t * __haystack, const wchar_t * __needle) throw() __asm__("wcsstr")
# 278 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 285 "/usr/include/wchar.h" 3
extern wchar_t *wcstok(wchar_t *__restrict__ __s, const wchar_t *__restrict__ __delim, wchar_t **__restrict__ __ptr) throw();
# 290 "/usr/include/wchar.h" 3
extern size_t wcslen(const wchar_t * __s) throw() __attribute((__pure__));
# 296 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcswcs(wchar_t * __haystack, const wchar_t * __needle) throw() __asm__("wcswcs")
# 297 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 298 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcswcs(const wchar_t * __haystack, const wchar_t * __needle) throw() __asm__("wcswcs")
# 300 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 309 "/usr/include/wchar.h" 3
extern size_t wcsnlen(const wchar_t * __s, size_t __maxlen) throw()
# 310 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 317 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wmemchr(wchar_t * __s, wchar_t __c, size_t __n) throw() __asm__("wmemchr")
# 318 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 319 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wmemchr(const wchar_t * __s, wchar_t __c, size_t __n) throw() __asm__("wmemchr")
# 321 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 328 "/usr/include/wchar.h" 3
extern int wmemcmp(const wchar_t * __s1, const wchar_t * __s2, size_t __n) throw()
# 329 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 332 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wmemcpy(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, size_t __n) throw();
# 337 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wmemmove(wchar_t * __s1, const wchar_t * __s2, size_t __n) throw();
# 341 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wmemset(wchar_t * __s, wchar_t __c, size_t __n) throw();
# 347 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wmempcpy(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, size_t __n) throw();
# 356 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wint_t btowc(int __c) throw();
# 360 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline int wctob(wint_t __c) throw();
# 364 "/usr/include/wchar.h" 3
extern int mbsinit(const mbstate_t * __ps) throw() __attribute((__pure__));
# 368 "/usr/include/wchar.h" 3
extern size_t mbrtowc(wchar_t *__restrict__ __pwc, const char *__restrict__ __s, size_t __n, mbstate_t *__restrict__ __p) throw();
# 373 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline size_t wcrtomb(char *__restrict__ __s, wchar_t __wc, mbstate_t *__restrict__ __ps) throw();
# 377 "/usr/include/wchar.h" 3
extern size_t __mbrlen(const char *__restrict__ __s, size_t __n, mbstate_t *__restrict__ __ps) throw();
# 379 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline size_t mbrlen(const char *__restrict__ __s, size_t __n, mbstate_t *__restrict__ __ps) throw();
# 389 "/usr/include/wchar.h" 3
extern wint_t __btowc_alias(int __c) __asm__("btowc");
# 390 "/usr/include/wchar.h" 3
__attribute((__gnu_inline__)) extern inline wint_t
# 391 "/usr/include/wchar.h" 3
 __attribute((__leaf__)) btowc(int __c) throw()
# 392 "/usr/include/wchar.h" 3
{ return ((0) && (__c >= ('\000')) && (__c <= ('\177'))) ? (wint_t)__c : __btowc_alias(__c);
# 393 "/usr/include/wchar.h" 3
}
# 395 "/usr/include/wchar.h" 3
extern int __wctob_alias(wint_t __c) __asm__("wctob");
# 396 "/usr/include/wchar.h" 3
__attribute((__gnu_inline__)) extern inline int
# 397 "/usr/include/wchar.h" 3
 __attribute((__leaf__)) wctob(wint_t __wc) throw()
# 398 "/usr/include/wchar.h" 3
{ return ((0) && (__wc >= (L'\x0')) && (__wc <= (L'\x7f'))) ? (int)__wc : __wctob_alias(__wc);
# 399 "/usr/include/wchar.h" 3
}
# 401 "/usr/include/wchar.h" 3
__attribute((__gnu_inline__)) extern inline size_t
# 402 "/usr/include/wchar.h" 3
 __attribute((__leaf__)) mbrlen(const char *__restrict__ __s, size_t __n, mbstate_t *__restrict__ __ps) throw()
# 404 "/usr/include/wchar.h" 3
{ return (__ps != (__null)) ? mbrtowc(__null, __s, __n, __ps) : __mbrlen(__s, __n, __null);
# 405 "/usr/include/wchar.h" 3
}
# 411 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline size_t mbsrtowcs(wchar_t *__restrict__ __dst, const char **__restrict__ __src, size_t __len, mbstate_t *__restrict__ __ps) throw();
# 417 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline size_t wcsrtombs(char *__restrict__ __dst, const wchar_t **__restrict__ __src, size_t __len, mbstate_t *__restrict__ __ps) throw();
# 426 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline size_t mbsnrtowcs(wchar_t *__restrict__ __dst, const char **__restrict__ __src, size_t __nmc, size_t __len, mbstate_t *__restrict__ __ps) throw();
# 432 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline size_t wcsnrtombs(char *__restrict__ __dst, const wchar_t **__restrict__ __src, size_t __nwc, size_t __len, mbstate_t *__restrict__ __ps) throw();
# 442 "/usr/include/wchar.h" 3
extern int wcwidth(wchar_t __c) throw();
# 446 "/usr/include/wchar.h" 3
extern int wcswidth(const wchar_t * __s, size_t __n) throw();
# 453 "/usr/include/wchar.h" 3
extern double wcstod(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr) throw();
# 460 "/usr/include/wchar.h" 3
extern float wcstof(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr) throw();
# 462 "/usr/include/wchar.h" 3
extern long double wcstold(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr) throw();
# 471 "/usr/include/wchar.h" 3
extern long wcstol(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 476 "/usr/include/wchar.h" 3
extern unsigned long wcstoul(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 486 "/usr/include/wchar.h" 3
__extension__ extern long long wcstoll(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 493 "/usr/include/wchar.h" 3
__extension__ extern unsigned long long wcstoull(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 503 "/usr/include/wchar.h" 3
__extension__ extern long long wcstoq(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 510 "/usr/include/wchar.h" 3
__extension__ extern unsigned long long wcstouq(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 533 "/usr/include/wchar.h" 3
extern long wcstol_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base, __locale_t __loc) throw();
# 537 "/usr/include/wchar.h" 3
extern unsigned long wcstoul_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base, __locale_t __loc) throw();
# 542 "/usr/include/wchar.h" 3
__extension__ extern long long wcstoll_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base, __locale_t __loc) throw();
# 547 "/usr/include/wchar.h" 3
__extension__ extern unsigned long long wcstoull_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base, __locale_t __loc) throw();
# 552 "/usr/include/wchar.h" 3
extern double wcstod_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, __locale_t __loc) throw();
# 556 "/usr/include/wchar.h" 3
extern float wcstof_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, __locale_t __loc) throw();
# 560 "/usr/include/wchar.h" 3
extern long double wcstold_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, __locale_t __loc) throw();
# 569 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wcpcpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw();
# 574 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wcpncpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw();
# 583 "/usr/include/wchar.h" 3
extern __FILE *open_wmemstream(wchar_t ** __bufloc, size_t * __sizeloc) throw();
# 590 "/usr/include/wchar.h" 3
extern int fwide(__FILE * __fp, int __mode) throw();
# 597 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline int fwprintf(__FILE *__restrict__ __stream, const wchar_t *__restrict__ __format, ...);
# 604 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline int wprintf(const wchar_t *__restrict__ __format, ...);
# 607 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline int swprintf(wchar_t *__restrict__ __s, size_t __n, const wchar_t *__restrict__ __format, ...) throw();
# 615 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline int vfwprintf(__FILE *__restrict__ __s, const wchar_t *__restrict__ __format, __gnuc_va_list __arg);
# 623 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline int vwprintf(const wchar_t *__restrict__ __format, __gnuc_va_list __arg);
# 628 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline int vswprintf(wchar_t *__restrict__ __s, size_t __n, const wchar_t *__restrict__ __format, __gnuc_va_list __arg) throw();
# 638 "/usr/include/wchar.h" 3
extern int fwscanf(__FILE *__restrict__ __stream, const wchar_t *__restrict__ __format, ...);
# 645 "/usr/include/wchar.h" 3
extern int wscanf(const wchar_t *__restrict__ __format, ...);
# 648 "/usr/include/wchar.h" 3
extern int swscanf(const wchar_t *__restrict__ __s, const wchar_t *__restrict__ __format, ...) throw();
# 692 "/usr/include/wchar.h" 3
extern int vfwscanf(__FILE *__restrict__ __s, const wchar_t *__restrict__ __format, __gnuc_va_list __arg);
# 700 "/usr/include/wchar.h" 3
extern int vwscanf(const wchar_t *__restrict__ __format, __gnuc_va_list __arg);
# 704 "/usr/include/wchar.h" 3
extern int vswscanf(const wchar_t *__restrict__ __s, const wchar_t *__restrict__ __format, __gnuc_va_list __arg) throw();
# 748 "/usr/include/wchar.h" 3
extern wint_t fgetwc(__FILE * __stream);
# 749 "/usr/include/wchar.h" 3
extern wint_t getwc(__FILE * __stream);
# 755 "/usr/include/wchar.h" 3
extern wint_t getwchar();
# 762 "/usr/include/wchar.h" 3
extern wint_t fputwc(wchar_t __wc, __FILE * __stream);
# 763 "/usr/include/wchar.h" 3
extern wint_t putwc(wchar_t __wc, __FILE * __stream);
# 769 "/usr/include/wchar.h" 3
extern wint_t putwchar(wchar_t __wc);
# 777 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *fgetws(wchar_t *__restrict__ __ws, int __n, __FILE *__restrict__ __stream);
# 784 "/usr/include/wchar.h" 3
extern int fputws(const wchar_t *__restrict__ __ws, __FILE *__restrict__ __stream);
# 792 "/usr/include/wchar.h" 3
extern wint_t ungetwc(wint_t __wc, __FILE * __stream);
# 804 "/usr/include/wchar.h" 3
extern wint_t getwc_unlocked(__FILE * __stream);
# 805 "/usr/include/wchar.h" 3
extern wint_t getwchar_unlocked();
# 813 "/usr/include/wchar.h" 3
extern wint_t fgetwc_unlocked(__FILE * __stream);
# 821 "/usr/include/wchar.h" 3
extern wint_t fputwc_unlocked(wchar_t __wc, __FILE * __stream);
# 830 "/usr/include/wchar.h" 3
extern wint_t putwc_unlocked(wchar_t __wc, __FILE * __stream);
# 831 "/usr/include/wchar.h" 3
extern wint_t putwchar_unlocked(wchar_t __wc);
# 840 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *fgetws_unlocked(wchar_t *__restrict__ __ws, int __n, __FILE *__restrict__ __stream);
# 849 "/usr/include/wchar.h" 3
extern int fputws_unlocked(const wchar_t *__restrict__ __ws, __FILE *__restrict__ __stream);
# 858 "/usr/include/wchar.h" 3
extern size_t wcsftime(wchar_t *__restrict__ __s, size_t __maxsize, const wchar_t *__restrict__ __format, const tm *__restrict__ __tp) throw();
# 868 "/usr/include/wchar.h" 3
extern size_t wcsftime_l(wchar_t *__restrict__ __s, size_t __maxsize, const wchar_t *__restrict__ __format, const tm *__restrict__ __tp, __locale_t __loc) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmemcpy_chk(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, size_t __n, size_t __ns1) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmemcpy_alias(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, size_t __n) throw() __asm__("wmemcpy");
# 31 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmemcpy_chk_warn(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, size_t __n, size_t __ns1) throw() __asm__("__wmemcpy_chk")
# 35 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wmemcpy called with length bigger than size of destination buffer")));
# 38 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 39 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wmemcpy(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, size_t __n) throw()
# 41 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 42 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s1, 0) != ((size_t)(-1)))
# 43 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 44 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 45 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemcpy_chk(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 48 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__s1, 0) / sizeof(wchar_t))) {
# 49 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemcpy_chk_warn(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 51 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 52 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemcpy_alias(__s1, __s2, __n);
# 53 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 56 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmemmove_chk(wchar_t * __s1, const wchar_t * __s2, size_t __n, size_t __ns1) throw();
# 58 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmemmove_alias(wchar_t * __s1, const wchar_t * __s2, size_t __n) throw() __asm__("wmemmove");
# 61 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmemmove_chk_warn(wchar_t * __s1, const wchar_t * __s2, size_t __n, size_t __ns1) throw() __asm__("__wmemmove_chk")
# 64 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wmemmove called with length bigger than size of destination buffer")));
# 67 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 68 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wmemmove(wchar_t *__s1, const wchar_t *__s2, size_t __n) throw()
# 69 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 70 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s1, 0) != ((size_t)(-1)))
# 71 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 72 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 73 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemmove_chk(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 76 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__s1, 0) / sizeof(wchar_t))) {
# 77 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemmove_chk_warn(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 79 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 80 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemmove_alias(__s1, __s2, __n);
# 81 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 85 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmempcpy_chk(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, size_t __n, size_t __ns1) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmempcpy_alias(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, size_t __n) throw() __asm__("wmempcpy");
# 92 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmempcpy_chk_warn(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, size_t __n, size_t __ns1) throw() __asm__("__wmempcpy_chk")
# 96 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wmempcpy called with length bigger than size of destination buffer")));
# 99 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 100 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wmempcpy(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, size_t __n) throw()
# 102 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 103 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s1, 0) != ((size_t)(-1)))
# 104 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 105 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 106 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmempcpy_chk(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 109 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__s1, 0) / sizeof(wchar_t))) {
# 110 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmempcpy_chk_warn(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 112 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 113 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmempcpy_alias(__s1, __s2, __n);
# 114 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 118 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmemset_chk(wchar_t * __s, wchar_t __c, size_t __n, size_t __ns) throw();
# 120 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmemset_alias(wchar_t * __s, wchar_t __c, size_t __n) throw() __asm__("wmemset");
# 122 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmemset_chk_warn(wchar_t * __s, wchar_t __c, size_t __n, size_t __ns) throw() __asm__("__wmemset_chk")
# 125 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wmemset called with length bigger than size of destination buffer")));
# 128 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 129 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wmemset(wchar_t *__s, wchar_t __c, size_t __n) throw()
# 130 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 131 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s, 0) != ((size_t)(-1)))
# 132 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 133 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 134 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemset_chk(__s, __c, __n, __builtin_object_size(__s, 0) / sizeof(wchar_t)); }
# 136 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__s, 0) / sizeof(wchar_t))) {
# 137 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemset_chk_warn(__s, __c, __n, __builtin_object_size(__s, 0) / sizeof(wchar_t)); }
# 139 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 140 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemset_alias(__s, __c, __n);
# 141 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 144 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcscpy_chk(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw();
# 147 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcscpy_alias(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw() __asm__("wcscpy");
# 151 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 152 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wcscpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw()
# 153 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 154 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1))) {
# 155 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcscpy_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 156 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcscpy_alias(__dest, __src);
# 157 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 160 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcpcpy_chk(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __destlen) throw();
# 163 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcpcpy_alias(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw() __asm__("wcpcpy");
# 167 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 168 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wcpcpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw()
# 169 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 170 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1))) {
# 171 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpcpy_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 172 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpcpy_alias(__dest, __src);
# 173 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 176 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcsncpy_chk(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n, size_t __destlen) throw();
# 179 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcsncpy_alias(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw() __asm__("wcsncpy");
# 183 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcsncpy_chk_warn(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n, size_t __destlen) throw() __asm__("__wcsncpy_chk")
# 187 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wcsncpy called with length bigger than size of destination buffer")));
# 190 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 191 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wcsncpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw()
# 193 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 194 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1)))
# 195 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 196 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 197 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncpy_chk(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 199 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t))) {
# 200 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncpy_chk_warn(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 202 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 203 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncpy_alias(__dest, __src, __n);
# 204 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 207 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcpncpy_chk(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n, size_t __destlen) throw();
# 210 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcpncpy_alias(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw() __asm__("wcpncpy");
# 214 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcpncpy_chk_warn(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n, size_t __destlen) throw() __asm__("__wcpncpy_chk")
# 218 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wcpncpy called with length bigger than size of destination buffer")));
# 221 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 222 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wcpncpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw()
# 224 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 225 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1)))
# 226 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 227 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 228 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpncpy_chk(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 230 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t))) {
# 231 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpncpy_chk_warn(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 233 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 234 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpncpy_alias(__dest, __src, __n);
# 235 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 238 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcscat_chk(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __destlen) throw();
# 241 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcscat_alias(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw() __asm__("wcscat");
# 245 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 246 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wcscat(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw()
# 247 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 248 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1))) {
# 249 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcscat_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 250 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcscat_alias(__dest, __src);
# 251 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 254 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcsncat_chk(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n, size_t __destlen) throw();
# 257 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcsncat_alias(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw() __asm__("wcsncat");
# 262 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 263 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wcsncat(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw()
# 265 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 266 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((size_t)(-1))) {
# 267 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncat_chk(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 269 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncat_alias(__dest, __src, __n);
# 270 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 273 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern int __swprintf_chk(wchar_t *__restrict__ __s, size_t __n, int __flag, size_t __s_len, const wchar_t *__restrict__ __format, ...) throw();
# 278 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern int __swprintf_alias(wchar_t *__restrict__ __s, size_t __n, const wchar_t *__restrict__ __fmt, ...) throw() __asm__("swprintf");
# 284 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 285 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__leaf__)) swprintf(wchar_t *__restrict__ __s, size_t __n, const wchar_t *__restrict__ __fmt, ...) throw()
# 287 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 288 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((__builtin_object_size(__s, 2 > 1) != ((size_t)(-1))) || (2 > 1)) {
# 289 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __swprintf_chk(__s, __n, 2 - 1, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __fmt, __builtin_va_arg_pack()); }
# 292 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __swprintf_alias(__s, __n, __fmt, __builtin_va_arg_pack());
# 293 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 303 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern int __vswprintf_chk(wchar_t *__restrict__ __s, size_t __n, int __flag, size_t __s_len, const wchar_t *__restrict__ __format, __gnuc_va_list __arg) throw();
# 309 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern int __vswprintf_alias(wchar_t *__restrict__ __s, size_t __n, const wchar_t *__restrict__ __fmt, __gnuc_va_list __ap) throw() __asm__("vswprintf");
# 314 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 315 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__leaf__)) vswprintf(wchar_t *__restrict__ __s, size_t __n, const wchar_t *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 317 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 318 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((__builtin_object_size(__s, 2 > 1) != ((size_t)(-1))) || (2 > 1)) {
# 319 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __vswprintf_chk(__s, __n, 2 - 1, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __fmt, __ap); }
# 321 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __vswprintf_alias(__s, __n, __fmt, __ap);
# 322 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 327 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern int __fwprintf_chk(__FILE *__restrict__ __stream, int __flag, const wchar_t *__restrict__ __format, ...);
# 329 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern int __wprintf_chk(int __flag, const wchar_t *__restrict__ __format, ...);
# 331 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern int __vfwprintf_chk(__FILE *__restrict__ __stream, int __flag, const wchar_t *__restrict__ __format, __gnuc_va_list __ap);
# 334 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern int __vwprintf_chk(int __flag, const wchar_t *__restrict__ __format, __gnuc_va_list __ap);
# 338 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 339 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wprintf(const wchar_t *__restrict__ __fmt, ...)
# 340 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 341 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wprintf_chk(2 - 1, __fmt, __builtin_va_arg_pack());
# 342 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 344 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 345 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
fwprintf(__FILE *__restrict__ __stream, const wchar_t *__restrict__ __fmt, ...)
# 346 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 347 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fwprintf_chk(__stream, 2 - 1, __fmt, __builtin_va_arg_pack());
# 349 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 357 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 358 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
vwprintf(const wchar_t *__restrict__ __fmt, __gnuc_va_list __ap)
# 359 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 360 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __vwprintf_chk(2 - 1, __fmt, __ap);
# 361 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 363 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 364 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
vfwprintf(__FILE *__restrict__ __stream, const wchar_t *__restrict__
# 365 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__fmt, __gnuc_va_list __ap)
# 366 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 367 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __vfwprintf_chk(__stream, 2 - 1, __fmt, __ap);
# 368 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 372 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__fgetws_chk(wchar_t *__restrict__ __s, size_t __size, int __n, __FILE *__restrict__ __stream)
# 373 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 374 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__fgetws_alias(wchar_t *__restrict__ __s, int __n, __FILE *__restrict__ __stream) __asm__("fgetws")
# 376 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 377 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__fgetws_chk_warn(wchar_t *__restrict__ __s, size_t __size, int __n, __FILE *__restrict__ __stream) __asm__("__fgetws_chk")
# 380 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fgetws called with bigger size than length of destination buffer")));
# 383 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline wchar_t *
# 384 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
fgetws(wchar_t *__restrict__ __s, int __n, __FILE *__restrict__ __stream)
# 385 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 386 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s, 2 > 1) != ((size_t)(-1)))
# 387 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 388 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((!(0)) || (__n <= 0)) {
# 389 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_chk(__s, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __n, __stream); }
# 392 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (((size_t)__n) > (__builtin_object_size(__s, 2 > 1) / sizeof(wchar_t))) {
# 393 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_chk_warn(__s, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __n, __stream); }
# 395 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 396 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_alias(__s, __n, __stream);
# 397 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 400 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__fgetws_unlocked_chk(wchar_t *__restrict__ __s, size_t __size, int __n, __FILE *__restrict__ __stream)
# 402 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 403 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__fgetws_unlocked_alias(wchar_t *__restrict__ __s, int __n, __FILE *__restrict__ __stream) __asm__("fgetws_unlocked")
# 406 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 407 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__fgetws_unlocked_chk_warn(wchar_t *__restrict__ __s, size_t __size, int __n, __FILE *__restrict__ __stream) __asm__("__fgetws_unlocked_chk")
# 411 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fgetws_unlocked called with bigger size than length of destination buffer")));
# 414 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline wchar_t *
# 415 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
fgetws_unlocked(wchar_t *__restrict__ __s, int __n, __FILE *__restrict__ __stream)
# 416 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 417 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s, 2 > 1) != ((size_t)(-1)))
# 418 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 419 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((!(0)) || (__n <= 0)) {
# 420 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_unlocked_chk(__s, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __n, __stream); }
# 423 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (((size_t)__n) > (__builtin_object_size(__s, 2 > 1) / sizeof(wchar_t))) {
# 424 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_unlocked_chk_warn(__s, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __n, __stream); }
# 426 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 427 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_unlocked_alias(__s, __n, __stream);
# 428 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 432 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern size_t __wcrtomb_chk(char *__restrict__ __s, wchar_t __wchar, mbstate_t *__restrict__ __p, size_t __buflen) throw()
# 434 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 435 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern size_t __wcrtomb_alias(char *__restrict__ __s, wchar_t __wchar, mbstate_t *__restrict__ __ps) throw() __asm__("wcrtomb")
# 437 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 439 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline size_t
# 440 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__leaf__)) wcrtomb(char *__restrict__ __s, wchar_t __wchar, mbstate_t *__restrict__ __ps) throw()
# 442 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 450 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((__builtin_object_size(__s, 2 > 1) != ((size_t)(-1))) && ((16) > __builtin_object_size(__s, 2 > 1))) {
# 451 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcrtomb_chk(__s, __wchar, __ps, __builtin_object_size(__s, 2 > 1)); }
# 452 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcrtomb_alias(__s, __wchar, __ps);
# 453 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 456 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern size_t __mbsrtowcs_chk(wchar_t *__restrict__ __dst, const char **__restrict__ __src, size_t __len, mbstate_t *__restrict__ __ps, size_t __dstlen) throw();
# 460 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern size_t __mbsrtowcs_alias(wchar_t *__restrict__ __dst, const char **__restrict__ __src, size_t __len, mbstate_t *__restrict__ __ps) throw() __asm__("mbsrtowcs");
# 465 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern size_t __mbsrtowcs_chk_warn(wchar_t *__restrict__ __dst, const char **__restrict__ __src, size_t __len, mbstate_t *__restrict__ __ps, size_t __dstlen) throw() __asm__("__mbsrtowcs_chk")
# 470 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("mbsrtowcs called with dst buffer smaller than len * sizeof (wchar_t)")));
# 473 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 474 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__leaf__)) mbsrtowcs(wchar_t *__restrict__ __dst, const char **__restrict__ __src, size_t __len, mbstate_t *__restrict__ __ps) throw()
# 476 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 477 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((size_t)(-1)))
# 478 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 479 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 480 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsrtowcs_chk(__dst, __src, __len, __ps, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 483 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__len > (__builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t))) {
# 484 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsrtowcs_chk_warn(__dst, __src, __len, __ps, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 486 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 487 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsrtowcs_alias(__dst, __src, __len, __ps);
# 488 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 491 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern size_t __wcsrtombs_chk(char *__restrict__ __dst, const wchar_t **__restrict__ __src, size_t __len, mbstate_t *__restrict__ __ps, size_t __dstlen) throw();
# 495 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern size_t __wcsrtombs_alias(char *__restrict__ __dst, const wchar_t **__restrict__ __src, size_t __len, mbstate_t *__restrict__ __ps) throw() __asm__("wcsrtombs");
# 500 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern size_t __wcsrtombs_chk_warn(char *__restrict__ __dst, const wchar_t **__restrict__ __src, size_t __len, mbstate_t *__restrict__ __ps, size_t __dstlen) throw() __asm__("__wcsrtombs_chk")
# 505 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wcsrtombs called with dst buffer smaller than len")));
# 507 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 508 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__leaf__)) wcsrtombs(char *__restrict__ __dst, const wchar_t **__restrict__ __src, size_t __len, mbstate_t *__restrict__ __ps) throw()
# 510 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 511 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((size_t)(-1)))
# 512 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 513 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 514 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsrtombs_chk(__dst, __src, __len, __ps, __builtin_object_size(__dst, 2 > 1)); }
# 516 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__len > __builtin_object_size(__dst, 2 > 1)) {
# 517 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsrtombs_chk_warn(__dst, __src, __len, __ps, __builtin_object_size(__dst, 2 > 1)); }
# 518 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 519 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsrtombs_alias(__dst, __src, __len, __ps);
# 520 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 524 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern size_t __mbsnrtowcs_chk(wchar_t *__restrict__ __dst, const char **__restrict__ __src, size_t __nmc, size_t __len, mbstate_t *__restrict__ __ps, size_t __dstlen) throw();
# 528 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern size_t __mbsnrtowcs_alias(wchar_t *__restrict__ __dst, const char **__restrict__ __src, size_t __nmc, size_t __len, mbstate_t *__restrict__ __ps) throw() __asm__("mbsnrtowcs");
# 533 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern size_t __mbsnrtowcs_chk_warn(wchar_t *__restrict__ __dst, const char **__restrict__ __src, size_t __nmc, size_t __len, mbstate_t *__restrict__ __ps, size_t __dstlen) throw() __asm__("__mbsnrtowcs_chk")
# 538 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("mbsnrtowcs called with dst buffer smaller than len * sizeof (wchar_t)")));
# 541 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 542 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__leaf__)) mbsnrtowcs(wchar_t *__restrict__ __dst, const char **__restrict__ __src, size_t __nmc, size_t __len, mbstate_t *__restrict__ __ps) throw()
# 544 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 545 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((size_t)(-1)))
# 546 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 547 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 548 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsnrtowcs_chk(__dst, __src, __nmc, __len, __ps, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 551 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__len > (__builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t))) {
# 552 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsnrtowcs_chk_warn(__dst, __src, __nmc, __len, __ps, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 554 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 555 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsnrtowcs_alias(__dst, __src, __nmc, __len, __ps);
# 556 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 559 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern size_t __wcsnrtombs_chk(char *__restrict__ __dst, const wchar_t **__restrict__ __src, size_t __nwc, size_t __len, mbstate_t *__restrict__ __ps, size_t __dstlen) throw();
# 564 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern size_t __wcsnrtombs_alias(char *__restrict__ __dst, const wchar_t **__restrict__ __src, size_t __nwc, size_t __len, mbstate_t *__restrict__ __ps) throw() __asm__("wcsnrtombs");
# 569 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern size_t __wcsnrtombs_chk_warn(char *__restrict__ __dst, const wchar_t **__restrict__ __src, size_t __nwc, size_t __len, mbstate_t *__restrict__ __ps, size_t __dstlen) throw() __asm__("__wcsnrtombs_chk")
# 575 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wcsnrtombs called with dst buffer smaller than len")));
# 577 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline size_t
# 578 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__leaf__)) wcsnrtombs(char *__restrict__ __dst, const wchar_t **__restrict__ __src, size_t __nwc, size_t __len, mbstate_t *__restrict__ __ps) throw()
# 580 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 581 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((size_t)(-1)))
# 582 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 583 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 584 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsnrtombs_chk(__dst, __src, __nwc, __len, __ps, __builtin_object_size(__dst, 2 > 1)); }
# 587 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__len > __builtin_object_size(__dst, 2 > 1)) {
# 588 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsnrtombs_chk_warn(__dst, __src, __nwc, __len, __ps, __builtin_object_size(__dst, 2 > 1)); }
# 590 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 591 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsnrtombs_alias(__dst, __src, __nwc, __len, __ps);
# 592 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 894 "/usr/include/wchar.h" 3
}
# 62 "/usr/include/c++/5/cwchar" 3
namespace std {
# 64 "/usr/include/c++/5/cwchar" 3
using ::mbstate_t;
# 65 "/usr/include/c++/5/cwchar" 3
}
# 135 "/usr/include/c++/5/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 139 "/usr/include/c++/5/cwchar" 3
using ::wint_t;
# 141 "/usr/include/c++/5/cwchar" 3
using ::btowc;
# 142 "/usr/include/c++/5/cwchar" 3
using ::fgetwc;
# 143 "/usr/include/c++/5/cwchar" 3
using ::fgetws;
# 144 "/usr/include/c++/5/cwchar" 3
using ::fputwc;
# 145 "/usr/include/c++/5/cwchar" 3
using ::fputws;
# 146 "/usr/include/c++/5/cwchar" 3
using ::fwide;
# 147 "/usr/include/c++/5/cwchar" 3
using ::fwprintf;
# 148 "/usr/include/c++/5/cwchar" 3
using ::fwscanf;
# 149 "/usr/include/c++/5/cwchar" 3
using ::getwc;
# 150 "/usr/include/c++/5/cwchar" 3
using ::getwchar;
# 151 "/usr/include/c++/5/cwchar" 3
using ::mbrlen;
# 152 "/usr/include/c++/5/cwchar" 3
using ::mbrtowc;
# 153 "/usr/include/c++/5/cwchar" 3
using ::mbsinit;
# 154 "/usr/include/c++/5/cwchar" 3
using ::mbsrtowcs;
# 155 "/usr/include/c++/5/cwchar" 3
using ::putwc;
# 156 "/usr/include/c++/5/cwchar" 3
using ::putwchar;
# 158 "/usr/include/c++/5/cwchar" 3
using ::swprintf;
# 160 "/usr/include/c++/5/cwchar" 3
using ::swscanf;
# 161 "/usr/include/c++/5/cwchar" 3
using ::ungetwc;
# 162 "/usr/include/c++/5/cwchar" 3
using ::vfwprintf;
# 164 "/usr/include/c++/5/cwchar" 3
using ::vfwscanf;
# 167 "/usr/include/c++/5/cwchar" 3
using ::vswprintf;
# 170 "/usr/include/c++/5/cwchar" 3
using ::vswscanf;
# 172 "/usr/include/c++/5/cwchar" 3
using ::vwprintf;
# 174 "/usr/include/c++/5/cwchar" 3
using ::vwscanf;
# 176 "/usr/include/c++/5/cwchar" 3
using ::wcrtomb;
# 177 "/usr/include/c++/5/cwchar" 3
using ::wcscat;
# 178 "/usr/include/c++/5/cwchar" 3
using ::wcscmp;
# 179 "/usr/include/c++/5/cwchar" 3
using ::wcscoll;
# 180 "/usr/include/c++/5/cwchar" 3
using ::wcscpy;
# 181 "/usr/include/c++/5/cwchar" 3
using ::wcscspn;
# 182 "/usr/include/c++/5/cwchar" 3
using ::wcsftime;
# 183 "/usr/include/c++/5/cwchar" 3
using ::wcslen;
# 184 "/usr/include/c++/5/cwchar" 3
using ::wcsncat;
# 185 "/usr/include/c++/5/cwchar" 3
using ::wcsncmp;
# 186 "/usr/include/c++/5/cwchar" 3
using ::wcsncpy;
# 187 "/usr/include/c++/5/cwchar" 3
using ::wcsrtombs;
# 188 "/usr/include/c++/5/cwchar" 3
using ::wcsspn;
# 189 "/usr/include/c++/5/cwchar" 3
using ::wcstod;
# 191 "/usr/include/c++/5/cwchar" 3
using ::wcstof;
# 193 "/usr/include/c++/5/cwchar" 3
using ::wcstok;
# 194 "/usr/include/c++/5/cwchar" 3
using ::wcstol;
# 195 "/usr/include/c++/5/cwchar" 3
using ::wcstoul;
# 196 "/usr/include/c++/5/cwchar" 3
using ::wcsxfrm;
# 197 "/usr/include/c++/5/cwchar" 3
using ::wctob;
# 198 "/usr/include/c++/5/cwchar" 3
using ::wmemcmp;
# 199 "/usr/include/c++/5/cwchar" 3
using ::wmemcpy;
# 200 "/usr/include/c++/5/cwchar" 3
using ::wmemmove;
# 201 "/usr/include/c++/5/cwchar" 3
using ::wmemset;
# 202 "/usr/include/c++/5/cwchar" 3
using ::wprintf;
# 203 "/usr/include/c++/5/cwchar" 3
using ::wscanf;
# 204 "/usr/include/c++/5/cwchar" 3
using ::wcschr;
# 205 "/usr/include/c++/5/cwchar" 3
using ::wcspbrk;
# 206 "/usr/include/c++/5/cwchar" 3
using ::wcsrchr;
# 207 "/usr/include/c++/5/cwchar" 3
using ::wcsstr;
# 208 "/usr/include/c++/5/cwchar" 3
using ::wmemchr;
# 233 "/usr/include/c++/5/cwchar" 3
}
# 241 "/usr/include/c++/5/cwchar" 3
namespace __gnu_cxx {
# 248 "/usr/include/c++/5/cwchar" 3
using ::wcstold;
# 257 "/usr/include/c++/5/cwchar" 3
using ::wcstoll;
# 258 "/usr/include/c++/5/cwchar" 3
using ::wcstoull;
# 260 "/usr/include/c++/5/cwchar" 3
}
# 262 "/usr/include/c++/5/cwchar" 3
namespace std {
# 264 "/usr/include/c++/5/cwchar" 3
using __gnu_cxx::wcstold;
# 265 "/usr/include/c++/5/cwchar" 3
using __gnu_cxx::wcstoll;
# 266 "/usr/include/c++/5/cwchar" 3
using __gnu_cxx::wcstoull;
# 267 "/usr/include/c++/5/cwchar" 3
}
# 68 "/usr/include/c++/5/bits/postypes.h" 3
namespace std __attribute((__visibility__("default"))) {
# 88 "/usr/include/c++/5/bits/postypes.h" 3
typedef long streamoff;
# 98 "/usr/include/c++/5/bits/postypes.h" 3
typedef ptrdiff_t streamsize;
# 111 "/usr/include/c++/5/bits/postypes.h" 3
template< class _StateT>
# 112 "/usr/include/c++/5/bits/postypes.h" 3
class fpos {
# 115 "/usr/include/c++/5/bits/postypes.h" 3
streamoff _M_off;
# 116 "/usr/include/c++/5/bits/postypes.h" 3
_StateT _M_state;
# 123 "/usr/include/c++/5/bits/postypes.h" 3
public: fpos() : _M_off((0)), _M_state()
# 124 "/usr/include/c++/5/bits/postypes.h" 3
{ }
# 133 "/usr/include/c++/5/bits/postypes.h" 3
fpos(streamoff __off) : _M_off(__off), _M_state()
# 134 "/usr/include/c++/5/bits/postypes.h" 3
{ }
# 137 "/usr/include/c++/5/bits/postypes.h" 3
operator streamoff() const { return _M_off; }
# 141 "/usr/include/c++/5/bits/postypes.h" 3
void state(_StateT __st)
# 142 "/usr/include/c++/5/bits/postypes.h" 3
{ (_M_state) = __st; }
# 146 "/usr/include/c++/5/bits/postypes.h" 3
_StateT state() const
# 147 "/usr/include/c++/5/bits/postypes.h" 3
{ return _M_state; }
# 154 "/usr/include/c++/5/bits/postypes.h" 3
fpos &operator+=(streamoff __off)
# 155 "/usr/include/c++/5/bits/postypes.h" 3
{
# 156 "/usr/include/c++/5/bits/postypes.h" 3
(_M_off) += __off;
# 157 "/usr/include/c++/5/bits/postypes.h" 3
return *this;
# 158 "/usr/include/c++/5/bits/postypes.h" 3
}
# 165 "/usr/include/c++/5/bits/postypes.h" 3
fpos &operator-=(streamoff __off)
# 166 "/usr/include/c++/5/bits/postypes.h" 3
{
# 167 "/usr/include/c++/5/bits/postypes.h" 3
(_M_off) -= __off;
# 168 "/usr/include/c++/5/bits/postypes.h" 3
return *this;
# 169 "/usr/include/c++/5/bits/postypes.h" 3
}
# 178 "/usr/include/c++/5/bits/postypes.h" 3
fpos operator+(streamoff __off) const
# 179 "/usr/include/c++/5/bits/postypes.h" 3
{
# 180 "/usr/include/c++/5/bits/postypes.h" 3
fpos __pos(*this);
# 181 "/usr/include/c++/5/bits/postypes.h" 3
__pos += __off;
# 182 "/usr/include/c++/5/bits/postypes.h" 3
return __pos;
# 183 "/usr/include/c++/5/bits/postypes.h" 3
}
# 192 "/usr/include/c++/5/bits/postypes.h" 3
fpos operator-(streamoff __off) const
# 193 "/usr/include/c++/5/bits/postypes.h" 3
{
# 194 "/usr/include/c++/5/bits/postypes.h" 3
fpos __pos(*this);
# 195 "/usr/include/c++/5/bits/postypes.h" 3
__pos -= __off;
# 196 "/usr/include/c++/5/bits/postypes.h" 3
return __pos;
# 197 "/usr/include/c++/5/bits/postypes.h" 3
}
# 205 "/usr/include/c++/5/bits/postypes.h" 3
streamoff operator-(const fpos &__other) const
# 206 "/usr/include/c++/5/bits/postypes.h" 3
{ return (_M_off) - (__other._M_off); }
# 207 "/usr/include/c++/5/bits/postypes.h" 3
};
# 214 "/usr/include/c++/5/bits/postypes.h" 3
template< class _StateT> inline bool
# 216 "/usr/include/c++/5/bits/postypes.h" 3
operator==(const fpos< _StateT> &__lhs, const fpos< _StateT> &__rhs)
# 217 "/usr/include/c++/5/bits/postypes.h" 3
{ return ((streamoff)__lhs) == ((streamoff)__rhs); }
# 219 "/usr/include/c++/5/bits/postypes.h" 3
template< class _StateT> inline bool
# 221 "/usr/include/c++/5/bits/postypes.h" 3
operator!=(const fpos< _StateT> &__lhs, const fpos< _StateT> &__rhs)
# 222 "/usr/include/c++/5/bits/postypes.h" 3
{ return ((streamoff)__lhs) != ((streamoff)__rhs); }
# 228 "/usr/include/c++/5/bits/postypes.h" 3
typedef fpos< __mbstate_t> streampos;
# 230 "/usr/include/c++/5/bits/postypes.h" 3
typedef fpos< __mbstate_t> wstreampos;
# 240 "/usr/include/c++/5/bits/postypes.h" 3
}
# 42 "/usr/include/c++/5/iosfwd" 3
namespace std __attribute((__visibility__("default"))) {
# 74 "/usr/include/c++/5/iosfwd" 3
class ios_base;
# 76 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ios;
# 79 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_streambuf;
# 82 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_istream;
# 85 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ostream;
# 88 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_iostream;
# 92 "/usr/include/c++/5/iosfwd" 3
inline namespace __cxx11 {
# 94 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 95 "/usr/include/c++/5/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_stringbuf;
# 98 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 99 "/usr/include/c++/5/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_istringstream;
# 102 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 103 "/usr/include/c++/5/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_ostringstream;
# 106 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 107 "/usr/include/c++/5/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_stringstream;
# 110 "/usr/include/c++/5/iosfwd" 3
}
# 112 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_filebuf;
# 115 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ifstream;
# 118 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ofstream;
# 121 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_fstream;
# 124 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class istreambuf_iterator;
# 127 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class ostreambuf_iterator;
# 132 "/usr/include/c++/5/iosfwd" 3
typedef basic_ios< char> ios;
# 135 "/usr/include/c++/5/iosfwd" 3
typedef basic_streambuf< char> streambuf;
# 138 "/usr/include/c++/5/iosfwd" 3
typedef basic_istream< char> istream;
# 141 "/usr/include/c++/5/iosfwd" 3
typedef basic_ostream< char> ostream;
# 144 "/usr/include/c++/5/iosfwd" 3
typedef basic_iostream< char> iostream;
# 147 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_stringbuf< char> stringbuf;
# 150 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_istringstream< char> istringstream;
# 153 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_ostringstream< char> ostringstream;
# 156 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_stringstream< char> stringstream;
# 159 "/usr/include/c++/5/iosfwd" 3
typedef basic_filebuf< char> filebuf;
# 162 "/usr/include/c++/5/iosfwd" 3
typedef basic_ifstream< char> ifstream;
# 165 "/usr/include/c++/5/iosfwd" 3
typedef basic_ofstream< char> ofstream;
# 168 "/usr/include/c++/5/iosfwd" 3
typedef basic_fstream< char> fstream;
# 172 "/usr/include/c++/5/iosfwd" 3
typedef basic_ios< wchar_t> wios;
# 175 "/usr/include/c++/5/iosfwd" 3
typedef basic_streambuf< wchar_t> wstreambuf;
# 178 "/usr/include/c++/5/iosfwd" 3
typedef basic_istream< wchar_t> wistream;
# 181 "/usr/include/c++/5/iosfwd" 3
typedef basic_ostream< wchar_t> wostream;
# 184 "/usr/include/c++/5/iosfwd" 3
typedef basic_iostream< wchar_t> wiostream;
# 187 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_stringbuf< wchar_t> wstringbuf;
# 190 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_istringstream< wchar_t> wistringstream;
# 193 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_ostringstream< wchar_t> wostringstream;
# 196 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_stringstream< wchar_t> wstringstream;
# 199 "/usr/include/c++/5/iosfwd" 3
typedef basic_filebuf< wchar_t> wfilebuf;
# 202 "/usr/include/c++/5/iosfwd" 3
typedef basic_ifstream< wchar_t> wifstream;
# 205 "/usr/include/c++/5/iosfwd" 3
typedef basic_ofstream< wchar_t> wofstream;
# 208 "/usr/include/c++/5/iosfwd" 3
typedef basic_fstream< wchar_t> wfstream;
# 213 "/usr/include/c++/5/iosfwd" 3
}
# 35 "/usr/include/c++/5/exception" 3
#pragma GCC visibility push ( default )
# 40 "/usr/include/c++/5/exception" 3
extern "C++" {
# 42 "/usr/include/c++/5/exception" 3
namespace std {
# 60 "/usr/include/c++/5/exception" 3
class exception {
# 63 "/usr/include/c++/5/exception" 3
public: exception() throw() { }
# 64 "/usr/include/c++/5/exception" 3
virtual ~exception() throw();
# 68 "/usr/include/c++/5/exception" 3
virtual const char *what() const throw();
# 69 "/usr/include/c++/5/exception" 3
};
# 73 "/usr/include/c++/5/exception" 3
class bad_exception : public exception {
# 76 "/usr/include/c++/5/exception" 3
public: bad_exception() throw() { }
# 80 "/usr/include/c++/5/exception" 3
virtual ~bad_exception() throw();
# 83 "/usr/include/c++/5/exception" 3
virtual const char *what() const throw();
# 84 "/usr/include/c++/5/exception" 3
};
# 87 "/usr/include/c++/5/exception" 3
typedef void (*terminate_handler)(void);
# 90 "/usr/include/c++/5/exception" 3
typedef void (*unexpected_handler)(void);
# 93 "/usr/include/c++/5/exception" 3
terminate_handler set_terminate(terminate_handler) throw();
# 102 "/usr/include/c++/5/exception" 3
void terminate() throw() __attribute((__noreturn__));
# 105 "/usr/include/c++/5/exception" 3
unexpected_handler set_unexpected(unexpected_handler) throw();
# 114 "/usr/include/c++/5/exception" 3
void unexpected() __attribute((__noreturn__));
# 127 "/usr/include/c++/5/exception" 3
bool uncaught_exception() throw() __attribute((__pure__));
# 130 "/usr/include/c++/5/exception" 3
}
# 132 "/usr/include/c++/5/exception" 3
namespace __gnu_cxx {
# 152 "/usr/include/c++/5/exception" 3
void __verbose_terminate_handler();
# 155 "/usr/include/c++/5/exception" 3
}
# 157 "/usr/include/c++/5/exception" 3
}
# 159 "/usr/include/c++/5/exception" 3
#pragma GCC visibility pop
# 42 "/usr/include/c++/5/bits/functexcept.h" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_bad_exception() __attribute((__noreturn__));
# 52 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_bad_alloc() __attribute((__noreturn__));
# 56 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_bad_cast() __attribute((__noreturn__));
# 59 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_bad_typeid() __attribute((__noreturn__));
# 63 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_logic_error(const char *) __attribute((__noreturn__));
# 66 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_domain_error(const char *) __attribute((__noreturn__));
# 69 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_invalid_argument(const char *) __attribute((__noreturn__));
# 72 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_length_error(const char *) __attribute((__noreturn__));
# 75 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_out_of_range(const char *) __attribute((__noreturn__));
# 78 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_out_of_range_fmt(const char *, ...) __attribute((__noreturn__))
# 79 "/usr/include/c++/5/bits/functexcept.h" 3
 __attribute((__format__(__gnu_printf__, 1, 2)));
# 82 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_runtime_error(const char *) __attribute((__noreturn__));
# 85 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_range_error(const char *) __attribute((__noreturn__));
# 88 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_overflow_error(const char *) __attribute((__noreturn__));
# 91 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_underflow_error(const char *) __attribute((__noreturn__));
# 95 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_ios_failure(const char *) __attribute((__noreturn__));
# 98 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_system_error(int) __attribute((__noreturn__));
# 101 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_future_error(int) __attribute((__noreturn__));
# 105 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_bad_function_call() __attribute((__noreturn__));
# 108 "/usr/include/c++/5/bits/functexcept.h" 3
}
# 37 "/usr/include/c++/5/ext/numeric_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 54 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value>
# 55 "/usr/include/c++/5/ext/numeric_traits.h" 3
struct __numeric_traits_integer {
# 58 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const _Value __min = ((((_Value)(-1)) < 0) ? ((_Value)1) << ((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0)) : ((_Value)0));
# 59 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const _Value __max = ((((_Value)(-1)) < 0) ? (((((_Value)1) << (((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((_Value)0)));
# 63 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const bool __is_signed = (((_Value)(-1)) < 0);
# 64 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const int __digits = ((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0));
# 65 "/usr/include/c++/5/ext/numeric_traits.h" 3
};
# 67 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const _Value
# 68 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__min;
# 70 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const _Value
# 71 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__max;
# 73 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const bool
# 74 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__is_signed;
# 76 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const int
# 77 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__digits;
# 99 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value>
# 100 "/usr/include/c++/5/ext/numeric_traits.h" 3
struct __numeric_traits_floating {
# 103 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const int __max_digits10 = ((2) + ((((std::__are_same< _Value, float> ::__value) ? 24 : ((std::__are_same< _Value, double> ::__value) ? 53 : 64)) * 643L) / (2136)));
# 106 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const bool __is_signed = true;
# 107 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const int __digits10 = ((std::__are_same< _Value, float> ::__value) ? 6 : ((std::__are_same< _Value, double> ::__value) ? 15 : 18));
# 108 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const int __max_exponent10 = ((std::__are_same< _Value, float> ::__value) ? 38 : ((std::__are_same< _Value, double> ::__value) ? 308 : 4932));
# 109 "/usr/include/c++/5/ext/numeric_traits.h" 3
};
# 111 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const int
# 112 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__max_digits10;
# 114 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const bool
# 115 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__is_signed;
# 117 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const int
# 118 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__digits10;
# 120 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const int
# 121 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__max_exponent10;
# 123 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value>
# 124 "/usr/include/c++/5/ext/numeric_traits.h" 3
struct __numeric_traits : public __conditional_type< std::__is_integer< _Value> ::__value, __numeric_traits_integer< _Value> , __numeric_traits_floating< _Value> > ::__type {
# 128 "/usr/include/c++/5/ext/numeric_traits.h" 3
};
# 131 "/usr/include/c++/5/ext/numeric_traits.h" 3
}
# 65 "/usr/include/c++/5/bits/stl_pair.h" 3
namespace std __attribute((__visibility__("default"))) {
# 95 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2>
# 96 "/usr/include/c++/5/bits/stl_pair.h" 3
struct pair {
# 98 "/usr/include/c++/5/bits/stl_pair.h" 3
typedef _T1 first_type;
# 99 "/usr/include/c++/5/bits/stl_pair.h" 3
typedef _T2 second_type;
# 101 "/usr/include/c++/5/bits/stl_pair.h" 3
_T1 first;
# 102 "/usr/include/c++/5/bits/stl_pair.h" 3
_T2 second;
# 108 "/usr/include/c++/5/bits/stl_pair.h" 3
pair() : first(), second()
# 109 "/usr/include/c++/5/bits/stl_pair.h" 3
{ }
# 112 "/usr/include/c++/5/bits/stl_pair.h" 3
pair(const _T1 &__a, const _T2 &__b) : first(__a), second(__b)
# 113 "/usr/include/c++/5/bits/stl_pair.h" 3
{ }
# 117 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _U1, class _U2>
# 118 "/usr/include/c++/5/bits/stl_pair.h" 3
pair(const std::pair< _U1, _U2> &__p) : first((__p.first)), second((__p.second))
# 119 "/usr/include/c++/5/bits/stl_pair.h" 3
{ }
# 209 "/usr/include/c++/5/bits/stl_pair.h" 3
};
# 212 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> inline bool
# 214 "/usr/include/c++/5/bits/stl_pair.h" 3
operator==(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 215 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return ((__x.first) == (__y.first)) && ((__x.second) == (__y.second)); }
# 218 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> inline bool
# 220 "/usr/include/c++/5/bits/stl_pair.h" 3
operator<(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 221 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return ((__x.first) < (__y.first)) || ((!((__y.first) < (__x.first))) && ((__x.second) < (__y.second)));
# 222 "/usr/include/c++/5/bits/stl_pair.h" 3
}
# 225 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> inline bool
# 227 "/usr/include/c++/5/bits/stl_pair.h" 3
operator!=(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 228 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return !(__x == __y); }
# 231 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> inline bool
# 233 "/usr/include/c++/5/bits/stl_pair.h" 3
operator>(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 234 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return __y < __x; }
# 237 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> inline bool
# 239 "/usr/include/c++/5/bits/stl_pair.h" 3
operator<=(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 240 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return !(__y < __x); }
# 243 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> inline bool
# 245 "/usr/include/c++/5/bits/stl_pair.h" 3
operator>=(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 246 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return !(__x < __y); }
# 284 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> inline pair< _T1, _T2>
# 286 "/usr/include/c++/5/bits/stl_pair.h" 3
make_pair(_T1 __x, _T2 __y)
# 287 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return pair< _T1, _T2> (__x, __y); }
# 293 "/usr/include/c++/5/bits/stl_pair.h" 3
}
# 33 "/usr/include/c++/5/bits/predefined_ops.h" 3
namespace __gnu_cxx {
# 35 "/usr/include/c++/5/bits/predefined_ops.h" 3
namespace __ops {
# 37 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_less_iter {
# 39 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator1, class _Iterator2> bool
# 42 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator1 __it1, _Iterator2 __it2) const
# 43 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (*__it1) < (*__it2); }
# 44 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 47 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Iter_less_iter __iter_less_iter()
# 48 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_less_iter(); }
# 50 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_less_val {
# 52 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator, class _Value> bool
# 54 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it, _Value &__val) const
# 55 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (*__it) < __val; }
# 56 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 59 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Iter_less_val __iter_less_val()
# 60 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_less_val(); }
# 63 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Iter_less_val __iter_comp_val(_Iter_less_iter)
# 64 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_less_val(); }
# 66 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Val_less_iter {
# 68 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Value, class _Iterator> bool
# 70 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Value &__val, _Iterator __it) const
# 71 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return __val < (*__it); }
# 72 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 75 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Val_less_iter __val_less_iter()
# 76 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Val_less_iter(); }
# 79 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Val_less_iter __val_comp_iter(_Iter_less_iter)
# 80 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Val_less_iter(); }
# 82 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_equal_to_iter {
# 84 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator1, class _Iterator2> bool
# 86 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator1 __it1, _Iterator2 __it2) const
# 87 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (*__it1) == (*__it2); }
# 88 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 91 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Iter_equal_to_iter __iter_equal_to_iter()
# 92 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_equal_to_iter(); }
# 94 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_equal_to_val {
# 96 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator, class _Value> bool
# 98 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it, _Value &__val) const
# 99 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (*__it) == __val; }
# 100 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 103 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Iter_equal_to_val __iter_equal_to_val()
# 104 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_equal_to_val(); }
# 107 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Iter_equal_to_val __iter_comp_val(_Iter_equal_to_iter)
# 108 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_equal_to_val(); }
# 110 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare>
# 111 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_comp_iter {
# 113 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Compare _M_comp;
# 115 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_comp_iter(_Compare __comp) : _M_comp(__comp)
# 117 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 119 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator1, class _Iterator2> bool
# 122 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator1 __it1, _Iterator2 __it2)
# 123 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(*__it1, *__it2); }
# 124 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 126 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare> inline _Iter_comp_iter< _Compare>
# 129 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_comp_iter(_Compare __comp)
# 130 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_comp_iter< _Compare> )(__comp)); }
# 132 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare>
# 133 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_comp_val {
# 135 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Compare _M_comp;
# 137 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_comp_val(_Compare __comp) : _M_comp(__comp)
# 139 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 141 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator, class _Value> bool
# 143 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it, _Value &__val)
# 144 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(*__it, __val); }
# 145 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 147 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare> inline _Iter_comp_val< _Compare>
# 149 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_comp_val(_Compare __comp)
# 150 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_comp_val< _Compare> )(__comp)); }
# 152 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare> inline _Iter_comp_val< _Compare>
# 154 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_comp_val(_Iter_comp_iter< _Compare> __comp)
# 155 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_comp_val< _Compare> )((__comp._M_comp))); }
# 157 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare>
# 158 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Val_comp_iter {
# 160 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Compare _M_comp;
# 162 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Val_comp_iter(_Compare __comp) : _M_comp(__comp)
# 164 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 166 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Value, class _Iterator> bool
# 168 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Value &__val, _Iterator __it)
# 169 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(__val, *__it); }
# 170 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 172 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare> inline _Val_comp_iter< _Compare>
# 174 "/usr/include/c++/5/bits/predefined_ops.h" 3
__val_comp_iter(_Compare __comp)
# 175 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Val_comp_iter< _Compare> )(__comp)); }
# 177 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare> inline _Val_comp_iter< _Compare>
# 179 "/usr/include/c++/5/bits/predefined_ops.h" 3
__val_comp_iter(_Iter_comp_iter< _Compare> __comp)
# 180 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Val_comp_iter< _Compare> )((__comp._M_comp))); }
# 182 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Value>
# 183 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_equals_val {
# 185 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Value &_M_value;
# 187 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_equals_val(_Value &__value) : _M_value(__value)
# 189 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 191 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator> bool
# 193 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it)
# 194 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (*__it) == (_M_value); }
# 195 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 197 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Value> inline _Iter_equals_val< _Value>
# 199 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_equals_val(_Value &__val)
# 200 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_equals_val< _Value> )(__val)); }
# 202 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator1>
# 203 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_equals_iter {
# 205 "/usr/include/c++/5/bits/predefined_ops.h" 3
typename std::iterator_traits< _Iterator1> ::reference _M_ref;
# 207 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_equals_iter(_Iterator1 __it1) : _M_ref(*__it1)
# 209 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 211 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator2> bool
# 213 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator2 __it2)
# 214 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (*__it2) == (_M_ref); }
# 215 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 217 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator> inline _Iter_equals_iter< _Iterator>
# 219 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_comp_iter(_Iter_equal_to_iter, _Iterator __it)
# 220 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_equals_iter< _Iterator> )(__it)); }
# 222 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Predicate>
# 223 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_pred {
# 225 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Predicate _M_pred;
# 227 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_pred(_Predicate __pred) : _M_pred(__pred)
# 229 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 231 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator> bool
# 233 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it)
# 234 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (bool)(_M_pred)(*__it); }
# 235 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 237 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Predicate> inline _Iter_pred< _Predicate>
# 239 "/usr/include/c++/5/bits/predefined_ops.h" 3
__pred_iter(_Predicate __pred)
# 240 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_pred< _Predicate> )(__pred)); }
# 242 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare, class _Value>
# 243 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_comp_to_val {
# 245 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Compare _M_comp;
# 246 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Value &_M_value;
# 248 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_comp_to_val(_Compare __comp, _Value &__value) : _M_comp(__comp), _M_value(__value)
# 250 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 252 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator> bool
# 254 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it)
# 255 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(*__it, _M_value); }
# 256 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 258 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare, class _Value> _Iter_comp_to_val< _Compare, _Value>
# 260 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_comp_val(_Compare __comp, _Value &__val)
# 261 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_comp_to_val< _Compare, _Value> (__comp, __val); }
# 263 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare, class _Iterator1>
# 264 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_comp_to_iter {
# 266 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Compare _M_comp;
# 267 "/usr/include/c++/5/bits/predefined_ops.h" 3
typename std::iterator_traits< _Iterator1> ::reference _M_ref;
# 269 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_comp_to_iter(_Compare __comp, _Iterator1 __it1) : _M_comp(__comp), _M_ref(*__it1)
# 271 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 273 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator2> bool
# 275 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator2 __it2)
# 276 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(*__it2, _M_ref); }
# 277 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 279 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare, class _Iterator> inline _Iter_comp_to_iter< _Compare, _Iterator>
# 281 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_comp_iter(_Iter_comp_iter< _Compare> __comp, _Iterator __it)
# 282 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_comp_to_iter< _Compare, _Iterator> ((__comp._M_comp), __it); }
# 284 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Predicate>
# 285 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_negate {
# 287 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Predicate _M_pred;
# 289 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_negate(_Predicate __pred) : _M_pred(__pred)
# 291 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 293 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator> bool
# 295 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it)
# 296 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return !((bool)(_M_pred)(*__it)); }
# 297 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 299 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Predicate> inline _Iter_negate< _Predicate>
# 301 "/usr/include/c++/5/bits/predefined_ops.h" 3
__negate(_Iter_pred< _Predicate> __pred)
# 302 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_negate< _Predicate> )((__pred._M_pred))); }
# 304 "/usr/include/c++/5/bits/predefined_ops.h" 3
}
# 305 "/usr/include/c++/5/bits/predefined_ops.h" 3
}
# 73 "/usr/include/c++/5/bits/stl_algobase.h" 3
namespace std __attribute((__visibility__("default"))) {
# 81 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _BoolType>
# 82 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __iter_swap {
# 84 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator1, class _ForwardIterator2> static void
# 86 "/usr/include/c++/5/bits/stl_algobase.h" 3
iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
# 87 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 89 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _ForwardIterator1> ::value_type _ValueType1;
# 90 "/usr/include/c++/5/bits/stl_algobase.h" 3
_ValueType1 __tmp = *__a;
# 91 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__a) = (*__b);
# 92 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__b) = __tmp;
# 93 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 94 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 97 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __iter_swap< true> {
# 99 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator1, class _ForwardIterator2> static void
# 101 "/usr/include/c++/5/bits/stl_algobase.h" 3
iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
# 102 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 103 "/usr/include/c++/5/bits/stl_algobase.h" 3
swap(*__a, *__b);
# 104 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 105 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 118 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator1, class _ForwardIterator2> inline void
# 120 "/usr/include/c++/5/bits/stl_algobase.h" 3
iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
# 121 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 130 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _ForwardIterator1> ::value_type _ValueType1;
# 132 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _ForwardIterator2> ::value_type _ValueType2;
# 140 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _ForwardIterator1> ::reference _ReferenceType1;
# 142 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _ForwardIterator2> ::reference _ReferenceType2;
# 143 "/usr/include/c++/5/bits/stl_algobase.h" 3
std::__iter_swap< __are_same< typename iterator_traits< _ForwardIterator1> ::value_type, typename iterator_traits< _ForwardIterator2> ::value_type> ::__value && __are_same< typename iterator_traits< _ForwardIterator1> ::value_type &, typename iterator_traits< _ForwardIterator1> ::reference> ::__value && __are_same< typename iterator_traits< _ForwardIterator2> ::value_type &, typename iterator_traits< _ForwardIterator2> ::reference> ::__value> ::iter_swap(__a, __b);
# 150 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 164 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator1, class _ForwardIterator2> _ForwardIterator2
# 166 "/usr/include/c++/5/bits/stl_algobase.h" 3
swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2
# 167 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2)
# 168 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 174 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 176 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first1 != __last1; (++__first1), (++__first2)) {
# 177 "/usr/include/c++/5/bits/stl_algobase.h" 3
std::iter_swap(__first1, __first2); }
# 178 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __first2;
# 179 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 192 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp> inline const _Tp &
# 195 "/usr/include/c++/5/bits/stl_algobase.h" 3
min(const _Tp &__a, const _Tp &__b)
# 196 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 200 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__b < __a) {
# 201 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __b; }
# 202 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __a;
# 203 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 216 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp> inline const _Tp &
# 219 "/usr/include/c++/5/bits/stl_algobase.h" 3
max(const _Tp &__a, const _Tp &__b)
# 220 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 224 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__a < __b) {
# 225 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __b; }
# 226 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __a;
# 227 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 240 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp, class _Compare> inline const _Tp &
# 243 "/usr/include/c++/5/bits/stl_algobase.h" 3
min(const _Tp &__a, const _Tp &__b, _Compare __comp)
# 244 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 246 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__comp(__b, __a)) {
# 247 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __b; }
# 248 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __a;
# 249 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 262 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp, class _Compare> inline const _Tp &
# 265 "/usr/include/c++/5/bits/stl_algobase.h" 3
max(const _Tp &__a, const _Tp &__b, _Compare __comp)
# 266 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 268 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__comp(__a, __b)) {
# 269 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __b; }
# 270 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __a;
# 271 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 275 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Iterator>
# 276 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct _Niter_base : public _Iter_base< _Iterator, __is_normal_iterator< _Iterator> ::__value> {
# 278 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 280 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Iterator> inline typename _Niter_base< _Iterator> ::iterator_type
# 282 "/usr/include/c++/5/bits/stl_algobase.h" 3
__niter_base(_Iterator __it)
# 283 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return std::_Niter_base< _Iterator> ::_S_base(__it); }
# 286 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Iterator>
# 287 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct _Miter_base : public _Iter_base< _Iterator, __is_move_iterator< _Iterator> ::__value> {
# 289 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 291 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Iterator> inline typename _Miter_base< _Iterator> ::iterator_type
# 293 "/usr/include/c++/5/bits/stl_algobase.h" 3
__miter_base(_Iterator __it)
# 294 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return std::_Miter_base< _Iterator> ::_S_base(__it); }
# 302 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool , bool , class >
# 303 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __copy_move {
# 305 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II, class _OI> static _OI
# 307 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_m(_II __first, _II __last, _OI __result)
# 308 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 309 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first != __last; (++__result), (++__first)) {
# 310 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__result) = (*__first); }
# 311 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 312 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 313 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 331 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __copy_move< false, false, random_access_iterator_tag> {
# 333 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II, class _OI> static _OI
# 335 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_m(_II __first, _II __last, _OI __result)
# 336 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 337 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II> ::difference_type _Distance;
# 338 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (_Distance __n = __last - __first; __n > 0; --__n)
# 339 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 340 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__result) = (*__first);
# 341 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__first;
# 342 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__result;
# 343 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 344 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 345 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 346 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 368 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove>
# 369 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __copy_move< _IsMove, true, random_access_iterator_tag> {
# 371 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp> static _Tp *
# 373 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_m(const _Tp *__first, const _Tp *__last, _Tp *__result)
# 374 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 382 "/usr/include/c++/5/bits/stl_algobase.h" 3
const ptrdiff_t _Num = __last - __first;
# 383 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (_Num) {
# 384 "/usr/include/c++/5/bits/stl_algobase.h" 3
__builtin_memmove(__result, __first, sizeof(_Tp) * _Num); }
# 385 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result + _Num;
# 386 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 387 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 389 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _II, class _OI> inline _OI
# 391 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_a(_II __first, _II __last, _OI __result)
# 392 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 393 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II> ::value_type _ValueTypeI;
# 394 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _OI> ::value_type _ValueTypeO;
# 395 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II> ::iterator_category _Category;
# 396 "/usr/include/c++/5/bits/stl_algobase.h" 3
const bool __simple = (__is_trivial(_ValueTypeI) && __is_pointer< _II> ::__value && __is_pointer< _OI> ::__value && __are_same< typename iterator_traits< _II> ::value_type, typename iterator_traits< _OI> ::value_type> ::__value);
# 401 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__copy_move< _IsMove, __simple, typename iterator_traits< _II> ::iterator_category> ::__copy_m(__first, __last, __result);
# 403 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 407 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _CharT> struct char_traits;
# 410 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class istreambuf_iterator;
# 413 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class ostreambuf_iterator;
# 416 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type __copy_move_a2(_CharT *, _CharT *, ostreambuf_iterator< _CharT, char_traits< _CharT> > );
# 422 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type __copy_move_a2(const _CharT *, const _CharT *, ostreambuf_iterator< _CharT, char_traits< _CharT> > );
# 428 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, _CharT *> ::__type __copy_move_a2(istreambuf_iterator< _CharT, char_traits< _CharT> > , istreambuf_iterator< _CharT, char_traits< _CharT> > , _CharT *);
# 434 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _II, class _OI> inline _OI
# 436 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_a2(_II __first, _II __last, _OI __result)
# 437 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 438 "/usr/include/c++/5/bits/stl_algobase.h" 3
return (_OI)std::__copy_move_a< _IsMove> (std::__niter_base(__first), std::__niter_base(__last), std::__niter_base(__result));
# 441 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 460 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II, class _OI> inline _OI
# 462 "/usr/include/c++/5/bits/stl_algobase.h" 3
copy(_II __first, _II __last, _OI __result)
# 463 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 468 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 470 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__copy_move_a2< __is_move_iterator< _II> ::__value> (std::__miter_base(__first), std::__miter_base(__last), __result);
# 473 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 512 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool , bool , class >
# 513 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __copy_move_backward {
# 515 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> static _BI2
# 517 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
# 518 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 519 "/usr/include/c++/5/bits/stl_algobase.h" 3
while (__first != __last) {
# 520 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*(--__result)) = (*(--__last)); }
# 521 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 522 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 523 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 541 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __copy_move_backward< false, false, random_access_iterator_tag> {
# 543 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> static _BI2
# 545 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
# 546 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 547 "/usr/include/c++/5/bits/stl_algobase.h" 3
typename iterator_traits< _BI1> ::difference_type __n;
# 548 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (__n = (__last - __first); __n > 0; --__n) {
# 549 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*(--__result)) = (*(--__last)); }
# 550 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 551 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 552 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 570 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove>
# 571 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __copy_move_backward< _IsMove, true, random_access_iterator_tag> {
# 573 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp> static _Tp *
# 575 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_b(const _Tp *__first, const _Tp *__last, _Tp *__result)
# 576 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 584 "/usr/include/c++/5/bits/stl_algobase.h" 3
const ptrdiff_t _Num = __last - __first;
# 585 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (_Num) {
# 586 "/usr/include/c++/5/bits/stl_algobase.h" 3
__builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num); }
# 587 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result - _Num;
# 588 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 589 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 591 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _BI1, class _BI2> inline _BI2
# 593 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
# 594 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 595 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _BI1> ::value_type _ValueType1;
# 596 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _BI2> ::value_type _ValueType2;
# 597 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _BI1> ::iterator_category _Category;
# 598 "/usr/include/c++/5/bits/stl_algobase.h" 3
const bool __simple = (__is_trivial(_ValueType1) && __is_pointer< _BI1> ::__value && __is_pointer< _BI2> ::__value && __are_same< typename iterator_traits< _BI1> ::value_type, typename iterator_traits< _BI2> ::value_type> ::__value);
# 603 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__copy_move_backward< _IsMove, __simple, typename iterator_traits< _BI1> ::iterator_category> ::__copy_move_b(__first, __last, __result);
# 607 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 609 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _BI1, class _BI2> inline _BI2
# 611 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
# 612 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 613 "/usr/include/c++/5/bits/stl_algobase.h" 3
return (_BI2)std::__copy_move_backward_a< _IsMove> (std::__niter_base(__first), std::__niter_base(__last), std::__niter_base(__result));
# 616 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 636 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> inline _BI2
# 638 "/usr/include/c++/5/bits/stl_algobase.h" 3
copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
# 639 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 646 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 648 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__copy_move_backward_a2< __is_move_iterator< _BI1> ::__value> (std::__miter_base(__first), std::__miter_base(__last), __result);
# 651 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 694 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline typename __gnu_cxx::__enable_if< !__is_scalar< _Tp> ::__value, void> ::__type
# 697 "/usr/include/c++/5/bits/stl_algobase.h" 3
__fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 698 "/usr/include/c++/5/bits/stl_algobase.h" 3
__value)
# 699 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 700 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first != __last; ++__first) {
# 701 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__first) = __value; }
# 702 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 704 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline typename __gnu_cxx::__enable_if< __is_scalar< _Tp> ::__value, void> ::__type
# 707 "/usr/include/c++/5/bits/stl_algobase.h" 3
__fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 708 "/usr/include/c++/5/bits/stl_algobase.h" 3
__value)
# 709 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 710 "/usr/include/c++/5/bits/stl_algobase.h" 3
const _Tp __tmp = __value;
# 711 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first != __last; ++__first) {
# 712 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__first) = __tmp; }
# 713 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 716 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_byte< _Tp> ::__value, void> ::__type
# 719 "/usr/include/c++/5/bits/stl_algobase.h" 3
__fill_a(_Tp *__first, _Tp *__last, const _Tp &__c)
# 720 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 721 "/usr/include/c++/5/bits/stl_algobase.h" 3
const _Tp __tmp = __c;
# 722 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (const size_t __len = __last - __first) {
# 723 "/usr/include/c++/5/bits/stl_algobase.h" 3
__builtin_memset(__first, static_cast< unsigned char>(__tmp), __len); }
# 724 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 738 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline void
# 740 "/usr/include/c++/5/bits/stl_algobase.h" 3
fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value)
# 741 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 745 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 747 "/usr/include/c++/5/bits/stl_algobase.h" 3
std::__fill_a(std::__niter_base(__first), std::__niter_base(__last), __value);
# 749 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 751 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _OutputIterator, class _Size, class _Tp> inline typename __gnu_cxx::__enable_if< !__is_scalar< _Tp> ::__value, _OutputIterator> ::__type
# 754 "/usr/include/c++/5/bits/stl_algobase.h" 3
__fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value)
# 755 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 756 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (__decltype((__n + 0)) __niter = __n; __niter > 0; (--__niter), (++__first)) {
# 758 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__first) = __value; }
# 759 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __first;
# 760 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 762 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _OutputIterator, class _Size, class _Tp> inline typename __gnu_cxx::__enable_if< __is_scalar< _Tp> ::__value, _OutputIterator> ::__type
# 765 "/usr/include/c++/5/bits/stl_algobase.h" 3
__fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value)
# 766 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 767 "/usr/include/c++/5/bits/stl_algobase.h" 3
const _Tp __tmp = __value;
# 768 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (__decltype((__n + 0)) __niter = __n; __niter > 0; (--__niter), (++__first)) {
# 770 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__first) = __tmp; }
# 771 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __first;
# 772 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 774 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Size, class _Tp> inline typename __gnu_cxx::__enable_if< __is_byte< _Tp> ::__value, _Tp *> ::__type
# 777 "/usr/include/c++/5/bits/stl_algobase.h" 3
__fill_n_a(_Tp *__first, _Size __n, const _Tp &__c)
# 778 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 779 "/usr/include/c++/5/bits/stl_algobase.h" 3
std::__fill_a(__first, __first + __n, __c);
# 780 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __first + __n;
# 781 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 798 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _OI, class _Size, class _Tp> inline _OI
# 800 "/usr/include/c++/5/bits/stl_algobase.h" 3
fill_n(_OI __first, _Size __n, const _Tp &__value)
# 801 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 805 "/usr/include/c++/5/bits/stl_algobase.h" 3
return (_OI)std::__fill_n_a(std::__niter_base(__first), __n, __value);
# 806 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 808 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _BoolType>
# 809 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __equal {
# 811 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> static bool
# 813 "/usr/include/c++/5/bits/stl_algobase.h" 3
equal(_II1 __first1, _II1 __last1, _II2 __first2)
# 814 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 815 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first1 != __last1; (++__first1), (++__first2)) {
# 816 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (!((*__first1) == (*__first2))) {
# 817 "/usr/include/c++/5/bits/stl_algobase.h" 3
return false; } }
# 818 "/usr/include/c++/5/bits/stl_algobase.h" 3
return true;
# 819 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 820 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 823 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __equal< true> {
# 825 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp> static bool
# 827 "/usr/include/c++/5/bits/stl_algobase.h" 3
equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2)
# 828 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 829 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (const size_t __len = __last1 - __first1) {
# 830 "/usr/include/c++/5/bits/stl_algobase.h" 3
return !(__builtin_memcmp(__first1, __first2, sizeof(_Tp) * __len)); }
# 831 "/usr/include/c++/5/bits/stl_algobase.h" 3
return true;
# 832 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 833 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 835 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 837 "/usr/include/c++/5/bits/stl_algobase.h" 3
__equal_aux(_II1 __first1, _II1 __last1, _II2 __first2)
# 838 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 839 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II1> ::value_type _ValueType1;
# 840 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II2> ::value_type _ValueType2;
# 841 "/usr/include/c++/5/bits/stl_algobase.h" 3
const bool __simple = ((__is_integer< typename iterator_traits< _II1> ::value_type> ::__value || __is_pointer< typename iterator_traits< _II1> ::value_type> ::__value) && __is_pointer< _II1> ::__value && __is_pointer< _II2> ::__value && __are_same< typename iterator_traits< _II1> ::value_type, typename iterator_traits< _II2> ::value_type> ::__value);
# 847 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__equal< __simple> ::equal(__first1, __last1, __first2);
# 848 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 850 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class , class >
# 851 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __lc_rai {
# 853 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> static _II1
# 855 "/usr/include/c++/5/bits/stl_algobase.h" 3
__newlast1(_II1, _II1 __last1, _II2, _II2)
# 856 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return __last1; }
# 858 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II> static bool
# 860 "/usr/include/c++/5/bits/stl_algobase.h" 3
__cnd2(_II __first, _II __last)
# 861 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return __first != __last; }
# 862 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 865 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __lc_rai< random_access_iterator_tag, random_access_iterator_tag> {
# 867 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _RAI1, class _RAI2> static _RAI1
# 869 "/usr/include/c++/5/bits/stl_algobase.h" 3
__newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2
# 870 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _RAI2 __last2)
# 871 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 873 "/usr/include/c++/5/bits/stl_algobase.h" 3
const typename iterator_traits< _RAI1> ::difference_type __diff1 = __last1 - __first1;
# 875 "/usr/include/c++/5/bits/stl_algobase.h" 3
const typename iterator_traits< _RAI2> ::difference_type __diff2 = __last2 - __first2;
# 876 "/usr/include/c++/5/bits/stl_algobase.h" 3
return (__diff2 < __diff1) ? __first1 + __diff2 : __last1;
# 877 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 879 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _RAI> static bool
# 881 "/usr/include/c++/5/bits/stl_algobase.h" 3
__cnd2(_RAI, _RAI)
# 882 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return true; }
# 883 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 885 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2, class _Compare> bool
# 887 "/usr/include/c++/5/bits/stl_algobase.h" 3
__lexicographical_compare_impl(_II1 __first1, _II1 __last1, _II2
# 888 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _II2 __last2, _Compare
# 889 "/usr/include/c++/5/bits/stl_algobase.h" 3
__comp)
# 890 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 891 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II1> ::iterator_category _Category1;
# 892 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II2> ::iterator_category _Category2;
# 893 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef __lc_rai< typename iterator_traits< _II1> ::iterator_category, typename iterator_traits< _II2> ::iterator_category> __rai_type;
# 895 "/usr/include/c++/5/bits/stl_algobase.h" 3
__last1 = __rai_type::__newlast1(__first1, __last1, __first2, __last2);
# 896 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; (__first1 != __last1) && __rai_type::__cnd2(__first2, __last2); (++__first1), (++__first2))
# 898 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 899 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__comp(__first1, __first2)) {
# 900 "/usr/include/c++/5/bits/stl_algobase.h" 3
return true; }
# 901 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__comp(__first2, __first1)) {
# 902 "/usr/include/c++/5/bits/stl_algobase.h" 3
return false; }
# 903 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 904 "/usr/include/c++/5/bits/stl_algobase.h" 3
return (__first1 == __last1) && (__first2 != __last2);
# 905 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 907 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _BoolType>
# 908 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __lexicographical_compare {
# 910 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> static bool __lc(_II1, _II1, _II2, _II2);
# 912 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 914 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _BoolType>
# 915 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> bool
# 918 "/usr/include/c++/5/bits/stl_algobase.h" 3
__lexicographical_compare< _BoolType> ::__lc(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2)
# 919 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 920 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__lexicographical_compare_impl(__first1, __last1, __first2, __last2, __gnu_cxx::__ops::__iter_less_iter());
# 923 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 926 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __lexicographical_compare< true> {
# 928 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp, class _Up> static bool
# 930 "/usr/include/c++/5/bits/stl_algobase.h" 3
__lc(const _Tp *__first1, const _Tp *__last1, const _Up *
# 931 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, const _Up *__last2)
# 932 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 933 "/usr/include/c++/5/bits/stl_algobase.h" 3
const size_t __len1 = __last1 - __first1;
# 934 "/usr/include/c++/5/bits/stl_algobase.h" 3
const size_t __len2 = __last2 - __first2;
# 935 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (const size_t __len = std::min(__len1, __len2)) {
# 936 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (int __result = __builtin_memcmp(__first1, __first2, __len)) {
# 937 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result < 0; } }
# 938 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __len1 < __len2;
# 939 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 940 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 942 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 944 "/usr/include/c++/5/bits/stl_algobase.h" 3
__lexicographical_compare_aux(_II1 __first1, _II1 __last1, _II2
# 945 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _II2 __last2)
# 946 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 947 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II1> ::value_type _ValueType1;
# 948 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II2> ::value_type _ValueType2;
# 949 "/usr/include/c++/5/bits/stl_algobase.h" 3
const bool __simple = (__is_byte< typename iterator_traits< _II1> ::value_type> ::__value && __is_byte< typename iterator_traits< _II2> ::value_type> ::__value && (!__gnu_cxx::__numeric_traits< typename iterator_traits< _II1> ::value_type> ::__is_signed) && (!__gnu_cxx::__numeric_traits< typename iterator_traits< _II2> ::value_type> ::__is_signed) && __is_pointer< _II1> ::__value && __is_pointer< _II2> ::__value);
# 956 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__lexicographical_compare< __simple> ::__lc(__first1, __last1, __first2, __last2);
# 958 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 960 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp, class _Compare> _ForwardIterator
# 962 "/usr/include/c++/5/bits/stl_algobase.h" 3
__lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 963 "/usr/include/c++/5/bits/stl_algobase.h" 3
__val, _Compare __comp)
# 964 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 966 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _ForwardIterator> ::difference_type _DistanceType;
# 968 "/usr/include/c++/5/bits/stl_algobase.h" 3
_DistanceType __len = std::distance(__first, __last);
# 970 "/usr/include/c++/5/bits/stl_algobase.h" 3
while (__len > 0)
# 971 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 972 "/usr/include/c++/5/bits/stl_algobase.h" 3
_DistanceType __half = __len >> 1;
# 973 "/usr/include/c++/5/bits/stl_algobase.h" 3
_ForwardIterator __middle = __first;
# 974 "/usr/include/c++/5/bits/stl_algobase.h" 3
std::advance(__middle, __half);
# 975 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__comp(__middle, __val))
# 976 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 977 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first = __middle;
# 978 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__first;
# 979 "/usr/include/c++/5/bits/stl_algobase.h" 3
__len = ((__len - __half) - 1);
# 980 "/usr/include/c++/5/bits/stl_algobase.h" 3
} else {
# 982 "/usr/include/c++/5/bits/stl_algobase.h" 3
__len = __half; }
# 983 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 984 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __first;
# 985 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 998 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline _ForwardIterator
# 1000 "/usr/include/c++/5/bits/stl_algobase.h" 3
lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 1001 "/usr/include/c++/5/bits/stl_algobase.h" 3
__val)
# 1002 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1007 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1009 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__lower_bound(__first, __last, __val, __gnu_cxx::__ops::__iter_less_val());
# 1011 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1016 "/usr/include/c++/5/bits/stl_algobase.h" 3
inline int __lg(int __n)
# 1017 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return ((sizeof(int) * (8)) - (1)) - (__builtin_clz(__n)); }
# 1020 "/usr/include/c++/5/bits/stl_algobase.h" 3
inline unsigned __lg(unsigned __n)
# 1021 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return ((sizeof(int) * (8)) - (1)) - (__builtin_clz(__n)); }
# 1024 "/usr/include/c++/5/bits/stl_algobase.h" 3
inline long __lg(long __n)
# 1025 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return ((sizeof(long) * (8)) - (1)) - (__builtin_clzl(__n)); }
# 1028 "/usr/include/c++/5/bits/stl_algobase.h" 3
inline unsigned long __lg(unsigned long __n)
# 1029 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return ((sizeof(long) * (8)) - (1)) - (__builtin_clzl(__n)); }
# 1032 "/usr/include/c++/5/bits/stl_algobase.h" 3
inline long long __lg(long long __n)
# 1033 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return ((sizeof(long long) * (8)) - (1)) - (__builtin_clzll(__n)); }
# 1036 "/usr/include/c++/5/bits/stl_algobase.h" 3
inline unsigned long long __lg(unsigned long long __n)
# 1037 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return ((sizeof(long long) * (8)) - (1)) - (__builtin_clzll(__n)); }
# 1055 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 1057 "/usr/include/c++/5/bits/stl_algobase.h" 3
equal(_II1 __first1, _II1 __last1, _II2 __first2)
# 1058 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1065 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1067 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__equal_aux(std::__niter_base(__first1), std::__niter_base(__last1), std::__niter_base(__first2));
# 1070 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1087 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _IIter1, class _IIter2, class _BinaryPredicate> inline bool
# 1089 "/usr/include/c++/5/bits/stl_algobase.h" 3
equal(_IIter1 __first1, _IIter1 __last1, _IIter2
# 1090 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _BinaryPredicate __binary_pred)
# 1091 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1095 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1097 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first1 != __last1; (++__first1), (++__first2)) {
# 1098 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (!((bool)__binary_pred(*__first1, *__first2))) {
# 1099 "/usr/include/c++/5/bits/stl_algobase.h" 3
return false; } }
# 1100 "/usr/include/c++/5/bits/stl_algobase.h" 3
return true;
# 1101 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1215 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 1217 "/usr/include/c++/5/bits/stl_algobase.h" 3
lexicographical_compare(_II1 __first1, _II1 __last1, _II2
# 1218 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _II2 __last2)
# 1219 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1229 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1230 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1232 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__lexicographical_compare_aux(std::__niter_base(__first1), std::__niter_base(__last1), std::__niter_base(__first2), std::__niter_base(__last2));
# 1236 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1251 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2, class _Compare> inline bool
# 1253 "/usr/include/c++/5/bits/stl_algobase.h" 3
lexicographical_compare(_II1 __first1, _II1 __last1, _II2
# 1254 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _II2 __last2, _Compare __comp)
# 1255 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1259 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1260 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1262 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__lexicographical_compare_impl(__first1, __last1, __first2, __last2, __gnu_cxx::__ops::__iter_comp_iter(__comp));
# 1265 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1267 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 1268 "/usr/include/c++/5/bits/stl_algobase.h" 3
_BinaryPredicate> pair< _InputIterator1, _InputIterator2>
# 1270 "/usr/include/c++/5/bits/stl_algobase.h" 3
__mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 1271 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _BinaryPredicate __binary_pred)
# 1272 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1273 "/usr/include/c++/5/bits/stl_algobase.h" 3
while ((__first1 != __last1) && __binary_pred(__first1, __first2))
# 1274 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1275 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__first1;
# 1276 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__first2;
# 1277 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1278 "/usr/include/c++/5/bits/stl_algobase.h" 3
return pair< _InputIterator1, _InputIterator2> (__first1, __first2);
# 1279 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1294 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _InputIterator1, class _InputIterator2> inline pair< _InputIterator1, _InputIterator2>
# 1296 "/usr/include/c++/5/bits/stl_algobase.h" 3
mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 1297 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2)
# 1298 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1305 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1307 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__mismatch(__first1, __last1, __first2, __gnu_cxx::__ops::__iter_equal_to_iter());
# 1309 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1327 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 1328 "/usr/include/c++/5/bits/stl_algobase.h" 3
_BinaryPredicate> inline pair< _InputIterator1, _InputIterator2>
# 1330 "/usr/include/c++/5/bits/stl_algobase.h" 3
mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 1331 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _BinaryPredicate __binary_pred)
# 1332 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1336 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1338 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__mismatch(__first1, __last1, __first2, __gnu_cxx::__ops::__iter_comp_iter(__binary_pred));
# 1340 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1428 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 43 "/usr/include/c++/5/bits/char_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 57 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT>
# 58 "/usr/include/c++/5/bits/char_traits.h" 3
struct _Char_types {
# 60 "/usr/include/c++/5/bits/char_traits.h" 3
typedef unsigned long int_type;
# 61 "/usr/include/c++/5/bits/char_traits.h" 3
typedef std::streampos pos_type;
# 62 "/usr/include/c++/5/bits/char_traits.h" 3
typedef std::streamoff off_type;
# 63 "/usr/include/c++/5/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 64 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 82 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT>
# 83 "/usr/include/c++/5/bits/char_traits.h" 3
struct char_traits {
# 85 "/usr/include/c++/5/bits/char_traits.h" 3
typedef _CharT char_type;
# 86 "/usr/include/c++/5/bits/char_traits.h" 3
typedef typename _Char_types< _CharT> ::int_type int_type;
# 87 "/usr/include/c++/5/bits/char_traits.h" 3
typedef typename _Char_types< _CharT> ::pos_type pos_type;
# 88 "/usr/include/c++/5/bits/char_traits.h" 3
typedef typename _Char_types< _CharT> ::off_type off_type;
# 89 "/usr/include/c++/5/bits/char_traits.h" 3
typedef typename _Char_types< _CharT> ::state_type state_type;
# 92 "/usr/include/c++/5/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2)
# 93 "/usr/include/c++/5/bits/char_traits.h" 3
{ __c1 = __c2; }
# 96 "/usr/include/c++/5/bits/char_traits.h" 3
static bool eq(const char_type &__c1, const char_type &__c2)
# 97 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 100 "/usr/include/c++/5/bits/char_traits.h" 3
static bool lt(const char_type &__c1, const char_type &__c2)
# 101 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 104 "/usr/include/c++/5/bits/char_traits.h" 3
static int compare(const char_type * __s1, const char_type * __s2, std::size_t __n);
# 107 "/usr/include/c++/5/bits/char_traits.h" 3
static std::size_t length(const char_type * __s);
# 110 "/usr/include/c++/5/bits/char_traits.h" 3
static const char_type *find(const char_type * __s, std::size_t __n, const char_type & __a);
# 113 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *move(char_type * __s1, const char_type * __s2, std::size_t __n);
# 116 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *copy(char_type * __s1, const char_type * __s2, std::size_t __n);
# 119 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *assign(char_type * __s, std::size_t __n, char_type __a);
# 122 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type to_char_type(const int_type &__c)
# 123 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< char_type>(__c); }
# 126 "/usr/include/c++/5/bits/char_traits.h" 3
static int_type to_int_type(const char_type &__c)
# 127 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(__c); }
# 130 "/usr/include/c++/5/bits/char_traits.h" 3
static bool eq_int_type(const int_type &__c1, const int_type &__c2)
# 131 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 134 "/usr/include/c++/5/bits/char_traits.h" 3
static int_type eof()
# 135 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(-1); }
# 138 "/usr/include/c++/5/bits/char_traits.h" 3
static int_type not_eof(const int_type &__c)
# 139 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (!(eq_int_type)(__c, (eof)())) ? __c : (to_int_type)(char_type()); }
# 140 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 142 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT> int
# 145 "/usr/include/c++/5/bits/char_traits.h" 3
char_traits< _CharT> ::compare(const char_type *__s1, const char_type *__s2, std::size_t __n)
# 146 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 147 "/usr/include/c++/5/bits/char_traits.h" 3
for (std::size_t __i = (0); __i < __n; ++__i) {
# 148 "/usr/include/c++/5/bits/char_traits.h" 3
if ((lt)(__s1[__i], __s2[__i])) {
# 149 "/usr/include/c++/5/bits/char_traits.h" 3
return -1; } else {
# 150 "/usr/include/c++/5/bits/char_traits.h" 3
if ((lt)(__s2[__i], __s1[__i])) {
# 151 "/usr/include/c++/5/bits/char_traits.h" 3
return 1; } } }
# 152 "/usr/include/c++/5/bits/char_traits.h" 3
return 0;
# 153 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 155 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT> std::size_t
# 158 "/usr/include/c++/5/bits/char_traits.h" 3
char_traits< _CharT> ::length(const char_type *__p)
# 159 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 160 "/usr/include/c++/5/bits/char_traits.h" 3
std::size_t __i = (0);
# 161 "/usr/include/c++/5/bits/char_traits.h" 3
while (!(eq)(__p[__i], char_type())) {
# 162 "/usr/include/c++/5/bits/char_traits.h" 3
++__i; }
# 163 "/usr/include/c++/5/bits/char_traits.h" 3
return __i;
# 164 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 166 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT> const typename char_traits< _CharT> ::char_type *
# 169 "/usr/include/c++/5/bits/char_traits.h" 3
char_traits< _CharT> ::find(const char_type *__s, std::size_t __n, const char_type &__a)
# 170 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 171 "/usr/include/c++/5/bits/char_traits.h" 3
for (std::size_t __i = (0); __i < __n; ++__i) {
# 172 "/usr/include/c++/5/bits/char_traits.h" 3
if ((eq)(__s[__i], __a)) {
# 173 "/usr/include/c++/5/bits/char_traits.h" 3
return __s + __i; } }
# 174 "/usr/include/c++/5/bits/char_traits.h" 3
return 0;
# 175 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 177 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT> typename char_traits< _CharT> ::char_type *
# 180 "/usr/include/c++/5/bits/char_traits.h" 3
char_traits< _CharT> ::move(char_type *__s1, const char_type *__s2, std::size_t __n)
# 181 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 182 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< _CharT *>(__builtin_memmove(__s1, __s2, __n * sizeof(char_type)));
# 184 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 186 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT> typename char_traits< _CharT> ::char_type *
# 189 "/usr/include/c++/5/bits/char_traits.h" 3
char_traits< _CharT> ::copy(char_type *__s1, const char_type *__s2, std::size_t __n)
# 190 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 192 "/usr/include/c++/5/bits/char_traits.h" 3
std::copy(__s2, __s2 + __n, __s1);
# 193 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1;
# 194 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 196 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT> typename char_traits< _CharT> ::char_type *
# 199 "/usr/include/c++/5/bits/char_traits.h" 3
char_traits< _CharT> ::assign(char_type *__s, std::size_t __n, char_type __a)
# 200 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 202 "/usr/include/c++/5/bits/char_traits.h" 3
std::fill_n(__s, __n, __a);
# 203 "/usr/include/c++/5/bits/char_traits.h" 3
return __s;
# 204 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 207 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 209 "/usr/include/c++/5/bits/char_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 226 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT>
# 227 "/usr/include/c++/5/bits/char_traits.h" 3
struct char_traits : public __gnu_cxx::char_traits< _CharT> {
# 228 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 233 "/usr/include/c++/5/bits/char_traits.h" 3
template<> struct char_traits< char> {
# 235 "/usr/include/c++/5/bits/char_traits.h" 3
typedef char char_type;
# 236 "/usr/include/c++/5/bits/char_traits.h" 3
typedef int int_type;
# 237 "/usr/include/c++/5/bits/char_traits.h" 3
typedef streampos pos_type;
# 238 "/usr/include/c++/5/bits/char_traits.h" 3
typedef streamoff off_type;
# 239 "/usr/include/c++/5/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 242 "/usr/include/c++/5/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2)
# 243 "/usr/include/c++/5/bits/char_traits.h" 3
{ __c1 = __c2; }
# 246 "/usr/include/c++/5/bits/char_traits.h" 3
static bool eq(const char_type &__c1, const char_type &__c2)
# 247 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 250 "/usr/include/c++/5/bits/char_traits.h" 3
static bool lt(const char_type &__c1, const char_type &__c2)
# 251 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 253 "/usr/include/c++/5/bits/char_traits.h" 3
return (static_cast< unsigned char>(__c1)) < (static_cast< unsigned char>(__c2));
# 255 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 258 "/usr/include/c++/5/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 259 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 260 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 261 "/usr/include/c++/5/bits/char_traits.h" 3
return 0; }
# 262 "/usr/include/c++/5/bits/char_traits.h" 3
return __builtin_memcmp(__s1, __s2, __n);
# 263 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 266 "/usr/include/c++/5/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 267 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __builtin_strlen(__s); }
# 270 "/usr/include/c++/5/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 271 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 272 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 273 "/usr/include/c++/5/bits/char_traits.h" 3
return 0; }
# 274 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< const char_type *>(__builtin_memchr(__s, __a, __n));
# 275 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 278 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 279 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 280 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 281 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 282 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< char_type *>(__builtin_memmove(__s1, __s2, __n));
# 283 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 286 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 287 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 288 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 289 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 290 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< char_type *>(__builtin_memcpy(__s1, __s2, __n));
# 291 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 294 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 295 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 296 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 297 "/usr/include/c++/5/bits/char_traits.h" 3
return __s; }
# 298 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< char_type *>(__builtin_memset(__s, __a, __n));
# 299 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 302 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type to_char_type(const int_type &__c)
# 303 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< char_type>(__c); }
# 308 "/usr/include/c++/5/bits/char_traits.h" 3
static int_type to_int_type(const char_type &__c)
# 309 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(static_cast< unsigned char>(__c)); }
# 312 "/usr/include/c++/5/bits/char_traits.h" 3
static bool eq_int_type(const int_type &__c1, const int_type &__c2)
# 313 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 316 "/usr/include/c++/5/bits/char_traits.h" 3
static int_type eof()
# 317 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(-1); }
# 320 "/usr/include/c++/5/bits/char_traits.h" 3
static int_type not_eof(const int_type &__c)
# 321 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (__c == eof()) ? 0 : __c; }
# 322 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 328 "/usr/include/c++/5/bits/char_traits.h" 3
template<> struct char_traits< wchar_t> {
# 330 "/usr/include/c++/5/bits/char_traits.h" 3
typedef wchar_t char_type;
# 331 "/usr/include/c++/5/bits/char_traits.h" 3
typedef wint_t int_type;
# 332 "/usr/include/c++/5/bits/char_traits.h" 3
typedef streamoff off_type;
# 333 "/usr/include/c++/5/bits/char_traits.h" 3
typedef wstreampos pos_type;
# 334 "/usr/include/c++/5/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 337 "/usr/include/c++/5/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2)
# 338 "/usr/include/c++/5/bits/char_traits.h" 3
{ __c1 = __c2; }
# 341 "/usr/include/c++/5/bits/char_traits.h" 3
static bool eq(const char_type &__c1, const char_type &__c2)
# 342 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 345 "/usr/include/c++/5/bits/char_traits.h" 3
static bool lt(const char_type &__c1, const char_type &__c2)
# 346 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 349 "/usr/include/c++/5/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 350 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 351 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 352 "/usr/include/c++/5/bits/char_traits.h" 3
return 0; }
# 353 "/usr/include/c++/5/bits/char_traits.h" 3
return wmemcmp(__s1, __s2, __n);
# 354 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 357 "/usr/include/c++/5/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 358 "/usr/include/c++/5/bits/char_traits.h" 3
{ return wcslen(__s); }
# 361 "/usr/include/c++/5/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 362 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 363 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 364 "/usr/include/c++/5/bits/char_traits.h" 3
return 0; }
# 365 "/usr/include/c++/5/bits/char_traits.h" 3
return wmemchr(__s, __a, __n);
# 366 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 369 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 370 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 371 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 372 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 373 "/usr/include/c++/5/bits/char_traits.h" 3
return wmemmove(__s1, __s2, __n);
# 374 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 377 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 378 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 379 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 380 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 381 "/usr/include/c++/5/bits/char_traits.h" 3
return wmemcpy(__s1, __s2, __n);
# 382 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 385 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 386 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 387 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 388 "/usr/include/c++/5/bits/char_traits.h" 3
return __s; }
# 389 "/usr/include/c++/5/bits/char_traits.h" 3
return wmemset(__s, __a, __n);
# 390 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 393 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type to_char_type(const int_type &__c)
# 394 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (char_type)__c; }
# 397 "/usr/include/c++/5/bits/char_traits.h" 3
static int_type to_int_type(const char_type &__c)
# 398 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (int_type)__c; }
# 401 "/usr/include/c++/5/bits/char_traits.h" 3
static bool eq_int_type(const int_type &__c1, const int_type &__c2)
# 402 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 405 "/usr/include/c++/5/bits/char_traits.h" 3
static int_type eof()
# 406 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(4294967295U); }
# 409 "/usr/include/c++/5/bits/char_traits.h" 3
static int_type not_eof(const int_type &__c)
# 410 "/usr/include/c++/5/bits/char_traits.h" 3
{ return eq_int_type(__c, eof()) ? 0 : __c; }
# 411 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 415 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 31 "/usr/include/locale.h" 3
extern "C" {
# 53 "/usr/include/locale.h" 3
struct lconv {
# 57 "/usr/include/locale.h" 3
char *decimal_point;
# 58 "/usr/include/locale.h" 3
char *thousands_sep;
# 64 "/usr/include/locale.h" 3
char *grouping;
# 70 "/usr/include/locale.h" 3
char *int_curr_symbol;
# 71 "/usr/include/locale.h" 3
char *currency_symbol;
# 72 "/usr/include/locale.h" 3
char *mon_decimal_point;
# 73 "/usr/include/locale.h" 3
char *mon_thousands_sep;
# 74 "/usr/include/locale.h" 3
char *mon_grouping;
# 75 "/usr/include/locale.h" 3
char *positive_sign;
# 76 "/usr/include/locale.h" 3
char *negative_sign;
# 77 "/usr/include/locale.h" 3
char int_frac_digits;
# 78 "/usr/include/locale.h" 3
char frac_digits;
# 80 "/usr/include/locale.h" 3
char p_cs_precedes;
# 82 "/usr/include/locale.h" 3
char p_sep_by_space;
# 84 "/usr/include/locale.h" 3
char n_cs_precedes;
# 86 "/usr/include/locale.h" 3
char n_sep_by_space;
# 93 "/usr/include/locale.h" 3
char p_sign_posn;
# 94 "/usr/include/locale.h" 3
char n_sign_posn;
# 97 "/usr/include/locale.h" 3
char int_p_cs_precedes;
# 99 "/usr/include/locale.h" 3
char int_p_sep_by_space;
# 101 "/usr/include/locale.h" 3
char int_n_cs_precedes;
# 103 "/usr/include/locale.h" 3
char int_n_sep_by_space;
# 110 "/usr/include/locale.h" 3
char int_p_sign_posn;
# 111 "/usr/include/locale.h" 3
char int_n_sign_posn;
# 120 "/usr/include/locale.h" 3
};
# 124 "/usr/include/locale.h" 3
extern char *setlocale(int __category, const char * __locale) throw();
# 127 "/usr/include/locale.h" 3
extern lconv *localeconv() throw();
# 151 "/usr/include/locale.h" 3
extern __locale_t newlocale(int __category_mask, const char * __locale, __locale_t __base) throw();
# 186 "/usr/include/locale.h" 3
extern __locale_t duplocale(__locale_t __dataset) throw();
# 190 "/usr/include/locale.h" 3
extern void freelocale(__locale_t __dataset) throw();
# 197 "/usr/include/locale.h" 3
extern __locale_t uselocale(__locale_t __dataset) throw();
# 205 "/usr/include/locale.h" 3
}
# 51 "/usr/include/c++/5/clocale" 3
namespace std {
# 53 "/usr/include/c++/5/clocale" 3
using ::lconv;
# 54 "/usr/include/c++/5/clocale" 3
using ::setlocale;
# 55 "/usr/include/c++/5/clocale" 3
using ::localeconv;
# 56 "/usr/include/c++/5/clocale" 3
}
# 48 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 52 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
extern "C" __typeof__(uselocale) __uselocale;
# 55 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
}
# 58 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
namespace std __attribute((__visibility__("default"))) {
# 62 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
typedef __locale_t __c_locale;
# 69 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
inline int __convert_from_v(const __c_locale &__cloc __attribute((__unused__)), char *
# 70 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__out, const int
# 71 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__size __attribute((__unused__)), const char *
# 72 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__fmt, ...)
# 73 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
{
# 75 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__c_locale __old = __gnu_cxx::__uselocale(__cloc);
# 88 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__builtin_va_list __args;
# 89 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__builtin_va_start((__args),__fmt);
# 92 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
# 97 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__builtin_va_end(__args);
# 100 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__gnu_cxx::__uselocale(__old);
# 108 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
return __ret;
# 109 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
}
# 112 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
}
# 28 "/usr/include/ctype.h" 3
extern "C" {
# 47 "/usr/include/ctype.h" 3
enum {
# 48 "/usr/include/ctype.h" 3
_ISupper = 256,
# 49 "/usr/include/ctype.h" 3
_ISlower = 512,
# 50 "/usr/include/ctype.h" 3
_ISalpha = 1024,
# 51 "/usr/include/ctype.h" 3
_ISdigit = 2048,
# 52 "/usr/include/ctype.h" 3
_ISxdigit = 4096,
# 53 "/usr/include/ctype.h" 3
_ISspace = 8192,
# 54 "/usr/include/ctype.h" 3
_ISprint = 16384,
# 55 "/usr/include/ctype.h" 3
_ISgraph = 32768,
# 56 "/usr/include/ctype.h" 3
_ISblank = 1,
# 57 "/usr/include/ctype.h" 3
_IScntrl,
# 58 "/usr/include/ctype.h" 3
_ISpunct = 4,
# 59 "/usr/include/ctype.h" 3
_ISalnum = 8
# 60 "/usr/include/ctype.h" 3
};
# 79 "/usr/include/ctype.h" 3
extern const unsigned short **__ctype_b_loc() throw()
# 80 "/usr/include/ctype.h" 3
 __attribute((const));
# 81 "/usr/include/ctype.h" 3
extern const __int32_t **__ctype_tolower_loc() throw()
# 82 "/usr/include/ctype.h" 3
 __attribute((const));
# 83 "/usr/include/ctype.h" 3
extern const __int32_t **__ctype_toupper_loc() throw()
# 84 "/usr/include/ctype.h" 3
 __attribute((const));
# 110 "/usr/include/ctype.h" 3
extern int isalnum(int) throw();
# 111 "/usr/include/ctype.h" 3
extern int isalpha(int) throw();
# 112 "/usr/include/ctype.h" 3
extern int iscntrl(int) throw();
# 113 "/usr/include/ctype.h" 3
extern int isdigit(int) throw();
# 114 "/usr/include/ctype.h" 3
extern int islower(int) throw();
# 115 "/usr/include/ctype.h" 3
extern int isgraph(int) throw();
# 116 "/usr/include/ctype.h" 3
extern int isprint(int) throw();
# 117 "/usr/include/ctype.h" 3
extern int ispunct(int) throw();
# 118 "/usr/include/ctype.h" 3
extern int isspace(int) throw();
# 119 "/usr/include/ctype.h" 3
extern int isupper(int) throw();
# 120 "/usr/include/ctype.h" 3
extern int isxdigit(int) throw();
# 124 "/usr/include/ctype.h" 3
extern int tolower(int __c) throw();
# 127 "/usr/include/ctype.h" 3
extern int toupper(int __c) throw();
# 136 "/usr/include/ctype.h" 3
extern int isblank(int) throw();
# 143 "/usr/include/ctype.h" 3
extern int isctype(int __c, int __mask) throw();
# 150 "/usr/include/ctype.h" 3
extern int isascii(int __c) throw();
# 154 "/usr/include/ctype.h" 3
extern int toascii(int __c) throw();
# 158 "/usr/include/ctype.h" 3
extern int _toupper(int) throw();
# 159 "/usr/include/ctype.h" 3
extern int _tolower(int) throw();
# 271 "/usr/include/ctype.h" 3
extern int isalnum_l(int, __locale_t) throw();
# 272 "/usr/include/ctype.h" 3
extern int isalpha_l(int, __locale_t) throw();
# 273 "/usr/include/ctype.h" 3
extern int iscntrl_l(int, __locale_t) throw();
# 274 "/usr/include/ctype.h" 3
extern int isdigit_l(int, __locale_t) throw();
# 275 "/usr/include/ctype.h" 3
extern int islower_l(int, __locale_t) throw();
# 276 "/usr/include/ctype.h" 3
extern int isgraph_l(int, __locale_t) throw();
# 277 "/usr/include/ctype.h" 3
extern int isprint_l(int, __locale_t) throw();
# 278 "/usr/include/ctype.h" 3
extern int ispunct_l(int, __locale_t) throw();
# 279 "/usr/include/ctype.h" 3
extern int isspace_l(int, __locale_t) throw();
# 280 "/usr/include/ctype.h" 3
extern int isupper_l(int, __locale_t) throw();
# 281 "/usr/include/ctype.h" 3
extern int isxdigit_l(int, __locale_t) throw();
# 283 "/usr/include/ctype.h" 3
extern int isblank_l(int, __locale_t) throw();
# 287 "/usr/include/ctype.h" 3
extern int __tolower_l(int __c, __locale_t __l) throw();
# 288 "/usr/include/ctype.h" 3
extern int tolower_l(int __c, __locale_t __l) throw();
# 291 "/usr/include/ctype.h" 3
extern int __toupper_l(int __c, __locale_t __l) throw();
# 292 "/usr/include/ctype.h" 3
extern int toupper_l(int __c, __locale_t __l) throw();
# 347 "/usr/include/ctype.h" 3
}
# 62 "/usr/include/c++/5/cctype" 3
namespace std {
# 64 "/usr/include/c++/5/cctype" 3
using ::isalnum;
# 65 "/usr/include/c++/5/cctype" 3
using ::isalpha;
# 66 "/usr/include/c++/5/cctype" 3
using ::iscntrl;
# 67 "/usr/include/c++/5/cctype" 3
using ::isdigit;
# 68 "/usr/include/c++/5/cctype" 3
using ::isgraph;
# 69 "/usr/include/c++/5/cctype" 3
using ::islower;
# 70 "/usr/include/c++/5/cctype" 3
using ::isprint;
# 71 "/usr/include/c++/5/cctype" 3
using ::ispunct;
# 72 "/usr/include/c++/5/cctype" 3
using ::isspace;
# 73 "/usr/include/c++/5/cctype" 3
using ::isupper;
# 74 "/usr/include/c++/5/cctype" 3
using ::isxdigit;
# 75 "/usr/include/c++/5/cctype" 3
using ::tolower;
# 76 "/usr/include/c++/5/cctype" 3
using ::toupper;
# 77 "/usr/include/c++/5/cctype" 3
}
# 44 "/usr/include/c++/5/bits/localefwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 55 "/usr/include/c++/5/bits/localefwd.h" 3
class locale;
# 57 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _Facet> bool has_facet(const locale &) throw();
# 61 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _Facet> const _Facet &use_facet(const locale &);
# 66 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool isspace(_CharT, const locale &);
# 70 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool isprint(_CharT, const locale &);
# 74 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool iscntrl(_CharT, const locale &);
# 78 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool isupper(_CharT, const locale &);
# 82 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool islower(_CharT, const locale &);
# 86 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool isalpha(_CharT, const locale &);
# 90 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool isdigit(_CharT, const locale &);
# 94 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool ispunct(_CharT, const locale &);
# 98 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool isxdigit(_CharT, const locale &);
# 102 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool isalnum(_CharT, const locale &);
# 106 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool isgraph(_CharT, const locale &);
# 116 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline _CharT toupper(_CharT, const locale &);
# 120 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline _CharT tolower(_CharT, const locale &);
# 125 "/usr/include/c++/5/bits/localefwd.h" 3
struct ctype_base;
# 126 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class ctype;
# 128 "/usr/include/c++/5/bits/localefwd.h" 3
template<> class ctype< char> ;
# 130 "/usr/include/c++/5/bits/localefwd.h" 3
template<> class ctype< wchar_t> ;
# 132 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class ctype_byname;
# 136 "/usr/include/c++/5/bits/localefwd.h" 3
class codecvt_base;
# 137 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _InternT, class _ExternT, class _StateT> class codecvt;
# 139 "/usr/include/c++/5/bits/localefwd.h" 3
template<> class codecvt< char, char, __mbstate_t> ;
# 141 "/usr/include/c++/5/bits/localefwd.h" 3
template<> class codecvt< wchar_t, char, __mbstate_t> ;
# 143 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _InternT, class _ExternT, class _StateT> class codecvt_byname;
# 148 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class num_get;
# 150 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class num_put;
# 153 "/usr/include/c++/5/bits/localefwd.h" 3
inline namespace __cxx11 {
# 154 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class numpunct;
# 155 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class numpunct_byname;
# 156 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 158 "/usr/include/c++/5/bits/localefwd.h" 3
inline namespace __cxx11 {
# 160 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class collate;
# 162 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class collate_byname;
# 164 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 167 "/usr/include/c++/5/bits/localefwd.h" 3
class time_base;
# 168 "/usr/include/c++/5/bits/localefwd.h" 3
inline namespace __cxx11 {
# 169 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class time_get;
# 171 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class time_get_byname;
# 173 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 174 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class time_put;
# 176 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class time_put_byname;
# 180 "/usr/include/c++/5/bits/localefwd.h" 3
class money_base;
# 181 "/usr/include/c++/5/bits/localefwd.h" 3
inline namespace __cxx11 {
# 182 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class money_get;
# 184 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class money_put;
# 186 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 187 "/usr/include/c++/5/bits/localefwd.h" 3
inline namespace __cxx11 {
# 188 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, bool _Intl = false> class moneypunct;
# 190 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, bool _Intl = false> class moneypunct_byname;
# 192 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 195 "/usr/include/c++/5/bits/localefwd.h" 3
class messages_base;
# 196 "/usr/include/c++/5/bits/localefwd.h" 3
inline namespace __cxx11 {
# 197 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class messages;
# 199 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class messages_byname;
# 201 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 204 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 30 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr.h" 3
#pragma GCC visibility push ( default )
# 72 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
struct sched_param {
# 74 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
int __sched_priority;
# 75 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
};
# 77 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern "C" {
# 81 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern int clone(int (* __fn)(void * __arg), void * __child_stack, int __flags, void * __arg, ...) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern int unshare(int __flags) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern int sched_getcpu() throw();
# 91 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern int setns(int __fd, int __nstype) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
}
# 103 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
struct __sched_param {
# 105 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
int __sched_priority;
# 106 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
};
# 118 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
typedef unsigned long __cpu_mask;
# 128 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
typedef
# 126 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
struct {
# 127 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
__cpu_mask __bits[(1024) / ((8) * sizeof(__cpu_mask))];
# 128 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
} cpu_set_t;
# 201 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern "C" {
# 203 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern int __sched_cpucount(size_t __setsize, const cpu_set_t * __setp) throw();
# 205 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern cpu_set_t *__sched_cpualloc(size_t __count) throw() __attribute((__warn_unused_result__));
# 206 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern void __sched_cpufree(cpu_set_t * __set) throw();
# 208 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
}
# 48 "/usr/include/sched.h" 3
extern "C" {
# 51 "/usr/include/sched.h" 3
extern int sched_setparam(__pid_t __pid, const sched_param * __param) throw();
# 55 "/usr/include/sched.h" 3
extern int sched_getparam(__pid_t __pid, sched_param * __param) throw();
# 58 "/usr/include/sched.h" 3
extern int sched_setscheduler(__pid_t __pid, int __policy, const sched_param * __param) throw();
# 62 "/usr/include/sched.h" 3
extern int sched_getscheduler(__pid_t __pid) throw();
# 65 "/usr/include/sched.h" 3
extern int sched_yield() throw();
# 68 "/usr/include/sched.h" 3
extern int sched_get_priority_max(int __algorithm) throw();
# 71 "/usr/include/sched.h" 3
extern int sched_get_priority_min(int __algorithm) throw();
# 74 "/usr/include/sched.h" 3
extern int sched_rr_get_interval(__pid_t __pid, timespec * __t) throw();
# 118 "/usr/include/sched.h" 3
extern int sched_setaffinity(__pid_t __pid, size_t __cpusetsize, const cpu_set_t * __cpuset) throw();
# 122 "/usr/include/sched.h" 3
extern int sched_getaffinity(__pid_t __pid, size_t __cpusetsize, cpu_set_t * __cpuset) throw();
# 126 "/usr/include/sched.h" 3
}
# 31 "/usr/include/x86_64-linux-gnu/bits/setjmp.h" 3
typedef long __jmp_buf[8];
# 33 "/usr/include/pthread.h" 3
enum {
# 34 "/usr/include/pthread.h" 3
PTHREAD_CREATE_JOINABLE,
# 36 "/usr/include/pthread.h" 3
PTHREAD_CREATE_DETACHED
# 38 "/usr/include/pthread.h" 3
};
# 43 "/usr/include/pthread.h" 3
enum {
# 44 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_TIMED_NP,
# 45 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_RECURSIVE_NP,
# 46 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ERRORCHECK_NP,
# 47 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ADAPTIVE_NP,
# 50 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_NORMAL = 0,
# 51 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_RECURSIVE,
# 52 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ERRORCHECK,
# 53 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_DEFAULT = 0,
# 57 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_FAST_NP = 0
# 59 "/usr/include/pthread.h" 3
};
# 65 "/usr/include/pthread.h" 3
enum {
# 66 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_STALLED,
# 67 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_STALLED_NP = 0,
# 68 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ROBUST,
# 69 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ROBUST_NP = 1
# 70 "/usr/include/pthread.h" 3
};
# 77 "/usr/include/pthread.h" 3
enum {
# 78 "/usr/include/pthread.h" 3
PTHREAD_PRIO_NONE,
# 79 "/usr/include/pthread.h" 3
PTHREAD_PRIO_INHERIT,
# 80 "/usr/include/pthread.h" 3
PTHREAD_PRIO_PROTECT
# 81 "/usr/include/pthread.h" 3
};
# 115 "/usr/include/pthread.h" 3
enum {
# 116 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_READER_NP,
# 117 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_WRITER_NP,
# 118 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
# 119 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_DEFAULT_NP = 0
# 120 "/usr/include/pthread.h" 3
};
# 156 "/usr/include/pthread.h" 3
enum {
# 157 "/usr/include/pthread.h" 3
PTHREAD_INHERIT_SCHED,
# 159 "/usr/include/pthread.h" 3
PTHREAD_EXPLICIT_SCHED
# 161 "/usr/include/pthread.h" 3
};
# 166 "/usr/include/pthread.h" 3
enum {
# 167 "/usr/include/pthread.h" 3
PTHREAD_SCOPE_SYSTEM,
# 169 "/usr/include/pthread.h" 3
PTHREAD_SCOPE_PROCESS
# 171 "/usr/include/pthread.h" 3
};
# 176 "/usr/include/pthread.h" 3
enum {
# 177 "/usr/include/pthread.h" 3
PTHREAD_PROCESS_PRIVATE,
# 179 "/usr/include/pthread.h" 3
PTHREAD_PROCESS_SHARED
# 181 "/usr/include/pthread.h" 3
};
# 190 "/usr/include/pthread.h" 3
struct _pthread_cleanup_buffer {
# 192 "/usr/include/pthread.h" 3
void (*__routine)(void *);
# 193 "/usr/include/pthread.h" 3
void *__arg;
# 194 "/usr/include/pthread.h" 3
int __canceltype;
# 195 "/usr/include/pthread.h" 3
_pthread_cleanup_buffer *__prev;
# 196 "/usr/include/pthread.h" 3
};
# 200 "/usr/include/pthread.h" 3
enum {
# 201 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_ENABLE,
# 203 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_DISABLE
# 205 "/usr/include/pthread.h" 3
};
# 207 "/usr/include/pthread.h" 3
enum {
# 208 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_DEFERRED,
# 210 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_ASYNCHRONOUS
# 212 "/usr/include/pthread.h" 3
};
# 228 "/usr/include/pthread.h" 3
extern "C" {
# 233 "/usr/include/pthread.h" 3
extern int pthread_create(pthread_t *__restrict__ __newthread, const pthread_attr_t *__restrict__ __attr, void *(* __start_routine)(void *), void *__restrict__ __arg) throw()
# 236 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 242 "/usr/include/pthread.h" 3
extern void pthread_exit(void * __retval) __attribute((__noreturn__));
# 250 "/usr/include/pthread.h" 3
extern int pthread_join(pthread_t __th, void ** __thread_return);
# 255 "/usr/include/pthread.h" 3
extern int pthread_tryjoin_np(pthread_t __th, void ** __thread_return) throw();
# 263 "/usr/include/pthread.h" 3
extern int pthread_timedjoin_np(pthread_t __th, void ** __thread_return, const timespec * __abstime);
# 271 "/usr/include/pthread.h" 3
extern int pthread_detach(pthread_t __th) throw();
# 275 "/usr/include/pthread.h" 3
extern pthread_t pthread_self() throw() __attribute((const));
# 278 "/usr/include/pthread.h" 3
extern __attribute((gnu_inline)) inline int pthread_equal(pthread_t __thread1, pthread_t __thread2) throw()
# 279 "/usr/include/pthread.h" 3
 __attribute((const));
# 287 "/usr/include/pthread.h" 3
extern int pthread_attr_init(pthread_attr_t * __attr) throw() __attribute((__nonnull__(1)));
# 290 "/usr/include/pthread.h" 3
extern int pthread_attr_destroy(pthread_attr_t * __attr) throw()
# 291 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 294 "/usr/include/pthread.h" 3
extern int pthread_attr_getdetachstate(const pthread_attr_t * __attr, int * __detachstate) throw()
# 296 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 299 "/usr/include/pthread.h" 3
extern int pthread_attr_setdetachstate(pthread_attr_t * __attr, int __detachstate) throw()
# 301 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 305 "/usr/include/pthread.h" 3
extern int pthread_attr_getguardsize(const pthread_attr_t * __attr, size_t * __guardsize) throw()
# 307 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 310 "/usr/include/pthread.h" 3
extern int pthread_attr_setguardsize(pthread_attr_t * __attr, size_t __guardsize) throw()
# 312 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 316 "/usr/include/pthread.h" 3
extern int pthread_attr_getschedparam(const pthread_attr_t *__restrict__ __attr, sched_param *__restrict__ __param) throw()
# 318 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 321 "/usr/include/pthread.h" 3
extern int pthread_attr_setschedparam(pthread_attr_t *__restrict__ __attr, const sched_param *__restrict__ __param) throw()
# 323 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 326 "/usr/include/pthread.h" 3
extern int pthread_attr_getschedpolicy(const pthread_attr_t *__restrict__ __attr, int *__restrict__ __policy) throw()
# 328 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 331 "/usr/include/pthread.h" 3
extern int pthread_attr_setschedpolicy(pthread_attr_t * __attr, int __policy) throw()
# 332 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 335 "/usr/include/pthread.h" 3
extern int pthread_attr_getinheritsched(const pthread_attr_t *__restrict__ __attr, int *__restrict__ __inherit) throw()
# 337 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 340 "/usr/include/pthread.h" 3
extern int pthread_attr_setinheritsched(pthread_attr_t * __attr, int __inherit) throw()
# 342 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 346 "/usr/include/pthread.h" 3
extern int pthread_attr_getscope(const pthread_attr_t *__restrict__ __attr, int *__restrict__ __scope) throw()
# 348 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 351 "/usr/include/pthread.h" 3
extern int pthread_attr_setscope(pthread_attr_t * __attr, int __scope) throw()
# 352 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 355 "/usr/include/pthread.h" 3
extern int pthread_attr_getstackaddr(const pthread_attr_t *__restrict__ __attr, void **__restrict__ __stackaddr) throw()
# 357 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__deprecated__));
# 363 "/usr/include/pthread.h" 3
extern int pthread_attr_setstackaddr(pthread_attr_t * __attr, void * __stackaddr) throw()
# 365 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1))) __attribute((__deprecated__));
# 368 "/usr/include/pthread.h" 3
extern int pthread_attr_getstacksize(const pthread_attr_t *__restrict__ __attr, size_t *__restrict__ __stacksize) throw()
# 370 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 375 "/usr/include/pthread.h" 3
extern int pthread_attr_setstacksize(pthread_attr_t * __attr, size_t __stacksize) throw()
# 377 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 381 "/usr/include/pthread.h" 3
extern int pthread_attr_getstack(const pthread_attr_t *__restrict__ __attr, void **__restrict__ __stackaddr, size_t *__restrict__ __stacksize) throw()
# 384 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 389 "/usr/include/pthread.h" 3
extern int pthread_attr_setstack(pthread_attr_t * __attr, void * __stackaddr, size_t __stacksize) throw()
# 390 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 396 "/usr/include/pthread.h" 3
extern int pthread_attr_setaffinity_np(pthread_attr_t * __attr, size_t __cpusetsize, const cpu_set_t * __cpuset) throw()
# 399 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 403 "/usr/include/pthread.h" 3
extern int pthread_attr_getaffinity_np(const pthread_attr_t * __attr, size_t __cpusetsize, cpu_set_t * __cpuset) throw()
# 406 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 409 "/usr/include/pthread.h" 3
extern int pthread_getattr_default_np(pthread_attr_t * __attr) throw()
# 410 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 414 "/usr/include/pthread.h" 3
extern int pthread_setattr_default_np(const pthread_attr_t * __attr) throw()
# 415 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 420 "/usr/include/pthread.h" 3
extern int pthread_getattr_np(pthread_t __th, pthread_attr_t * __attr) throw()
# 421 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 429 "/usr/include/pthread.h" 3
extern int pthread_setschedparam(pthread_t __target_thread, int __policy, const sched_param * __param) throw()
# 431 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 434 "/usr/include/pthread.h" 3
extern int pthread_getschedparam(pthread_t __target_thread, int *__restrict__ __policy, sched_param *__restrict__ __param) throw()
# 437 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2, 3)));
# 440 "/usr/include/pthread.h" 3
extern int pthread_setschedprio(pthread_t __target_thread, int __prio) throw();
# 446 "/usr/include/pthread.h" 3
extern int pthread_getname_np(pthread_t __target_thread, char * __buf, size_t __buflen) throw()
# 448 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 451 "/usr/include/pthread.h" 3
extern int pthread_setname_np(pthread_t __target_thread, const char * __name) throw()
# 452 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 458 "/usr/include/pthread.h" 3
extern int pthread_getconcurrency() throw();
# 461 "/usr/include/pthread.h" 3
extern int pthread_setconcurrency(int __level) throw();
# 469 "/usr/include/pthread.h" 3
extern int pthread_yield() throw();
# 474 "/usr/include/pthread.h" 3
extern int pthread_setaffinity_np(pthread_t __th, size_t __cpusetsize, const cpu_set_t * __cpuset) throw()
# 476 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 479 "/usr/include/pthread.h" 3
extern int pthread_getaffinity_np(pthread_t __th, size_t __cpusetsize, cpu_set_t * __cpuset) throw()
# 481 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 494 "/usr/include/pthread.h" 3
extern int pthread_once(pthread_once_t * __once_control, void (* __init_routine)(void))
# 495 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 506 "/usr/include/pthread.h" 3
extern int pthread_setcancelstate(int __state, int * __oldstate);
# 510 "/usr/include/pthread.h" 3
extern int pthread_setcanceltype(int __type, int * __oldtype);
# 513 "/usr/include/pthread.h" 3
extern int pthread_cancel(pthread_t __th);
# 518 "/usr/include/pthread.h" 3
extern void pthread_testcancel();
# 531 "/usr/include/pthread.h" 3
typedef
# 524 "/usr/include/pthread.h" 3
struct {
# 526 "/usr/include/pthread.h" 3
struct {
# 527 "/usr/include/pthread.h" 3
__jmp_buf __cancel_jmp_buf;
# 528 "/usr/include/pthread.h" 3
int __mask_was_saved;
# 529 "/usr/include/pthread.h" 3
} __cancel_jmp_buf[1];
# 530 "/usr/include/pthread.h" 3
void *__pad[4];
# 531 "/usr/include/pthread.h" 3
} __pthread_unwind_buf_t __attribute((__aligned__));
# 540 "/usr/include/pthread.h" 3
struct __pthread_cleanup_frame {
# 542 "/usr/include/pthread.h" 3
void (*__cancel_routine)(void *);
# 543 "/usr/include/pthread.h" 3
void *__cancel_arg;
# 544 "/usr/include/pthread.h" 3
int __do_it;
# 545 "/usr/include/pthread.h" 3
int __cancel_type;
# 546 "/usr/include/pthread.h" 3
};
# 551 "/usr/include/pthread.h" 3
class __pthread_cleanup_class {
# 553 "/usr/include/pthread.h" 3
void (*__cancel_routine)(void *);
# 554 "/usr/include/pthread.h" 3
void *__cancel_arg;
# 555 "/usr/include/pthread.h" 3
int __do_it;
# 556 "/usr/include/pthread.h" 3
int __cancel_type;
# 559 "/usr/include/pthread.h" 3
public: __pthread_cleanup_class(void (*__fct)(void *), void *__arg) : __cancel_routine(__fct), __cancel_arg(__arg), __do_it(1)
# 560 "/usr/include/pthread.h" 3
{ }
# 561 "/usr/include/pthread.h" 3
~__pthread_cleanup_class() { if (__do_it) { (__cancel_routine)(__cancel_arg); } }
# 562 "/usr/include/pthread.h" 3
void __setdoit(int __newval) { (__do_it) = __newval; }
# 563 "/usr/include/pthread.h" 3
void __defer() { pthread_setcanceltype(PTHREAD_CANCEL_DEFERRED, &(__cancel_type));
# 564 "/usr/include/pthread.h" 3
}
# 565 "/usr/include/pthread.h" 3
void __restore() const { pthread_setcanceltype(__cancel_type, 0); }
# 566 "/usr/include/pthread.h" 3
};
# 742 "/usr/include/pthread.h" 3
struct __jmp_buf_tag;
# 743 "/usr/include/pthread.h" 3
extern int __sigsetjmp(__jmp_buf_tag * __env, int __savemask) throw();
# 749 "/usr/include/pthread.h" 3
extern int pthread_mutex_init(pthread_mutex_t * __mutex, const pthread_mutexattr_t * __mutexattr) throw()
# 751 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 754 "/usr/include/pthread.h" 3
extern int pthread_mutex_destroy(pthread_mutex_t * __mutex) throw()
# 755 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 758 "/usr/include/pthread.h" 3
extern int pthread_mutex_trylock(pthread_mutex_t * __mutex) throw()
# 759 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 762 "/usr/include/pthread.h" 3
extern int pthread_mutex_lock(pthread_mutex_t * __mutex) throw()
# 763 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 767 "/usr/include/pthread.h" 3
extern int pthread_mutex_timedlock(pthread_mutex_t *__restrict__ __mutex, const timespec *__restrict__ __abstime) throw()
# 769 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 773 "/usr/include/pthread.h" 3
extern int pthread_mutex_unlock(pthread_mutex_t * __mutex) throw()
# 774 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 778 "/usr/include/pthread.h" 3
extern int pthread_mutex_getprioceiling(const pthread_mutex_t *__restrict__ __mutex, int *__restrict__ __prioceiling) throw()
# 781 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 785 "/usr/include/pthread.h" 3
extern int pthread_mutex_setprioceiling(pthread_mutex_t *__restrict__ __mutex, int __prioceiling, int *__restrict__ __old_ceiling) throw()
# 788 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 793 "/usr/include/pthread.h" 3
extern int pthread_mutex_consistent(pthread_mutex_t * __mutex) throw()
# 794 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 796 "/usr/include/pthread.h" 3
extern int pthread_mutex_consistent_np(pthread_mutex_t * __mutex) throw()
# 797 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 806 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_init(pthread_mutexattr_t * __attr) throw()
# 807 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 810 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_destroy(pthread_mutexattr_t * __attr) throw()
# 811 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 814 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getpshared(const pthread_mutexattr_t *__restrict__ __attr, int *__restrict__ __pshared) throw()
# 817 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 820 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setpshared(pthread_mutexattr_t * __attr, int __pshared) throw()
# 822 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 826 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_gettype(const pthread_mutexattr_t *__restrict__ __attr, int *__restrict__ __kind) throw()
# 828 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 833 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_settype(pthread_mutexattr_t * __attr, int __kind) throw()
# 834 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 838 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *__restrict__ __attr, int *__restrict__ __protocol) throw()
# 841 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 845 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setprotocol(pthread_mutexattr_t * __attr, int __protocol) throw()
# 847 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 850 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *__restrict__ __attr, int *__restrict__ __prioceiling) throw()
# 853 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 856 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setprioceiling(pthread_mutexattr_t * __attr, int __prioceiling) throw()
# 858 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 862 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getrobust(const pthread_mutexattr_t * __attr, int * __robustness) throw()
# 864 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 866 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t * __attr, int * __robustness) throw()
# 868 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 872 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setrobust(pthread_mutexattr_t * __attr, int __robustness) throw()
# 874 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 876 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setrobust_np(pthread_mutexattr_t * __attr, int __robustness) throw()
# 878 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 888 "/usr/include/pthread.h" 3
extern int pthread_rwlock_init(pthread_rwlock_t *__restrict__ __rwlock, const pthread_rwlockattr_t *__restrict__ __attr) throw()
# 890 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 893 "/usr/include/pthread.h" 3
extern int pthread_rwlock_destroy(pthread_rwlock_t * __rwlock) throw()
# 894 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 897 "/usr/include/pthread.h" 3
extern int pthread_rwlock_rdlock(pthread_rwlock_t * __rwlock) throw()
# 898 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 901 "/usr/include/pthread.h" 3
extern int pthread_rwlock_tryrdlock(pthread_rwlock_t * __rwlock) throw()
# 902 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 906 "/usr/include/pthread.h" 3
extern int pthread_rwlock_timedrdlock(pthread_rwlock_t *__restrict__ __rwlock, const timespec *__restrict__ __abstime) throw()
# 908 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 912 "/usr/include/pthread.h" 3
extern int pthread_rwlock_wrlock(pthread_rwlock_t * __rwlock) throw()
# 913 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 916 "/usr/include/pthread.h" 3
extern int pthread_rwlock_trywrlock(pthread_rwlock_t * __rwlock) throw()
# 917 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 921 "/usr/include/pthread.h" 3
extern int pthread_rwlock_timedwrlock(pthread_rwlock_t *__restrict__ __rwlock, const timespec *__restrict__ __abstime) throw()
# 923 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 927 "/usr/include/pthread.h" 3
extern int pthread_rwlock_unlock(pthread_rwlock_t * __rwlock) throw()
# 928 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 934 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_init(pthread_rwlockattr_t * __attr) throw()
# 935 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 938 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_destroy(pthread_rwlockattr_t * __attr) throw()
# 939 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 942 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *__restrict__ __attr, int *__restrict__ __pshared) throw()
# 945 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 948 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_setpshared(pthread_rwlockattr_t * __attr, int __pshared) throw()
# 950 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 953 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *__restrict__ __attr, int *__restrict__ __pref) throw()
# 956 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 959 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t * __attr, int __pref) throw()
# 960 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 968 "/usr/include/pthread.h" 3
extern int pthread_cond_init(pthread_cond_t *__restrict__ __cond, const pthread_condattr_t *__restrict__ __cond_attr) throw()
# 970 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 973 "/usr/include/pthread.h" 3
extern int pthread_cond_destroy(pthread_cond_t * __cond) throw()
# 974 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 977 "/usr/include/pthread.h" 3
extern int pthread_cond_signal(pthread_cond_t * __cond) throw()
# 978 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 981 "/usr/include/pthread.h" 3
extern int pthread_cond_broadcast(pthread_cond_t * __cond) throw()
# 982 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 989 "/usr/include/pthread.h" 3
extern int pthread_cond_wait(pthread_cond_t *__restrict__ __cond, pthread_mutex_t *__restrict__ __mutex)
# 991 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1000 "/usr/include/pthread.h" 3
extern int pthread_cond_timedwait(pthread_cond_t *__restrict__ __cond, pthread_mutex_t *__restrict__ __mutex, const timespec *__restrict__ __abstime)
# 1003 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 1008 "/usr/include/pthread.h" 3
extern int pthread_condattr_init(pthread_condattr_t * __attr) throw()
# 1009 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1012 "/usr/include/pthread.h" 3
extern int pthread_condattr_destroy(pthread_condattr_t * __attr) throw()
# 1013 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1016 "/usr/include/pthread.h" 3
extern int pthread_condattr_getpshared(const pthread_condattr_t *__restrict__ __attr, int *__restrict__ __pshared) throw()
# 1019 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1022 "/usr/include/pthread.h" 3
extern int pthread_condattr_setpshared(pthread_condattr_t * __attr, int __pshared) throw()
# 1023 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1027 "/usr/include/pthread.h" 3
extern int pthread_condattr_getclock(const pthread_condattr_t *__restrict__ __attr, __clockid_t *__restrict__ __clock_id) throw()
# 1030 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1033 "/usr/include/pthread.h" 3
extern int pthread_condattr_setclock(pthread_condattr_t * __attr, __clockid_t __clock_id) throw()
# 1035 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1044 "/usr/include/pthread.h" 3
extern int pthread_spin_init(pthread_spinlock_t * __lock, int __pshared) throw()
# 1045 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1048 "/usr/include/pthread.h" 3
extern int pthread_spin_destroy(pthread_spinlock_t * __lock) throw()
# 1049 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1052 "/usr/include/pthread.h" 3
extern int pthread_spin_lock(pthread_spinlock_t * __lock) throw()
# 1053 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1056 "/usr/include/pthread.h" 3
extern int pthread_spin_trylock(pthread_spinlock_t * __lock) throw()
# 1057 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1060 "/usr/include/pthread.h" 3
extern int pthread_spin_unlock(pthread_spinlock_t * __lock) throw()
# 1061 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1068 "/usr/include/pthread.h" 3
extern int pthread_barrier_init(pthread_barrier_t *__restrict__ __barrier, const pthread_barrierattr_t *__restrict__ __attr, unsigned __count) throw()
# 1071 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1074 "/usr/include/pthread.h" 3
extern int pthread_barrier_destroy(pthread_barrier_t * __barrier) throw()
# 1075 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1078 "/usr/include/pthread.h" 3
extern int pthread_barrier_wait(pthread_barrier_t * __barrier) throw()
# 1079 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1083 "/usr/include/pthread.h" 3
extern int pthread_barrierattr_init(pthread_barrierattr_t * __attr) throw()
# 1084 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1087 "/usr/include/pthread.h" 3
extern int pthread_barrierattr_destroy(pthread_barrierattr_t * __attr) throw()
# 1088 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1091 "/usr/include/pthread.h" 3
extern int pthread_barrierattr_getpshared(const pthread_barrierattr_t *__restrict__ __attr, int *__restrict__ __pshared) throw()
# 1094 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1097 "/usr/include/pthread.h" 3
extern int pthread_barrierattr_setpshared(pthread_barrierattr_t * __attr, int __pshared) throw()
# 1099 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1111 "/usr/include/pthread.h" 3
extern int pthread_key_create(pthread_key_t * __key, void (* __destr_function)(void *)) throw()
# 1113 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1116 "/usr/include/pthread.h" 3
extern int pthread_key_delete(pthread_key_t __key) throw();
# 1119 "/usr/include/pthread.h" 3
extern void *pthread_getspecific(pthread_key_t __key) throw();
# 1122 "/usr/include/pthread.h" 3
extern int pthread_setspecific(pthread_key_t __key, const void * __pointer) throw();
# 1128 "/usr/include/pthread.h" 3
extern int pthread_getcpuclockid(pthread_t __thread_id, __clockid_t * __clock_id) throw()
# 1130 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 1145 "/usr/include/pthread.h" 3
extern int pthread_atfork(void (* __prepare)(void), void (* __parent)(void), void (* __child)(void)) throw();
# 1152 "/usr/include/pthread.h" 3
__attribute((__gnu_inline__)) extern inline int
# 1153 "/usr/include/pthread.h" 3
 __attribute((__leaf__)) pthread_equal(pthread_t __thread1, pthread_t __thread2) throw()
# 1154 "/usr/include/pthread.h" 3
{
# 1155 "/usr/include/pthread.h" 3
return __thread1 == __thread2;
# 1156 "/usr/include/pthread.h" 3
}
# 1159 "/usr/include/pthread.h" 3
}
# 47 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef pthread_t __gthread_t;
# 48 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef pthread_key_t __gthread_key_t;
# 49 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef pthread_once_t __gthread_once_t;
# 50 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef pthread_mutex_t __gthread_mutex_t;
# 51 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef pthread_mutex_t __gthread_recursive_mutex_t;
# 52 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef pthread_cond_t __gthread_cond_t;
# 53 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef timespec __gthread_time_t;
# 101 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_once) __gthrw_pthread_once __attribute((__weakref__("pthread_once")));
# 102 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_getspecific) __gthrw_pthread_getspecific __attribute((__weakref__("pthread_getspecific")));
# 103 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_setspecific) __gthrw_pthread_setspecific __attribute((__weakref__("pthread_setspecific")));
# 105 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_create) __gthrw_pthread_create __attribute((__weakref__("pthread_create")));
# 106 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_join) __gthrw_pthread_join __attribute((__weakref__("pthread_join")));
# 107 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_equal) __gthrw_pthread_equal __attribute((__weakref__("pthread_equal")));
# 108 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_self) __gthrw_pthread_self __attribute((__weakref__("pthread_self")));
# 109 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_detach) __gthrw_pthread_detach __attribute((__weakref__("pthread_detach")));
# 111 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cancel) __gthrw_pthread_cancel __attribute((__weakref__("pthread_cancel")));
# 113 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(sched_yield) __gthrw_sched_yield __attribute((__weakref__("sched_yield")));
# 115 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_lock) __gthrw_pthread_mutex_lock __attribute((__weakref__("pthread_mutex_lock")));
# 116 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_trylock) __gthrw_pthread_mutex_trylock __attribute((__weakref__("pthread_mutex_trylock")));
# 118 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_timedlock) __gthrw_pthread_mutex_timedlock __attribute((__weakref__("pthread_mutex_timedlock")));
# 120 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_unlock) __gthrw_pthread_mutex_unlock __attribute((__weakref__("pthread_mutex_unlock")));
# 121 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_init) __gthrw_pthread_mutex_init __attribute((__weakref__("pthread_mutex_init")));
# 122 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_destroy) __gthrw_pthread_mutex_destroy __attribute((__weakref__("pthread_mutex_destroy")));
# 124 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cond_init) __gthrw_pthread_cond_init __attribute((__weakref__("pthread_cond_init")));
# 125 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cond_broadcast) __gthrw_pthread_cond_broadcast __attribute((__weakref__("pthread_cond_broadcast")));
# 126 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cond_signal) __gthrw_pthread_cond_signal __attribute((__weakref__("pthread_cond_signal")));
# 127 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cond_wait) __gthrw_pthread_cond_wait __attribute((__weakref__("pthread_cond_wait")));
# 128 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cond_timedwait) __gthrw_pthread_cond_timedwait __attribute((__weakref__("pthread_cond_timedwait")));
# 129 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cond_destroy) __gthrw_pthread_cond_destroy __attribute((__weakref__("pthread_cond_destroy")));
# 131 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_key_create) __gthrw_pthread_key_create __attribute((__weakref__("pthread_key_create")));
# 132 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_key_delete) __gthrw_pthread_key_delete __attribute((__weakref__("pthread_key_delete")));
# 133 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_init) __gthrw_pthread_mutexattr_init __attribute((__weakref__("pthread_mutexattr_init")));
# 134 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_settype) __gthrw_pthread_mutexattr_settype __attribute((__weakref__("pthread_mutexattr_settype")));
# 135 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_destroy) __gthrw_pthread_mutexattr_destroy __attribute((__weakref__("pthread_mutexattr_destroy")));
# 236 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_key_create) __gthrw___pthread_key_create __attribute((__weakref__("__pthread_key_create")));
# 247 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_active_p()
# 248 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 249 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static void *const __gthread_active_ptr = __extension__ ((void *)(&__gthrw___pthread_key_create));
# 251 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_active_ptr != (0);
# 252 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 659 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *
# 660 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
__args)
# 661 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 662 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_create(__threadid, __null, __func, __args);
# 663 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 666 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr)
# 667 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 668 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_join(__threadid, __value_ptr);
# 669 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 672 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_detach(__gthread_t __threadid)
# 673 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 674 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_detach(__threadid);
# 675 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 678 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2)
# 679 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 680 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_equal(__t1, __t2);
# 681 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 684 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline __gthread_t __gthread_self()
# 685 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 686 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_self();
# 687 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 690 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_yield()
# 691 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 692 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_sched_yield();
# 693 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 696 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_once(__gthread_once_t *__once, void (*__func)(void))
# 697 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 698 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 699 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_once(__once, __func); } else {
# 701 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return -1; }
# 702 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 705 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *))
# 706 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 707 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_key_create(__key, __dtor);
# 708 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 711 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_key_delete(__gthread_key_t __key)
# 712 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 713 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_key_delete(__key);
# 714 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 717 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline void *__gthread_getspecific(__gthread_key_t __key)
# 718 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 719 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_getspecific(__key);
# 720 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 723 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr)
# 724 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 725 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_setspecific(__key, __ptr);
# 726 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 729 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline void __gthread_mutex_init_function(__gthread_mutex_t *__mutex)
# 730 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 731 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 732 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
__gthrw_pthread_mutex_init(__mutex, __null); }
# 733 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 736 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex)
# 737 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 738 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 739 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_destroy(__mutex); } else {
# 741 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return 0; }
# 742 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 745 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex)
# 746 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 747 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 748 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_lock(__mutex); } else {
# 750 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return 0; }
# 751 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 754 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex)
# 755 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 756 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 757 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_trylock(__mutex); } else {
# 759 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return 0; }
# 760 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 764 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *
# 765 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
__abs_timeout)
# 766 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 767 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 768 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_timedlock(__mutex, __abs_timeout); } else {
# 770 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return 0; }
# 771 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 775 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex)
# 776 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 777 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 778 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_unlock(__mutex); } else {
# 780 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return 0; }
# 781 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 808 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex)
# 809 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 810 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_mutex_lock(__mutex);
# 811 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 814 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex)
# 815 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 816 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_mutex_trylock(__mutex);
# 817 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 821 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *
# 822 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
__abs_timeout)
# 823 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 824 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_mutex_timedlock(__mutex, __abs_timeout);
# 825 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 829 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex)
# 830 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 831 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_mutex_unlock(__mutex);
# 832 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 835 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_destroy(__gthread_recursive_mutex_t *__mutex)
# 836 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 837 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_mutex_destroy(__mutex);
# 838 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 850 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond)
# 851 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 852 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_cond_broadcast(__cond);
# 853 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 856 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_cond_signal(__gthread_cond_t *__cond)
# 857 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 858 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_cond_signal(__cond);
# 859 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 862 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex)
# 863 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 864 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_cond_wait(__cond, __mutex);
# 865 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 868 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *
# 869 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
__abs_timeout)
# 870 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 871 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_cond_timedwait(__cond, __mutex, __abs_timeout);
# 872 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 875 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *
# 876 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
__mutex)
# 877 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 878 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_cond_wait(__cond, __mutex);
# 879 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 882 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_cond_destroy(__gthread_cond_t *__cond)
# 883 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 884 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_cond_destroy(__cond);
# 885 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 151 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr.h" 3
#pragma GCC visibility pop
# 32 "/usr/include/x86_64-linux-gnu/c++/5/bits/atomic_word.h" 3
typedef int _Atomic_word;
# 38 "/usr/include/c++/5/ext/atomicity.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/5/ext/atomicity.h" 3
static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val)
# 49 "/usr/include/c++/5/ext/atomicity.h" 3
{ return __atomic_fetch_add(__mem, __val, 4); }
# 52 "/usr/include/c++/5/ext/atomicity.h" 3
static inline void __atomic_add(volatile _Atomic_word *__mem, int __val)
# 53 "/usr/include/c++/5/ext/atomicity.h" 3
{ __atomic_fetch_add(__mem, __val, 4); }
# 65 "/usr/include/c++/5/ext/atomicity.h" 3
static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val)
# 66 "/usr/include/c++/5/ext/atomicity.h" 3
{
# 67 "/usr/include/c++/5/ext/atomicity.h" 3
_Atomic_word __result = *__mem;
# 68 "/usr/include/c++/5/ext/atomicity.h" 3
(*__mem) += __val;
# 69 "/usr/include/c++/5/ext/atomicity.h" 3
return __result;
# 70 "/usr/include/c++/5/ext/atomicity.h" 3
}
# 73 "/usr/include/c++/5/ext/atomicity.h" 3
static inline void __atomic_add_single(_Atomic_word *__mem, int __val)
# 74 "/usr/include/c++/5/ext/atomicity.h" 3
{ (*__mem) += __val; }
# 77 "/usr/include/c++/5/ext/atomicity.h" 3
__attribute((__unused__)) static inline _Atomic_word
# 78 "/usr/include/c++/5/ext/atomicity.h" 3
__exchange_and_add_dispatch(_Atomic_word *__mem, int __val)
# 79 "/usr/include/c++/5/ext/atomicity.h" 3
{
# 81 "/usr/include/c++/5/ext/atomicity.h" 3
if (__gthread_active_p()) {
# 82 "/usr/include/c++/5/ext/atomicity.h" 3
return __exchange_and_add(__mem, __val); } else {
# 84 "/usr/include/c++/5/ext/atomicity.h" 3
return __exchange_and_add_single(__mem, __val); }
# 88 "/usr/include/c++/5/ext/atomicity.h" 3
}
# 91 "/usr/include/c++/5/ext/atomicity.h" 3
__attribute((__unused__)) static inline void
# 92 "/usr/include/c++/5/ext/atomicity.h" 3
__atomic_add_dispatch(_Atomic_word *__mem, int __val)
# 93 "/usr/include/c++/5/ext/atomicity.h" 3
{
# 95 "/usr/include/c++/5/ext/atomicity.h" 3
if (__gthread_active_p()) {
# 96 "/usr/include/c++/5/ext/atomicity.h" 3
__atomic_add(__mem, __val); } else {
# 98 "/usr/include/c++/5/ext/atomicity.h" 3
__atomic_add_single(__mem, __val); }
# 102 "/usr/include/c++/5/ext/atomicity.h" 3
}
# 105 "/usr/include/c++/5/ext/atomicity.h" 3
}
# 42 "/usr/include/c++/5/new" 3
#pragma GCC visibility push ( default )
# 44 "/usr/include/c++/5/new" 3
extern "C++" {
# 46 "/usr/include/c++/5/new" 3
namespace std {
# 54 "/usr/include/c++/5/new" 3
class bad_alloc : public exception {
# 57 "/usr/include/c++/5/new" 3
public: bad_alloc() throw() { }
# 61 "/usr/include/c++/5/new" 3
virtual ~bad_alloc() throw();
# 64 "/usr/include/c++/5/new" 3
virtual const char *what() const throw();
# 65 "/usr/include/c++/5/new" 3
};
# 82 "/usr/include/c++/5/new" 3
struct nothrow_t { };
# 84 "/usr/include/c++/5/new" 3
extern const nothrow_t nothrow;
# 88 "/usr/include/c++/5/new" 3
typedef void (*new_handler)(void);
# 92 "/usr/include/c++/5/new" 3
new_handler set_new_handler(new_handler) throw();
# 98 "/usr/include/c++/5/new" 3
}
# 111 "/usr/include/c++/5/new" 3
void *operator new(std::size_t) throw(std::bad_alloc)
# 112 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 113 "/usr/include/c++/5/new" 3
void *operator new[](std::size_t) throw(std::bad_alloc)
# 114 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 115 "/usr/include/c++/5/new" 3
void operator delete(void *) throw()
# 116 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 117 "/usr/include/c++/5/new" 3
void operator delete[](void *) throw()
# 118 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 119 "/usr/include/c++/5/new" 3
void *operator new(std::size_t, const std::nothrow_t &) throw()
# 120 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 121 "/usr/include/c++/5/new" 3
void *operator new[](std::size_t, const std::nothrow_t &) throw()
# 122 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 123 "/usr/include/c++/5/new" 3
void operator delete(void *, const std::nothrow_t &) throw()
# 124 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 125 "/usr/include/c++/5/new" 3
void operator delete[](void *, const std::nothrow_t &) throw()
# 126 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 129 "/usr/include/c++/5/new" 3
inline void *operator new(std::size_t, void *__p) throw()
# 130 "/usr/include/c++/5/new" 3
{ return __p; }
# 131 "/usr/include/c++/5/new" 3
inline void *operator new[](std::size_t, void *__p) throw()
# 132 "/usr/include/c++/5/new" 3
{ return __p; }
# 135 "/usr/include/c++/5/new" 3
inline void operator delete(void *, void *) throw() { }
# 136 "/usr/include/c++/5/new" 3
inline void operator delete[](void *, void *) throw() { }
# 138 "/usr/include/c++/5/new" 3
}
# 140 "/usr/include/c++/5/new" 3
#pragma GCC visibility pop
# 40 "/usr/include/c++/5/ext/new_allocator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/5/ext/new_allocator.h" 3
using std::size_t;
# 45 "/usr/include/c++/5/ext/new_allocator.h" 3
using std::ptrdiff_t;
# 57 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Tp>
# 58 "/usr/include/c++/5/ext/new_allocator.h" 3
class new_allocator {
# 61 "/usr/include/c++/5/ext/new_allocator.h" 3
public: typedef std::size_t size_type;
# 62 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef std::ptrdiff_t difference_type;
# 63 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef _Tp *pointer;
# 64 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef const _Tp *const_pointer;
# 65 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef _Tp &reference;
# 66 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef const _Tp &const_reference;
# 67 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef _Tp value_type;
# 69 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Tp1>
# 70 "/usr/include/c++/5/ext/new_allocator.h" 3
struct rebind {
# 71 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef __gnu_cxx::new_allocator< _Tp1> other; };
# 79 "/usr/include/c++/5/ext/new_allocator.h" 3
new_allocator() throw() { }
# 81 "/usr/include/c++/5/ext/new_allocator.h" 3
new_allocator(const new_allocator &) throw() { }
# 83 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Tp1>
# 84 "/usr/include/c++/5/ext/new_allocator.h" 3
new_allocator(const __gnu_cxx::new_allocator< _Tp1> &) throw() { }
# 86 "/usr/include/c++/5/ext/new_allocator.h" 3
~new_allocator() throw() { }
# 89 "/usr/include/c++/5/ext/new_allocator.h" 3
pointer address(reference __x) const
# 90 "/usr/include/c++/5/ext/new_allocator.h" 3
{ return std::__addressof(__x); }
# 93 "/usr/include/c++/5/ext/new_allocator.h" 3
const_pointer address(const_reference __x) const
# 94 "/usr/include/c++/5/ext/new_allocator.h" 3
{ return std::__addressof(__x); }
# 99 "/usr/include/c++/5/ext/new_allocator.h" 3
pointer allocate(size_type __n, const void * = 0)
# 100 "/usr/include/c++/5/ext/new_allocator.h" 3
{
# 101 "/usr/include/c++/5/ext/new_allocator.h" 3
if (__n > this->max_size()) {
# 102 "/usr/include/c++/5/ext/new_allocator.h" 3
std::__throw_bad_alloc(); }
# 104 "/usr/include/c++/5/ext/new_allocator.h" 3
return static_cast< _Tp *>(::operator new(__n * sizeof(_Tp)));
# 105 "/usr/include/c++/5/ext/new_allocator.h" 3
}
# 109 "/usr/include/c++/5/ext/new_allocator.h" 3
void deallocate(pointer __p, size_type)
# 110 "/usr/include/c++/5/ext/new_allocator.h" 3
{ ::operator delete(__p); }
# 113 "/usr/include/c++/5/ext/new_allocator.h" 3
size_type max_size() const throw()
# 114 "/usr/include/c++/5/ext/new_allocator.h" 3
{ return ((std::size_t)(-1)) / sizeof(_Tp); }
# 129 "/usr/include/c++/5/ext/new_allocator.h" 3
void construct(pointer __p, const _Tp &__val)
# 130 "/usr/include/c++/5/ext/new_allocator.h" 3
{ ::new ((void *)__p) (_Tp)(__val); }
# 133 "/usr/include/c++/5/ext/new_allocator.h" 3
void destroy(pointer __p) { (__p->~_Tp()); }
# 135 "/usr/include/c++/5/ext/new_allocator.h" 3
};
# 137 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Tp> inline bool
# 139 "/usr/include/c++/5/ext/new_allocator.h" 3
operator==(const new_allocator< _Tp> &, const new_allocator< _Tp> &)
# 140 "/usr/include/c++/5/ext/new_allocator.h" 3
{ return true; }
# 142 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Tp> inline bool
# 144 "/usr/include/c++/5/ext/new_allocator.h" 3
operator!=(const new_allocator< _Tp> &, const new_allocator< _Tp> &)
# 145 "/usr/include/c++/5/ext/new_allocator.h" 3
{ return false; }
# 148 "/usr/include/c++/5/ext/new_allocator.h" 3
}
# 52 "/usr/include/c++/5/bits/allocator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 63 "/usr/include/c++/5/bits/allocator.h" 3
template<> class allocator< void> {
# 66 "/usr/include/c++/5/bits/allocator.h" 3
public: typedef size_t size_type;
# 67 "/usr/include/c++/5/bits/allocator.h" 3
typedef ptrdiff_t difference_type;
# 68 "/usr/include/c++/5/bits/allocator.h" 3
typedef void *pointer;
# 69 "/usr/include/c++/5/bits/allocator.h" 3
typedef const void *const_pointer;
# 70 "/usr/include/c++/5/bits/allocator.h" 3
typedef void value_type;
# 72 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp1>
# 73 "/usr/include/c++/5/bits/allocator.h" 3
struct rebind {
# 74 "/usr/include/c++/5/bits/allocator.h" 3
typedef std::allocator< _Tp1> other; };
# 81 "/usr/include/c++/5/bits/allocator.h" 3
};
# 91 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp>
# 92 "/usr/include/c++/5/bits/allocator.h" 3
class allocator : public __gnu_cxx::new_allocator< _Tp> {
# 95 "/usr/include/c++/5/bits/allocator.h" 3
public: typedef ::std::size_t size_type;
# 96 "/usr/include/c++/5/bits/allocator.h" 3
typedef ::std::ptrdiff_t difference_type;
# 97 "/usr/include/c++/5/bits/allocator.h" 3
typedef _Tp *pointer;
# 98 "/usr/include/c++/5/bits/allocator.h" 3
typedef const _Tp *const_pointer;
# 99 "/usr/include/c++/5/bits/allocator.h" 3
typedef _Tp &reference;
# 100 "/usr/include/c++/5/bits/allocator.h" 3
typedef const _Tp &const_reference;
# 101 "/usr/include/c++/5/bits/allocator.h" 3
typedef _Tp value_type;
# 103 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp1>
# 104 "/usr/include/c++/5/bits/allocator.h" 3
struct rebind {
# 105 "/usr/include/c++/5/bits/allocator.h" 3
typedef ::std::allocator< _Tp1> other; };
# 113 "/usr/include/c++/5/bits/allocator.h" 3
allocator() throw() { }
# 115 "/usr/include/c++/5/bits/allocator.h" 3
allocator(const allocator &__a) throw() : ::__gnu_cxx::new_allocator< _Tp> (__a)
# 116 "/usr/include/c++/5/bits/allocator.h" 3
{ }
# 118 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp1>
# 119 "/usr/include/c++/5/bits/allocator.h" 3
allocator(const ::std::allocator< _Tp1> &) throw() { }
# 121 "/usr/include/c++/5/bits/allocator.h" 3
~allocator() throw() { }
# 124 "/usr/include/c++/5/bits/allocator.h" 3
};
# 126 "/usr/include/c++/5/bits/allocator.h" 3
template< class _T1, class _T2> inline bool
# 128 "/usr/include/c++/5/bits/allocator.h" 3
operator==(const allocator< _T1> &, const allocator< _T2> &) throw()
# 130 "/usr/include/c++/5/bits/allocator.h" 3
{ return true; }
# 132 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp> inline bool
# 134 "/usr/include/c++/5/bits/allocator.h" 3
operator==(const allocator< _Tp> &, const allocator< _Tp> &) throw()
# 136 "/usr/include/c++/5/bits/allocator.h" 3
{ return true; }
# 138 "/usr/include/c++/5/bits/allocator.h" 3
template< class _T1, class _T2> inline bool
# 140 "/usr/include/c++/5/bits/allocator.h" 3
operator!=(const allocator< _T1> &, const allocator< _T2> &) throw()
# 142 "/usr/include/c++/5/bits/allocator.h" 3
{ return false; }
# 144 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp> inline bool
# 146 "/usr/include/c++/5/bits/allocator.h" 3
operator!=(const allocator< _Tp> &, const allocator< _Tp> &) throw()
# 148 "/usr/include/c++/5/bits/allocator.h" 3
{ return false; }
# 155 "/usr/include/c++/5/bits/allocator.h" 3
extern template class allocator< char> ;
# 156 "/usr/include/c++/5/bits/allocator.h" 3
extern template class allocator< wchar_t> ;
# 163 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Alloc, bool = __is_empty(_Alloc)>
# 164 "/usr/include/c++/5/bits/allocator.h" 3
struct __alloc_swap {
# 165 "/usr/include/c++/5/bits/allocator.h" 3
static void _S_do_it(_Alloc &, _Alloc &) { } };
# 167 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Alloc>
# 168 "/usr/include/c++/5/bits/allocator.h" 3
struct __alloc_swap< _Alloc, false> {
# 171 "/usr/include/c++/5/bits/allocator.h" 3
static void _S_do_it(_Alloc &__one, _Alloc &__two)
# 172 "/usr/include/c++/5/bits/allocator.h" 3
{
# 174 "/usr/include/c++/5/bits/allocator.h" 3
if (__one != __two) {
# 175 "/usr/include/c++/5/bits/allocator.h" 3
swap(__one, __two); }
# 176 "/usr/include/c++/5/bits/allocator.h" 3
}
# 177 "/usr/include/c++/5/bits/allocator.h" 3
};
# 180 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Alloc, bool = __is_empty(_Alloc)>
# 181 "/usr/include/c++/5/bits/allocator.h" 3
struct __alloc_neq {
# 184 "/usr/include/c++/5/bits/allocator.h" 3
static bool _S_do_it(const _Alloc &, const _Alloc &)
# 185 "/usr/include/c++/5/bits/allocator.h" 3
{ return false; }
# 186 "/usr/include/c++/5/bits/allocator.h" 3
};
# 188 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Alloc>
# 189 "/usr/include/c++/5/bits/allocator.h" 3
struct __alloc_neq< _Alloc, false> {
# 192 "/usr/include/c++/5/bits/allocator.h" 3
static bool _S_do_it(const _Alloc &__one, const _Alloc &__two)
# 193 "/usr/include/c++/5/bits/allocator.h" 3
{ return __one != __two; }
# 194 "/usr/include/c++/5/bits/allocator.h" 3
};
# 227 "/usr/include/c++/5/bits/allocator.h" 3
}
# 36 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
#pragma GCC visibility push ( default )
# 39 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
namespace __cxxabiv1 {
# 48 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
class __forced_unwind {
# 50 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
virtual ~__forced_unwind() throw();
# 53 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
virtual void __pure_dummy() = 0;
# 54 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
};
# 55 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
}
# 58 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
#pragma GCC visibility pop
# 38 "/usr/include/c++/5/bits/ostream_insert.h" 3
namespace std __attribute((__visibility__("default"))) {
# 42 "/usr/include/c++/5/bits/ostream_insert.h" 3
template< class _CharT, class _Traits> inline void
# 44 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_write(basic_ostream< _CharT, _Traits> &__out, const _CharT *
# 45 "/usr/include/c++/5/bits/ostream_insert.h" 3
__s, streamsize __n)
# 46 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 47 "/usr/include/c++/5/bits/ostream_insert.h" 3
typedef basic_ostream< _CharT, _Traits> __ostream_type;
# 48 "/usr/include/c++/5/bits/ostream_insert.h" 3
typedef typename basic_ostream< _CharT, _Traits> ::ios_base __ios_base;
# 50 "/usr/include/c++/5/bits/ostream_insert.h" 3
const streamsize __put = ((__out.rdbuf())->sputn(__s, __n));
# 51 "/usr/include/c++/5/bits/ostream_insert.h" 3
if (__put != __n) {
# 52 "/usr/include/c++/5/bits/ostream_insert.h" 3
(__out.setstate(__ios_base::badbit)); }
# 53 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 55 "/usr/include/c++/5/bits/ostream_insert.h" 3
template< class _CharT, class _Traits> inline void
# 57 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_fill(basic_ostream< _CharT, _Traits> &__out, streamsize __n)
# 58 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 59 "/usr/include/c++/5/bits/ostream_insert.h" 3
typedef basic_ostream< _CharT, _Traits> __ostream_type;
# 60 "/usr/include/c++/5/bits/ostream_insert.h" 3
typedef typename basic_ostream< _CharT, _Traits> ::ios_base __ios_base;
# 62 "/usr/include/c++/5/bits/ostream_insert.h" 3
const _CharT __c = (__out.fill());
# 63 "/usr/include/c++/5/bits/ostream_insert.h" 3
for (; __n > (0); --__n)
# 64 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 65 "/usr/include/c++/5/bits/ostream_insert.h" 3
const typename _Traits::int_type __put = ((__out.rdbuf())->sputc(__c));
# 66 "/usr/include/c++/5/bits/ostream_insert.h" 3
if (_Traits::eq_int_type(__put, _Traits::eof()))
# 67 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 68 "/usr/include/c++/5/bits/ostream_insert.h" 3
(__out.setstate(__ios_base::badbit));
# 69 "/usr/include/c++/5/bits/ostream_insert.h" 3
break;
# 70 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 71 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 72 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 74 "/usr/include/c++/5/bits/ostream_insert.h" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 76 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_insert(basic_ostream< _CharT, _Traits> &__out, const _CharT *
# 77 "/usr/include/c++/5/bits/ostream_insert.h" 3
__s, streamsize __n)
# 78 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 79 "/usr/include/c++/5/bits/ostream_insert.h" 3
typedef basic_ostream< _CharT, _Traits> __ostream_type;
# 80 "/usr/include/c++/5/bits/ostream_insert.h" 3
typedef typename basic_ostream< _CharT, _Traits> ::ios_base __ios_base;
# 82 "/usr/include/c++/5/bits/ostream_insert.h" 3
typename basic_ostream< _CharT, _Traits> ::sentry __cerb(__out);
# 83 "/usr/include/c++/5/bits/ostream_insert.h" 3
if (__cerb)
# 84 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 85 "/usr/include/c++/5/bits/ostream_insert.h" 3
try
# 86 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 87 "/usr/include/c++/5/bits/ostream_insert.h" 3
const streamsize __w = (__out.width());
# 88 "/usr/include/c++/5/bits/ostream_insert.h" 3
if (__w > __n)
# 89 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 90 "/usr/include/c++/5/bits/ostream_insert.h" 3
const bool __left = ((__out.flags()) & __ios_base::adjustfield) == __ios_base::left;
# 93 "/usr/include/c++/5/bits/ostream_insert.h" 3
if (!__left) {
# 94 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_fill(__out, __w - __n); }
# 95 "/usr/include/c++/5/bits/ostream_insert.h" 3
if ((__out.good())) {
# 96 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_write(__out, __s, __n); }
# 97 "/usr/include/c++/5/bits/ostream_insert.h" 3
if (__left && (__out.good())) {
# 98 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_fill(__out, __w - __n); }
# 99 "/usr/include/c++/5/bits/ostream_insert.h" 3
} else {
# 101 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_write(__out, __s, __n); }
# 102 "/usr/include/c++/5/bits/ostream_insert.h" 3
(__out.width(0));
# 103 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 104 "/usr/include/c++/5/bits/ostream_insert.h" 3
catch (__cxxabiv1::__forced_unwind &)
# 105 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 106 "/usr/include/c++/5/bits/ostream_insert.h" 3
(__out._M_setstate(__ios_base::badbit));
# 107 "/usr/include/c++/5/bits/ostream_insert.h" 3
throw;
# 108 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 109 "/usr/include/c++/5/bits/ostream_insert.h" 3
catch (...)
# 110 "/usr/include/c++/5/bits/ostream_insert.h" 3
{ (__out._M_setstate(__ios_base::badbit)); }
# 111 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 112 "/usr/include/c++/5/bits/ostream_insert.h" 3
return __out;
# 113 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 118 "/usr/include/c++/5/bits/ostream_insert.h" 3
extern template basic_ostream< char> &__ostream_insert(basic_ostream< char> & __out, const char * __s, streamsize __n);
# 121 "/usr/include/c++/5/bits/ostream_insert.h" 3
extern template basic_ostream< wchar_t> &__ostream_insert(basic_ostream< wchar_t> & __out, const wchar_t * __s, streamsize __n);
# 127 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 63 "/usr/include/c++/5/bits/stl_function.h" 3
namespace std __attribute((__visibility__("default"))) {
# 104 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Arg, class _Result>
# 105 "/usr/include/c++/5/bits/stl_function.h" 3
struct unary_function {
# 108 "/usr/include/c++/5/bits/stl_function.h" 3
typedef _Arg argument_type;
# 111 "/usr/include/c++/5/bits/stl_function.h" 3
typedef _Result result_type;
# 112 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 117 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Arg1, class _Arg2, class _Result>
# 118 "/usr/include/c++/5/bits/stl_function.h" 3
struct binary_function {
# 121 "/usr/include/c++/5/bits/stl_function.h" 3
typedef _Arg1 first_argument_type;
# 124 "/usr/include/c++/5/bits/stl_function.h" 3
typedef _Arg2 second_argument_type;
# 127 "/usr/include/c++/5/bits/stl_function.h" 3
typedef _Result result_type;
# 128 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 166 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 167 "/usr/include/c++/5/bits/stl_function.h" 3
struct plus : public binary_function< _Tp, _Tp, _Tp> {
# 171 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 172 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x + __y; }
# 173 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 176 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 177 "/usr/include/c++/5/bits/stl_function.h" 3
struct minus : public binary_function< _Tp, _Tp, _Tp> {
# 181 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 182 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x - __y; }
# 183 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 186 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 187 "/usr/include/c++/5/bits/stl_function.h" 3
struct multiplies : public binary_function< _Tp, _Tp, _Tp> {
# 191 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 192 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x * __y; }
# 193 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 196 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 197 "/usr/include/c++/5/bits/stl_function.h" 3
struct divides : public binary_function< _Tp, _Tp, _Tp> {
# 201 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 202 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x / __y; }
# 203 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 206 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 207 "/usr/include/c++/5/bits/stl_function.h" 3
struct modulus : public binary_function< _Tp, _Tp, _Tp> {
# 211 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 212 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x % __y; }
# 213 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 216 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 217 "/usr/include/c++/5/bits/stl_function.h" 3
struct negate : public unary_function< _Tp, _Tp> {
# 221 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x) const
# 222 "/usr/include/c++/5/bits/stl_function.h" 3
{ return -__x; }
# 223 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 351 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 352 "/usr/include/c++/5/bits/stl_function.h" 3
struct equal_to : public binary_function< _Tp, _Tp, bool> {
# 356 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 357 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x == __y; }
# 358 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 361 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 362 "/usr/include/c++/5/bits/stl_function.h" 3
struct not_equal_to : public binary_function< _Tp, _Tp, bool> {
# 366 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 367 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x != __y; }
# 368 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 371 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 372 "/usr/include/c++/5/bits/stl_function.h" 3
struct greater : public binary_function< _Tp, _Tp, bool> {
# 376 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 377 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x > __y; }
# 378 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 381 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 382 "/usr/include/c++/5/bits/stl_function.h" 3
struct less : public binary_function< _Tp, _Tp, bool> {
# 386 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 387 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x < __y; }
# 388 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 391 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 392 "/usr/include/c++/5/bits/stl_function.h" 3
struct greater_equal : public binary_function< _Tp, _Tp, bool> {
# 396 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 397 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x >= __y; }
# 398 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 401 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 402 "/usr/include/c++/5/bits/stl_function.h" 3
struct less_equal : public binary_function< _Tp, _Tp, bool> {
# 406 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 407 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x <= __y; }
# 408 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 524 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 525 "/usr/include/c++/5/bits/stl_function.h" 3
struct logical_and : public binary_function< _Tp, _Tp, bool> {
# 529 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 530 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x && __y; }
# 531 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 534 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 535 "/usr/include/c++/5/bits/stl_function.h" 3
struct logical_or : public binary_function< _Tp, _Tp, bool> {
# 539 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 540 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x || __y; }
# 541 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 544 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 545 "/usr/include/c++/5/bits/stl_function.h" 3
struct logical_not : public unary_function< _Tp, bool> {
# 549 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x) const
# 550 "/usr/include/c++/5/bits/stl_function.h" 3
{ return !__x; }
# 551 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 617 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 618 "/usr/include/c++/5/bits/stl_function.h" 3
struct bit_and : public binary_function< _Tp, _Tp, _Tp> {
# 622 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 623 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x & __y; }
# 624 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 626 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 627 "/usr/include/c++/5/bits/stl_function.h" 3
struct bit_or : public binary_function< _Tp, _Tp, _Tp> {
# 631 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 632 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x | __y; }
# 633 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 635 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 636 "/usr/include/c++/5/bits/stl_function.h" 3
struct bit_xor : public binary_function< _Tp, _Tp, _Tp> {
# 640 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 641 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x ^ __y; }
# 642 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 644 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 645 "/usr/include/c++/5/bits/stl_function.h" 3
struct bit_not : public unary_function< _Tp, _Tp> {
# 649 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x) const
# 650 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ~__x; }
# 651 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 741 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Predicate>
# 742 "/usr/include/c++/5/bits/stl_function.h" 3
class unary_negate : public unary_function< typename _Predicate::argument_type, bool> {
# 746 "/usr/include/c++/5/bits/stl_function.h" 3
protected: _Predicate _M_pred;
# 751 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit unary_negate(const _Predicate &__x) : _M_pred(__x) { }
# 755 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const typename _Predicate::argument_type &__x) const
# 756 "/usr/include/c++/5/bits/stl_function.h" 3
{ return !(_M_pred)(__x); }
# 757 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 760 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Predicate> inline unary_negate< _Predicate>
# 763 "/usr/include/c++/5/bits/stl_function.h" 3
not1(const _Predicate &__pred)
# 764 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((unary_negate< _Predicate> )(__pred)); }
# 767 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Predicate>
# 768 "/usr/include/c++/5/bits/stl_function.h" 3
class binary_negate : public binary_function< typename _Predicate::first_argument_type, typename _Predicate::second_argument_type, bool> {
# 773 "/usr/include/c++/5/bits/stl_function.h" 3
protected: _Predicate _M_pred;
# 778 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit binary_negate(const _Predicate &__x) : _M_pred(__x) { }
# 782 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const typename _Predicate::first_argument_type &__x, const typename _Predicate::second_argument_type &
# 783 "/usr/include/c++/5/bits/stl_function.h" 3
__y) const
# 784 "/usr/include/c++/5/bits/stl_function.h" 3
{ return !(_M_pred)(__x, __y); }
# 785 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 788 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Predicate> inline binary_negate< _Predicate>
# 791 "/usr/include/c++/5/bits/stl_function.h" 3
not2(const _Predicate &__pred)
# 792 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((binary_negate< _Predicate> )(__pred)); }
# 818 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Arg, class _Result>
# 819 "/usr/include/c++/5/bits/stl_function.h" 3
class pointer_to_unary_function : public unary_function< _Arg, _Result> {
# 822 "/usr/include/c++/5/bits/stl_function.h" 3
protected: _Result (*_M_ptr)(_Arg);
# 825 "/usr/include/c++/5/bits/stl_function.h" 3
public: pointer_to_unary_function() { }
# 828 "/usr/include/c++/5/bits/stl_function.h" 3
explicit pointer_to_unary_function(_Result (*__x)(_Arg)) : _M_ptr(__x)
# 829 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 832 "/usr/include/c++/5/bits/stl_function.h" 3
_Result operator()(_Arg __x) const
# 833 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (_M_ptr)(__x); }
# 834 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 837 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Arg, class _Result> inline pointer_to_unary_function< _Arg, _Result>
# 839 "/usr/include/c++/5/bits/stl_function.h" 3
ptr_fun(_Result (*__x)(_Arg))
# 840 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((pointer_to_unary_function< _Arg, _Result> )(__x)); }
# 843 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Arg1, class _Arg2, class _Result>
# 844 "/usr/include/c++/5/bits/stl_function.h" 3
class pointer_to_binary_function : public binary_function< _Arg1, _Arg2, _Result> {
# 848 "/usr/include/c++/5/bits/stl_function.h" 3
protected: _Result (*_M_ptr)(_Arg1, _Arg2);
# 851 "/usr/include/c++/5/bits/stl_function.h" 3
public: pointer_to_binary_function() { }
# 854 "/usr/include/c++/5/bits/stl_function.h" 3
explicit pointer_to_binary_function(_Result (*__x)(_Arg1, _Arg2)) : _M_ptr(__x)
# 855 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 858 "/usr/include/c++/5/bits/stl_function.h" 3
_Result operator()(_Arg1 __x, _Arg2 __y) const
# 859 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (_M_ptr)(__x, __y); }
# 860 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 863 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Arg1, class _Arg2, class _Result> inline pointer_to_binary_function< _Arg1, _Arg2, _Result>
# 865 "/usr/include/c++/5/bits/stl_function.h" 3
ptr_fun(_Result (*__x)(_Arg1, _Arg2))
# 866 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((pointer_to_binary_function< _Arg1, _Arg2, _Result> )(__x)); }
# 869 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 870 "/usr/include/c++/5/bits/stl_function.h" 3
struct _Identity : public unary_function< _Tp, _Tp> {
# 874 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp &operator()(_Tp &__x) const
# 875 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x; }
# 878 "/usr/include/c++/5/bits/stl_function.h" 3
const _Tp &operator()(const _Tp &__x) const
# 879 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x; }
# 880 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 882 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Pair>
# 883 "/usr/include/c++/5/bits/stl_function.h" 3
struct _Select1st : public unary_function< _Pair, typename _Pair::first_type> {
# 887 "/usr/include/c++/5/bits/stl_function.h" 3
typename _Pair::first_type &operator()(_Pair &__x) const
# 888 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x.first; }
# 891 "/usr/include/c++/5/bits/stl_function.h" 3
const typename _Pair::first_type &operator()(const _Pair &__x) const
# 892 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x.first; }
# 905 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 907 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Pair>
# 908 "/usr/include/c++/5/bits/stl_function.h" 3
struct _Select2nd : public unary_function< _Pair, typename _Pair::second_type> {
# 912 "/usr/include/c++/5/bits/stl_function.h" 3
typename _Pair::second_type &operator()(_Pair &__x) const
# 913 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x.second; }
# 916 "/usr/include/c++/5/bits/stl_function.h" 3
const typename _Pair::second_type &operator()(const _Pair &__x) const
# 917 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x.second; }
# 918 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 938 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp>
# 939 "/usr/include/c++/5/bits/stl_function.h" 3
class mem_fun_t : public unary_function< _Tp *, _Ret> {
# 943 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit mem_fun_t(_Ret (_Tp::*__pf)(void)) : _M_f(__pf)
# 944 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 947 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(_Tp *__p) const
# 948 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__p->*(_M_f))(); }
# 951 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(void);
# 952 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 956 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp>
# 957 "/usr/include/c++/5/bits/stl_function.h" 3
class const_mem_fun_t : public unary_function< const _Tp *, _Ret> {
# 961 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit const_mem_fun_t(_Ret (_Tp::*__pf)(void) const) : _M_f(__pf)
# 962 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 965 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(const _Tp *__p) const
# 966 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__p->*(_M_f))(); }
# 969 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(void) const;
# 970 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 974 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp>
# 975 "/usr/include/c++/5/bits/stl_function.h" 3
class mem_fun_ref_t : public unary_function< _Tp, _Ret> {
# 979 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit mem_fun_ref_t(_Ret (_Tp::*__pf)(void)) : _M_f(__pf)
# 980 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 983 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(_Tp &__r) const
# 984 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__r.*(_M_f))(); }
# 987 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(void);
# 988 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 992 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp>
# 993 "/usr/include/c++/5/bits/stl_function.h" 3
class const_mem_fun_ref_t : public unary_function< _Tp, _Ret> {
# 997 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit const_mem_fun_ref_t(_Ret (_Tp::*__pf)(void) const) : _M_f(__pf)
# 998 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 1001 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(const _Tp &__r) const
# 1002 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__r.*(_M_f))(); }
# 1005 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(void) const;
# 1006 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 1010 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg>
# 1011 "/usr/include/c++/5/bits/stl_function.h" 3
class mem_fun1_t : public binary_function< _Tp *, _Arg, _Ret> {
# 1015 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit mem_fun1_t(_Ret (_Tp::*__pf)(_Arg)) : _M_f(__pf)
# 1016 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 1019 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(_Tp *__p, _Arg __x) const
# 1020 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__p->*(_M_f))(__x); }
# 1023 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(_Arg);
# 1024 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 1028 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg>
# 1029 "/usr/include/c++/5/bits/stl_function.h" 3
class const_mem_fun1_t : public binary_function< const _Tp *, _Arg, _Ret> {
# 1033 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit const_mem_fun1_t(_Ret (_Tp::*__pf)(_Arg) const) : _M_f(__pf)
# 1034 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 1037 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(const _Tp *__p, _Arg __x) const
# 1038 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__p->*(_M_f))(__x); }
# 1041 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(_Arg) const;
# 1042 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 1046 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg>
# 1047 "/usr/include/c++/5/bits/stl_function.h" 3
class mem_fun1_ref_t : public binary_function< _Tp, _Arg, _Ret> {
# 1051 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg)) : _M_f(__pf)
# 1052 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 1055 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(_Tp &__r, _Arg __x) const
# 1056 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__r.*(_M_f))(__x); }
# 1059 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(_Arg);
# 1060 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 1064 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg>
# 1065 "/usr/include/c++/5/bits/stl_function.h" 3
class const_mem_fun1_ref_t : public binary_function< _Tp, _Arg, _Ret> {
# 1069 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit const_mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg) const) : _M_f(__pf)
# 1070 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 1073 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(const _Tp &__r, _Arg __x) const
# 1074 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__r.*(_M_f))(__x); }
# 1077 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(_Arg) const;
# 1078 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 1082 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp> inline mem_fun_t< _Ret, _Tp>
# 1084 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun(_Ret (_Tp::*__f)(void))
# 1085 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((mem_fun_t< _Ret, _Tp> )(__f)); }
# 1087 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp> inline const_mem_fun_t< _Ret, _Tp>
# 1089 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun(_Ret (_Tp::*__f)(void) const)
# 1090 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((const_mem_fun_t< _Ret, _Tp> )(__f)); }
# 1092 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp> inline mem_fun_ref_t< _Ret, _Tp>
# 1094 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun_ref(_Ret (_Tp::*__f)(void))
# 1095 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((mem_fun_ref_t< _Ret, _Tp> )(__f)); }
# 1097 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp> inline const_mem_fun_ref_t< _Ret, _Tp>
# 1099 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun_ref(_Ret (_Tp::*__f)(void) const)
# 1100 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((const_mem_fun_ref_t< _Ret, _Tp> )(__f)); }
# 1102 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg> inline mem_fun1_t< _Ret, _Tp, _Arg>
# 1104 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun(_Ret (_Tp::*__f)(_Arg))
# 1105 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((mem_fun1_t< _Ret, _Tp, _Arg> )(__f)); }
# 1107 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg> inline const_mem_fun1_t< _Ret, _Tp, _Arg>
# 1109 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun(_Ret (_Tp::*__f)(_Arg) const)
# 1110 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((const_mem_fun1_t< _Ret, _Tp, _Arg> )(__f)); }
# 1112 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg> inline mem_fun1_ref_t< _Ret, _Tp, _Arg>
# 1114 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun_ref(_Ret (_Tp::*__f)(_Arg))
# 1115 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((mem_fun1_ref_t< _Ret, _Tp, _Arg> )(__f)); }
# 1117 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg> inline const_mem_fun1_ref_t< _Ret, _Tp, _Arg>
# 1119 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const)
# 1120 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((const_mem_fun1_ref_t< _Ret, _Tp, _Arg> )(__f)); }
# 1125 "/usr/include/c++/5/bits/stl_function.h" 3
}
# 60 "/usr/include/c++/5/backward/binders.h" 3
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
# 63 "/usr/include/c++/5/backward/binders.h" 3
namespace std __attribute((__visibility__("default"))) {
# 107 "/usr/include/c++/5/backward/binders.h" 3
template< class _Operation>
# 108 "/usr/include/c++/5/backward/binders.h" 3
class binder1st : public unary_function< typename _Operation::second_argument_type, typename _Operation::result_type> {
# 113 "/usr/include/c++/5/backward/binders.h" 3
protected: _Operation op;
# 114 "/usr/include/c++/5/backward/binders.h" 3
typename _Operation::first_argument_type value;
# 117 "/usr/include/c++/5/backward/binders.h" 3
public: binder1st(const _Operation &__x, const typename _Operation::first_argument_type &
# 118 "/usr/include/c++/5/backward/binders.h" 3
__y) : op(__x), value(__y)
# 119 "/usr/include/c++/5/backward/binders.h" 3
{ }
# 122 "/usr/include/c++/5/backward/binders.h" 3
typename _Operation::result_type operator()(const typename _Operation::second_argument_type &__x) const
# 123 "/usr/include/c++/5/backward/binders.h" 3
{ return (op)(value, __x); }
# 128 "/usr/include/c++/5/backward/binders.h" 3
typename _Operation::result_type operator()(typename _Operation::second_argument_type &__x) const
# 129 "/usr/include/c++/5/backward/binders.h" 3
{ return (op)(value, __x); }
# 130 "/usr/include/c++/5/backward/binders.h" 3
};
# 133 "/usr/include/c++/5/backward/binders.h" 3
template< class _Operation, class _Tp> inline binder1st< _Operation>
# 135 "/usr/include/c++/5/backward/binders.h" 3
bind1st(const _Operation &__fn, const _Tp &__x)
# 136 "/usr/include/c++/5/backward/binders.h" 3
{
# 137 "/usr/include/c++/5/backward/binders.h" 3
typedef typename _Operation::first_argument_type _Arg1_type;
# 138 "/usr/include/c++/5/backward/binders.h" 3
return binder1st< _Operation> (__fn, (_Arg1_type)__x);
# 139 "/usr/include/c++/5/backward/binders.h" 3
}
# 142 "/usr/include/c++/5/backward/binders.h" 3
template< class _Operation>
# 143 "/usr/include/c++/5/backward/binders.h" 3
class binder2nd : public unary_function< typename _Operation::first_argument_type, typename _Operation::result_type> {
# 148 "/usr/include/c++/5/backward/binders.h" 3
protected: _Operation op;
# 149 "/usr/include/c++/5/backward/binders.h" 3
typename _Operation::second_argument_type value;
# 152 "/usr/include/c++/5/backward/binders.h" 3
public: binder2nd(const _Operation &__x, const typename _Operation::second_argument_type &
# 153 "/usr/include/c++/5/backward/binders.h" 3
__y) : op(__x), value(__y)
# 154 "/usr/include/c++/5/backward/binders.h" 3
{ }
# 157 "/usr/include/c++/5/backward/binders.h" 3
typename _Operation::result_type operator()(const typename _Operation::first_argument_type &__x) const
# 158 "/usr/include/c++/5/backward/binders.h" 3
{ return (op)(__x, value); }
# 163 "/usr/include/c++/5/backward/binders.h" 3
typename _Operation::result_type operator()(typename _Operation::first_argument_type &__x) const
# 164 "/usr/include/c++/5/backward/binders.h" 3
{ return (op)(__x, value); }
# 165 "/usr/include/c++/5/backward/binders.h" 3
};
# 168 "/usr/include/c++/5/backward/binders.h" 3
template< class _Operation, class _Tp> inline binder2nd< _Operation>
# 170 "/usr/include/c++/5/backward/binders.h" 3
bind2nd(const _Operation &__fn, const _Tp &__x)
# 171 "/usr/include/c++/5/backward/binders.h" 3
{
# 172 "/usr/include/c++/5/backward/binders.h" 3
typedef typename _Operation::second_argument_type _Arg2_type;
# 173 "/usr/include/c++/5/backward/binders.h" 3
return binder2nd< _Operation> (__fn, (_Arg2_type)__x);
# 174 "/usr/include/c++/5/backward/binders.h" 3
}
# 178 "/usr/include/c++/5/backward/binders.h" 3
}
# 180 "/usr/include/c++/5/backward/binders.h" 3
#pragma GCC diagnostic pop
# 41 "/usr/include/c++/5/ext/alloc_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 94 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Alloc>
# 95 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __alloc_traits {
# 100 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef _Alloc allocator_type;
# 172 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename _Alloc::pointer pointer;
# 173 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename _Alloc::const_pointer const_pointer;
# 174 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename _Alloc::value_type value_type;
# 175 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename _Alloc::reference reference;
# 176 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename _Alloc::const_reference const_reference;
# 177 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename _Alloc::size_type size_type;
# 178 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename _Alloc::difference_type difference_type;
# 181 "/usr/include/c++/5/ext/alloc_traits.h" 3
static pointer allocate(_Alloc &__a, size_type __n)
# 182 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ return (__a.allocate(__n)); }
# 184 "/usr/include/c++/5/ext/alloc_traits.h" 3
static void deallocate(_Alloc &__a, pointer __p, size_type __n)
# 185 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ (__a.deallocate(__p, __n)); }
# 187 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Tp> static void
# 188 "/usr/include/c++/5/ext/alloc_traits.h" 3
construct(_Alloc &__a, pointer __p, const _Tp &__arg)
# 189 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ (__a.construct(__p, __arg)); }
# 191 "/usr/include/c++/5/ext/alloc_traits.h" 3
static void destroy(_Alloc &__a, pointer __p)
# 192 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ (__a.destroy(__p)); }
# 194 "/usr/include/c++/5/ext/alloc_traits.h" 3
static size_type max_size(const _Alloc &__a)
# 195 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ return (__a.max_size()); }
# 197 "/usr/include/c++/5/ext/alloc_traits.h" 3
static const _Alloc &_S_select_on_copy(const _Alloc &__a) { return __a; }
# 199 "/usr/include/c++/5/ext/alloc_traits.h" 3
static void _S_on_swap(_Alloc &__a, _Alloc &__b)
# 200 "/usr/include/c++/5/ext/alloc_traits.h" 3
{
# 203 "/usr/include/c++/5/ext/alloc_traits.h" 3
std::__alloc_swap< _Alloc> ::_S_do_it(__a, __b);
# 204 "/usr/include/c++/5/ext/alloc_traits.h" 3
}
# 206 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Tp>
# 207 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct rebind {
# 208 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename _Alloc::template rebind< _Tp> ::other other; };
# 210 "/usr/include/c++/5/ext/alloc_traits.h" 3
};
# 213 "/usr/include/c++/5/ext/alloc_traits.h" 3
}
# 46 "/usr/include/c++/5/bits/basic_string.h" 3
namespace std __attribute((__visibility__("default"))) {
# 51 "/usr/include/c++/5/bits/basic_string.h" 3
inline namespace __cxx11 {
# 70 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc>
# 71 "/usr/include/c++/5/bits/basic_string.h" 3
class basic_string {
# 74 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other _Char_alloc_type;
# 75 "/usr/include/c++/5/bits/basic_string.h" 3
typedef __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> _Alloc_traits;
# 79 "/usr/include/c++/5/bits/basic_string.h" 3
public: typedef _Traits traits_type;
# 80 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename _Traits::char_type value_type;
# 81 "/usr/include/c++/5/bits/basic_string.h" 3
typedef _Char_alloc_type allocator_type;
# 82 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::size_type size_type;
# 83 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::difference_type difference_type;
# 84 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::reference reference;
# 85 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::const_reference const_reference;
# 86 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::pointer pointer;
# 87 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::const_pointer const_pointer;
# 88 "/usr/include/c++/5/bits/basic_string.h" 3
typedef __gnu_cxx::__normal_iterator< typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::pointer, basic_string> iterator;
# 90 "/usr/include/c++/5/bits/basic_string.h" 3
typedef __gnu_cxx::__normal_iterator< typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::const_pointer, basic_string> const_iterator;
# 91 "/usr/include/c++/5/bits/basic_string.h" 3
typedef std::reverse_iterator< __gnu_cxx::__normal_iterator< typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::const_pointer, basic_string> > const_reverse_iterator;
# 92 "/usr/include/c++/5/bits/basic_string.h" 3
typedef std::reverse_iterator< __gnu_cxx::__normal_iterator< typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::pointer, basic_string> > reverse_iterator;
# 95 "/usr/include/c++/5/bits/basic_string.h" 3
static const size_type npos = (static_cast< size_type>(-1));
# 100 "/usr/include/c++/5/bits/basic_string.h" 3
private: typedef iterator __const_iterator;
# 106 "/usr/include/c++/5/bits/basic_string.h" 3
struct _Alloc_hider : public allocator_type {
# 108 "/usr/include/c++/5/bits/basic_string.h" 3
_Alloc_hider(typename ::std::__cxx11::basic_string< _CharT, _Traits, _Alloc> ::pointer __dat, const _Alloc &__a = _Alloc()) : ::std::__cxx11::basic_string< _CharT, _Traits, _Alloc> ::allocator_type(__a), _M_p(__dat)
# 109 "/usr/include/c++/5/bits/basic_string.h" 3
{ }
# 111 "/usr/include/c++/5/bits/basic_string.h" 3
typename ::std::__cxx11::basic_string< _CharT, _Traits, _Alloc> ::pointer _M_p;
# 112 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 114 "/usr/include/c++/5/bits/basic_string.h" 3
_Alloc_hider _M_dataplus;
# 115 "/usr/include/c++/5/bits/basic_string.h" 3
size_type _M_string_length;
# 117 "/usr/include/c++/5/bits/basic_string.h" 3
enum { _S_local_capacity = (15) / sizeof(_CharT)};
# 120 "/usr/include/c++/5/bits/basic_string.h" 3
union {
# 121 "/usr/include/c++/5/bits/basic_string.h" 3
_CharT _M_local_buf[(_S_local_capacity) + 1];
# 122 "/usr/include/c++/5/bits/basic_string.h" 3
size_type _M_allocated_capacity;
# 123 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 126 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_data(pointer __p)
# 127 "/usr/include/c++/5/bits/basic_string.h" 3
{ ((_M_dataplus)._M_p) = __p; }
# 130 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_length(size_type __length)
# 131 "/usr/include/c++/5/bits/basic_string.h" 3
{ (_M_string_length) = __length; }
# 134 "/usr/include/c++/5/bits/basic_string.h" 3
pointer _M_data() const
# 135 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (_M_dataplus)._M_p; }
# 138 "/usr/include/c++/5/bits/basic_string.h" 3
pointer _M_local_data()
# 139 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 143 "/usr/include/c++/5/bits/basic_string.h" 3
return (pointer)(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf);
# 145 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 148 "/usr/include/c++/5/bits/basic_string.h" 3
const_pointer _M_local_data() const
# 149 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 153 "/usr/include/c++/5/bits/basic_string.h" 3
return (const_pointer)(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf);
# 155 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 158 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_capacity(size_type __capacity)
# 159 "/usr/include/c++/5/bits/basic_string.h" 3
{ (__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity) = __capacity; }
# 162 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_set_length(size_type __n)
# 163 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 164 "/usr/include/c++/5/bits/basic_string.h" 3
_M_length(__n);
# 165 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign(_M_data()[__n], _CharT());
# 166 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 169 "/usr/include/c++/5/bits/basic_string.h" 3
bool _M_is_local() const
# 170 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_data() == this->_M_local_data(); }
# 174 "/usr/include/c++/5/bits/basic_string.h" 3
pointer _M_create(size_type &, size_type);
# 177 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_dispose()
# 178 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 179 "/usr/include/c++/5/bits/basic_string.h" 3
if (!_M_is_local()) {
# 180 "/usr/include/c++/5/bits/basic_string.h" 3
_M_destroy(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity); }
# 181 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 184 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_destroy(size_type __size) throw()
# 185 "/usr/include/c++/5/bits/basic_string.h" 3
{ _Alloc_traits::deallocate(this->_M_get_allocator(), _M_data(), __size + 1); }
# 189 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InIterator> void
# 191 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct_aux(_InIterator __beg, _InIterator __end, __false_type)
# 193 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 194 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename iterator_traits< _InIterator> ::iterator_category _Tag;
# 195 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct(__beg, __end, _Tag());
# 196 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 200 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _Integer> void
# 202 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct_aux(_Integer __beg, _Integer __end, __true_type)
# 203 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct_aux_2(static_cast< size_type>(__beg), __end); }
# 206 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_construct_aux_2(size_type __req, _CharT __c)
# 207 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct(__req, __c); }
# 209 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InIterator> void
# 211 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct(_InIterator __beg, _InIterator __end)
# 212 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 213 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __is_integer< _InIterator> ::__type _Integral;
# 214 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct_aux(__beg, __end, _Integral());
# 215 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 218 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InIterator> void _M_construct(_InIterator __beg, _InIterator __end, input_iterator_tag);
# 225 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _FwdIterator> void _M_construct(_FwdIterator __beg, _FwdIterator __end, forward_iterator_tag);
# 231 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_construct(size_type __req, _CharT __c);
# 234 "/usr/include/c++/5/bits/basic_string.h" 3
allocator_type &_M_get_allocator()
# 235 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_dataplus; }
# 238 "/usr/include/c++/5/bits/basic_string.h" 3
const allocator_type &_M_get_allocator() const
# 239 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_dataplus; }
# 258 "/usr/include/c++/5/bits/basic_string.h" 3
size_type _M_check(size_type __pos, const char *__s) const
# 259 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 260 "/usr/include/c++/5/bits/basic_string.h" 3
if (__pos > this->size()) {
# 261 "/usr/include/c++/5/bits/basic_string.h" 3
__throw_out_of_range_fmt("%s: __pos (which is %zu) > this->size() (which is %zu)", __s, __pos, this->size()); }
# 264 "/usr/include/c++/5/bits/basic_string.h" 3
return __pos;
# 265 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 268 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_check_length(size_type __n1, size_type __n2, const char *__s) const
# 269 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 270 "/usr/include/c++/5/bits/basic_string.h" 3
if ((this->max_size() - (this->size() - __n1)) < __n2) {
# 271 "/usr/include/c++/5/bits/basic_string.h" 3
__throw_length_error(__s); }
# 272 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 277 "/usr/include/c++/5/bits/basic_string.h" 3
size_type _M_limit(size_type __pos, size_type __off) const
# 278 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 279 "/usr/include/c++/5/bits/basic_string.h" 3
const bool __testoff = __off < (this->size() - __pos);
# 280 "/usr/include/c++/5/bits/basic_string.h" 3
return __testoff ? __off : (this->size() - __pos);
# 281 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 285 "/usr/include/c++/5/bits/basic_string.h" 3
bool _M_disjunct(const _CharT *__s) const
# 286 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 287 "/usr/include/c++/5/bits/basic_string.h" 3
return less< const _CharT *> ()(__s, _M_data()) || less< const _CharT *> ()(_M_data() + this->size(), __s);
# 289 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 294 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_copy(_CharT *__d, const _CharT *__s, size_type __n)
# 295 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 296 "/usr/include/c++/5/bits/basic_string.h" 3
if (__n == 1) {
# 297 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign(*__d, *__s); } else {
# 299 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::copy(__d, __s, __n); }
# 300 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 303 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_move(_CharT *__d, const _CharT *__s, size_type __n)
# 304 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 305 "/usr/include/c++/5/bits/basic_string.h" 3
if (__n == 1) {
# 306 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign(*__d, *__s); } else {
# 308 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::move(__d, __s, __n); }
# 309 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 312 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_assign(_CharT *__d, size_type __n, _CharT __c)
# 313 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 314 "/usr/include/c++/5/bits/basic_string.h" 3
if (__n == 1) {
# 315 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign(*__d, __c); } else {
# 317 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign(__d, __n, __c); }
# 318 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 322 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _Iterator> static void
# 324 "/usr/include/c++/5/bits/basic_string.h" 3
_S_copy_chars(_CharT *__p, _Iterator __k1, _Iterator __k2)
# 325 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 326 "/usr/include/c++/5/bits/basic_string.h" 3
for (; __k1 != __k2; (++__k1), (++__p)) {
# 327 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign(*__p, *__k1); }
# 328 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 331 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_copy_chars(_CharT *__p, iterator __k1, iterator __k2)
# 332 "/usr/include/c++/5/bits/basic_string.h" 3
{ _S_copy_chars(__p, (__k1.base()), (__k2.base())); }
# 335 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_copy_chars(_CharT *__p, const_iterator __k1, const_iterator __k2)
# 337 "/usr/include/c++/5/bits/basic_string.h" 3
{ _S_copy_chars(__p, (__k1.base()), (__k2.base())); }
# 340 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_copy_chars(_CharT *__p, _CharT *__k1, _CharT *__k2)
# 341 "/usr/include/c++/5/bits/basic_string.h" 3
{ (_S_copy)(__p, __k1, __k2 - __k1); }
# 344 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_copy_chars(_CharT *__p, const _CharT *__k1, const _CharT *__k2)
# 346 "/usr/include/c++/5/bits/basic_string.h" 3
{ (_S_copy)(__p, __k1, __k2 - __k1); }
# 349 "/usr/include/c++/5/bits/basic_string.h" 3
static int _S_compare(size_type __n1, size_type __n2)
# 350 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 351 "/usr/include/c++/5/bits/basic_string.h" 3
const difference_type __d = (difference_type)(__n1 - __n2);
# 353 "/usr/include/c++/5/bits/basic_string.h" 3
if (__d > __gnu_cxx::__numeric_traits< int> ::__max) {
# 354 "/usr/include/c++/5/bits/basic_string.h" 3
return __gnu_cxx::__numeric_traits_integer< int> ::__max; } else {
# 355 "/usr/include/c++/5/bits/basic_string.h" 3
if (__d < __gnu_cxx::__numeric_traits< int> ::__min) {
# 356 "/usr/include/c++/5/bits/basic_string.h" 3
return __gnu_cxx::__numeric_traits_integer< int> ::__min; } else {
# 358 "/usr/include/c++/5/bits/basic_string.h" 3
return (int)__d; } }
# 359 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 362 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_assign(const basic_string & __rcs);
# 365 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_mutate(size_type __pos, size_type __len1, const _CharT * __s, size_type __len2);
# 369 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_erase(size_type __pos, size_type __n);
# 379 "/usr/include/c++/5/bits/basic_string.h" 3
public: basic_string() : _M_dataplus(this->_M_local_data())
# 384 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_set_length(0); }
# 390 "/usr/include/c++/5/bits/basic_string.h" 3
explicit basic_string(const _Alloc &__a) : _M_dataplus(this->_M_local_data(), __a)
# 392 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_set_length(0); }
# 398 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(const basic_string &__str) : _M_dataplus(this->_M_local_data(), __str._M_get_allocator())
# 400 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct((__str._M_data()), (__str._M_data()) + __str.length()); }
# 410 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(const basic_string &__str, size_type __pos, size_type
# 411 "/usr/include/c++/5/bits/basic_string.h" 3
__n = npos) : _M_dataplus(this->_M_local_data())
# 413 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 414 "/usr/include/c++/5/bits/basic_string.h" 3
const _CharT *__start = (__str._M_data()) + __str._M_check(__pos, "basic_string::basic_string");
# 416 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct(__start, __start + __str._M_limit(__pos, __n));
# 417 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 426 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(const basic_string &__str, size_type __pos, size_type
# 427 "/usr/include/c++/5/bits/basic_string.h" 3
__n, const _Alloc &__a) : _M_dataplus(this->_M_local_data(), __a)
# 429 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 430 "/usr/include/c++/5/bits/basic_string.h" 3
const _CharT *__start = (__str._M_data()) + __str._M_check(__pos, "string::string");
# 432 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct(__start, __start + __str._M_limit(__pos, __n));
# 433 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 444 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(const _CharT *__s, size_type __n, const _Alloc &
# 445 "/usr/include/c++/5/bits/basic_string.h" 3
__a = _Alloc()) : _M_dataplus(this->_M_local_data(), __a)
# 447 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct(__s, __s + __n); }
# 454 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(const _CharT *__s, const _Alloc &__a = _Alloc()) : _M_dataplus(this->_M_local_data(), __a)
# 456 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct(__s, (__s) ? __s + traits_type::length(__s) : (__s + npos)); }
# 464 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(size_type __n, _CharT __c, const _Alloc &__a = _Alloc()) : _M_dataplus(this->_M_local_data(), __a)
# 466 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct(__n, __c); }
# 532 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InputIterator>
# 534 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(_InputIterator __beg, _InputIterator __end, const _Alloc &
# 535 "/usr/include/c++/5/bits/basic_string.h" 3
__a = _Alloc()) : _M_dataplus(this->_M_local_data(), __a)
# 537 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct(__beg, __end); }
# 542 "/usr/include/c++/5/bits/basic_string.h" 3
~basic_string()
# 543 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_dispose(); }
# 550 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator=(const basic_string &__str)
# 551 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->assign(__str)); }
# 558 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator=(const _CharT *__s)
# 559 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->assign(__s)); }
# 569 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator=(_CharT __c)
# 570 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 571 "/usr/include/c++/5/bits/basic_string.h" 3
(this->assign(1, __c));
# 572 "/usr/include/c++/5/bits/basic_string.h" 3
return *this;
# 573 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 611 "/usr/include/c++/5/bits/basic_string.h" 3
iterator begin()
# 612 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((iterator)(_M_data())); }
# 619 "/usr/include/c++/5/bits/basic_string.h" 3
const_iterator begin() const
# 620 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_iterator)(_M_data())); }
# 627 "/usr/include/c++/5/bits/basic_string.h" 3
iterator end()
# 628 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((iterator)(_M_data() + this->size())); }
# 635 "/usr/include/c++/5/bits/basic_string.h" 3
const_iterator end() const
# 636 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_iterator)(_M_data() + this->size())); }
# 644 "/usr/include/c++/5/bits/basic_string.h" 3
reverse_iterator rbegin()
# 645 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((reverse_iterator)(this->end())); }
# 653 "/usr/include/c++/5/bits/basic_string.h" 3
const_reverse_iterator rbegin() const
# 654 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_reverse_iterator)(this->end())); }
# 662 "/usr/include/c++/5/bits/basic_string.h" 3
reverse_iterator rend()
# 663 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((reverse_iterator)(this->begin())); }
# 671 "/usr/include/c++/5/bits/basic_string.h" 3
const_reverse_iterator rend() const
# 672 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 715 "/usr/include/c++/5/bits/basic_string.h" 3
size_type size() const
# 716 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_string_length; }
# 721 "/usr/include/c++/5/bits/basic_string.h" 3
size_type length() const
# 722 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_string_length; }
# 726 "/usr/include/c++/5/bits/basic_string.h" 3
size_type max_size() const
# 727 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (_Alloc_traits::max_size(this->_M_get_allocator()) - 1) / 2; }
# 740 "/usr/include/c++/5/bits/basic_string.h" 3
void resize(size_type __n, _CharT __c);
# 753 "/usr/include/c++/5/bits/basic_string.h" 3
void resize(size_type __n)
# 754 "/usr/include/c++/5/bits/basic_string.h" 3
{ (this->resize(__n, _CharT())); }
# 778 "/usr/include/c++/5/bits/basic_string.h" 3
size_type capacity() const
# 779 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 780 "/usr/include/c++/5/bits/basic_string.h" 3
return (_M_is_local()) ? (size_type)(_S_local_capacity) : (__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity);
# 782 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 802 "/usr/include/c++/5/bits/basic_string.h" 3
void reserve(size_type __res_arg = 0);
# 808 "/usr/include/c++/5/bits/basic_string.h" 3
void clear()
# 809 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_set_length(0); }
# 816 "/usr/include/c++/5/bits/basic_string.h" 3
bool empty() const
# 817 "/usr/include/c++/5/bits/basic_string.h" 3
{ return this->size() == 0; }
# 831 "/usr/include/c++/5/bits/basic_string.h" 3
const_reference operator[](size_type __pos) const
# 832 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 833 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 834 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_data()[__pos];
# 835 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 848 "/usr/include/c++/5/bits/basic_string.h" 3
reference operator[](size_type __pos)
# 849 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 852 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 854 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 855 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_data()[__pos];
# 856 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 869 "/usr/include/c++/5/bits/basic_string.h" 3
const_reference at(size_type __n) const
# 870 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 871 "/usr/include/c++/5/bits/basic_string.h" 3
if (__n >= this->size()) {
# 872 "/usr/include/c++/5/bits/basic_string.h" 3
__throw_out_of_range_fmt("basic_string::at: __n (which is %zu) >= this->size() (which is %zu)", __n, this->size()); }
# 876 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_data()[__n];
# 877 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 890 "/usr/include/c++/5/bits/basic_string.h" 3
reference at(size_type __n)
# 891 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 892 "/usr/include/c++/5/bits/basic_string.h" 3
if (__n >= size()) {
# 893 "/usr/include/c++/5/bits/basic_string.h" 3
__throw_out_of_range_fmt("basic_string::at: __n (which is %zu) >= this->size() (which is %zu)", __n, this->size()); }
# 897 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_data()[__n];
# 898 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 941 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator+=(const basic_string &__str)
# 942 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->append(__str)); }
# 950 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator+=(const _CharT *__s)
# 951 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->append(__s)); }
# 959 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator+=(_CharT __c)
# 960 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 961 "/usr/include/c++/5/bits/basic_string.h" 3
this->push_back(__c);
# 962 "/usr/include/c++/5/bits/basic_string.h" 3
return *this;
# 963 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 982 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &append(const basic_string &__str)
# 983 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_append((__str._M_data()), __str.size()); }
# 999 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &append(const basic_string &__str, size_type __pos, size_type __n)
# 1000 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_append((__str._M_data()) + __str._M_check(__pos, "basic_string::append"), __str._M_limit(__pos, __n));
# 1002 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1011 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &append(const _CharT *__s, size_type __n)
# 1012 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1013 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1014 "/usr/include/c++/5/bits/basic_string.h" 3
_M_check_length((size_type)0, __n, "basic_string::append");
# 1015 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_append(__s, __n);
# 1016 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1024 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &append(const _CharT *__s)
# 1025 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1026 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1027 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __n = traits_type::length(__s);
# 1028 "/usr/include/c++/5/bits/basic_string.h" 3
_M_check_length((size_type)0, __n, "basic_string::append");
# 1029 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_append(__s, __n);
# 1030 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1041 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &append(size_type __n, _CharT __c)
# 1042 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_replace_aux(this->size(), (size_type)0, __n, __c); }
# 1067 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InputIterator> basic_string &
# 1070 "/usr/include/c++/5/bits/basic_string.h" 3
append(_InputIterator __first, _InputIterator __last)
# 1071 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(this->end(), this->end(), __first, __last)); }
# 1078 "/usr/include/c++/5/bits/basic_string.h" 3
void push_back(_CharT __c)
# 1079 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1080 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __size = this->size();
# 1081 "/usr/include/c++/5/bits/basic_string.h" 3
if ((__size + 1) > this->capacity()) {
# 1082 "/usr/include/c++/5/bits/basic_string.h" 3
this->_M_mutate(__size, (size_type)0, 0, (size_type)1); }
# 1083 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign((this->_M_data())[__size], __c);
# 1084 "/usr/include/c++/5/bits/basic_string.h" 3
this->_M_set_length(__size + 1);
# 1085 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1093 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(const basic_string &__str)
# 1094 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1095 "/usr/include/c++/5/bits/basic_string.h" 3
this->_M_assign(__str);
# 1096 "/usr/include/c++/5/bits/basic_string.h" 3
return *this;
# 1097 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1131 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(const basic_string &__str, size_type __pos, size_type __n)
# 1132 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_replace((size_type)0, this->size(), (__str._M_data()) + __str._M_check(__pos, "basic_string::assign"), __str._M_limit(__pos, __n));
# 1134 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1147 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(const _CharT *__s, size_type __n)
# 1148 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1149 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1150 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_replace((size_type)0, this->size(), __s, __n);
# 1151 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1163 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(const _CharT *__s)
# 1164 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1165 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1166 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_replace((size_type)0, this->size(), __s, traits_type::length(__s));
# 1168 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1180 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(size_type __n, _CharT __c)
# 1181 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_replace_aux((size_type)0, this->size(), __n, __c); }
# 1195 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InputIterator> basic_string &
# 1198 "/usr/include/c++/5/bits/basic_string.h" 3
assign(_InputIterator __first, _InputIterator __last)
# 1199 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(this->begin(), this->end(), __first, __last)); }
# 1251 "/usr/include/c++/5/bits/basic_string.h" 3
void insert(iterator __p, size_type __n, _CharT __c)
# 1252 "/usr/include/c++/5/bits/basic_string.h" 3
{ (this->replace(__p, __p, __n, __c)); }
# 1293 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InputIterator> void
# 1295 "/usr/include/c++/5/bits/basic_string.h" 3
insert(iterator __p, _InputIterator __beg, _InputIterator __end)
# 1296 "/usr/include/c++/5/bits/basic_string.h" 3
{ (this->replace(__p, __p, __beg, __end)); }
# 1327 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &insert(size_type __pos1, const basic_string &__str)
# 1328 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__pos1, (size_type)0, (__str._M_data()), __str.size()));
# 1329 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1350 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &insert(size_type __pos1, const basic_string &__str, size_type
# 1351 "/usr/include/c++/5/bits/basic_string.h" 3
__pos2, size_type __n)
# 1352 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__pos1, (size_type)0, (__str._M_data()) + __str._M_check(__pos2, "basic_string::insert"), __str._M_limit(__pos2, __n)));
# 1354 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1373 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &insert(size_type __pos, const _CharT *__s, size_type __n)
# 1374 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__pos, (size_type)0, __s, __n)); }
# 1392 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &insert(size_type __pos, const _CharT *__s)
# 1393 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1394 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1395 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__pos, (size_type)0, __s, traits_type::length(__s)));
# 1397 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1416 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &insert(size_type __pos, size_type __n, _CharT __c)
# 1417 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_replace_aux(_M_check(__pos, "basic_string::insert"), (size_type)0, __n, __c);
# 1418 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1434 "/usr/include/c++/5/bits/basic_string.h" 3
iterator insert(__const_iterator __p, _CharT __c)
# 1435 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1436 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1437 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __pos = __p - this->begin();
# 1438 "/usr/include/c++/5/bits/basic_string.h" 3
_M_replace_aux(__pos, (size_type)0, (size_type)1, __c);
# 1439 "/usr/include/c++/5/bits/basic_string.h" 3
return ((iterator)(_M_data() + __pos));
# 1440 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1458 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &erase(size_type __pos = 0, size_type __n = npos)
# 1459 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1460 "/usr/include/c++/5/bits/basic_string.h" 3
this->_M_erase(_M_check(__pos, "basic_string::erase"), _M_limit(__pos, __n));
# 1462 "/usr/include/c++/5/bits/basic_string.h" 3
return *this;
# 1463 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1474 "/usr/include/c++/5/bits/basic_string.h" 3
iterator erase(__const_iterator __position)
# 1475 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1477 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1478 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __pos = __position - this->begin();
# 1479 "/usr/include/c++/5/bits/basic_string.h" 3
this->_M_erase(__pos, (size_type)1);
# 1480 "/usr/include/c++/5/bits/basic_string.h" 3
return ((iterator)(_M_data() + __pos));
# 1481 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1493 "/usr/include/c++/5/bits/basic_string.h" 3
iterator erase(__const_iterator __first, __const_iterator __last)
# 1494 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1496 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1497 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __pos = __first - this->begin();
# 1498 "/usr/include/c++/5/bits/basic_string.h" 3
this->_M_erase(__pos, __last - __first);
# 1499 "/usr/include/c++/5/bits/basic_string.h" 3
return ((iterator)((this->_M_data()) + __pos));
# 1500 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1531 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(size_type __pos, size_type __n, const basic_string &__str)
# 1532 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__pos, __n, (__str._M_data()), __str.size())); }
# 1553 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(size_type __pos1, size_type __n1, const basic_string &__str, size_type
# 1554 "/usr/include/c++/5/bits/basic_string.h" 3
__pos2, size_type __n2)
# 1555 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__pos1, __n1, (__str._M_data()) + __str._M_check(__pos2, "basic_string::replace"), __str._M_limit(__pos2, __n2)));
# 1557 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1578 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type
# 1579 "/usr/include/c++/5/bits/basic_string.h" 3
__n2)
# 1580 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1581 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1582 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_replace(_M_check(__pos, "basic_string::replace"), _M_limit(__pos, __n1), __s, __n2);
# 1584 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1603 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(size_type __pos, size_type __n1, const _CharT *__s)
# 1604 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1605 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1606 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__pos, __n1, __s, traits_type::length(__s)));
# 1607 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1627 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
# 1628 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_replace_aux(_M_check(__pos, "basic_string::replace"), _M_limit(__pos, __n1), __n2, __c);
# 1629 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1645 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, const basic_string &
# 1646 "/usr/include/c++/5/bits/basic_string.h" 3
__str)
# 1647 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__i1, __i2, (__str._M_data()), __str.size())); }
# 1665 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, const _CharT *
# 1666 "/usr/include/c++/5/bits/basic_string.h" 3
__s, size_type __n)
# 1667 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1669 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1670 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__i1 - this->begin(), __i2 - __i1, __s, __n));
# 1671 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1687 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, const _CharT *__s)
# 1688 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1689 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1690 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__i1, __i2, __s, traits_type::length(__s)));
# 1691 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1708 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, size_type __n, _CharT
# 1709 "/usr/include/c++/5/bits/basic_string.h" 3
__c)
# 1710 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1712 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1713 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_replace_aux(__i1 - this->begin(), __i2 - __i1, __n, __c);
# 1714 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1745 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InputIterator> basic_string &
# 1751 "/usr/include/c++/5/bits/basic_string.h" 3
replace(iterator __i1, iterator __i2, _InputIterator
# 1752 "/usr/include/c++/5/bits/basic_string.h" 3
__k1, _InputIterator __k2)
# 1753 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1755 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1756 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1757 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __is_integer< _InputIterator> ::__type _Integral;
# 1758 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
# 1759 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1765 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, _CharT *
# 1766 "/usr/include/c++/5/bits/basic_string.h" 3
__k1, _CharT *__k2)
# 1767 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1769 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1770 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1771 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__i1 - this->begin(), __i2 - __i1, __k1, __k2 - __k1));
# 1773 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1776 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, const _CharT *
# 1777 "/usr/include/c++/5/bits/basic_string.h" 3
__k1, const _CharT *__k2)
# 1778 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1780 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1781 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1782 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__i1 - this->begin(), __i2 - __i1, __k1, __k2 - __k1));
# 1784 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1787 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, iterator
# 1788 "/usr/include/c++/5/bits/basic_string.h" 3
__k1, iterator __k2)
# 1789 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1791 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1792 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1793 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__i1 - this->begin(), __i2 - __i1, (__k1.base()), __k2 - __k1));
# 1795 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1798 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, const_iterator
# 1799 "/usr/include/c++/5/bits/basic_string.h" 3
__k1, const_iterator __k2)
# 1800 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1802 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1803 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1804 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__i1 - this->begin(), __i2 - __i1, (__k1.base()), __k2 - __k1));
# 1806 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1831 "/usr/include/c++/5/bits/basic_string.h" 3
private:
# 1829 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _Integer> basic_string &
# 1831 "/usr/include/c++/5/bits/basic_string.h" 3
_M_replace_dispatch(const_iterator __i1, const_iterator __i2, _Integer
# 1832 "/usr/include/c++/5/bits/basic_string.h" 3
__n, _Integer __val, __true_type)
# 1833 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_replace_aux(__i1 - this->begin(), __i2 - __i1, __n, __val); }
# 1835 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InputIterator> basic_string &_M_replace_dispatch(const_iterator __i1, const_iterator __i2, _InputIterator __k1, _InputIterator __k2, __false_type);
# 1842 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c);
# 1846 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &_M_replace(size_type __pos, size_type __len1, const _CharT * __s, const size_type __len2);
# 1850 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &_M_append(const _CharT * __s, size_type __n);
# 1867 "/usr/include/c++/5/bits/basic_string.h" 3
public: size_type copy(_CharT * __s, size_type __n, size_type __pos = 0) const;
# 1877 "/usr/include/c++/5/bits/basic_string.h" 3
void swap(basic_string & __s);
# 1887 "/usr/include/c++/5/bits/basic_string.h" 3
const _CharT *c_str() const
# 1888 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_data(); }
# 1897 "/usr/include/c++/5/bits/basic_string.h" 3
const _CharT *data() const
# 1898 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_data(); }
# 1904 "/usr/include/c++/5/bits/basic_string.h" 3
allocator_type get_allocator() const
# 1905 "/usr/include/c++/5/bits/basic_string.h" 3
{ return this->_M_get_allocator(); }
# 1920 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find(const _CharT * __s, size_type __pos, size_type __n) const;
# 1933 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find(const basic_string &__str, size_type __pos = 0) const
# 1935 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->find(__str.data(), __pos, __str.size())); }
# 1948 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find(const _CharT *__s, size_type __pos = 0) const
# 1949 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1950 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1951 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->find(__s, __pos, traits_type::length(__s)));
# 1952 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1965 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find(_CharT __c, size_type __pos = 0) const;
# 1978 "/usr/include/c++/5/bits/basic_string.h" 3
size_type rfind(const basic_string &__str, size_type __pos = npos) const
# 1980 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->rfind(__str.data(), __pos, __str.size())); }
# 1995 "/usr/include/c++/5/bits/basic_string.h" 3
size_type rfind(const _CharT * __s, size_type __pos, size_type __n) const;
# 2008 "/usr/include/c++/5/bits/basic_string.h" 3
size_type rfind(const _CharT *__s, size_type __pos = npos) const
# 2009 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 2010 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 2011 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->rfind(__s, __pos, traits_type::length(__s)));
# 2012 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2025 "/usr/include/c++/5/bits/basic_string.h" 3
size_type rfind(_CharT __c, size_type __pos = npos) const;
# 2039 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_of(const basic_string &__str, size_type __pos = 0) const
# 2041 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->find_first_of(__str.data(), __pos, __str.size())); }
# 2056 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_of(const _CharT * __s, size_type __pos, size_type __n) const;
# 2069 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_of(const _CharT *__s, size_type __pos = 0) const
# 2070 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 2071 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 2072 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->find_first_of(__s, __pos, traits_type::length(__s)));
# 2073 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2088 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_of(_CharT __c, size_type __pos = 0) const
# 2089 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->find(__c, __pos)); }
# 2103 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_of(const basic_string &__str, size_type __pos = npos) const
# 2105 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->find_last_of(__str.data(), __pos, __str.size())); }
# 2120 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_of(const _CharT * __s, size_type __pos, size_type __n) const;
# 2133 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_of(const _CharT *__s, size_type __pos = npos) const
# 2134 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 2135 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 2136 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->find_last_of(__s, __pos, traits_type::length(__s)));
# 2137 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2152 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_of(_CharT __c, size_type __pos = npos) const
# 2153 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->rfind(__c, __pos)); }
# 2166 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_not_of(const basic_string &__str, size_type __pos = 0) const
# 2168 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->find_first_not_of(__str.data(), __pos, __str.size())); }
# 2183 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_not_of(const _CharT * __s, size_type __pos, size_type __n) const;
# 2197 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_not_of(const _CharT *__s, size_type __pos = 0) const
# 2198 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 2199 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 2200 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->find_first_not_of(__s, __pos, traits_type::length(__s)));
# 2201 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2214 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_not_of(_CharT __c, size_type __pos = 0) const;
# 2229 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_not_of(const basic_string &__str, size_type __pos = npos) const
# 2231 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->find_last_not_of(__str.data(), __pos, __str.size())); }
# 2246 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_not_of(const _CharT * __s, size_type __pos, size_type __n) const;
# 2260 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_not_of(const _CharT *__s, size_type __pos = npos) const
# 2261 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 2262 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 2263 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->find_last_not_of(__s, __pos, traits_type::length(__s)));
# 2264 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2277 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_not_of(_CharT __c, size_type __pos = npos) const;
# 2293 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string substr(size_type __pos = 0, size_type __n = npos) const
# 2294 "/usr/include/c++/5/bits/basic_string.h" 3
{ return basic_string(*this, _M_check(__pos, "basic_string::substr"), __n);
# 2295 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2312 "/usr/include/c++/5/bits/basic_string.h" 3
int compare(const basic_string &__str) const
# 2313 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 2314 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __size = this->size();
# 2315 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __osize = __str.size();
# 2316 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __len = std::min(__size, __osize);
# 2318 "/usr/include/c++/5/bits/basic_string.h" 3
int __r = traits_type::compare(_M_data(), __str.data(), __len);
# 2319 "/usr/include/c++/5/bits/basic_string.h" 3
if (!__r) {
# 2320 "/usr/include/c++/5/bits/basic_string.h" 3
__r = (_S_compare)(__size, __osize); }
# 2321 "/usr/include/c++/5/bits/basic_string.h" 3
return __r;
# 2322 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2344 "/usr/include/c++/5/bits/basic_string.h" 3
int compare(size_type __pos, size_type __n, const basic_string & __str) const;
# 2370 "/usr/include/c++/5/bits/basic_string.h" 3
int compare(size_type __pos1, size_type __n1, const basic_string & __str, size_type __pos2, size_type __n2) const;
# 2388 "/usr/include/c++/5/bits/basic_string.h" 3
int compare(const _CharT * __s) const;
# 2412 "/usr/include/c++/5/bits/basic_string.h" 3
int compare(size_type __pos, size_type __n1, const _CharT * __s) const;
# 2439 "/usr/include/c++/5/bits/basic_string.h" 3
int compare(size_type __pos, size_type __n1, const _CharT * __s, size_type __n2) const;
# 2441 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 2442 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 4781 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4783 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4784 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4785 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 4786 "/usr/include/c++/5/bits/basic_string.h" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> __str(__lhs);
# 4787 "/usr/include/c++/5/bits/basic_string.h" 3
(__str.append(__rhs));
# 4788 "/usr/include/c++/5/bits/basic_string.h" 3
return __str;
# 4789 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 4797 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc> operator+(const _CharT * __lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> & __rhs);
# 4808 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc> operator+(_CharT __lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> & __rhs);
# 4818 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4820 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 4821 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4822 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 4823 "/usr/include/c++/5/bits/basic_string.h" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> __str(__lhs);
# 4824 "/usr/include/c++/5/bits/basic_string.h" 3
(__str.append(__rhs));
# 4825 "/usr/include/c++/5/bits/basic_string.h" 3
return __str;
# 4826 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 4834 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4836 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, _CharT __rhs)
# 4837 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 4838 "/usr/include/c++/5/bits/basic_string.h" 3
typedef __cxx11::basic_string< _CharT, _Traits, _Alloc> __string_type;
# 4839 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 4840 "/usr/include/c++/5/bits/basic_string.h" 3
__string_type __str(__lhs);
# 4841 "/usr/include/c++/5/bits/basic_string.h" 3
(__str.append((__size_type)1, __rhs));
# 4842 "/usr/include/c++/5/bits/basic_string.h" 3
return __str;
# 4843 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 4902 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4904 "/usr/include/c++/5/bits/basic_string.h" 3
operator==(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4905 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4906 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) == 0; }
# 4908 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT> inline typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, bool> ::__type
# 4911 "/usr/include/c++/5/bits/basic_string.h" 3
operator==(const __cxx11::basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > &__lhs, const __cxx11::basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > &
# 4912 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4913 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((__lhs.size()) == (__rhs.size())) && (!std::char_traits< _CharT> ::compare((__lhs.data()), (__rhs.data()), (__lhs.size())));
# 4915 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 4923 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4925 "/usr/include/c++/5/bits/basic_string.h" 3
operator==(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4926 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4927 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) == 0; }
# 4935 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4937 "/usr/include/c++/5/bits/basic_string.h" 3
operator==(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 4938 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4939 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) == 0; }
# 4948 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4950 "/usr/include/c++/5/bits/basic_string.h" 3
operator!=(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4951 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4952 "/usr/include/c++/5/bits/basic_string.h" 3
{ return !(__lhs == __rhs); }
# 4960 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4962 "/usr/include/c++/5/bits/basic_string.h" 3
operator!=(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4963 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4964 "/usr/include/c++/5/bits/basic_string.h" 3
{ return !(__lhs == __rhs); }
# 4972 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4974 "/usr/include/c++/5/bits/basic_string.h" 3
operator!=(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 4975 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4976 "/usr/include/c++/5/bits/basic_string.h" 3
{ return !(__lhs == __rhs); }
# 4985 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4987 "/usr/include/c++/5/bits/basic_string.h" 3
operator<(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4988 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4989 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) < 0; }
# 4997 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4999 "/usr/include/c++/5/bits/basic_string.h" 3
operator<(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 5000 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5001 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) < 0; }
# 5009 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5011 "/usr/include/c++/5/bits/basic_string.h" 3
operator<(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5012 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5013 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) > 0; }
# 5022 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5024 "/usr/include/c++/5/bits/basic_string.h" 3
operator>(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5025 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5026 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) > 0; }
# 5034 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5036 "/usr/include/c++/5/bits/basic_string.h" 3
operator>(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 5037 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5038 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) > 0; }
# 5046 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5048 "/usr/include/c++/5/bits/basic_string.h" 3
operator>(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5049 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5050 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) < 0; }
# 5059 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5061 "/usr/include/c++/5/bits/basic_string.h" 3
operator<=(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5062 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5063 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) <= 0; }
# 5071 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5073 "/usr/include/c++/5/bits/basic_string.h" 3
operator<=(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 5074 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5075 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) <= 0; }
# 5083 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5085 "/usr/include/c++/5/bits/basic_string.h" 3
operator<=(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5086 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5087 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) >= 0; }
# 5096 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5098 "/usr/include/c++/5/bits/basic_string.h" 3
operator>=(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5099 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5100 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) >= 0; }
# 5108 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5110 "/usr/include/c++/5/bits/basic_string.h" 3
operator>=(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 5111 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5112 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) >= 0; }
# 5120 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5122 "/usr/include/c++/5/bits/basic_string.h" 3
operator>=(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5123 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5124 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) <= 0; }
# 5133 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline void
# 5135 "/usr/include/c++/5/bits/basic_string.h" 3
swap(__cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5136 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5137 "/usr/include/c++/5/bits/basic_string.h" 3
{ (__lhs.swap(__rhs)); }
# 5152 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> basic_istream< _CharT, _Traits> &operator>>(basic_istream< _CharT, _Traits> & __is, __cxx11::basic_string< _CharT, _Traits, _Alloc> & __str);
# 5159 "/usr/include/c++/5/bits/basic_string.h" 3
template<> basic_istream< char> &operator>>(basic_istream< char> & __is, __cxx11::basic_string< char, char_traits< char> , allocator< char> > & __str);
# 5170 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline basic_ostream< _CharT, _Traits> &
# 5172 "/usr/include/c++/5/bits/basic_string.h" 3
operator<<(basic_ostream< _CharT, _Traits> &__os, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5173 "/usr/include/c++/5/bits/basic_string.h" 3
__str)
# 5174 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 5177 "/usr/include/c++/5/bits/basic_string.h" 3
return __ostream_insert(__os, (__str.data()), (__str.size()));
# 5178 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5193 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> basic_istream< _CharT, _Traits> &getline(basic_istream< _CharT, _Traits> & __is, __cxx11::basic_string< _CharT, _Traits, _Alloc> & __str, _CharT __delim);
# 5210 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline basic_istream< _CharT, _Traits> &
# 5212 "/usr/include/c++/5/bits/basic_string.h" 3
getline(basic_istream< _CharT, _Traits> &__is, __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5213 "/usr/include/c++/5/bits/basic_string.h" 3
__str)
# 5214 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::getline(__is, __str, (__is.widen('\n'))); }
# 5234 "/usr/include/c++/5/bits/basic_string.h" 3
template<> basic_istream< char> &getline(basic_istream< char> & __in, __cxx11::basic_string< char, char_traits< char> , allocator< char> > & __str, char __delim);
# 5240 "/usr/include/c++/5/bits/basic_string.h" 3
template<> basic_istream< wchar_t> &getline(basic_istream< wchar_t> & __in, __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str, wchar_t __delim);
# 5245 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 46 "/usr/include/c++/5/bits/basic_string.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 54 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::npos;
# 56 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 59 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::swap(basic_string &__s)
# 60 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 61 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (this == (&__s)) {
# 62 "/usr/include/c++/5/bits/basic_string.tcc" 3
return; }
# 67 "/usr/include/c++/5/bits/basic_string.tcc" 3
std::__alloc_swap< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::_S_do_it(this->_M_get_allocator(), __s._M_get_allocator());
# 70 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (_M_is_local()) {
# 71 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__s._M_is_local())
# 72 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 73 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (length() && __s.length())
# 74 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 75 "/usr/include/c++/5/bits/basic_string.tcc" 3
_CharT __tmp_data[(_S_local_capacity) + 1];
# 76 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__tmp_data, __s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 78 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 80 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __tmp_data, (_S_local_capacity) + 1);
# 82 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 83 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__s.length())
# 84 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 85 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 87 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_length(__s.length());
# 88 "/usr/include/c++/5/bits/basic_string.tcc" 3
__s._M_set_length(0);
# 89 "/usr/include/c++/5/bits/basic_string.tcc" 3
return;
# 90 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 91 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (length())
# 92 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 93 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 95 "/usr/include/c++/5/bits/basic_string.tcc" 3
__s._M_length(length());
# 96 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_set_length(0);
# 97 "/usr/include/c++/5/bits/basic_string.tcc" 3
return;
# 98 "/usr/include/c++/5/bits/basic_string.tcc" 3
} } }
# 99 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else
# 101 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 102 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __tmp_capacity = __s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity;
# 103 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 105 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data((__s._M_data()));
# 106 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__s._M_data(__s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf));
# 107 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__tmp_capacity);
# 108 "/usr/include/c++/5/bits/basic_string.tcc" 3
} } else
# 110 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 111 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __tmp_capacity = __cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity;
# 112 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__s._M_is_local())
# 113 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 114 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 116 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__s._M_data(_M_data()));
# 117 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf);
# 118 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else
# 120 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 121 "/usr/include/c++/5/bits/basic_string.tcc" 3
pointer __tmp_ptr = _M_data();
# 122 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data((__s._M_data()));
# 123 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__s._M_data(__tmp_ptr));
# 124 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity);
# 125 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 126 "/usr/include/c++/5/bits/basic_string.tcc" 3
__s._M_capacity(__tmp_capacity);
# 127 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 129 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __tmp_length = length();
# 130 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_length(__s.length());
# 131 "/usr/include/c++/5/bits/basic_string.tcc" 3
__s._M_length(__tmp_length);
# 132 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 134 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::pointer
# 137 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_create(size_type &__capacity, size_type __old_capacity)
# 138 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 141 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__capacity > max_size()) {
# 142 "/usr/include/c++/5/bits/basic_string.tcc" 3
std::__throw_length_error("basic_string::_M_create"); }
# 147 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((__capacity > __old_capacity) && (__capacity < (2 * __old_capacity)))
# 148 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 149 "/usr/include/c++/5/bits/basic_string.tcc" 3
__capacity = (2 * __old_capacity);
# 151 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__capacity > max_size()) {
# 152 "/usr/include/c++/5/bits/basic_string.tcc" 3
__capacity = max_size(); }
# 153 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 157 "/usr/include/c++/5/bits/basic_string.tcc" 3
return _Alloc_traits::allocate(this->_M_get_allocator(), __capacity + 1);
# 158 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 164 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 165 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _InIterator> void
# 168 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_construct(_InIterator __beg, _InIterator __end, input_iterator_tag)
# 170 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 171 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __len = (0);
# 172 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __capacity = ((size_type)(_S_local_capacity));
# 174 "/usr/include/c++/5/bits/basic_string.tcc" 3
while ((__beg != __end) && (__len < __capacity))
# 175 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 176 "/usr/include/c++/5/bits/basic_string.tcc" 3
(_M_data()[__len++]) = (*__beg);
# 177 "/usr/include/c++/5/bits/basic_string.tcc" 3
++__beg;
# 178 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 180 "/usr/include/c++/5/bits/basic_string.tcc" 3
try
# 181 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 182 "/usr/include/c++/5/bits/basic_string.tcc" 3
while (__beg != __end)
# 183 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 184 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__len == __capacity)
# 185 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 187 "/usr/include/c++/5/bits/basic_string.tcc" 3
__capacity = (__len + 1);
# 188 "/usr/include/c++/5/bits/basic_string.tcc" 3
pointer __another = _M_create(__capacity, __len);
# 189 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__another, _M_data(), __len));
# 190 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_dispose();
# 191 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(__another);
# 192 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__capacity);
# 193 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 194 "/usr/include/c++/5/bits/basic_string.tcc" 3
(_M_data()[__len++]) = (*__beg);
# 195 "/usr/include/c++/5/bits/basic_string.tcc" 3
++__beg;
# 196 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 197 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 198 "/usr/include/c++/5/bits/basic_string.tcc" 3
catch (...)
# 199 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 200 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_dispose();
# 201 "/usr/include/c++/5/bits/basic_string.tcc" 3
throw;
# 202 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 204 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_set_length(__len);
# 205 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 207 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 208 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _InIterator> void
# 211 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_construct(_InIterator __beg, _InIterator __end, forward_iterator_tag)
# 213 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 215 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__gnu_cxx::__is_null_pointer(__beg) && (__beg != __end)) {
# 216 "/usr/include/c++/5/bits/basic_string.tcc" 3
std::__throw_logic_error("basic_string::_M_construct null not valid"); }
# 219 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __dnew = static_cast< size_type>(std::distance(__beg, __end));
# 221 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__dnew > ((size_type)(_S_local_capacity)))
# 222 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 223 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(_M_create(__dnew, (size_type)0));
# 224 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__dnew);
# 225 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 228 "/usr/include/c++/5/bits/basic_string.tcc" 3
try
# 229 "/usr/include/c++/5/bits/basic_string.tcc" 3
{ (this->_S_copy_chars(_M_data(), __beg, __end)); }
# 230 "/usr/include/c++/5/bits/basic_string.tcc" 3
catch (...)
# 231 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 232 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_dispose();
# 233 "/usr/include/c++/5/bits/basic_string.tcc" 3
throw;
# 234 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 236 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_set_length(__dnew);
# 237 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 239 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 242 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_construct(size_type __n, _CharT __c)
# 243 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 244 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n > ((size_type)(_S_local_capacity)))
# 245 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 246 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(_M_create(__n, (size_type)0));
# 247 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__n);
# 248 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 250 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n) {
# 251 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_assign(_M_data(), __n, __c)); }
# 253 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_set_length(__n);
# 254 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 256 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 259 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_assign(const basic_string &__str)
# 260 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 261 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (this != (&__str))
# 262 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 263 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __rsize = __str.length();
# 264 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __capacity = capacity();
# 266 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__rsize > __capacity)
# 267 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 268 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __new_capacity = __rsize;
# 269 "/usr/include/c++/5/bits/basic_string.tcc" 3
pointer __tmp = _M_create(__new_capacity, __capacity);
# 270 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_dispose();
# 271 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(__tmp);
# 272 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__new_capacity);
# 273 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 275 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__rsize) {
# 276 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(_M_data(), (__str._M_data()), __rsize)); }
# 278 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_set_length(__rsize);
# 279 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 280 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 282 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 285 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::reserve(size_type __res)
# 286 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 288 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__res < length()) {
# 289 "/usr/include/c++/5/bits/basic_string.tcc" 3
__res = length(); }
# 291 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __capacity = capacity();
# 292 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__res != __capacity)
# 293 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 294 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((__res > __capacity) || (__res > ((size_type)(_S_local_capacity))))
# 296 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 297 "/usr/include/c++/5/bits/basic_string.tcc" 3
pointer __tmp = _M_create(__res, __capacity);
# 298 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__tmp, _M_data(), length() + 1));
# 299 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_dispose();
# 300 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(__tmp);
# 301 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__res);
# 302 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 303 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!_M_is_local())
# 304 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 305 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(this->_M_local_data(), _M_data(), length() + 1));
# 306 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_destroy(__capacity);
# 307 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(this->_M_local_data());
# 308 "/usr/include/c++/5/bits/basic_string.tcc" 3
} }
# 309 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 310 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 312 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 315 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_mutate(size_type __pos, size_type __len1, const _CharT *__s, size_type
# 316 "/usr/include/c++/5/bits/basic_string.tcc" 3
__len2)
# 317 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 318 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __how_much = (length() - __pos) - __len1;
# 320 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __new_capacity = (length() + __len2) - __len1;
# 321 "/usr/include/c++/5/bits/basic_string.tcc" 3
pointer __r = _M_create(__new_capacity, capacity());
# 323 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__pos) {
# 324 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__r, _M_data(), __pos)); }
# 325 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__s && __len2) {
# 326 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__r + __pos, __s, __len2)); }
# 327 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__how_much) {
# 328 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy((__r + __pos) + __len2, (_M_data() + __pos) + __len1, __how_much)); }
# 331 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_dispose();
# 332 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(__r);
# 333 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__new_capacity);
# 334 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 336 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 339 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_erase(size_type __pos, size_type __n)
# 340 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 341 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __how_much = (length() - __pos) - __n;
# 343 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__how_much && __n) {
# 344 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(_M_data() + __pos, (_M_data() + __pos) + __n, __how_much)); }
# 346 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_set_length(length() - __n);
# 347 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 349 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 352 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::resize(size_type __n, _CharT __c)
# 353 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 354 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 355 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__size < __n) {
# 356 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->append(__n - __size, __c)); } else {
# 357 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n < __size) {
# 358 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_erase(__n, __size - __n); } }
# 359 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 361 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 364 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_append(const _CharT *__s, size_type __n)
# 365 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 366 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __len = __n + this->size();
# 368 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__len <= this->capacity())
# 369 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 370 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n) {
# 371 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy((this->_M_data()) + this->size(), __s, __n)); }
# 372 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 374 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_mutate(this->size(), (size_type)0, __s, __n); }
# 376 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_set_length(__len);
# 377 "/usr/include/c++/5/bits/basic_string.tcc" 3
return *this;
# 378 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 380 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 381 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _InputIterator> __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 384 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_replace_dispatch(const_iterator __i1, const_iterator __i2, _InputIterator
# 385 "/usr/include/c++/5/bits/basic_string.tcc" 3
__k1, _InputIterator __k2, __false_type)
# 387 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 388 "/usr/include/c++/5/bits/basic_string.tcc" 3
const basic_string __s(__k1, __k2);
# 389 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __n1 = __i2 - __i1;
# 390 "/usr/include/c++/5/bits/basic_string.tcc" 3
return _M_replace(__i1 - this->begin(), __n1, (__s._M_data()), __s.size());
# 392 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 394 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 397 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT
# 398 "/usr/include/c++/5/bits/basic_string.tcc" 3
__c)
# 399 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 400 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check_length(__n1, __n2, "basic_string::_M_replace_aux");
# 402 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __old_size = this->size();
# 403 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __new_size = (__old_size + __n2) - __n1;
# 405 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__new_size <= this->capacity())
# 406 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 407 "/usr/include/c++/5/bits/basic_string.tcc" 3
_CharT *__p = (this->_M_data()) + __pos1;
# 409 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __how_much = (__old_size - __pos1) - __n1;
# 410 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__how_much && (__n1 != __n2)) {
# 411 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(__p + __n2, __p + __n1, __how_much)); }
# 412 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 414 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_mutate(__pos1, __n1, 0, __n2); }
# 416 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n2) {
# 417 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_assign((this->_M_data()) + __pos1, __n2, __c)); }
# 419 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_set_length(__new_size);
# 420 "/usr/include/c++/5/bits/basic_string.tcc" 3
return *this;
# 421 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 423 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 426 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_replace(size_type __pos, size_type __len1, const _CharT *__s, const typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::size_type
# 427 "/usr/include/c++/5/bits/basic_string.tcc" 3
__len2)
# 428 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 429 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check_length(__len1, __len2, "basic_string::_M_replace");
# 431 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __old_size = this->size();
# 432 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __new_size = (__old_size + __len2) - __len1;
# 434 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__new_size <= this->capacity())
# 435 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 436 "/usr/include/c++/5/bits/basic_string.tcc" 3
_CharT *__p = (this->_M_data()) + __pos;
# 438 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __how_much = (__old_size - __pos) - __len1;
# 439 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (_M_disjunct(__s))
# 440 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 441 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__how_much && (__len1 != __len2)) {
# 442 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(__p + __len2, __p + __len1, __how_much)); }
# 443 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__len2) {
# 444 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__p, __s, __len2)); }
# 445 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else
# 447 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 449 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__len2 && (__len2 <= __len1)) {
# 450 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(__p, __s, __len2)); }
# 451 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__how_much && (__len1 != __len2)) {
# 452 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(__p + __len2, __p + __len1, __how_much)); }
# 453 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__len2 > __len1)
# 454 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 455 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((__s + __len2) <= (__p + __len1)) {
# 456 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(__p, __s, __len2)); } else {
# 457 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__s >= (__p + __len1)) {
# 458 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__p, (__s + __len2) - __len1, __len2)); } else
# 460 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 461 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __nleft = (__p + __len1) - __s;
# 462 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(__p, __s, __nleft));
# 463 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__p + __nleft, __p + __len2, __len2 - __nleft));
# 465 "/usr/include/c++/5/bits/basic_string.tcc" 3
} }
# 466 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 467 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 468 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 470 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_mutate(__pos, __len1, __s, __len2); }
# 472 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_set_length(__new_size);
# 473 "/usr/include/c++/5/bits/basic_string.tcc" 3
return *this;
# 474 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 476 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 479 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::copy(_CharT *__s, size_type __n, size_type __pos) const
# 480 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 481 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check(__pos, "basic_string::copy");
# 482 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n = _M_limit(__pos, __n);
# 483 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 484 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n) {
# 485 "/usr/include/c++/5/bits/basic_string.tcc" 3
(_S_copy)(__s, _M_data() + __pos, __n); }
# 487 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __n;
# 488 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1149 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 1151 "/usr/include/c++/5/bits/basic_string.tcc" 3
operator+(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 1152 "/usr/include/c++/5/bits/basic_string.tcc" 3
__rhs)
# 1153 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1154 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1155 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef __cxx11::basic_string< _CharT, _Traits, _Alloc> __string_type;
# 1156 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 1157 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __size_type __len = _Traits::length(__lhs);
# 1158 "/usr/include/c++/5/bits/basic_string.tcc" 3
__string_type __str;
# 1159 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.reserve(__len + (__rhs.size())));
# 1160 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.append(__lhs, __len));
# 1161 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.append(__rhs));
# 1162 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __str;
# 1163 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1165 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 1167 "/usr/include/c++/5/bits/basic_string.tcc" 3
operator+(_CharT __lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__rhs)
# 1168 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1169 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef __cxx11::basic_string< _CharT, _Traits, _Alloc> __string_type;
# 1170 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 1171 "/usr/include/c++/5/bits/basic_string.tcc" 3
__string_type __str;
# 1172 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __size_type __len = (__rhs.size());
# 1173 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.reserve(__len + 1));
# 1174 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.append((__size_type)1, __lhs));
# 1175 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.append(__rhs));
# 1176 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __str;
# 1177 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1179 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1182 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find(const _CharT *__s, size_type __pos, size_type __n) const
# 1183 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1184 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1185 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 1186 "/usr/include/c++/5/bits/basic_string.tcc" 3
const _CharT *__data = _M_data();
# 1188 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n == 0) {
# 1189 "/usr/include/c++/5/bits/basic_string.tcc" 3
return (__pos <= __size) ? __pos : npos; }
# 1191 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n <= __size)
# 1192 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1193 "/usr/include/c++/5/bits/basic_string.tcc" 3
for (; __pos <= (__size - __n); ++__pos) {
# 1194 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (traits_type::eq(__data[__pos], __s[0]) && (traits_type::compare((__data + __pos) + 1, __s + 1, __n - 1) == 0)) {
# 1197 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __pos; } }
# 1198 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1199 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1200 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1202 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1205 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find(_CharT __c, size_type __pos) const
# 1206 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1207 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __ret = npos;
# 1208 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 1209 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__pos < __size)
# 1210 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1211 "/usr/include/c++/5/bits/basic_string.tcc" 3
const _CharT *__data = _M_data();
# 1212 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __n = __size - __pos;
# 1213 "/usr/include/c++/5/bits/basic_string.tcc" 3
const _CharT *__p = traits_type::find(__data + __pos, __n, __c);
# 1214 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__p) {
# 1215 "/usr/include/c++/5/bits/basic_string.tcc" 3
__ret = (__p - __data); }
# 1216 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1217 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __ret;
# 1218 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1220 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1223 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::rfind(const _CharT *__s, size_type __pos, size_type __n) const
# 1224 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1225 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1226 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 1227 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n <= __size)
# 1228 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1229 "/usr/include/c++/5/bits/basic_string.tcc" 3
__pos = std::min((size_type)(__size - __n), __pos);
# 1230 "/usr/include/c++/5/bits/basic_string.tcc" 3
const _CharT *__data = _M_data();
# 1231 "/usr/include/c++/5/bits/basic_string.tcc" 3
do
# 1232 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1233 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (traits_type::compare(__data + __pos, __s, __n) == 0) {
# 1234 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __pos; }
# 1235 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1236 "/usr/include/c++/5/bits/basic_string.tcc" 3
while ((__pos--) > 0);
# 1237 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1238 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1239 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1241 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1244 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::rfind(_CharT __c, size_type __pos) const
# 1245 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1246 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __size = this->size();
# 1247 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__size)
# 1248 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1249 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((--__size) > __pos) {
# 1250 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size = __pos; }
# 1251 "/usr/include/c++/5/bits/basic_string.tcc" 3
for (++__size; (__size--) > 0;) {
# 1252 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (traits_type::eq(_M_data()[__size], __c)) {
# 1253 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __size; } }
# 1254 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1255 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1256 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1258 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1261 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find_first_of(const _CharT *__s, size_type __pos, size_type __n) const
# 1262 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1263 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1264 "/usr/include/c++/5/bits/basic_string.tcc" 3
for (; __n && (__pos < this->size()); ++__pos)
# 1265 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1266 "/usr/include/c++/5/bits/basic_string.tcc" 3
const _CharT *__p = traits_type::find(__s, __n, _M_data()[__pos]);
# 1267 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__p) {
# 1268 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __pos; }
# 1269 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1270 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1271 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1273 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1276 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find_last_of(const _CharT *__s, size_type __pos, size_type __n) const
# 1277 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1278 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1279 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __size = this->size();
# 1280 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__size && __n)
# 1281 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1282 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((--__size) > __pos) {
# 1283 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size = __pos; }
# 1284 "/usr/include/c++/5/bits/basic_string.tcc" 3
do
# 1285 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1286 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (traits_type::find(__s, __n, _M_data()[__size])) {
# 1287 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __size; }
# 1288 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1289 "/usr/include/c++/5/bits/basic_string.tcc" 3
while ((__size--) != 0);
# 1290 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1291 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1292 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1294 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1297 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const
# 1298 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1299 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1300 "/usr/include/c++/5/bits/basic_string.tcc" 3
for (; __pos < this->size(); ++__pos) {
# 1301 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!traits_type::find(__s, __n, _M_data()[__pos])) {
# 1302 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __pos; } }
# 1303 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1304 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1306 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1309 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find_first_not_of(_CharT __c, size_type __pos) const
# 1310 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1311 "/usr/include/c++/5/bits/basic_string.tcc" 3
for (; __pos < this->size(); ++__pos) {
# 1312 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!traits_type::eq(_M_data()[__pos], __c)) {
# 1313 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __pos; } }
# 1314 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1315 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1317 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1320 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const
# 1321 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1322 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1323 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __size = this->size();
# 1324 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__size)
# 1325 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1326 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((--__size) > __pos) {
# 1327 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size = __pos; }
# 1328 "/usr/include/c++/5/bits/basic_string.tcc" 3
do
# 1329 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1330 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!traits_type::find(__s, __n, _M_data()[__size])) {
# 1331 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __size; }
# 1332 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1333 "/usr/include/c++/5/bits/basic_string.tcc" 3
while (__size--);
# 1334 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1335 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1336 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1338 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1341 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find_last_not_of(_CharT __c, size_type __pos) const
# 1342 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1343 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __size = this->size();
# 1344 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__size)
# 1345 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1346 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((--__size) > __pos) {
# 1347 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size = __pos; }
# 1348 "/usr/include/c++/5/bits/basic_string.tcc" 3
do
# 1349 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1350 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!traits_type::eq(_M_data()[__size], __c)) {
# 1351 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __size; }
# 1352 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1353 "/usr/include/c++/5/bits/basic_string.tcc" 3
while (__size--);
# 1354 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1355 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1356 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1358 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 1361 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::compare(size_type __pos, size_type __n, const basic_string &__str) const
# 1362 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1363 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check(__pos, "basic_string::compare");
# 1364 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n = _M_limit(__pos, __n);
# 1365 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __osize = __str.size();
# 1366 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __len = std::min(__n, __osize);
# 1367 "/usr/include/c++/5/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data() + __pos, __str.data(), __len);
# 1368 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__r) {
# 1369 "/usr/include/c++/5/bits/basic_string.tcc" 3
__r = (_S_compare)(__n, __osize); }
# 1370 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __r;
# 1371 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1373 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 1376 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::compare(size_type __pos1, size_type __n1, const basic_string &__str, size_type
# 1377 "/usr/include/c++/5/bits/basic_string.tcc" 3
__pos2, size_type __n2) const
# 1378 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1379 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check(__pos1, "basic_string::compare");
# 1380 "/usr/include/c++/5/bits/basic_string.tcc" 3
__str._M_check(__pos2, "basic_string::compare");
# 1381 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n1 = _M_limit(__pos1, __n1);
# 1382 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n2 = __str._M_limit(__pos2, __n2);
# 1383 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __len = std::min(__n1, __n2);
# 1384 "/usr/include/c++/5/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data() + __pos1, __str.data() + __pos2, __len);
# 1386 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__r) {
# 1387 "/usr/include/c++/5/bits/basic_string.tcc" 3
__r = (_S_compare)(__n1, __n2); }
# 1388 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __r;
# 1389 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1391 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 1394 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::compare(const _CharT *__s) const
# 1395 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1396 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1397 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 1398 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __osize = traits_type::length(__s);
# 1399 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __len = std::min(__size, __osize);
# 1400 "/usr/include/c++/5/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data(), __s, __len);
# 1401 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__r) {
# 1402 "/usr/include/c++/5/bits/basic_string.tcc" 3
__r = (_S_compare)(__size, __osize); }
# 1403 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __r;
# 1404 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1406 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 1409 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::compare(size_type __pos, size_type __n1, const _CharT *__s) const
# 1410 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1411 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1412 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check(__pos, "basic_string::compare");
# 1413 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n1 = _M_limit(__pos, __n1);
# 1414 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __osize = traits_type::length(__s);
# 1415 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __len = std::min(__n1, __osize);
# 1416 "/usr/include/c++/5/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data() + __pos, __s, __len);
# 1417 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__r) {
# 1418 "/usr/include/c++/5/bits/basic_string.tcc" 3
__r = (_S_compare)(__n1, __osize); }
# 1419 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __r;
# 1420 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1422 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 1425 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::compare(size_type __pos, size_type __n1, const _CharT *__s, size_type
# 1426 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n2) const
# 1427 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1428 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1429 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check(__pos, "basic_string::compare");
# 1430 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n1 = _M_limit(__pos, __n1);
# 1431 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __len = std::min(__n1, __n2);
# 1432 "/usr/include/c++/5/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data() + __pos, __s, __len);
# 1433 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__r) {
# 1434 "/usr/include/c++/5/bits/basic_string.tcc" 3
__r = (_S_compare)(__n1, __n2); }
# 1435 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __r;
# 1436 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1439 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_istream< _CharT, _Traits> &
# 1441 "/usr/include/c++/5/bits/basic_string.tcc" 3
operator>>(basic_istream< _CharT, _Traits> &__in, __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 1442 "/usr/include/c++/5/bits/basic_string.tcc" 3
__str)
# 1443 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1444 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef basic_istream< _CharT, _Traits> __istream_type;
# 1445 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef __cxx11::basic_string< _CharT, _Traits, _Alloc> __string_type;
# 1446 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::ios_base __ios_base;
# 1447 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::int_type __int_type;
# 1448 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 1449 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef ctype< _CharT> __ctype_type;
# 1450 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename ctype< _CharT> ::ctype_base __ctype_base;
# 1452 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size_type __extracted = (0);
# 1453 "/usr/include/c++/5/bits/basic_string.tcc" 3
typename basic_istream< _CharT, _Traits> ::ios_base::iostate __err = (__ios_base::goodbit);
# 1454 "/usr/include/c++/5/bits/basic_string.tcc" 3
typename basic_istream< _CharT, _Traits> ::sentry __cerb(__in, false);
# 1455 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__cerb)
# 1456 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1457 "/usr/include/c++/5/bits/basic_string.tcc" 3
try
# 1458 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1460 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.erase());
# 1461 "/usr/include/c++/5/bits/basic_string.tcc" 3
_CharT __buf[128];
# 1462 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size_type __len = (0);
# 1463 "/usr/include/c++/5/bits/basic_string.tcc" 3
const streamsize __w = (__in.width());
# 1464 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __size_type __n = (__w > (0)) ? static_cast< __size_type>(__w) : (__str.max_size());
# 1466 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __ctype_type &__ct = use_facet< ctype< _CharT> > ((__in.getloc()));
# 1467 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __int_type __eof = _Traits::eof();
# 1468 "/usr/include/c++/5/bits/basic_string.tcc" 3
__int_type __c = ((__in.rdbuf())->sgetc());
# 1470 "/usr/include/c++/5/bits/basic_string.tcc" 3
while ((__extracted < __n) && (!_Traits::eq_int_type(__c, __eof)) && (!(__ct.is(__ctype_base::space, _Traits::to_char_type(__c)))))
# 1474 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1475 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__len == (sizeof(__buf) / sizeof(_CharT)))
# 1476 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1477 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.append(__buf, sizeof(__buf) / sizeof(_CharT)));
# 1478 "/usr/include/c++/5/bits/basic_string.tcc" 3
__len = 0;
# 1479 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1480 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__buf[__len++]) = _Traits::to_char_type(__c);
# 1481 "/usr/include/c++/5/bits/basic_string.tcc" 3
++__extracted;
# 1482 "/usr/include/c++/5/bits/basic_string.tcc" 3
__c = ((__in.rdbuf())->snextc());
# 1483 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1484 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.append(__buf, __len));
# 1486 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (_Traits::eq_int_type(__c, __eof)) {
# 1487 "/usr/include/c++/5/bits/basic_string.tcc" 3
__err |= __ios_base::eofbit; }
# 1488 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in.width(0));
# 1489 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1490 "/usr/include/c++/5/bits/basic_string.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 1491 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1492 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in._M_setstate(__ios_base::badbit));
# 1493 "/usr/include/c++/5/bits/basic_string.tcc" 3
throw;
# 1494 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1495 "/usr/include/c++/5/bits/basic_string.tcc" 3
catch (...)
# 1496 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1500 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in._M_setstate(__ios_base::badbit));
# 1501 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1502 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1504 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__extracted) {
# 1505 "/usr/include/c++/5/bits/basic_string.tcc" 3
__err |= __ios_base::failbit; }
# 1506 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__err) {
# 1507 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in.setstate(__err)); }
# 1508 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __in;
# 1509 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1511 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_istream< _CharT, _Traits> &
# 1513 "/usr/include/c++/5/bits/basic_string.tcc" 3
getline(basic_istream< _CharT, _Traits> &__in, __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 1514 "/usr/include/c++/5/bits/basic_string.tcc" 3
__str, _CharT __delim)
# 1515 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1516 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef basic_istream< _CharT, _Traits> __istream_type;
# 1517 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef __cxx11::basic_string< _CharT, _Traits, _Alloc> __string_type;
# 1518 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::ios_base __ios_base;
# 1519 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::int_type __int_type;
# 1520 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 1522 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size_type __extracted = (0);
# 1523 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __size_type __n = (__str.max_size());
# 1524 "/usr/include/c++/5/bits/basic_string.tcc" 3
typename basic_istream< _CharT, _Traits> ::ios_base::iostate __err = (__ios_base::goodbit);
# 1525 "/usr/include/c++/5/bits/basic_string.tcc" 3
typename basic_istream< _CharT, _Traits> ::sentry __cerb(__in, true);
# 1526 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__cerb)
# 1527 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1528 "/usr/include/c++/5/bits/basic_string.tcc" 3
try
# 1529 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1530 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.erase());
# 1531 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __int_type __idelim = _Traits::to_int_type(__delim);
# 1532 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __int_type __eof = _Traits::eof();
# 1533 "/usr/include/c++/5/bits/basic_string.tcc" 3
__int_type __c = ((__in.rdbuf())->sgetc());
# 1535 "/usr/include/c++/5/bits/basic_string.tcc" 3
while ((__extracted < __n) && (!_Traits::eq_int_type(__c, __eof)) && (!_Traits::eq_int_type(__c, __idelim)))
# 1538 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1539 "/usr/include/c++/5/bits/basic_string.tcc" 3
__str += _Traits::to_char_type(__c);
# 1540 "/usr/include/c++/5/bits/basic_string.tcc" 3
++__extracted;
# 1541 "/usr/include/c++/5/bits/basic_string.tcc" 3
__c = ((__in.rdbuf())->snextc());
# 1542 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1544 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (_Traits::eq_int_type(__c, __eof)) {
# 1545 "/usr/include/c++/5/bits/basic_string.tcc" 3
__err |= __ios_base::eofbit; } else {
# 1546 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (_Traits::eq_int_type(__c, __idelim))
# 1547 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1548 "/usr/include/c++/5/bits/basic_string.tcc" 3
++__extracted;
# 1549 "/usr/include/c++/5/bits/basic_string.tcc" 3
((__in.rdbuf())->sbumpc());
# 1550 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 1552 "/usr/include/c++/5/bits/basic_string.tcc" 3
__err |= __ios_base::failbit; } }
# 1553 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1554 "/usr/include/c++/5/bits/basic_string.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 1555 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1556 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in._M_setstate(__ios_base::badbit));
# 1557 "/usr/include/c++/5/bits/basic_string.tcc" 3
throw;
# 1558 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1559 "/usr/include/c++/5/bits/basic_string.tcc" 3
catch (...)
# 1560 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1564 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in._M_setstate(__ios_base::badbit));
# 1565 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1566 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1567 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__extracted) {
# 1568 "/usr/include/c++/5/bits/basic_string.tcc" 3
__err |= __ios_base::failbit; }
# 1569 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__err) {
# 1570 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in.setstate(__err)); }
# 1571 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __in;
# 1572 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1577 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template class __cxx11::basic_string< char, char_traits< char> , allocator< char> > ;
# 1578 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_istream< char> &operator>>(basic_istream< char> & __is, __cxx11::basic_string< char, char_traits< char> , allocator< char> > & __str);
# 1581 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_ostream< char> &operator<<(basic_ostream< char> & __os, const __cxx11::basic_string< char, char_traits< char> , allocator< char> > & __str);
# 1584 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_istream< char> &getline(basic_istream< char> & __is, __cxx11::basic_string< char, char_traits< char> , allocator< char> > & __str, char __delim);
# 1587 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_istream< char> &getline(basic_istream< char> & __is, __cxx11::basic_string< char, char_traits< char> , allocator< char> > & __str);
# 1592 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template class __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > ;
# 1593 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t> &operator>>(basic_istream< wchar_t> & __is, __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str);
# 1596 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_ostream< wchar_t> &operator<<(basic_ostream< wchar_t> & __os, const __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str);
# 1599 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t> &getline(basic_istream< wchar_t> & __is, __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str, wchar_t __delim);
# 1602 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t> &getline(basic_istream< wchar_t> & __is, __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str);
# 1609 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 43 "/usr/include/c++/5/bits/locale_classes.h" 3
namespace std __attribute((__visibility__("default"))) {
# 62 "/usr/include/c++/5/bits/locale_classes.h" 3
class locale {
# 67 "/usr/include/c++/5/bits/locale_classes.h" 3
public: typedef int category;
# 70 "/usr/include/c++/5/bits/locale_classes.h" 3
class facet;
# 71 "/usr/include/c++/5/bits/locale_classes.h" 3
class id;
# 72 "/usr/include/c++/5/bits/locale_classes.h" 3
class _Impl;
# 74 "/usr/include/c++/5/bits/locale_classes.h" 3
friend class facet;
# 75 "/usr/include/c++/5/bits/locale_classes.h" 3
friend class _Impl;
# 77 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 81 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 85 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Cache> friend struct __use_cache;
# 98 "/usr/include/c++/5/bits/locale_classes.h" 3
static const category none = 0;
# 99 "/usr/include/c++/5/bits/locale_classes.h" 3
static const category ctype = (1L << 0);
# 100 "/usr/include/c++/5/bits/locale_classes.h" 3
static const category numeric = (1L << 1);
# 101 "/usr/include/c++/5/bits/locale_classes.h" 3
static const category collate = (1L << 2);
# 102 "/usr/include/c++/5/bits/locale_classes.h" 3
static const category time = (1L << 3);
# 103 "/usr/include/c++/5/bits/locale_classes.h" 3
static const category monetary = (1L << 4);
# 104 "/usr/include/c++/5/bits/locale_classes.h" 3
static const category messages = (1L << 5);
# 105 "/usr/include/c++/5/bits/locale_classes.h" 3
static const category all = (((((ctype | numeric) | collate) | time) | monetary) | messages);
# 117 "/usr/include/c++/5/bits/locale_classes.h" 3
locale() throw();
# 126 "/usr/include/c++/5/bits/locale_classes.h" 3
locale(const locale & __other) throw();
# 137 "/usr/include/c++/5/bits/locale_classes.h" 3
explicit locale(const char * __s);
# 151 "/usr/include/c++/5/bits/locale_classes.h" 3
locale(const locale & __base, const char * __s, category __cat);
# 192 "/usr/include/c++/5/bits/locale_classes.h" 3
locale(const locale & __base, const locale & __add, category __cat);
# 205 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> locale(const locale & __other, _Facet * __f);
# 209 "/usr/include/c++/5/bits/locale_classes.h" 3
~locale() throw();
# 220 "/usr/include/c++/5/bits/locale_classes.h" 3
const locale &operator=(const locale & __other) throw();
# 234 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> locale combine(const locale & __other) const;
# 243 "/usr/include/c++/5/bits/locale_classes.h" 3
__attribute((__abi_tag__("cxx11" ))) __cxx11::string
# 245 "/usr/include/c++/5/bits/locale_classes.h" 3
name() const;
# 255 "/usr/include/c++/5/bits/locale_classes.h" 3
bool operator==(const locale & __other) const throw();
# 264 "/usr/include/c++/5/bits/locale_classes.h" 3
bool operator!=(const locale &__other) const throw()
# 265 "/usr/include/c++/5/bits/locale_classes.h" 3
{ return !this->operator==(__other); }
# 282 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Char, class _Traits, class _Alloc> bool operator()(const __cxx11::basic_string< _Char, _Traits, _Alloc> & __s1, const __cxx11::basic_string< _Char, _Traits, _Alloc> & __s2) const;
# 299 "/usr/include/c++/5/bits/locale_classes.h" 3
static locale global(const locale & __loc);
# 305 "/usr/include/c++/5/bits/locale_classes.h" 3
static const locale &classic();
# 309 "/usr/include/c++/5/bits/locale_classes.h" 3
private: _Impl *_M_impl;
# 312 "/usr/include/c++/5/bits/locale_classes.h" 3
static _Impl *_S_classic;
# 315 "/usr/include/c++/5/bits/locale_classes.h" 3
static _Impl *_S_global;
# 321 "/usr/include/c++/5/bits/locale_classes.h" 3
static const char *const *const _S_categories;
# 333 "/usr/include/c++/5/bits/locale_classes.h" 3
enum { _S_categories_size = 12};
# 336 "/usr/include/c++/5/bits/locale_classes.h" 3
static __gthread_once_t _S_once;
# 340 "/usr/include/c++/5/bits/locale_classes.h" 3
explicit locale(_Impl *) throw();
# 343 "/usr/include/c++/5/bits/locale_classes.h" 3
static void _S_initialize();
# 346 "/usr/include/c++/5/bits/locale_classes.h" 3
static void _S_initialize_once() throw();
# 349 "/usr/include/c++/5/bits/locale_classes.h" 3
static category _S_normalize_category(category);
# 352 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_coalesce(const locale & __base, const locale & __add, category __cat);
# 355 "/usr/include/c++/5/bits/locale_classes.h" 3
static const id *const _S_twinned_facets[];
# 357 "/usr/include/c++/5/bits/locale_classes.h" 3
};
# 371 "/usr/include/c++/5/bits/locale_classes.h" 3
class locale::facet {
# 374 "/usr/include/c++/5/bits/locale_classes.h" 3
friend class locale;
# 375 "/usr/include/c++/5/bits/locale_classes.h" 3
friend class _Impl;
# 377 "/usr/include/c++/5/bits/locale_classes.h" 3
mutable _Atomic_word _M_refcount;
# 380 "/usr/include/c++/5/bits/locale_classes.h" 3
static __c_locale _S_c_locale;
# 383 "/usr/include/c++/5/bits/locale_classes.h" 3
static const char _S_c_name[2];
# 386 "/usr/include/c++/5/bits/locale_classes.h" 3
static __gthread_once_t _S_once;
# 390 "/usr/include/c++/5/bits/locale_classes.h" 3
static void _S_initialize_once();
# 403 "/usr/include/c++/5/bits/locale_classes.h" 3
protected: explicit facet(size_t __refs = 0) throw() : _M_refcount((__refs) ? 1 : 0)
# 404 "/usr/include/c++/5/bits/locale_classes.h" 3
{ }
# 408 "/usr/include/c++/5/bits/locale_classes.h" 3
virtual ~facet();
# 411 "/usr/include/c++/5/bits/locale_classes.h" 3
static void _S_create_c_locale(__c_locale & __cloc, const char * __s, __c_locale __old = 0);
# 415 "/usr/include/c++/5/bits/locale_classes.h" 3
static __c_locale _S_clone_c_locale(__c_locale & __cloc) throw();
# 418 "/usr/include/c++/5/bits/locale_classes.h" 3
static void _S_destroy_c_locale(__c_locale & __cloc);
# 421 "/usr/include/c++/5/bits/locale_classes.h" 3
static __c_locale _S_lc_ctype_c_locale(__c_locale __cloc, const char * __s);
# 426 "/usr/include/c++/5/bits/locale_classes.h" 3
static __c_locale _S_get_c_locale();
# 428 "/usr/include/c++/5/bits/locale_classes.h" 3
__attribute((const)) static const char *
# 429 "/usr/include/c++/5/bits/locale_classes.h" 3
_S_get_c_name() throw();
# 433 "/usr/include/c++/5/bits/locale_classes.h" 3
private: void _M_add_reference() const throw()
# 434 "/usr/include/c++/5/bits/locale_classes.h" 3
{ __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 437 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_remove_reference() const throw()
# 438 "/usr/include/c++/5/bits/locale_classes.h" 3
{
# 440 "/usr/include/c++/5/bits/locale_classes.h" 3
;
# 441 "/usr/include/c++/5/bits/locale_classes.h" 3
if (__gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1) == 1)
# 442 "/usr/include/c++/5/bits/locale_classes.h" 3
{
# 443 "/usr/include/c++/5/bits/locale_classes.h" 3
;
# 444 "/usr/include/c++/5/bits/locale_classes.h" 3
try
# 445 "/usr/include/c++/5/bits/locale_classes.h" 3
{ delete this; }
# 446 "/usr/include/c++/5/bits/locale_classes.h" 3
catch (...)
# 447 "/usr/include/c++/5/bits/locale_classes.h" 3
{ }
# 448 "/usr/include/c++/5/bits/locale_classes.h" 3
}
# 449 "/usr/include/c++/5/bits/locale_classes.h" 3
}
# 451 "/usr/include/c++/5/bits/locale_classes.h" 3
facet(const facet &);
# 454 "/usr/include/c++/5/bits/locale_classes.h" 3
facet &operator=(const facet &);
# 456 "/usr/include/c++/5/bits/locale_classes.h" 3
class __shim;
# 458 "/usr/include/c++/5/bits/locale_classes.h" 3
const facet *_M_sso_shim(const id *) const;
# 459 "/usr/include/c++/5/bits/locale_classes.h" 3
const facet *_M_cow_shim(const id *) const;
# 460 "/usr/include/c++/5/bits/locale_classes.h" 3
};
# 474 "/usr/include/c++/5/bits/locale_classes.h" 3
class locale::id {
# 477 "/usr/include/c++/5/bits/locale_classes.h" 3
friend class locale;
# 478 "/usr/include/c++/5/bits/locale_classes.h" 3
friend class _Impl;
# 480 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 484 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 491 "/usr/include/c++/5/bits/locale_classes.h" 3
mutable size_t _M_index;
# 494 "/usr/include/c++/5/bits/locale_classes.h" 3
static _Atomic_word _S_refcount;
# 497 "/usr/include/c++/5/bits/locale_classes.h" 3
void operator=(const id &);
# 499 "/usr/include/c++/5/bits/locale_classes.h" 3
id(const id &);
# 505 "/usr/include/c++/5/bits/locale_classes.h" 3
public: id() { }
# 508 "/usr/include/c++/5/bits/locale_classes.h" 3
size_t _M_id() const throw();
# 509 "/usr/include/c++/5/bits/locale_classes.h" 3
};
# 513 "/usr/include/c++/5/bits/locale_classes.h" 3
class locale::_Impl {
# 517 "/usr/include/c++/5/bits/locale_classes.h" 3
friend class locale;
# 518 "/usr/include/c++/5/bits/locale_classes.h" 3
friend class facet;
# 520 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 524 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 528 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Cache> friend struct __use_cache;
# 533 "/usr/include/c++/5/bits/locale_classes.h" 3
_Atomic_word _M_refcount;
# 534 "/usr/include/c++/5/bits/locale_classes.h" 3
const facet **_M_facets;
# 535 "/usr/include/c++/5/bits/locale_classes.h" 3
size_t _M_facets_size;
# 536 "/usr/include/c++/5/bits/locale_classes.h" 3
const facet **_M_caches;
# 537 "/usr/include/c++/5/bits/locale_classes.h" 3
char **_M_names;
# 538 "/usr/include/c++/5/bits/locale_classes.h" 3
static const id *const _S_id_ctype[];
# 539 "/usr/include/c++/5/bits/locale_classes.h" 3
static const id *const _S_id_numeric[];
# 540 "/usr/include/c++/5/bits/locale_classes.h" 3
static const id *const _S_id_collate[];
# 541 "/usr/include/c++/5/bits/locale_classes.h" 3
static const id *const _S_id_time[];
# 542 "/usr/include/c++/5/bits/locale_classes.h" 3
static const id *const _S_id_monetary[];
# 543 "/usr/include/c++/5/bits/locale_classes.h" 3
static const id *const _S_id_messages[];
# 544 "/usr/include/c++/5/bits/locale_classes.h" 3
static const id *const *const _S_facet_categories[];
# 547 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_add_reference() throw()
# 548 "/usr/include/c++/5/bits/locale_classes.h" 3
{ __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 551 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_remove_reference() throw()
# 552 "/usr/include/c++/5/bits/locale_classes.h" 3
{
# 554 "/usr/include/c++/5/bits/locale_classes.h" 3
;
# 555 "/usr/include/c++/5/bits/locale_classes.h" 3
if (__gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1) == 1)
# 556 "/usr/include/c++/5/bits/locale_classes.h" 3
{
# 557 "/usr/include/c++/5/bits/locale_classes.h" 3
;
# 558 "/usr/include/c++/5/bits/locale_classes.h" 3
try
# 559 "/usr/include/c++/5/bits/locale_classes.h" 3
{ delete this; }
# 560 "/usr/include/c++/5/bits/locale_classes.h" 3
catch (...)
# 561 "/usr/include/c++/5/bits/locale_classes.h" 3
{ }
# 562 "/usr/include/c++/5/bits/locale_classes.h" 3
}
# 563 "/usr/include/c++/5/bits/locale_classes.h" 3
}
# 565 "/usr/include/c++/5/bits/locale_classes.h" 3
_Impl(const _Impl &, size_t);
# 566 "/usr/include/c++/5/bits/locale_classes.h" 3
_Impl(const char *, size_t);
# 567 "/usr/include/c++/5/bits/locale_classes.h" 3
_Impl(size_t) throw();
# 569 "/usr/include/c++/5/bits/locale_classes.h" 3
~_Impl() throw();
# 571 "/usr/include/c++/5/bits/locale_classes.h" 3
_Impl(const _Impl &);
# 574 "/usr/include/c++/5/bits/locale_classes.h" 3
void operator=(const _Impl &);
# 577 "/usr/include/c++/5/bits/locale_classes.h" 3
bool _M_check_same_name()
# 578 "/usr/include/c++/5/bits/locale_classes.h" 3
{
# 579 "/usr/include/c++/5/bits/locale_classes.h" 3
bool __ret = true;
# 580 "/usr/include/c++/5/bits/locale_classes.h" 3
if ((_M_names)[1]) {
# 582 "/usr/include/c++/5/bits/locale_classes.h" 3
for (size_t __i = (0); __ret && (__i < ((_S_categories_size) - 1)); ++__i) {
# 583 "/usr/include/c++/5/bits/locale_classes.h" 3
__ret = (__builtin_strcmp((_M_names)[__i], (_M_names)[__i + (1)]) == 0); } }
# 584 "/usr/include/c++/5/bits/locale_classes.h" 3
return __ret;
# 585 "/usr/include/c++/5/bits/locale_classes.h" 3
}
# 588 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_replace_categories(const _Impl *, category);
# 591 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_replace_category(const _Impl *, const id *const *);
# 594 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_replace_facet(const _Impl *, const id *);
# 597 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_install_facet(const id *, const facet *);
# 599 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> void
# 601 "/usr/include/c++/5/bits/locale_classes.h" 3
_M_init_facet(_Facet *__facet)
# 602 "/usr/include/c++/5/bits/locale_classes.h" 3
{ this->_M_install_facet(&_Facet::id, __facet); }
# 604 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> void
# 606 "/usr/include/c++/5/bits/locale_classes.h" 3
_M_init_facet_unchecked(_Facet *__facet)
# 607 "/usr/include/c++/5/bits/locale_classes.h" 3
{
# 608 "/usr/include/c++/5/bits/locale_classes.h" 3
(__facet->_M_add_reference());
# 609 "/usr/include/c++/5/bits/locale_classes.h" 3
((_M_facets)[(_Facet::id._M_id)()]) = __facet;
# 610 "/usr/include/c++/5/bits/locale_classes.h" 3
}
# 613 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_install_cache(const facet *, size_t);
# 615 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_init_extra(facet **);
# 616 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_init_extra(void *, void *, const char *, const char *);
# 617 "/usr/include/c++/5/bits/locale_classes.h" 3
};
# 632 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _CharT>
# 633 "/usr/include/c++/5/bits/locale_classes.h" 3
class __cxx11::collate : public locale::facet {
# 639 "/usr/include/c++/5/bits/locale_classes.h" 3
public: typedef _CharT char_type;
# 640 "/usr/include/c++/5/bits/locale_classes.h" 3
typedef basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > string_type;
# 646 "/usr/include/c++/5/bits/locale_classes.h" 3
protected: __c_locale _M_c_locale_collate;
# 650 "/usr/include/c++/5/bits/locale_classes.h" 3
public: static locale::id id;
# 660 "/usr/include/c++/5/bits/locale_classes.h" 3
explicit collate(size_t __refs = 0) : locale::facet(__refs), _M_c_locale_collate(_S_get_c_locale())
# 662 "/usr/include/c++/5/bits/locale_classes.h" 3
{ }
# 674 "/usr/include/c++/5/bits/locale_classes.h" 3
explicit collate(__c_locale __cloc, size_t __refs = 0) : locale::facet(__refs), _M_c_locale_collate(_S_clone_c_locale(__cloc))
# 676 "/usr/include/c++/5/bits/locale_classes.h" 3
{ }
# 691 "/usr/include/c++/5/bits/locale_classes.h" 3
int compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *
# 692 "/usr/include/c++/5/bits/locale_classes.h" 3
__lo2, const _CharT *__hi2) const
# 693 "/usr/include/c++/5/bits/locale_classes.h" 3
{ return this->do_compare(__lo1, __hi1, __lo2, __hi2); }
# 710 "/usr/include/c++/5/bits/locale_classes.h" 3
string_type transform(const _CharT *__lo, const _CharT *__hi) const
# 711 "/usr/include/c++/5/bits/locale_classes.h" 3
{ return this->do_transform(__lo, __hi); }
# 724 "/usr/include/c++/5/bits/locale_classes.h" 3
long hash(const _CharT *__lo, const _CharT *__hi) const
# 725 "/usr/include/c++/5/bits/locale_classes.h" 3
{ return this->do_hash(__lo, __hi); }
# 729 "/usr/include/c++/5/bits/locale_classes.h" 3
int _M_compare(const _CharT *, const _CharT *) const throw();
# 732 "/usr/include/c++/5/bits/locale_classes.h" 3
size_t _M_transform(_CharT *, const _CharT *, size_t) const throw();
# 737 "/usr/include/c++/5/bits/locale_classes.h" 3
protected: virtual ~collate()
# 738 "/usr/include/c++/5/bits/locale_classes.h" 3
{ _S_destroy_c_locale(_M_c_locale_collate); }
# 753 "/usr/include/c++/5/bits/locale_classes.h" 3
virtual int do_compare(const _CharT * __lo1, const _CharT * __hi1, const _CharT * __lo2, const _CharT * __hi2) const;
# 767 "/usr/include/c++/5/bits/locale_classes.h" 3
virtual string_type do_transform(const _CharT * __lo, const _CharT * __hi) const;
# 780 "/usr/include/c++/5/bits/locale_classes.h" 3
virtual long do_hash(const _CharT * __lo, const _CharT * __hi) const;
# 781 "/usr/include/c++/5/bits/locale_classes.h" 3
};
# 783 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _CharT> locale::id
# 784 "/usr/include/c++/5/bits/locale_classes.h" 3
__cxx11::collate< _CharT> ::id;
# 789 "/usr/include/c++/5/bits/locale_classes.h" 3
template<> int collate< char> ::_M_compare(const char *, const char *) const throw();
# 793 "/usr/include/c++/5/bits/locale_classes.h" 3
template<> size_t collate< char> ::_M_transform(char *, const char *, size_t) const throw();
# 798 "/usr/include/c++/5/bits/locale_classes.h" 3
template<> int collate< wchar_t> ::_M_compare(const wchar_t *, const wchar_t *) const throw();
# 802 "/usr/include/c++/5/bits/locale_classes.h" 3
template<> size_t collate< wchar_t> ::_M_transform(wchar_t *, const wchar_t *, size_t) const throw();
# 806 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _CharT>
# 807 "/usr/include/c++/5/bits/locale_classes.h" 3
class __cxx11::collate_byname : public collate< _CharT> {
# 812 "/usr/include/c++/5/bits/locale_classes.h" 3
public: typedef _CharT char_type;
# 813 "/usr/include/c++/5/bits/locale_classes.h" 3
typedef basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > string_type;
# 817 "/usr/include/c++/5/bits/locale_classes.h" 3
explicit collate_byname(const char *__s, ::std::size_t __refs = 0) : ::std::__cxx11::collate< _CharT> (__refs)
# 819 "/usr/include/c++/5/bits/locale_classes.h" 3
{
# 820 "/usr/include/c++/5/bits/locale_classes.h" 3
if ((__builtin_strcmp(__s, "C") != 0) && (__builtin_strcmp(__s, "POSIX") != 0))
# 822 "/usr/include/c++/5/bits/locale_classes.h" 3
{
# 823 "/usr/include/c++/5/bits/locale_classes.h" 3
(this->_S_destroy_c_locale((this->_M_c_locale_collate)));
# 824 "/usr/include/c++/5/bits/locale_classes.h" 3
(this->_S_create_c_locale((this->_M_c_locale_collate), __s));
# 825 "/usr/include/c++/5/bits/locale_classes.h" 3
}
# 826 "/usr/include/c++/5/bits/locale_classes.h" 3
}
# 836 "/usr/include/c++/5/bits/locale_classes.h" 3
protected: virtual ~collate_byname() { }
# 837 "/usr/include/c++/5/bits/locale_classes.h" 3
};
# 840 "/usr/include/c++/5/bits/locale_classes.h" 3
}
# 39 "/usr/include/c++/5/bits/locale_classes.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 43 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _Facet>
# 45 "/usr/include/c++/5/bits/locale_classes.tcc" 3
locale::locale(const locale &__other, _Facet *__f)
# 46 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 47 "/usr/include/c++/5/bits/locale_classes.tcc" 3
(_M_impl) = (new _Impl(*(__other._M_impl), 1));
# 49 "/usr/include/c++/5/bits/locale_classes.tcc" 3
try
# 50 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{ (_M_impl)->_M_install_facet(&_Facet::id, __f); }
# 51 "/usr/include/c++/5/bits/locale_classes.tcc" 3
catch (...)
# 52 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 53 "/usr/include/c++/5/bits/locale_classes.tcc" 3
(_M_impl)->_M_remove_reference();
# 54 "/usr/include/c++/5/bits/locale_classes.tcc" 3
throw;
# 55 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 56 "/usr/include/c++/5/bits/locale_classes.tcc" 3
delete [] (((_M_impl)->_M_names)[0]);
# 57 "/usr/include/c++/5/bits/locale_classes.tcc" 3
(((_M_impl)->_M_names)[0]) = (0);
# 58 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 60 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _Facet> locale
# 63 "/usr/include/c++/5/bits/locale_classes.tcc" 3
locale::combine(const locale &__other) const
# 64 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 65 "/usr/include/c++/5/bits/locale_classes.tcc" 3
_Impl *__tmp = new _Impl(*(_M_impl), 1);
# 66 "/usr/include/c++/5/bits/locale_classes.tcc" 3
try
# 67 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 68 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__tmp->_M_replace_facet(__other._M_impl, &_Facet::id);
# 69 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 70 "/usr/include/c++/5/bits/locale_classes.tcc" 3
catch (...)
# 71 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 72 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__tmp->_M_remove_reference();
# 73 "/usr/include/c++/5/bits/locale_classes.tcc" 3
throw;
# 74 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 75 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return ((locale)(__tmp));
# 76 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 78 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _CharT, class _Traits, class _Alloc> bool
# 81 "/usr/include/c++/5/bits/locale_classes.tcc" 3
locale::operator()(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__s1, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 82 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__s2) const
# 83 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 84 "/usr/include/c++/5/bits/locale_classes.tcc" 3
typedef __cxx11::collate< _CharT> __collate_type;
# 85 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const __collate_type &__collate = use_facet< __cxx11::collate< _CharT> > (*this);
# 86 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return (__collate.compare((__s1.data()), (__s1.data()) + (__s1.length()), (__s2.data()), (__s2.data()) + (__s2.length()))) < 0;
# 88 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 102 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _Facet> bool
# 104 "/usr/include/c++/5/bits/locale_classes.tcc" 3
has_facet(const locale &__loc) throw()
# 105 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 106 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const size_t __i = (_Facet::id._M_id)();
# 107 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const locale::facet **__facets = (__loc._M_impl)->_M_facets;
# 108 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return (__i < ((__loc._M_impl)->_M_facets_size)) && (dynamic_cast< const _Facet *>(__facets[__i]));
# 114 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 130 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _Facet> const _Facet &
# 132 "/usr/include/c++/5/bits/locale_classes.tcc" 3
use_facet(const locale &__loc)
# 133 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 134 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const size_t __i = (_Facet::id._M_id)();
# 135 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const locale::facet **__facets = (__loc._M_impl)->_M_facets;
# 136 "/usr/include/c++/5/bits/locale_classes.tcc" 3
if ((__i >= ((__loc._M_impl)->_M_facets_size)) || (!(__facets[__i]))) {
# 137 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__throw_bad_cast(); }
# 139 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return dynamic_cast< const _Facet &>(*(__facets[__i]));
# 143 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 147 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _CharT> int
# 149 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__cxx11::collate< _CharT> ::_M_compare(const _CharT *, const _CharT *) const throw()
# 150 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{ return 0; }
# 153 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _CharT> size_t
# 155 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__cxx11::collate< _CharT> ::_M_transform(_CharT *, const _CharT *, size_t) const throw()
# 156 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{ return 0; }
# 158 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _CharT> int
# 161 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__cxx11::collate< _CharT> ::do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *
# 162 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__lo2, const _CharT *__hi2) const
# 163 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 166 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const string_type __one(__lo1, __hi1);
# 167 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const string_type __two(__lo2, __hi2);
# 169 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const _CharT *__p = (__one.c_str());
# 170 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const _CharT *__pend = (__one.data()) + (__one.length());
# 171 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const _CharT *__q = (__two.c_str());
# 172 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const _CharT *__qend = (__two.data()) + (__two.length());
# 177 "/usr/include/c++/5/bits/locale_classes.tcc" 3
for (; ;)
# 178 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 179 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const int __res = _M_compare(__p, __q);
# 180 "/usr/include/c++/5/bits/locale_classes.tcc" 3
if (__res) {
# 181 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return __res; }
# 183 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__p += char_traits< _CharT> ::length(__p);
# 184 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__q += char_traits< _CharT> ::length(__q);
# 185 "/usr/include/c++/5/bits/locale_classes.tcc" 3
if ((__p == __pend) && (__q == __qend)) {
# 186 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return 0; } else {
# 187 "/usr/include/c++/5/bits/locale_classes.tcc" 3
if (__p == __pend) {
# 188 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return -1; } else {
# 189 "/usr/include/c++/5/bits/locale_classes.tcc" 3
if (__q == __qend) {
# 190 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return 1; } } }
# 192 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__p++;
# 193 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__q++;
# 194 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 195 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 197 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _CharT> typename __cxx11::collate< _CharT> ::string_type
# 200 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__cxx11::collate< _CharT> ::do_transform(const _CharT *__lo, const _CharT *__hi) const
# 201 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 202 "/usr/include/c++/5/bits/locale_classes.tcc" 3
string_type __ret;
# 205 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const string_type __str(__lo, __hi);
# 207 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const _CharT *__p = (__str.c_str());
# 208 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const _CharT *__pend = (__str.data()) + (__str.length());
# 210 "/usr/include/c++/5/bits/locale_classes.tcc" 3
size_t __len = (__hi - __lo) * 2;
# 212 "/usr/include/c++/5/bits/locale_classes.tcc" 3
_CharT *__c = new _CharT [__len];
# 214 "/usr/include/c++/5/bits/locale_classes.tcc" 3
try
# 215 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 219 "/usr/include/c++/5/bits/locale_classes.tcc" 3
for (; ;)
# 220 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 222 "/usr/include/c++/5/bits/locale_classes.tcc" 3
size_t __res = _M_transform(__c, __p, __len);
# 225 "/usr/include/c++/5/bits/locale_classes.tcc" 3
if (__res >= __len)
# 226 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 227 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__len = (__res + (1));
# 228 "/usr/include/c++/5/bits/locale_classes.tcc" 3
(delete [] __c), (__c = 0);
# 229 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__c = (new _CharT [__len]);
# 230 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__res = _M_transform(__c, __p, __len);
# 231 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 233 "/usr/include/c++/5/bits/locale_classes.tcc" 3
(__ret.append(__c, __res));
# 234 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__p += char_traits< _CharT> ::length(__p);
# 235 "/usr/include/c++/5/bits/locale_classes.tcc" 3
if (__p == __pend) {
# 236 "/usr/include/c++/5/bits/locale_classes.tcc" 3
break; }
# 238 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__p++;
# 239 "/usr/include/c++/5/bits/locale_classes.tcc" 3
(__ret.push_back(_CharT()));
# 240 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 241 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 242 "/usr/include/c++/5/bits/locale_classes.tcc" 3
catch (...)
# 243 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 244 "/usr/include/c++/5/bits/locale_classes.tcc" 3
delete [] __c;
# 245 "/usr/include/c++/5/bits/locale_classes.tcc" 3
throw;
# 246 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 248 "/usr/include/c++/5/bits/locale_classes.tcc" 3
delete [] __c;
# 250 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return __ret;
# 251 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 253 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _CharT> long
# 256 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__cxx11::collate< _CharT> ::do_hash(const _CharT *__lo, const _CharT *__hi) const
# 257 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 258 "/usr/include/c++/5/bits/locale_classes.tcc" 3
unsigned long __val = (0);
# 259 "/usr/include/c++/5/bits/locale_classes.tcc" 3
for (; __lo < __hi; ++__lo) {
# 260 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__val = ((*__lo) + ((__val << 7) | (__val >> (__gnu_cxx::__numeric_traits_integer< unsigned long> ::__digits - 7)))); }
# 264 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return static_cast< long>(__val);
# 265 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 270 "/usr/include/c++/5/bits/locale_classes.tcc" 3
extern template class __cxx11::collate< char> ;
# 271 "/usr/include/c++/5/bits/locale_classes.tcc" 3
extern template class __cxx11::collate_byname< char> ;
# 273 "/usr/include/c++/5/bits/locale_classes.tcc" 3
extern template const __cxx11::collate< char> &use_facet< __cxx11::collate< char> > (const locale &);
# 277 "/usr/include/c++/5/bits/locale_classes.tcc" 3
extern template bool has_facet< __cxx11::collate< char> > (const locale &) throw();
# 282 "/usr/include/c++/5/bits/locale_classes.tcc" 3
extern template class __cxx11::collate< wchar_t> ;
# 283 "/usr/include/c++/5/bits/locale_classes.tcc" 3
extern template class __cxx11::collate_byname< wchar_t> ;
# 285 "/usr/include/c++/5/bits/locale_classes.tcc" 3
extern template const __cxx11::collate< wchar_t> &use_facet< __cxx11::collate< wchar_t> > (const locale &);
# 289 "/usr/include/c++/5/bits/locale_classes.tcc" 3
extern template bool has_facet< __cxx11::collate< wchar_t> > (const locale &) throw();
# 296 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 41 "/usr/include/c++/5/stdexcept" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/5/stdexcept" 3
struct __cow_string {
# 50 "/usr/include/c++/5/stdexcept" 3
union {
# 51 "/usr/include/c++/5/stdexcept" 3
const char *_M_p;
# 52 "/usr/include/c++/5/stdexcept" 3
char _M_bytes[sizeof(const char *)];
# 53 "/usr/include/c++/5/stdexcept" 3
};
# 55 "/usr/include/c++/5/stdexcept" 3
__cow_string();
# 56 "/usr/include/c++/5/stdexcept" 3
__cow_string(const __cxx11::string &);
# 57 "/usr/include/c++/5/stdexcept" 3
__cow_string(const char *, size_t);
# 58 "/usr/include/c++/5/stdexcept" 3
__cow_string(const __cow_string &) throw();
# 59 "/usr/include/c++/5/stdexcept" 3
__cow_string &operator=(const __cow_string &) throw();
# 60 "/usr/include/c++/5/stdexcept" 3
~__cow_string();
# 65 "/usr/include/c++/5/stdexcept" 3
};
# 67 "/usr/include/c++/5/stdexcept" 3
typedef __cxx11::basic_string< char, char_traits< char> , allocator< char> > __sso_string;
# 113 "/usr/include/c++/5/stdexcept" 3
class logic_error : public exception {
# 115 "/usr/include/c++/5/stdexcept" 3
__cow_string _M_msg;
# 120 "/usr/include/c++/5/stdexcept" 3
public: explicit logic_error(const __cxx11::string & __arg);
# 128 "/usr/include/c++/5/stdexcept" 3
logic_error(const logic_error &) throw();
# 129 "/usr/include/c++/5/stdexcept" 3
logic_error &operator=(const logic_error &) throw();
# 132 "/usr/include/c++/5/stdexcept" 3
virtual ~logic_error() throw();
# 137 "/usr/include/c++/5/stdexcept" 3
virtual const char *what() const throw();
# 138 "/usr/include/c++/5/stdexcept" 3
};
# 142 "/usr/include/c++/5/stdexcept" 3
class domain_error : public logic_error {
# 145 "/usr/include/c++/5/stdexcept" 3
public: explicit domain_error(const __cxx11::string & __arg);
# 149 "/usr/include/c++/5/stdexcept" 3
virtual ~domain_error() throw();
# 150 "/usr/include/c++/5/stdexcept" 3
};
# 153 "/usr/include/c++/5/stdexcept" 3
class invalid_argument : public logic_error {
# 156 "/usr/include/c++/5/stdexcept" 3
public: explicit invalid_argument(const __cxx11::string & __arg);
# 160 "/usr/include/c++/5/stdexcept" 3
virtual ~invalid_argument() throw();
# 161 "/usr/include/c++/5/stdexcept" 3
};
# 165 "/usr/include/c++/5/stdexcept" 3
class length_error : public logic_error {
# 168 "/usr/include/c++/5/stdexcept" 3
public: explicit length_error(const __cxx11::string & __arg);
# 172 "/usr/include/c++/5/stdexcept" 3
virtual ~length_error() throw();
# 173 "/usr/include/c++/5/stdexcept" 3
};
# 177 "/usr/include/c++/5/stdexcept" 3
class out_of_range : public logic_error {
# 180 "/usr/include/c++/5/stdexcept" 3
public: explicit out_of_range(const __cxx11::string & __arg);
# 184 "/usr/include/c++/5/stdexcept" 3
virtual ~out_of_range() throw();
# 185 "/usr/include/c++/5/stdexcept" 3
};
# 192 "/usr/include/c++/5/stdexcept" 3
class runtime_error : public exception {
# 194 "/usr/include/c++/5/stdexcept" 3
__cow_string _M_msg;
# 199 "/usr/include/c++/5/stdexcept" 3
public: explicit runtime_error(const __cxx11::string & __arg);
# 207 "/usr/include/c++/5/stdexcept" 3
runtime_error(const runtime_error &) throw();
# 208 "/usr/include/c++/5/stdexcept" 3
runtime_error &operator=(const runtime_error &) throw();
# 211 "/usr/include/c++/5/stdexcept" 3
virtual ~runtime_error() throw();
# 216 "/usr/include/c++/5/stdexcept" 3
virtual const char *what() const throw();
# 217 "/usr/include/c++/5/stdexcept" 3
};
# 220 "/usr/include/c++/5/stdexcept" 3
class range_error : public runtime_error {
# 223 "/usr/include/c++/5/stdexcept" 3
public: explicit range_error(const __cxx11::string & __arg);
# 227 "/usr/include/c++/5/stdexcept" 3
virtual ~range_error() throw();
# 228 "/usr/include/c++/5/stdexcept" 3
};
# 231 "/usr/include/c++/5/stdexcept" 3
class overflow_error : public runtime_error {
# 234 "/usr/include/c++/5/stdexcept" 3
public: explicit overflow_error(const __cxx11::string & __arg);
# 238 "/usr/include/c++/5/stdexcept" 3
virtual ~overflow_error() throw();
# 239 "/usr/include/c++/5/stdexcept" 3
};
# 242 "/usr/include/c++/5/stdexcept" 3
class underflow_error : public runtime_error {
# 245 "/usr/include/c++/5/stdexcept" 3
public: explicit underflow_error(const __cxx11::string & __arg);
# 249 "/usr/include/c++/5/stdexcept" 3
virtual ~underflow_error() throw();
# 250 "/usr/include/c++/5/stdexcept" 3
};
# 255 "/usr/include/c++/5/stdexcept" 3
}
# 49 "/usr/include/c++/5/bits/ios_base.h" 3
namespace std __attribute((__visibility__("default"))) {
# 57 "/usr/include/c++/5/bits/ios_base.h" 3
enum _Ios_Fmtflags {
# 59 "/usr/include/c++/5/bits/ios_base.h" 3
_S_boolalpha = 1,
# 60 "/usr/include/c++/5/bits/ios_base.h" 3
_S_dec,
# 61 "/usr/include/c++/5/bits/ios_base.h" 3
_S_fixed = 4,
# 62 "/usr/include/c++/5/bits/ios_base.h" 3
_S_hex = 8,
# 63 "/usr/include/c++/5/bits/ios_base.h" 3
_S_internal = 16,
# 64 "/usr/include/c++/5/bits/ios_base.h" 3
_S_left = 32,
# 65 "/usr/include/c++/5/bits/ios_base.h" 3
_S_oct = 64,
# 66 "/usr/include/c++/5/bits/ios_base.h" 3
_S_right = 128,
# 67 "/usr/include/c++/5/bits/ios_base.h" 3
_S_scientific = 256,
# 68 "/usr/include/c++/5/bits/ios_base.h" 3
_S_showbase = 512,
# 69 "/usr/include/c++/5/bits/ios_base.h" 3
_S_showpoint = 1024,
# 70 "/usr/include/c++/5/bits/ios_base.h" 3
_S_showpos = 2048,
# 71 "/usr/include/c++/5/bits/ios_base.h" 3
_S_skipws = 4096,
# 72 "/usr/include/c++/5/bits/ios_base.h" 3
_S_unitbuf = 8192,
# 73 "/usr/include/c++/5/bits/ios_base.h" 3
_S_uppercase = 16384,
# 74 "/usr/include/c++/5/bits/ios_base.h" 3
_S_adjustfield = 176,
# 75 "/usr/include/c++/5/bits/ios_base.h" 3
_S_basefield = 74,
# 76 "/usr/include/c++/5/bits/ios_base.h" 3
_S_floatfield = 260,
# 77 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_fmtflags_end = 65536,
# 78 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_fmtflags_max = 2147483647,
# 79 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_fmtflags_min = (-2147483647-1)
# 80 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 83 "/usr/include/c++/5/bits/ios_base.h" 3
inline _Ios_Fmtflags operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 84 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 87 "/usr/include/c++/5/bits/ios_base.h" 3
inline _Ios_Fmtflags operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 88 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 91 "/usr/include/c++/5/bits/ios_base.h" 3
inline _Ios_Fmtflags operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 92 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 95 "/usr/include/c++/5/bits/ios_base.h" 3
inline _Ios_Fmtflags operator~(_Ios_Fmtflags __a)
# 96 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)(~(static_cast< int>(__a))); }
# 99 "/usr/include/c++/5/bits/ios_base.h" 3
inline const _Ios_Fmtflags &operator|=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 100 "/usr/include/c++/5/bits/ios_base.h" 3
{ return __a = ((__a | __b)); }
# 103 "/usr/include/c++/5/bits/ios_base.h" 3
inline const _Ios_Fmtflags &operator&=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 104 "/usr/include/c++/5/bits/ios_base.h" 3
{ return __a = ((__a & __b)); }
# 107 "/usr/include/c++/5/bits/ios_base.h" 3
inline const _Ios_Fmtflags &operator^=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 108 "/usr/include/c++/5/bits/ios_base.h" 3
{ return __a = ((__a ^ __b)); }
# 111 "/usr/include/c++/5/bits/ios_base.h" 3
enum _Ios_Openmode {
# 113 "/usr/include/c++/5/bits/ios_base.h" 3
_S_app = 1,
# 114 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ate,
# 115 "/usr/include/c++/5/bits/ios_base.h" 3
_S_bin = 4,
# 116 "/usr/include/c++/5/bits/ios_base.h" 3
_S_in = 8,
# 117 "/usr/include/c++/5/bits/ios_base.h" 3
_S_out = 16,
# 118 "/usr/include/c++/5/bits/ios_base.h" 3
_S_trunc = 32,
# 119 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_openmode_end = 65536,
# 120 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_openmode_max = 2147483647,
# 121 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_openmode_min = (-2147483647-1)
# 122 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 125 "/usr/include/c++/5/bits/ios_base.h" 3
inline _Ios_Openmode operator&(_Ios_Openmode __a, _Ios_Openmode __b)
# 126 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 129 "/usr/include/c++/5/bits/ios_base.h" 3
inline _Ios_Openmode operator|(_Ios_Openmode __a, _Ios_Openmode __b)
# 130 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 133 "/usr/include/c++/5/bits/ios_base.h" 3
inline _Ios_Openmode operator^(_Ios_Openmode __a, _Ios_Openmode __b)
# 134 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 137 "/usr/include/c++/5/bits/ios_base.h" 3
inline _Ios_Openmode operator~(_Ios_Openmode __a)
# 138 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Openmode)(~(static_cast< int>(__a))); }
# 141 "/usr/include/c++/5/bits/ios_base.h" 3
inline const _Ios_Openmode &operator|=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 142 "/usr/include/c++/5/bits/ios_base.h" 3
{ return __a = ((__a | __b)); }
# 145 "/usr/include/c++/5/bits/ios_base.h" 3
inline const _Ios_Openmode &operator&=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 146 "/usr/include/c++/5/bits/ios_base.h" 3
{ return __a = ((__a & __b)); }
# 149 "/usr/include/c++/5/bits/ios_base.h" 3
inline const _Ios_Openmode &operator^=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 150 "/usr/include/c++/5/bits/ios_base.h" 3
{ return __a = ((__a ^ __b)); }
# 153 "/usr/include/c++/5/bits/ios_base.h" 3
enum _Ios_Iostate {
# 155 "/usr/include/c++/5/bits/ios_base.h" 3
_S_goodbit,
# 156 "/usr/include/c++/5/bits/ios_base.h" 3
_S_badbit,
# 157 "/usr/include/c++/5/bits/ios_base.h" 3
_S_eofbit,
# 158 "/usr/include/c++/5/bits/ios_base.h" 3
_S_failbit = 4,
# 159 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_iostate_end = 65536,
# 160 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_iostate_max = 2147483647,
# 161 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_iostate_min = (-2147483647-1)
# 162 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 165 "/usr/include/c++/5/bits/ios_base.h" 3
inline _Ios_Iostate operator&(_Ios_Iostate __a, _Ios_Iostate __b)
# 166 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 169 "/usr/include/c++/5/bits/ios_base.h" 3
inline _Ios_Iostate operator|(_Ios_Iostate __a, _Ios_Iostate __b)
# 170 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 173 "/usr/include/c++/5/bits/ios_base.h" 3
inline _Ios_Iostate operator^(_Ios_Iostate __a, _Ios_Iostate __b)
# 174 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 177 "/usr/include/c++/5/bits/ios_base.h" 3
inline _Ios_Iostate operator~(_Ios_Iostate __a)
# 178 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Iostate)(~(static_cast< int>(__a))); }
# 181 "/usr/include/c++/5/bits/ios_base.h" 3
inline const _Ios_Iostate &operator|=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 182 "/usr/include/c++/5/bits/ios_base.h" 3
{ return __a = ((__a | __b)); }
# 185 "/usr/include/c++/5/bits/ios_base.h" 3
inline const _Ios_Iostate &operator&=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 186 "/usr/include/c++/5/bits/ios_base.h" 3
{ return __a = ((__a & __b)); }
# 189 "/usr/include/c++/5/bits/ios_base.h" 3
inline const _Ios_Iostate &operator^=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 190 "/usr/include/c++/5/bits/ios_base.h" 3
{ return __a = ((__a ^ __b)); }
# 193 "/usr/include/c++/5/bits/ios_base.h" 3
enum _Ios_Seekdir {
# 195 "/usr/include/c++/5/bits/ios_base.h" 3
_S_beg,
# 196 "/usr/include/c++/5/bits/ios_base.h" 3
_S_cur,
# 197 "/usr/include/c++/5/bits/ios_base.h" 3
_S_end,
# 198 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_seekdir_end = 65536
# 199 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 228 "/usr/include/c++/5/bits/ios_base.h" 3
class ios_base {
# 233 "/usr/include/c++/5/bits/ios_base.h" 3
struct system_error : public runtime_error {
# 236 "/usr/include/c++/5/bits/ios_base.h" 3
struct error_code {
# 238 "/usr/include/c++/5/bits/ios_base.h" 3
error_code() { }
# 240 "/usr/include/c++/5/bits/ios_base.h" 3
private: int _M_value;
# 241 "/usr/include/c++/5/bits/ios_base.h" 3
const void *_M_cat;
# 242 "/usr/include/c++/5/bits/ios_base.h" 3
} _M_code;
# 243 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 255 "/usr/include/c++/5/bits/ios_base.h" 3
public: class __attribute((__abi_tag__("cxx11" ))) failure : public system_error {
# 259 "/usr/include/c++/5/bits/ios_base.h" 3
public: explicit failure(const __cxx11::string & __str);
# 270 "/usr/include/c++/5/bits/ios_base.h" 3
virtual ~failure() throw();
# 273 "/usr/include/c++/5/bits/ios_base.h" 3
virtual const char *what() const throw();
# 274 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 323 "/usr/include/c++/5/bits/ios_base.h" 3
typedef _Ios_Fmtflags fmtflags;
# 326 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags boolalpha = _S_boolalpha;
# 329 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags dec = _S_dec;
# 332 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags fixed = _S_fixed;
# 335 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags hex = _S_hex;
# 340 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags internal = _S_internal;
# 344 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags left = _S_left;
# 347 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags oct = _S_oct;
# 351 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags right = _S_right;
# 354 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags scientific = _S_scientific;
# 358 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags showbase = _S_showbase;
# 362 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags showpoint = _S_showpoint;
# 365 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags showpos = _S_showpos;
# 368 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags skipws = _S_skipws;
# 371 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags unitbuf = _S_unitbuf;
# 375 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags uppercase = _S_uppercase;
# 378 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags adjustfield = _S_adjustfield;
# 381 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags basefield = _S_basefield;
# 384 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags floatfield = _S_floatfield;
# 398 "/usr/include/c++/5/bits/ios_base.h" 3
typedef _Ios_Iostate iostate;
# 402 "/usr/include/c++/5/bits/ios_base.h" 3
static const iostate badbit = _S_badbit;
# 405 "/usr/include/c++/5/bits/ios_base.h" 3
static const iostate eofbit = _S_eofbit;
# 410 "/usr/include/c++/5/bits/ios_base.h" 3
static const iostate failbit = _S_failbit;
# 413 "/usr/include/c++/5/bits/ios_base.h" 3
static const iostate goodbit = _S_goodbit;
# 429 "/usr/include/c++/5/bits/ios_base.h" 3
typedef _Ios_Openmode openmode;
# 432 "/usr/include/c++/5/bits/ios_base.h" 3
static const openmode app = _S_app;
# 435 "/usr/include/c++/5/bits/ios_base.h" 3
static const openmode ate = _S_ate;
# 440 "/usr/include/c++/5/bits/ios_base.h" 3
static const openmode binary = _S_bin;
# 443 "/usr/include/c++/5/bits/ios_base.h" 3
static const openmode in = _S_in;
# 446 "/usr/include/c++/5/bits/ios_base.h" 3
static const openmode out = _S_out;
# 449 "/usr/include/c++/5/bits/ios_base.h" 3
static const openmode trunc = _S_trunc;
# 461 "/usr/include/c++/5/bits/ios_base.h" 3
typedef _Ios_Seekdir seekdir;
# 464 "/usr/include/c++/5/bits/ios_base.h" 3
static const seekdir beg = _S_beg;
# 467 "/usr/include/c++/5/bits/ios_base.h" 3
static const seekdir cur = _S_cur;
# 470 "/usr/include/c++/5/bits/ios_base.h" 3
static const seekdir end = _S_end;
# 473 "/usr/include/c++/5/bits/ios_base.h" 3
typedef int io_state;
# 474 "/usr/include/c++/5/bits/ios_base.h" 3
typedef int open_mode;
# 475 "/usr/include/c++/5/bits/ios_base.h" 3
typedef int seek_dir;
# 477 "/usr/include/c++/5/bits/ios_base.h" 3
typedef std::streampos streampos;
# 478 "/usr/include/c++/5/bits/ios_base.h" 3
typedef std::streamoff streamoff;
# 487 "/usr/include/c++/5/bits/ios_base.h" 3
enum event {
# 489 "/usr/include/c++/5/bits/ios_base.h" 3
erase_event,
# 490 "/usr/include/c++/5/bits/ios_base.h" 3
imbue_event,
# 491 "/usr/include/c++/5/bits/ios_base.h" 3
copyfmt_event
# 492 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 504 "/usr/include/c++/5/bits/ios_base.h" 3
typedef void (*event_callback)(event __e, ios_base & __b, int __i);
# 517 "/usr/include/c++/5/bits/ios_base.h" 3
void register_callback(event_callback __fn, int __index);
# 520 "/usr/include/c++/5/bits/ios_base.h" 3
protected: streamsize _M_precision;
# 521 "/usr/include/c++/5/bits/ios_base.h" 3
streamsize _M_width;
# 522 "/usr/include/c++/5/bits/ios_base.h" 3
fmtflags _M_flags;
# 523 "/usr/include/c++/5/bits/ios_base.h" 3
iostate _M_exception;
# 524 "/usr/include/c++/5/bits/ios_base.h" 3
iostate _M_streambuf_state;
# 528 "/usr/include/c++/5/bits/ios_base.h" 3
struct _Callback_list {
# 531 "/usr/include/c++/5/bits/ios_base.h" 3
_Callback_list *_M_next;
# 532 "/usr/include/c++/5/bits/ios_base.h" 3
event_callback _M_fn;
# 533 "/usr/include/c++/5/bits/ios_base.h" 3
int _M_index;
# 534 "/usr/include/c++/5/bits/ios_base.h" 3
_Atomic_word _M_refcount;
# 536 "/usr/include/c++/5/bits/ios_base.h" 3
_Callback_list(event_callback __fn, int __index, _Callback_list *
# 537 "/usr/include/c++/5/bits/ios_base.h" 3
__cb) : _M_next(__cb), _M_fn(__fn), _M_index(__index), _M_refcount(0)
# 538 "/usr/include/c++/5/bits/ios_base.h" 3
{ }
# 541 "/usr/include/c++/5/bits/ios_base.h" 3
void _M_add_reference() { __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 545 "/usr/include/c++/5/bits/ios_base.h" 3
int _M_remove_reference()
# 546 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 548 "/usr/include/c++/5/bits/ios_base.h" 3
;
# 549 "/usr/include/c++/5/bits/ios_base.h" 3
int __res = __gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1);
# 550 "/usr/include/c++/5/bits/ios_base.h" 3
if (__res == 0)
# 551 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 552 "/usr/include/c++/5/bits/ios_base.h" 3
;
# 553 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 554 "/usr/include/c++/5/bits/ios_base.h" 3
return __res;
# 555 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 556 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 558 "/usr/include/c++/5/bits/ios_base.h" 3
_Callback_list *_M_callbacks;
# 561 "/usr/include/c++/5/bits/ios_base.h" 3
void _M_call_callbacks(event __ev) throw();
# 564 "/usr/include/c++/5/bits/ios_base.h" 3
void _M_dispose_callbacks() throw();
# 567 "/usr/include/c++/5/bits/ios_base.h" 3
struct _Words {
# 569 "/usr/include/c++/5/bits/ios_base.h" 3
void *_M_pword;
# 570 "/usr/include/c++/5/bits/ios_base.h" 3
long _M_iword;
# 571 "/usr/include/c++/5/bits/ios_base.h" 3
_Words() : _M_pword((0)), _M_iword((0)) { }
# 572 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 575 "/usr/include/c++/5/bits/ios_base.h" 3
_Words _M_word_zero;
# 579 "/usr/include/c++/5/bits/ios_base.h" 3
enum { _S_local_word_size = 8};
# 580 "/usr/include/c++/5/bits/ios_base.h" 3
_Words _M_local_word[_S_local_word_size];
# 583 "/usr/include/c++/5/bits/ios_base.h" 3
int _M_word_size;
# 584 "/usr/include/c++/5/bits/ios_base.h" 3
_Words *_M_word;
# 587 "/usr/include/c++/5/bits/ios_base.h" 3
_Words &_M_grow_words(int __index, bool __iword);
# 590 "/usr/include/c++/5/bits/ios_base.h" 3
locale _M_ios_locale;
# 593 "/usr/include/c++/5/bits/ios_base.h" 3
void _M_init() throw();
# 601 "/usr/include/c++/5/bits/ios_base.h" 3
public: class Init {
# 603 "/usr/include/c++/5/bits/ios_base.h" 3
friend class ios_base;
# 605 "/usr/include/c++/5/bits/ios_base.h" 3
public: Init();
# 606 "/usr/include/c++/5/bits/ios_base.h" 3
~Init();
# 609 "/usr/include/c++/5/bits/ios_base.h" 3
private: static _Atomic_word _S_refcount;
# 610 "/usr/include/c++/5/bits/ios_base.h" 3
static bool _S_synced_with_stdio;
# 611 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 619 "/usr/include/c++/5/bits/ios_base.h" 3
fmtflags flags() const
# 620 "/usr/include/c++/5/bits/ios_base.h" 3
{ return _M_flags; }
# 630 "/usr/include/c++/5/bits/ios_base.h" 3
fmtflags flags(fmtflags __fmtfl)
# 631 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 632 "/usr/include/c++/5/bits/ios_base.h" 3
fmtflags __old = _M_flags;
# 633 "/usr/include/c++/5/bits/ios_base.h" 3
(_M_flags) = __fmtfl;
# 634 "/usr/include/c++/5/bits/ios_base.h" 3
return __old;
# 635 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 646 "/usr/include/c++/5/bits/ios_base.h" 3
fmtflags setf(fmtflags __fmtfl)
# 647 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 648 "/usr/include/c++/5/bits/ios_base.h" 3
fmtflags __old = _M_flags;
# 649 "/usr/include/c++/5/bits/ios_base.h" 3
((_M_flags) |= __fmtfl);
# 650 "/usr/include/c++/5/bits/ios_base.h" 3
return __old;
# 651 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 663 "/usr/include/c++/5/bits/ios_base.h" 3
fmtflags setf(fmtflags __fmtfl, fmtflags __mask)
# 664 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 665 "/usr/include/c++/5/bits/ios_base.h" 3
fmtflags __old = _M_flags;
# 666 "/usr/include/c++/5/bits/ios_base.h" 3
((_M_flags) &= ((~__mask)));
# 667 "/usr/include/c++/5/bits/ios_base.h" 3
((_M_flags) |= ((__fmtfl & __mask)));
# 668 "/usr/include/c++/5/bits/ios_base.h" 3
return __old;
# 669 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 678 "/usr/include/c++/5/bits/ios_base.h" 3
void unsetf(fmtflags __mask)
# 679 "/usr/include/c++/5/bits/ios_base.h" 3
{ ((_M_flags) &= ((~__mask))); }
# 689 "/usr/include/c++/5/bits/ios_base.h" 3
streamsize precision() const
# 690 "/usr/include/c++/5/bits/ios_base.h" 3
{ return _M_precision; }
# 698 "/usr/include/c++/5/bits/ios_base.h" 3
streamsize precision(streamsize __prec)
# 699 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 700 "/usr/include/c++/5/bits/ios_base.h" 3
streamsize __old = _M_precision;
# 701 "/usr/include/c++/5/bits/ios_base.h" 3
(_M_precision) = __prec;
# 702 "/usr/include/c++/5/bits/ios_base.h" 3
return __old;
# 703 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 712 "/usr/include/c++/5/bits/ios_base.h" 3
streamsize width() const
# 713 "/usr/include/c++/5/bits/ios_base.h" 3
{ return _M_width; }
# 721 "/usr/include/c++/5/bits/ios_base.h" 3
streamsize width(streamsize __wide)
# 722 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 723 "/usr/include/c++/5/bits/ios_base.h" 3
streamsize __old = _M_width;
# 724 "/usr/include/c++/5/bits/ios_base.h" 3
(_M_width) = __wide;
# 725 "/usr/include/c++/5/bits/ios_base.h" 3
return __old;
# 726 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 740 "/usr/include/c++/5/bits/ios_base.h" 3
static bool sync_with_stdio(bool __sync = true);
# 752 "/usr/include/c++/5/bits/ios_base.h" 3
locale imbue(const locale & __loc) throw();
# 763 "/usr/include/c++/5/bits/ios_base.h" 3
locale getloc() const
# 764 "/usr/include/c++/5/bits/ios_base.h" 3
{ return _M_ios_locale; }
# 774 "/usr/include/c++/5/bits/ios_base.h" 3
const locale &_M_getloc() const
# 775 "/usr/include/c++/5/bits/ios_base.h" 3
{ return _M_ios_locale; }
# 793 "/usr/include/c++/5/bits/ios_base.h" 3
static int xalloc() throw();
# 809 "/usr/include/c++/5/bits/ios_base.h" 3
long &iword(int __ix)
# 810 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 811 "/usr/include/c++/5/bits/ios_base.h" 3
_Words &__word = (__ix < (_M_word_size)) ? (_M_word)[__ix] : this->_M_grow_words(__ix, true);
# 813 "/usr/include/c++/5/bits/ios_base.h" 3
return __word._M_iword;
# 814 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 830 "/usr/include/c++/5/bits/ios_base.h" 3
void *&pword(int __ix)
# 831 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 832 "/usr/include/c++/5/bits/ios_base.h" 3
_Words &__word = (__ix < (_M_word_size)) ? (_M_word)[__ix] : this->_M_grow_words(__ix, false);
# 834 "/usr/include/c++/5/bits/ios_base.h" 3
return __word._M_pword;
# 835 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 846 "/usr/include/c++/5/bits/ios_base.h" 3
virtual ~ios_base();
# 849 "/usr/include/c++/5/bits/ios_base.h" 3
protected: ios_base() throw();
# 855 "/usr/include/c++/5/bits/ios_base.h" 3
private: ios_base(const ios_base &);
# 858 "/usr/include/c++/5/bits/ios_base.h" 3
ios_base &operator=(const ios_base &);
# 873 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 878 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &boolalpha(ios_base &__base)
# 879 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 880 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::boolalpha);
# 881 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 882 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 886 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &noboolalpha(ios_base &__base)
# 887 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 888 "/usr/include/c++/5/bits/ios_base.h" 3
__base.unsetf(ios_base::boolalpha);
# 889 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 890 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 894 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &showbase(ios_base &__base)
# 895 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 896 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::showbase);
# 897 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 898 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 902 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &noshowbase(ios_base &__base)
# 903 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 904 "/usr/include/c++/5/bits/ios_base.h" 3
__base.unsetf(ios_base::showbase);
# 905 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 906 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 910 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &showpoint(ios_base &__base)
# 911 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 912 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::showpoint);
# 913 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 914 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 918 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &noshowpoint(ios_base &__base)
# 919 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 920 "/usr/include/c++/5/bits/ios_base.h" 3
__base.unsetf(ios_base::showpoint);
# 921 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 922 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 926 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &showpos(ios_base &__base)
# 927 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 928 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::showpos);
# 929 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 930 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 934 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &noshowpos(ios_base &__base)
# 935 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 936 "/usr/include/c++/5/bits/ios_base.h" 3
__base.unsetf(ios_base::showpos);
# 937 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 938 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 942 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &skipws(ios_base &__base)
# 943 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 944 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::skipws);
# 945 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 946 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 950 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &noskipws(ios_base &__base)
# 951 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 952 "/usr/include/c++/5/bits/ios_base.h" 3
__base.unsetf(ios_base::skipws);
# 953 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 954 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 958 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &uppercase(ios_base &__base)
# 959 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 960 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::uppercase);
# 961 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 962 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 966 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &nouppercase(ios_base &__base)
# 967 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 968 "/usr/include/c++/5/bits/ios_base.h" 3
__base.unsetf(ios_base::uppercase);
# 969 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 970 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 974 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &unitbuf(ios_base &__base)
# 975 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 976 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::unitbuf);
# 977 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 978 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 982 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &nounitbuf(ios_base &__base)
# 983 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 984 "/usr/include/c++/5/bits/ios_base.h" 3
__base.unsetf(ios_base::unitbuf);
# 985 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 986 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 991 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &internal(ios_base &__base)
# 992 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 993 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::internal, ios_base::adjustfield);
# 994 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 995 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 999 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &left(ios_base &__base)
# 1000 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 1001 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::left, ios_base::adjustfield);
# 1002 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 1003 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 1007 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &right(ios_base &__base)
# 1008 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 1009 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::right, ios_base::adjustfield);
# 1010 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 1011 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 1016 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &dec(ios_base &__base)
# 1017 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 1018 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::dec, ios_base::basefield);
# 1019 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 1020 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 1024 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &hex(ios_base &__base)
# 1025 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 1026 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::hex, ios_base::basefield);
# 1027 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 1028 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 1032 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &oct(ios_base &__base)
# 1033 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 1034 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::oct, ios_base::basefield);
# 1035 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 1036 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 1041 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &fixed(ios_base &__base)
# 1042 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 1043 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::fixed, ios_base::floatfield);
# 1044 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 1045 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 1049 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &scientific(ios_base &__base)
# 1050 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 1051 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::scientific, ios_base::floatfield);
# 1052 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 1053 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 1077 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 45 "/usr/include/c++/5/streambuf" 3
namespace std __attribute((__visibility__("default"))) {
# 49 "/usr/include/c++/5/streambuf" 3
template< class _CharT, class _Traits> streamsize __copy_streambufs_eof(basic_streambuf< _CharT, _Traits> *, basic_streambuf< _CharT, _Traits> *, bool &);
# 119 "/usr/include/c++/5/streambuf" 3
template< class _CharT, class _Traits>
# 120 "/usr/include/c++/5/streambuf" 3
class basic_streambuf {
# 129 "/usr/include/c++/5/streambuf" 3
public: typedef _CharT char_type;
# 130 "/usr/include/c++/5/streambuf" 3
typedef _Traits traits_type;
# 131 "/usr/include/c++/5/streambuf" 3
typedef typename _Traits::int_type int_type;
# 132 "/usr/include/c++/5/streambuf" 3
typedef typename _Traits::pos_type pos_type;
# 133 "/usr/include/c++/5/streambuf" 3
typedef typename _Traits::off_type off_type;
# 138 "/usr/include/c++/5/streambuf" 3
typedef basic_streambuf __streambuf_type;
# 141 "/usr/include/c++/5/streambuf" 3
friend class basic_ios< _CharT, _Traits> ;
# 142 "/usr/include/c++/5/streambuf" 3
friend class basic_istream< _CharT, _Traits> ;
# 143 "/usr/include/c++/5/streambuf" 3
friend class basic_ostream< _CharT, _Traits> ;
# 144 "/usr/include/c++/5/streambuf" 3
friend class istreambuf_iterator< _CharT, _Traits> ;
# 145 "/usr/include/c++/5/streambuf" 3
friend class ostreambuf_iterator< _CharT, _Traits> ;
# 148 "/usr/include/c++/5/streambuf" 3
friend streamsize __copy_streambufs_eof<> (basic_streambuf *, basic_streambuf *, bool &);
# 150 "/usr/include/c++/5/streambuf" 3
template< bool _IsMove, class _CharT2> friend typename __gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, _CharT2 *> ::__type __copy_move_a2(istreambuf_iterator< _CharT2, char_traits< _CharT2> > , istreambuf_iterator< _CharT2, char_traits< _CharT2> > , _CharT2 *);
# 156 "/usr/include/c++/5/streambuf" 3
template< class _CharT2> friend typename __gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, istreambuf_iterator< _CharT2, char_traits< _CharT2> > > ::__type find(istreambuf_iterator< _CharT2, char_traits< _CharT2> > , istreambuf_iterator< _CharT2, char_traits< _CharT2> > , const _CharT2 &);
# 162 "/usr/include/c++/5/streambuf" 3
template< class _CharT2, class _Traits2> friend basic_istream< _CharT2, _Traits2> &operator>>(basic_istream< _CharT2, _Traits2> &, _CharT2 *);
# 166 "/usr/include/c++/5/streambuf" 3
template< class _CharT2, class _Traits2, class _Alloc> friend basic_istream< _CharT2, _Traits2> &operator>>(basic_istream< _CharT2, _Traits2> &, __cxx11::basic_string< _CharT2, _Traits2, _Alloc> &);
# 171 "/usr/include/c++/5/streambuf" 3
template< class _CharT2, class _Traits2, class _Alloc> friend basic_istream< _CharT2, _Traits2> &getline(basic_istream< _CharT2, _Traits2> &, __cxx11::basic_string< _CharT2, _Traits2, _Alloc> &, _CharT2);
# 184 "/usr/include/c++/5/streambuf" 3
protected: char_type *_M_in_beg;
# 185 "/usr/include/c++/5/streambuf" 3
char_type *_M_in_cur;
# 186 "/usr/include/c++/5/streambuf" 3
char_type *_M_in_end;
# 187 "/usr/include/c++/5/streambuf" 3
char_type *_M_out_beg;
# 188 "/usr/include/c++/5/streambuf" 3
char_type *_M_out_cur;
# 189 "/usr/include/c++/5/streambuf" 3
char_type *_M_out_end;
# 192 "/usr/include/c++/5/streambuf" 3
locale _M_buf_locale;
# 197 "/usr/include/c++/5/streambuf" 3
public: virtual ~basic_streambuf()
# 198 "/usr/include/c++/5/streambuf" 3
{ }
# 209 "/usr/include/c++/5/streambuf" 3
locale pubimbue(const locale &__loc)
# 210 "/usr/include/c++/5/streambuf" 3
{
# 211 "/usr/include/c++/5/streambuf" 3
locale __tmp(this->getloc());
# 212 "/usr/include/c++/5/streambuf" 3
this->imbue(__loc);
# 213 "/usr/include/c++/5/streambuf" 3
((_M_buf_locale) = __loc);
# 214 "/usr/include/c++/5/streambuf" 3
return __tmp;
# 215 "/usr/include/c++/5/streambuf" 3
}
# 226 "/usr/include/c++/5/streambuf" 3
locale getloc() const
# 227 "/usr/include/c++/5/streambuf" 3
{ return _M_buf_locale; }
# 239 "/usr/include/c++/5/streambuf" 3
basic_streambuf *pubsetbuf(char_type *__s, streamsize __n)
# 240 "/usr/include/c++/5/streambuf" 3
{ return this->setbuf(__s, __n); }
# 251 "/usr/include/c++/5/streambuf" 3
pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode
# 252 "/usr/include/c++/5/streambuf" 3
__mode = (ios_base::in | ios_base::out))
# 253 "/usr/include/c++/5/streambuf" 3
{ return this->seekoff(__off, __way, __mode); }
# 263 "/usr/include/c++/5/streambuf" 3
pos_type pubseekpos(pos_type __sp, ios_base::openmode
# 264 "/usr/include/c++/5/streambuf" 3
__mode = (ios_base::in | ios_base::out))
# 265 "/usr/include/c++/5/streambuf" 3
{ return this->seekpos(__sp, __mode); }
# 271 "/usr/include/c++/5/streambuf" 3
int pubsync() { return this->sync(); }
# 284 "/usr/include/c++/5/streambuf" 3
streamsize in_avail()
# 285 "/usr/include/c++/5/streambuf" 3
{
# 286 "/usr/include/c++/5/streambuf" 3
const streamsize __ret = this->egptr() - this->gptr();
# 287 "/usr/include/c++/5/streambuf" 3
return (__ret) ? __ret : this->showmanyc();
# 288 "/usr/include/c++/5/streambuf" 3
}
# 298 "/usr/include/c++/5/streambuf" 3
int_type snextc()
# 299 "/usr/include/c++/5/streambuf" 3
{
# 300 "/usr/include/c++/5/streambuf" 3
int_type __ret = traits_type::eof();
# 301 "/usr/include/c++/5/streambuf" 3
if (__builtin_expect(!traits_type::eq_int_type(this->sbumpc(), __ret), true)) {
# 303 "/usr/include/c++/5/streambuf" 3
__ret = this->sgetc(); }
# 304 "/usr/include/c++/5/streambuf" 3
return __ret;
# 305 "/usr/include/c++/5/streambuf" 3
}
# 316 "/usr/include/c++/5/streambuf" 3
int_type sbumpc()
# 317 "/usr/include/c++/5/streambuf" 3
{
# 318 "/usr/include/c++/5/streambuf" 3
int_type __ret;
# 319 "/usr/include/c++/5/streambuf" 3
if (__builtin_expect(this->gptr() < this->egptr(), true))
# 320 "/usr/include/c++/5/streambuf" 3
{
# 321 "/usr/include/c++/5/streambuf" 3
__ret = traits_type::to_int_type(*this->gptr());
# 322 "/usr/include/c++/5/streambuf" 3
this->gbump(1);
# 323 "/usr/include/c++/5/streambuf" 3
} else {
# 325 "/usr/include/c++/5/streambuf" 3
__ret = this->uflow(); }
# 326 "/usr/include/c++/5/streambuf" 3
return __ret;
# 327 "/usr/include/c++/5/streambuf" 3
}
# 338 "/usr/include/c++/5/streambuf" 3
int_type sgetc()
# 339 "/usr/include/c++/5/streambuf" 3
{
# 340 "/usr/include/c++/5/streambuf" 3
int_type __ret;
# 341 "/usr/include/c++/5/streambuf" 3
if (__builtin_expect(this->gptr() < this->egptr(), true)) {
# 342 "/usr/include/c++/5/streambuf" 3
__ret = traits_type::to_int_type(*this->gptr()); } else {
# 344 "/usr/include/c++/5/streambuf" 3
__ret = this->underflow(); }
# 345 "/usr/include/c++/5/streambuf" 3
return __ret;
# 346 "/usr/include/c++/5/streambuf" 3
}
# 357 "/usr/include/c++/5/streambuf" 3
streamsize sgetn(char_type *__s, streamsize __n)
# 358 "/usr/include/c++/5/streambuf" 3
{ return this->xsgetn(__s, __n); }
# 372 "/usr/include/c++/5/streambuf" 3
int_type sputbackc(char_type __c)
# 373 "/usr/include/c++/5/streambuf" 3
{
# 374 "/usr/include/c++/5/streambuf" 3
int_type __ret;
# 375 "/usr/include/c++/5/streambuf" 3
const bool __testpos = this->eback() < this->gptr();
# 376 "/usr/include/c++/5/streambuf" 3
if (__builtin_expect((!__testpos) || (!traits_type::eq(__c, this->gptr()[-1])), false)) {
# 378 "/usr/include/c++/5/streambuf" 3
__ret = this->pbackfail(traits_type::to_int_type(__c)); } else
# 380 "/usr/include/c++/5/streambuf" 3
{
# 381 "/usr/include/c++/5/streambuf" 3
this->gbump(-1);
# 382 "/usr/include/c++/5/streambuf" 3
__ret = traits_type::to_int_type(*this->gptr());
# 383 "/usr/include/c++/5/streambuf" 3
}
# 384 "/usr/include/c++/5/streambuf" 3
return __ret;
# 385 "/usr/include/c++/5/streambuf" 3
}
# 397 "/usr/include/c++/5/streambuf" 3
int_type sungetc()
# 398 "/usr/include/c++/5/streambuf" 3
{
# 399 "/usr/include/c++/5/streambuf" 3
int_type __ret;
# 400 "/usr/include/c++/5/streambuf" 3
if (__builtin_expect(this->eback() < this->gptr(), true))
# 401 "/usr/include/c++/5/streambuf" 3
{
# 402 "/usr/include/c++/5/streambuf" 3
this->gbump(-1);
# 403 "/usr/include/c++/5/streambuf" 3
__ret = traits_type::to_int_type(*this->gptr());
# 404 "/usr/include/c++/5/streambuf" 3
} else {
# 406 "/usr/include/c++/5/streambuf" 3
__ret = this->pbackfail(); }
# 407 "/usr/include/c++/5/streambuf" 3
return __ret;
# 408 "/usr/include/c++/5/streambuf" 3
}
# 424 "/usr/include/c++/5/streambuf" 3
int_type sputc(char_type __c)
# 425 "/usr/include/c++/5/streambuf" 3
{
# 426 "/usr/include/c++/5/streambuf" 3
int_type __ret;
# 427 "/usr/include/c++/5/streambuf" 3
if (__builtin_expect(this->pptr() < this->epptr(), true))
# 428 "/usr/include/c++/5/streambuf" 3
{
# 429 "/usr/include/c++/5/streambuf" 3
(*this->pptr()) = __c;
# 430 "/usr/include/c++/5/streambuf" 3
this->pbump(1);
# 431 "/usr/include/c++/5/streambuf" 3
__ret = traits_type::to_int_type(__c);
# 432 "/usr/include/c++/5/streambuf" 3
} else {
# 434 "/usr/include/c++/5/streambuf" 3
__ret = this->overflow(traits_type::to_int_type(__c)); }
# 435 "/usr/include/c++/5/streambuf" 3
return __ret;
# 436 "/usr/include/c++/5/streambuf" 3
}
# 450 "/usr/include/c++/5/streambuf" 3
streamsize sputn(const char_type *__s, streamsize __n)
# 451 "/usr/include/c++/5/streambuf" 3
{ return this->xsputn(__s, __n); }
# 463 "/usr/include/c++/5/streambuf" 3
protected: basic_streambuf() : _M_in_beg((0)), _M_in_cur((0)), _M_in_end((0)), _M_out_beg((0)), _M_out_cur((0)), _M_out_end((0)), _M_buf_locale(locale())
# 467 "/usr/include/c++/5/streambuf" 3
{ }
# 482 "/usr/include/c++/5/streambuf" 3
char_type *eback() const { return _M_in_beg; }
# 485 "/usr/include/c++/5/streambuf" 3
char_type *gptr() const { return _M_in_cur; }
# 488 "/usr/include/c++/5/streambuf" 3
char_type *egptr() const { return _M_in_end; }
# 498 "/usr/include/c++/5/streambuf" 3
void gbump(int __n) { (_M_in_cur) += __n; }
# 509 "/usr/include/c++/5/streambuf" 3
void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend)
# 510 "/usr/include/c++/5/streambuf" 3
{
# 511 "/usr/include/c++/5/streambuf" 3
(_M_in_beg) = __gbeg;
# 512 "/usr/include/c++/5/streambuf" 3
(_M_in_cur) = __gnext;
# 513 "/usr/include/c++/5/streambuf" 3
(_M_in_end) = __gend;
# 514 "/usr/include/c++/5/streambuf" 3
}
# 529 "/usr/include/c++/5/streambuf" 3
char_type *pbase() const { return _M_out_beg; }
# 532 "/usr/include/c++/5/streambuf" 3
char_type *pptr() const { return _M_out_cur; }
# 535 "/usr/include/c++/5/streambuf" 3
char_type *epptr() const { return _M_out_end; }
# 545 "/usr/include/c++/5/streambuf" 3
void pbump(int __n) { (_M_out_cur) += __n; }
# 555 "/usr/include/c++/5/streambuf" 3
void setp(char_type *__pbeg, char_type *__pend)
# 556 "/usr/include/c++/5/streambuf" 3
{
# 557 "/usr/include/c++/5/streambuf" 3
(_M_out_beg) = ((_M_out_cur) = __pbeg);
# 558 "/usr/include/c++/5/streambuf" 3
(_M_out_end) = __pend;
# 559 "/usr/include/c++/5/streambuf" 3
}
# 576 "/usr/include/c++/5/streambuf" 3
virtual void imbue(const locale &__loc)
# 577 "/usr/include/c++/5/streambuf" 3
{ }
# 591 "/usr/include/c++/5/streambuf" 3
virtual basic_streambuf *setbuf(char_type *, streamsize)
# 592 "/usr/include/c++/5/streambuf" 3
{ return this; }
# 602 "/usr/include/c++/5/streambuf" 3
virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode = (ios_base::in | ios_base::out))
# 604 "/usr/include/c++/5/streambuf" 3
{ return (pos_type)((off_type)(-1)); }
# 614 "/usr/include/c++/5/streambuf" 3
virtual pos_type seekpos(pos_type, ios_base::openmode = (ios_base::in | ios_base::out))
# 616 "/usr/include/c++/5/streambuf" 3
{ return (pos_type)((off_type)(-1)); }
# 627 "/usr/include/c++/5/streambuf" 3
virtual int sync() { return 0; }
# 649 "/usr/include/c++/5/streambuf" 3
virtual streamsize showmanyc() { return 0; }
# 665 "/usr/include/c++/5/streambuf" 3
virtual streamsize xsgetn(char_type * __s, streamsize __n);
# 687 "/usr/include/c++/5/streambuf" 3
virtual int_type underflow()
# 688 "/usr/include/c++/5/streambuf" 3
{ return traits_type::eof(); }
# 700 "/usr/include/c++/5/streambuf" 3
virtual int_type uflow()
# 701 "/usr/include/c++/5/streambuf" 3
{
# 702 "/usr/include/c++/5/streambuf" 3
int_type __ret = traits_type::eof();
# 703 "/usr/include/c++/5/streambuf" 3
const bool __testeof = traits_type::eq_int_type(this->underflow(), __ret);
# 705 "/usr/include/c++/5/streambuf" 3
if (!__testeof)
# 706 "/usr/include/c++/5/streambuf" 3
{
# 707 "/usr/include/c++/5/streambuf" 3
__ret = traits_type::to_int_type(*this->gptr());
# 708 "/usr/include/c++/5/streambuf" 3
this->gbump(1);
# 709 "/usr/include/c++/5/streambuf" 3
}
# 710 "/usr/include/c++/5/streambuf" 3
return __ret;
# 711 "/usr/include/c++/5/streambuf" 3
}
# 724 "/usr/include/c++/5/streambuf" 3
virtual int_type pbackfail(int_type __c = traits_type::eof())
# 725 "/usr/include/c++/5/streambuf" 3
{ return traits_type::eof(); }
# 742 "/usr/include/c++/5/streambuf" 3
virtual streamsize xsputn(const char_type * __s, streamsize __n);
# 768 "/usr/include/c++/5/streambuf" 3
virtual int_type overflow(int_type __c = traits_type::eof())
# 769 "/usr/include/c++/5/streambuf" 3
{ return traits_type::eof(); }
# 783 "/usr/include/c++/5/streambuf" 3
public: void stossc()
# 784 "/usr/include/c++/5/streambuf" 3
{
# 785 "/usr/include/c++/5/streambuf" 3
if (this->gptr() < this->egptr()) {
# 786 "/usr/include/c++/5/streambuf" 3
this->gbump(1); } else {
# 788 "/usr/include/c++/5/streambuf" 3
this->uflow(); }
# 789 "/usr/include/c++/5/streambuf" 3
}
# 794 "/usr/include/c++/5/streambuf" 3
void __safe_gbump(streamsize __n) { (_M_in_cur) += __n; }
# 797 "/usr/include/c++/5/streambuf" 3
void __safe_pbump(streamsize __n) { (_M_out_cur) += __n; }
# 804 "/usr/include/c++/5/streambuf" 3
private: basic_streambuf(const basic_streambuf &);
# 807 "/usr/include/c++/5/streambuf" 3
basic_streambuf &operator=(const basic_streambuf &);
# 822 "/usr/include/c++/5/streambuf" 3
};
# 838 "/usr/include/c++/5/streambuf" 3
template<> streamsize __copy_streambufs_eof(basic_streambuf< char, char_traits< char> > * __sbin, basic_streambuf< char, char_traits< char> > * __sbout, bool & __ineof);
# 843 "/usr/include/c++/5/streambuf" 3
template<> streamsize __copy_streambufs_eof(basic_streambuf< wchar_t, char_traits< wchar_t> > * __sbin, basic_streambuf< wchar_t, char_traits< wchar_t> > * __sbout, bool & __ineof);
# 848 "/usr/include/c++/5/streambuf" 3
}
# 39 "/usr/include/c++/5/bits/streambuf.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 43 "/usr/include/c++/5/bits/streambuf.tcc" 3
template< class _CharT, class _Traits> streamsize
# 46 "/usr/include/c++/5/bits/streambuf.tcc" 3
basic_streambuf< _CharT, _Traits> ::xsgetn(char_type *__s, streamsize __n)
# 47 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 48 "/usr/include/c++/5/bits/streambuf.tcc" 3
streamsize __ret = (0);
# 49 "/usr/include/c++/5/bits/streambuf.tcc" 3
while (__ret < __n)
# 50 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 51 "/usr/include/c++/5/bits/streambuf.tcc" 3
const streamsize __buf_len = this->egptr() - this->gptr();
# 52 "/usr/include/c++/5/bits/streambuf.tcc" 3
if (__buf_len)
# 53 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 54 "/usr/include/c++/5/bits/streambuf.tcc" 3
const streamsize __remaining = __n - __ret;
# 55 "/usr/include/c++/5/bits/streambuf.tcc" 3
const streamsize __len = std::min(__buf_len, __remaining);
# 56 "/usr/include/c++/5/bits/streambuf.tcc" 3
traits_type::copy(__s, this->gptr(), __len);
# 57 "/usr/include/c++/5/bits/streambuf.tcc" 3
__ret += __len;
# 58 "/usr/include/c++/5/bits/streambuf.tcc" 3
__s += __len;
# 59 "/usr/include/c++/5/bits/streambuf.tcc" 3
this->__safe_gbump(__len);
# 60 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 62 "/usr/include/c++/5/bits/streambuf.tcc" 3
if (__ret < __n)
# 63 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 64 "/usr/include/c++/5/bits/streambuf.tcc" 3
const int_type __c = this->uflow();
# 65 "/usr/include/c++/5/bits/streambuf.tcc" 3
if (!traits_type::eq_int_type(__c, traits_type::eof()))
# 66 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 67 "/usr/include/c++/5/bits/streambuf.tcc" 3
traits_type::assign(*(__s++), traits_type::to_char_type(__c));
# 68 "/usr/include/c++/5/bits/streambuf.tcc" 3
++__ret;
# 69 "/usr/include/c++/5/bits/streambuf.tcc" 3
} else {
# 71 "/usr/include/c++/5/bits/streambuf.tcc" 3
break; }
# 72 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 73 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 74 "/usr/include/c++/5/bits/streambuf.tcc" 3
return __ret;
# 75 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 77 "/usr/include/c++/5/bits/streambuf.tcc" 3
template< class _CharT, class _Traits> streamsize
# 80 "/usr/include/c++/5/bits/streambuf.tcc" 3
basic_streambuf< _CharT, _Traits> ::xsputn(const char_type *__s, streamsize __n)
# 81 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 82 "/usr/include/c++/5/bits/streambuf.tcc" 3
streamsize __ret = (0);
# 83 "/usr/include/c++/5/bits/streambuf.tcc" 3
while (__ret < __n)
# 84 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 85 "/usr/include/c++/5/bits/streambuf.tcc" 3
const streamsize __buf_len = this->epptr() - this->pptr();
# 86 "/usr/include/c++/5/bits/streambuf.tcc" 3
if (__buf_len)
# 87 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 88 "/usr/include/c++/5/bits/streambuf.tcc" 3
const streamsize __remaining = __n - __ret;
# 89 "/usr/include/c++/5/bits/streambuf.tcc" 3
const streamsize __len = std::min(__buf_len, __remaining);
# 90 "/usr/include/c++/5/bits/streambuf.tcc" 3
traits_type::copy(this->pptr(), __s, __len);
# 91 "/usr/include/c++/5/bits/streambuf.tcc" 3
__ret += __len;
# 92 "/usr/include/c++/5/bits/streambuf.tcc" 3
__s += __len;
# 93 "/usr/include/c++/5/bits/streambuf.tcc" 3
this->__safe_pbump(__len);
# 94 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 96 "/usr/include/c++/5/bits/streambuf.tcc" 3
if (__ret < __n)
# 97 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 98 "/usr/include/c++/5/bits/streambuf.tcc" 3
int_type __c = this->overflow(traits_type::to_int_type(*__s));
# 99 "/usr/include/c++/5/bits/streambuf.tcc" 3
if (!traits_type::eq_int_type(__c, traits_type::eof()))
# 100 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 101 "/usr/include/c++/5/bits/streambuf.tcc" 3
++__ret;
# 102 "/usr/include/c++/5/bits/streambuf.tcc" 3
++__s;
# 103 "/usr/include/c++/5/bits/streambuf.tcc" 3
} else {
# 105 "/usr/include/c++/5/bits/streambuf.tcc" 3
break; }
# 106 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 107 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 108 "/usr/include/c++/5/bits/streambuf.tcc" 3
return __ret;
# 109 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 114 "/usr/include/c++/5/bits/streambuf.tcc" 3
template< class _CharT, class _Traits> streamsize
# 116 "/usr/include/c++/5/bits/streambuf.tcc" 3
__copy_streambufs_eof(basic_streambuf< _CharT, _Traits> *__sbin, basic_streambuf< _CharT, _Traits> *
# 117 "/usr/include/c++/5/bits/streambuf.tcc" 3
__sbout, bool &
# 118 "/usr/include/c++/5/bits/streambuf.tcc" 3
__ineof)
# 119 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 120 "/usr/include/c++/5/bits/streambuf.tcc" 3
streamsize __ret = (0);
# 121 "/usr/include/c++/5/bits/streambuf.tcc" 3
__ineof = true;
# 122 "/usr/include/c++/5/bits/streambuf.tcc" 3
typename _Traits::int_type __c = (__sbin->sgetc());
# 123 "/usr/include/c++/5/bits/streambuf.tcc" 3
while (!_Traits::eq_int_type(__c, _Traits::eof()))
# 124 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 125 "/usr/include/c++/5/bits/streambuf.tcc" 3
__c = (__sbout->sputc(_Traits::to_char_type(__c)));
# 126 "/usr/include/c++/5/bits/streambuf.tcc" 3
if (_Traits::eq_int_type(__c, _Traits::eof()))
# 127 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 128 "/usr/include/c++/5/bits/streambuf.tcc" 3
__ineof = false;
# 129 "/usr/include/c++/5/bits/streambuf.tcc" 3
break;
# 130 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 131 "/usr/include/c++/5/bits/streambuf.tcc" 3
++__ret;
# 132 "/usr/include/c++/5/bits/streambuf.tcc" 3
__c = (__sbin->snextc());
# 133 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 134 "/usr/include/c++/5/bits/streambuf.tcc" 3
return __ret;
# 135 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 137 "/usr/include/c++/5/bits/streambuf.tcc" 3
template< class _CharT, class _Traits> inline streamsize
# 139 "/usr/include/c++/5/bits/streambuf.tcc" 3
__copy_streambufs(basic_streambuf< _CharT, _Traits> *__sbin, basic_streambuf< _CharT, _Traits> *
# 140 "/usr/include/c++/5/bits/streambuf.tcc" 3
__sbout)
# 141 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 142 "/usr/include/c++/5/bits/streambuf.tcc" 3
bool __ineof;
# 143 "/usr/include/c++/5/bits/streambuf.tcc" 3
return __copy_streambufs_eof(__sbin, __sbout, __ineof);
# 144 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 149 "/usr/include/c++/5/bits/streambuf.tcc" 3
extern template class basic_streambuf< char, char_traits< char> > ;
# 150 "/usr/include/c++/5/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs(basic_streambuf< char, char_traits< char> > * __sbin, basic_streambuf< char, char_traits< char> > * __sbout);
# 154 "/usr/include/c++/5/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs_eof< char, char_traits< char> > (basic_streambuf< char, char_traits< char> > *, basic_streambuf< char, char_traits< char> > *, bool &);
# 160 "/usr/include/c++/5/bits/streambuf.tcc" 3
extern template class basic_streambuf< wchar_t, char_traits< wchar_t> > ;
# 161 "/usr/include/c++/5/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs(basic_streambuf< wchar_t, char_traits< wchar_t> > * __sbin, basic_streambuf< wchar_t, char_traits< wchar_t> > * __sbout);
# 165 "/usr/include/c++/5/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs_eof< wchar_t, char_traits< wchar_t> > (basic_streambuf< wchar_t, char_traits< wchar_t> > *, basic_streambuf< wchar_t, char_traits< wchar_t> > *, bool &);
# 173 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 52 "/usr/include/wctype.h" 3
typedef unsigned long wctype_t;
# 72 "/usr/include/wctype.h" 3
enum {
# 73 "/usr/include/wctype.h" 3
__ISwupper,
# 74 "/usr/include/wctype.h" 3
__ISwlower,
# 75 "/usr/include/wctype.h" 3
__ISwalpha,
# 76 "/usr/include/wctype.h" 3
__ISwdigit,
# 77 "/usr/include/wctype.h" 3
__ISwxdigit,
# 78 "/usr/include/wctype.h" 3
__ISwspace,
# 79 "/usr/include/wctype.h" 3
__ISwprint,
# 80 "/usr/include/wctype.h" 3
__ISwgraph,
# 81 "/usr/include/wctype.h" 3
__ISwblank,
# 82 "/usr/include/wctype.h" 3
__ISwcntrl,
# 83 "/usr/include/wctype.h" 3
__ISwpunct,
# 84 "/usr/include/wctype.h" 3
__ISwalnum,
# 86 "/usr/include/wctype.h" 3
_ISwupper = 16777216,
# 87 "/usr/include/wctype.h" 3
_ISwlower = 33554432,
# 88 "/usr/include/wctype.h" 3
_ISwalpha = 67108864,
# 89 "/usr/include/wctype.h" 3
_ISwdigit = 134217728,
# 90 "/usr/include/wctype.h" 3
_ISwxdigit = 268435456,
# 91 "/usr/include/wctype.h" 3
_ISwspace = 536870912,
# 92 "/usr/include/wctype.h" 3
_ISwprint = 1073741824,
# 93 "/usr/include/wctype.h" 3
_ISwgraph = (-2147483647-1),
# 94 "/usr/include/wctype.h" 3
_ISwblank = 65536,
# 95 "/usr/include/wctype.h" 3
_ISwcntrl = 131072,
# 96 "/usr/include/wctype.h" 3
_ISwpunct = 262144,
# 97 "/usr/include/wctype.h" 3
_ISwalnum = 524288
# 98 "/usr/include/wctype.h" 3
};
# 102 "/usr/include/wctype.h" 3
extern "C" {
# 111 "/usr/include/wctype.h" 3
extern int iswalnum(wint_t __wc) throw();
# 117 "/usr/include/wctype.h" 3
extern int iswalpha(wint_t __wc) throw();
# 120 "/usr/include/wctype.h" 3
extern int iswcntrl(wint_t __wc) throw();
# 124 "/usr/include/wctype.h" 3
extern int iswdigit(wint_t __wc) throw();
# 128 "/usr/include/wctype.h" 3
extern int iswgraph(wint_t __wc) throw();
# 133 "/usr/include/wctype.h" 3
extern int iswlower(wint_t __wc) throw();
# 136 "/usr/include/wctype.h" 3
extern int iswprint(wint_t __wc) throw();
# 141 "/usr/include/wctype.h" 3
extern int iswpunct(wint_t __wc) throw();
# 146 "/usr/include/wctype.h" 3
extern int iswspace(wint_t __wc) throw();
# 151 "/usr/include/wctype.h" 3
extern int iswupper(wint_t __wc) throw();
# 156 "/usr/include/wctype.h" 3
extern int iswxdigit(wint_t __wc) throw();
# 162 "/usr/include/wctype.h" 3
extern int iswblank(wint_t __wc) throw();
# 171 "/usr/include/wctype.h" 3
extern wctype_t wctype(const char * __property) throw();
# 175 "/usr/include/wctype.h" 3
extern int iswctype(wint_t __wc, wctype_t __desc) throw();
# 186 "/usr/include/wctype.h" 3
typedef const __int32_t *wctrans_t;
# 194 "/usr/include/wctype.h" 3
extern wint_t towlower(wint_t __wc) throw();
# 197 "/usr/include/wctype.h" 3
extern wint_t towupper(wint_t __wc) throw();
# 200 "/usr/include/wctype.h" 3
}
# 213 "/usr/include/wctype.h" 3
extern "C" {
# 218 "/usr/include/wctype.h" 3
extern wctrans_t wctrans(const char * __property) throw();
# 221 "/usr/include/wctype.h" 3
extern wint_t towctrans(wint_t __wc, wctrans_t __desc) throw();
# 230 "/usr/include/wctype.h" 3
extern int iswalnum_l(wint_t __wc, __locale_t __locale) throw();
# 236 "/usr/include/wctype.h" 3
extern int iswalpha_l(wint_t __wc, __locale_t __locale) throw();
# 239 "/usr/include/wctype.h" 3
extern int iswcntrl_l(wint_t __wc, __locale_t __locale) throw();
# 243 "/usr/include/wctype.h" 3
extern int iswdigit_l(wint_t __wc, __locale_t __locale) throw();
# 247 "/usr/include/wctype.h" 3
extern int iswgraph_l(wint_t __wc, __locale_t __locale) throw();
# 252 "/usr/include/wctype.h" 3
extern int iswlower_l(wint_t __wc, __locale_t __locale) throw();
# 255 "/usr/include/wctype.h" 3
extern int iswprint_l(wint_t __wc, __locale_t __locale) throw();
# 260 "/usr/include/wctype.h" 3
extern int iswpunct_l(wint_t __wc, __locale_t __locale) throw();
# 265 "/usr/include/wctype.h" 3
extern int iswspace_l(wint_t __wc, __locale_t __locale) throw();
# 270 "/usr/include/wctype.h" 3
extern int iswupper_l(wint_t __wc, __locale_t __locale) throw();
# 275 "/usr/include/wctype.h" 3
extern int iswxdigit_l(wint_t __wc, __locale_t __locale) throw();
# 280 "/usr/include/wctype.h" 3
extern int iswblank_l(wint_t __wc, __locale_t __locale) throw();
# 284 "/usr/include/wctype.h" 3
extern wctype_t wctype_l(const char * __property, __locale_t __locale) throw();
# 289 "/usr/include/wctype.h" 3
extern int iswctype_l(wint_t __wc, wctype_t __desc, __locale_t __locale) throw();
# 298 "/usr/include/wctype.h" 3
extern wint_t towlower_l(wint_t __wc, __locale_t __locale) throw();
# 301 "/usr/include/wctype.h" 3
extern wint_t towupper_l(wint_t __wc, __locale_t __locale) throw();
# 305 "/usr/include/wctype.h" 3
extern wctrans_t wctrans_l(const char * __property, __locale_t __locale) throw();
# 309 "/usr/include/wctype.h" 3
extern wint_t towctrans_l(wint_t __wc, wctrans_t __desc, __locale_t __locale) throw();
# 314 "/usr/include/wctype.h" 3
}
# 80 "/usr/include/c++/5/cwctype" 3
namespace std {
# 82 "/usr/include/c++/5/cwctype" 3
using ::wctrans_t;
# 83 "/usr/include/c++/5/cwctype" 3
using ::wctype_t;
# 86 "/usr/include/c++/5/cwctype" 3
using ::iswalnum;
# 87 "/usr/include/c++/5/cwctype" 3
using ::iswalpha;
# 89 "/usr/include/c++/5/cwctype" 3
using ::iswblank;
# 91 "/usr/include/c++/5/cwctype" 3
using ::iswcntrl;
# 92 "/usr/include/c++/5/cwctype" 3
using ::iswctype;
# 93 "/usr/include/c++/5/cwctype" 3
using ::iswdigit;
# 94 "/usr/include/c++/5/cwctype" 3
using ::iswgraph;
# 95 "/usr/include/c++/5/cwctype" 3
using ::iswlower;
# 96 "/usr/include/c++/5/cwctype" 3
using ::iswprint;
# 97 "/usr/include/c++/5/cwctype" 3
using ::iswpunct;
# 98 "/usr/include/c++/5/cwctype" 3
using ::iswspace;
# 99 "/usr/include/c++/5/cwctype" 3
using ::iswupper;
# 100 "/usr/include/c++/5/cwctype" 3
using ::iswxdigit;
# 101 "/usr/include/c++/5/cwctype" 3
using ::towctrans;
# 102 "/usr/include/c++/5/cwctype" 3
using ::towlower;
# 103 "/usr/include/c++/5/cwctype" 3
using ::towupper;
# 104 "/usr/include/c++/5/cwctype" 3
using ::wctrans;
# 105 "/usr/include/c++/5/cwctype" 3
using ::wctype;
# 106 "/usr/include/c++/5/cwctype" 3
}
# 36 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
struct ctype_base {
# 44 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
typedef const int *__to_type;
# 48 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
typedef unsigned short mask;
# 49 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask upper = (_ISupper);
# 50 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask lower = (_ISlower);
# 51 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask alpha = (_ISalpha);
# 52 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask digit = (_ISdigit);
# 53 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask xdigit = (_ISxdigit);
# 54 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask space = (_ISspace);
# 55 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask print = (_ISprint);
# 56 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask graph = (((_ISalpha) | (_ISdigit)) | (_ISpunct));
# 57 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask cntrl = (_IScntrl);
# 58 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask punct = (_ISpunct);
# 59 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask alnum = ((_ISalpha) | (_ISdigit));
# 63 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
};
# 66 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
}
# 38 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 49 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< class _CharT, class _Traits>
# 50 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
class istreambuf_iterator : public iterator< input_iterator_tag, _CharT, typename _Traits::off_type, _CharT *, _CharT &> {
# 64 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
public: typedef _CharT char_type;
# 65 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef _Traits traits_type;
# 66 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef typename _Traits::int_type int_type;
# 67 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef basic_streambuf< _CharT, _Traits> streambuf_type;
# 68 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef basic_istream< _CharT, _Traits> istream_type;
# 71 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< class _CharT2> friend typename ::__gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, ostreambuf_iterator< _CharT2, char_traits< _CharT2> > > ::__type copy(::std::istreambuf_iterator< _CharT2, char_traits< _CharT2> > , ::std::istreambuf_iterator< _CharT2, char_traits< _CharT2> > , ostreambuf_iterator< _CharT2, char_traits< _CharT2> > );
# 77 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< bool _IsMove, class _CharT2> friend typename ::__gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, _CharT2 *> ::__type __copy_move_a2(::std::istreambuf_iterator< _CharT2, char_traits< _CharT2> > , ::std::istreambuf_iterator< _CharT2, char_traits< _CharT2> > , _CharT2 *);
# 83 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< class _CharT2> friend typename ::__gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, ::std::istreambuf_iterator< _CharT2, char_traits< _CharT2> > > ::__type find(::std::istreambuf_iterator< _CharT2, char_traits< _CharT2> > , ::std::istreambuf_iterator< _CharT2, char_traits< _CharT2> > , const _CharT2 &);
# 97 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
private: mutable streambuf_type *_M_sbuf;
# 98 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
mutable int_type _M_c;
# 102 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
public: istreambuf_iterator() throw() : _M_sbuf((0)), _M_c(traits_type::eof())
# 103 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ }
# 112 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
istreambuf_iterator(istream_type &__s) throw() : _M_sbuf((__s.rdbuf())), _M_c(traits_type::eof())
# 113 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ }
# 116 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
istreambuf_iterator(streambuf_type *__s) throw() : _M_sbuf(__s), _M_c(traits_type::eof())
# 117 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ }
# 123 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
char_type operator*() const
# 124 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 132 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return traits_type::to_char_type(_M_get());
# 133 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 137 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
istreambuf_iterator &operator++()
# 138 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 141 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
;
# 142 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (_M_sbuf)
# 143 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 144 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
((_M_sbuf)->sbumpc());
# 145 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(_M_c) = traits_type::eof();
# 146 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 147 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return *this;
# 148 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 152 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
istreambuf_iterator operator++(int)
# 153 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 156 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
;
# 158 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
istreambuf_iterator __old = *this;
# 159 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (_M_sbuf)
# 160 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 161 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(__old._M_c) = ((_M_sbuf)->sbumpc());
# 162 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(_M_c) = traits_type::eof();
# 163 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 164 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return __old;
# 165 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 172 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
bool equal(const istreambuf_iterator &__b) const
# 173 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ return _M_at_eof() == __b._M_at_eof(); }
# 177 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
private: int_type _M_get() const
# 178 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 179 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
const int_type __eof = traits_type::eof();
# 180 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
int_type __ret = __eof;
# 181 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (_M_sbuf)
# 182 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 183 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (!traits_type::eq_int_type(_M_c, __eof)) {
# 184 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__ret = (_M_c); } else {
# 185 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (!traits_type::eq_int_type(__ret = ((_M_sbuf)->sgetc()), __eof)) {
# 187 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(_M_c) = __ret; } else {
# 189 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(_M_sbuf) = 0; } }
# 190 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 191 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return __ret;
# 192 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 195 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
bool _M_at_eof() const
# 196 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 197 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
const int_type __eof = traits_type::eof();
# 198 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return traits_type::eq_int_type(_M_get(), __eof);
# 199 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 200 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
};
# 202 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< class _CharT, class _Traits> inline bool
# 204 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
operator==(const istreambuf_iterator< _CharT, _Traits> &__a, const istreambuf_iterator< _CharT, _Traits> &
# 205 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__b)
# 206 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ return (__a.equal(__b)); }
# 208 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< class _CharT, class _Traits> inline bool
# 210 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
operator!=(const istreambuf_iterator< _CharT, _Traits> &__a, const istreambuf_iterator< _CharT, _Traits> &
# 211 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__b)
# 212 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ return !(__a.equal(__b)); }
# 215 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< class _CharT, class _Traits>
# 216 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
class ostreambuf_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 223 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
public: typedef _CharT char_type;
# 224 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef _Traits traits_type;
# 225 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef basic_streambuf< _CharT, _Traits> streambuf_type;
# 226 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef basic_ostream< _CharT, _Traits> ostream_type;
# 229 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< class _CharT2> friend typename __gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, std::ostreambuf_iterator< _CharT2, char_traits< _CharT2> > > ::__type copy(istreambuf_iterator< _CharT2, char_traits< _CharT2> > , istreambuf_iterator< _CharT2, char_traits< _CharT2> > , std::ostreambuf_iterator< _CharT2, char_traits< _CharT2> > );
# 236 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
private: streambuf_type *_M_sbuf;
# 237 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
bool _M_failed;
# 241 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
public: ostreambuf_iterator(ostream_type &__s) throw() : _M_sbuf((__s.rdbuf())), _M_failed(!(_M_sbuf))
# 242 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ }
# 245 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
ostreambuf_iterator(streambuf_type *__s) throw() : _M_sbuf(__s), _M_failed(!(_M_sbuf))
# 246 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ }
# 250 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
ostreambuf_iterator &operator=(_CharT __c)
# 251 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 252 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if ((!(_M_failed)) && _Traits::eq_int_type(((_M_sbuf)->sputc(__c)), _Traits::eof())) {
# 254 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(_M_failed) = true; }
# 255 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return *this;
# 256 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 260 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
ostreambuf_iterator &operator*()
# 261 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ return *this; }
# 265 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
ostreambuf_iterator &operator++(int)
# 266 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ return *this; }
# 270 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
ostreambuf_iterator &operator++()
# 271 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ return *this; }
# 275 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
bool failed() const throw()
# 276 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ return _M_failed; }
# 279 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
ostreambuf_iterator &_M_put(const _CharT *__ws, streamsize __len)
# 280 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 281 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if ((__builtin_expect(!(_M_failed), true)) && (__builtin_expect(((this->_M_sbuf)->sputn(__ws, __len)) != __len, false))) {
# 284 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(_M_failed) = true; }
# 285 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return *this;
# 286 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 287 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
};
# 290 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type
# 293 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
copy(istreambuf_iterator< _CharT, char_traits< _CharT> > __first, istreambuf_iterator< _CharT, char_traits< _CharT> >
# 294 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__last, ostreambuf_iterator< _CharT, char_traits< _CharT> >
# 295 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__result)
# 296 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 297 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if ((__first._M_sbuf) && (!(__last._M_sbuf)) && (!(__result._M_failed)))
# 298 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 299 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
bool __ineof;
# 300 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__copy_streambufs_eof((__first._M_sbuf), (__result._M_sbuf), __ineof);
# 301 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (!__ineof) {
# 302 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(__result._M_failed) = true; }
# 303 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 304 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return __result;
# 305 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 307 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type
# 310 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__copy_move_a2(_CharT *__first, _CharT *__last, ostreambuf_iterator< _CharT, char_traits< _CharT> >
# 311 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__result)
# 312 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 313 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
const streamsize __num = __last - __first;
# 314 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (__num > (0)) {
# 315 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(__result._M_put(__first, __num)); }
# 316 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return __result;
# 317 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 319 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type
# 322 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__copy_move_a2(const _CharT *__first, const _CharT *__last, ostreambuf_iterator< _CharT, char_traits< _CharT> >
# 323 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__result)
# 324 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 325 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
const streamsize __num = __last - __first;
# 326 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (__num > (0)) {
# 327 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(__result._M_put(__first, __num)); }
# 328 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return __result;
# 329 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 331 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, _CharT *> ::__type
# 334 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__copy_move_a2(istreambuf_iterator< _CharT, char_traits< _CharT> > __first, istreambuf_iterator< _CharT, char_traits< _CharT> >
# 335 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__last, _CharT *__result)
# 336 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 337 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef istreambuf_iterator< _CharT, char_traits< _CharT> > __is_iterator_type;
# 338 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef typename istreambuf_iterator< _CharT, char_traits< _CharT> > ::traits_type traits_type;
# 339 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef typename istreambuf_iterator< _CharT, char_traits< _CharT> > ::streambuf_type streambuf_type;
# 340 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef typename istreambuf_iterator< _CharT, char_traits< _CharT> > ::traits_type::int_type int_type;
# 342 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if ((__first._M_sbuf) && (!(__last._M_sbuf)))
# 343 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 344 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
streambuf_type *__sb = ((__first._M_sbuf));
# 345 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
int_type __c = (__sb->sgetc());
# 346 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
while (!traits_type::eq_int_type(__c, traits_type::eof()))
# 347 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 348 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
const streamsize __n = (__sb->egptr()) - (__sb->gptr());
# 349 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (__n > (1))
# 350 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 351 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
traits_type::copy(__result, (__sb->gptr()), __n);
# 352 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(__sb->__safe_gbump(__n));
# 353 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__result += __n;
# 354 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__c = (__sb->underflow());
# 355 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
} else
# 357 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 358 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(*(__result++)) = traits_type::to_char_type(__c);
# 359 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__c = (__sb->snextc());
# 360 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 361 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 362 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 363 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return __result;
# 364 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 366 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, istreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type
# 369 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
find(istreambuf_iterator< _CharT, char_traits< _CharT> > __first, istreambuf_iterator< _CharT, char_traits< _CharT> >
# 370 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__last, const _CharT &__val)
# 371 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 372 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef istreambuf_iterator< _CharT, char_traits< _CharT> > __is_iterator_type;
# 373 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef typename istreambuf_iterator< _CharT, char_traits< _CharT> > ::traits_type traits_type;
# 374 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef typename istreambuf_iterator< _CharT, char_traits< _CharT> > ::streambuf_type streambuf_type;
# 375 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef typename istreambuf_iterator< _CharT, char_traits< _CharT> > ::traits_type::int_type int_type;
# 377 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if ((__first._M_sbuf) && (!(__last._M_sbuf)))
# 378 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 379 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
const int_type __ival = traits_type::to_int_type(__val);
# 380 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
streambuf_type *__sb = ((__first._M_sbuf));
# 381 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
int_type __c = (__sb->sgetc());
# 382 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
while ((!traits_type::eq_int_type(__c, traits_type::eof())) && (!traits_type::eq_int_type(__c, __ival)))
# 384 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 385 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
streamsize __n = (__sb->egptr()) - (__sb->gptr());
# 386 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (__n > (1))
# 387 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 388 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
const _CharT *__p = traits_type::find((__sb->gptr()), __n, __val);
# 390 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (__p) {
# 391 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__n = (__p - (__sb->gptr())); }
# 392 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(__sb->__safe_gbump(__n));
# 393 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__c = (__sb->sgetc());
# 394 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
} else {
# 396 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__c = (__sb->snextc()); }
# 397 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 399 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (!traits_type::eq_int_type(__c, traits_type::eof())) {
# 400 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(__first._M_c) = __c; } else {
# 402 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(__first._M_sbuf) = 0; }
# 403 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 404 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return __first;
# 405 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 410 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 50 "/usr/include/c++/5/bits/locale_facets.h" 3
namespace std __attribute((__visibility__("default"))) {
# 71 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _Tp> void __convert_to_v(const char *, _Tp &, ios_base::iostate &, const __c_locale &) throw();
# 79 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw();
# 84 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw();
# 89 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw();
# 94 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT, class _Traits>
# 95 "/usr/include/c++/5/bits/locale_facets.h" 3
struct __pad {
# 98 "/usr/include/c++/5/bits/locale_facets.h" 3
static void _S_pad(ios_base & __io, _CharT __fill, _CharT * __news, const _CharT * __olds, streamsize __newlen, streamsize __oldlen);
# 100 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 107 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> _CharT *__add_grouping(_CharT * __s, _CharT __sep, const char * __gbeg, size_t __gsize, const _CharT * __first, const _CharT * __last);
# 116 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline ostreambuf_iterator< _CharT, char_traits< _CharT> >
# 119 "/usr/include/c++/5/bits/locale_facets.h" 3
__write(ostreambuf_iterator< _CharT, char_traits< _CharT> > __s, const _CharT *__ws, int __len)
# 120 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 121 "/usr/include/c++/5/bits/locale_facets.h" 3
(__s._M_put(__ws, __len));
# 122 "/usr/include/c++/5/bits/locale_facets.h" 3
return __s;
# 123 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 126 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT, class _OutIter> inline _OutIter
# 129 "/usr/include/c++/5/bits/locale_facets.h" 3
__write(_OutIter __s, const _CharT *__ws, int __len)
# 130 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 131 "/usr/include/c++/5/bits/locale_facets.h" 3
for (int __j = 0; __j < __len; (__j++), (++__s)) {
# 132 "/usr/include/c++/5/bits/locale_facets.h" 3
(*__s) = (__ws[__j]); }
# 133 "/usr/include/c++/5/bits/locale_facets.h" 3
return __s;
# 134 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 149 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT>
# 150 "/usr/include/c++/5/bits/locale_facets.h" 3
class __ctype_abstract_base : public locale::facet, public ctype_base {
# 155 "/usr/include/c++/5/bits/locale_facets.h" 3
public: typedef _CharT char_type;
# 169 "/usr/include/c++/5/bits/locale_facets.h" 3
bool is(mask __m, char_type __c) const
# 170 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_is(__m, __c)); }
# 186 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const
# 187 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_is(__lo, __hi, __vec)); }
# 202 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const
# 203 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_scan_is(__m, __lo, __hi); }
# 218 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const
# 219 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_scan_not(__m, __lo, __hi); }
# 232 "/usr/include/c++/5/bits/locale_facets.h" 3
char_type toupper(char_type __c) const
# 233 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_toupper(__c)); }
# 247 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *toupper(char_type *__lo, const char_type *__hi) const
# 248 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_toupper(__lo, __hi)); }
# 261 "/usr/include/c++/5/bits/locale_facets.h" 3
char_type tolower(char_type __c) const
# 262 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_tolower(__c)); }
# 276 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *tolower(char_type *__lo, const char_type *__hi) const
# 277 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_tolower(__lo, __hi)); }
# 293 "/usr/include/c++/5/bits/locale_facets.h" 3
char_type widen(char __c) const
# 294 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_widen(__c)); }
# 312 "/usr/include/c++/5/bits/locale_facets.h" 3
const char *widen(const char *__lo, const char *__hi, char_type *__to) const
# 313 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_widen(__lo, __hi, __to)); }
# 331 "/usr/include/c++/5/bits/locale_facets.h" 3
char narrow(char_type __c, char __dfault) const
# 332 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_narrow(__c, __dfault)); }
# 353 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *narrow(const char_type *__lo, const char_type *__hi, char
# 354 "/usr/include/c++/5/bits/locale_facets.h" 3
__dfault, char *__to) const
# 355 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_narrow(__lo, __hi, __dfault, __to)); }
# 359 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: explicit __ctype_abstract_base(size_t __refs = 0) : locale::facet(__refs) { }
# 362 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual ~__ctype_abstract_base() { }
# 378 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual bool do_is(mask __m, char_type __c) const = 0;
# 397 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_is(const char_type * __lo, const char_type * __hi, mask * __vec) const = 0;
# 416 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_scan_is(mask __m, const char_type * __lo, const char_type * __hi) const = 0;
# 435 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_scan_not(mask __m, const char_type * __lo, const char_type * __hi) const = 0;
# 453 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type __c) const = 0;
# 470 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * __lo, const char_type * __hi) const = 0;
# 486 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type __c) const = 0;
# 503 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * __lo, const char_type * __hi) const = 0;
# 522 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_widen(char __c) const = 0;
# 543 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char *do_widen(const char * __lo, const char * __hi, char_type * __to) const = 0;
# 564 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char do_narrow(char_type __c, char __dfault) const = 0;
# 589 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type * __lo, const char_type * __hi, char __dfault, char * __to) const = 0;
# 591 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 611 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT>
# 612 "/usr/include/c++/5/bits/locale_facets.h" 3
class ctype : public __ctype_abstract_base< _CharT> {
# 616 "/usr/include/c++/5/bits/locale_facets.h" 3
public: typedef _CharT char_type;
# 617 "/usr/include/c++/5/bits/locale_facets.h" 3
typedef typename ::std::__ctype_abstract_base< _CharT> ::mask mask;
# 620 "/usr/include/c++/5/bits/locale_facets.h" 3
static ::std::locale::id id;
# 623 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit ctype(::std::size_t __refs = 0) : ::std::__ctype_abstract_base< _CharT> (__refs) { }
# 627 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: virtual ~ctype();
# 630 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual bool do_is(mask __m, char_type __c) const;
# 633 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_is(const char_type * __lo, const char_type * __hi, mask * __vec) const;
# 636 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_scan_is(mask __m, const char_type * __lo, const char_type * __hi) const;
# 639 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_scan_not(mask __m, const char_type * __lo, const char_type * __hi) const;
# 643 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type __c) const;
# 646 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * __lo, const char_type * __hi) const;
# 649 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type __c) const;
# 652 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * __lo, const char_type * __hi) const;
# 655 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_widen(char __c) const;
# 658 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char *do_widen(const char * __lo, const char * __hi, char_type * __dest) const;
# 661 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char do_narrow(char_type, char __dfault) const;
# 664 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type * __lo, const char_type * __hi, char __dfault, char * __to) const;
# 666 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 668 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> locale::id
# 669 "/usr/include/c++/5/bits/locale_facets.h" 3
ctype< _CharT> ::id;
# 681 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> class ctype< char> : public locale::facet, public ctype_base {
# 686 "/usr/include/c++/5/bits/locale_facets.h" 3
public: typedef char char_type;
# 690 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: __c_locale _M_c_locale_ctype;
# 691 "/usr/include/c++/5/bits/locale_facets.h" 3
bool _M_del;
# 692 "/usr/include/c++/5/bits/locale_facets.h" 3
__to_type _M_toupper;
# 693 "/usr/include/c++/5/bits/locale_facets.h" 3
__to_type _M_tolower;
# 694 "/usr/include/c++/5/bits/locale_facets.h" 3
const mask *_M_table;
# 695 "/usr/include/c++/5/bits/locale_facets.h" 3
mutable char _M_widen_ok;
# 696 "/usr/include/c++/5/bits/locale_facets.h" 3
mutable char _M_widen[1 + (static_cast< unsigned char>(-1))];
# 697 "/usr/include/c++/5/bits/locale_facets.h" 3
mutable char _M_narrow[1 + (static_cast< unsigned char>(-1))];
# 698 "/usr/include/c++/5/bits/locale_facets.h" 3
mutable char _M_narrow_ok;
# 703 "/usr/include/c++/5/bits/locale_facets.h" 3
public: static locale::id id;
# 705 "/usr/include/c++/5/bits/locale_facets.h" 3
static const size_t table_size = (1 + (static_cast< unsigned char>(-1)));
# 718 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit ctype(const mask * __table = 0, bool __del = false, size_t __refs = 0);
# 731 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit ctype(__c_locale __cloc, const mask * __table = 0, bool __del = false, size_t __refs = 0);
# 744 "/usr/include/c++/5/bits/locale_facets.h" 3
inline bool is(mask __m, char __c) const;
# 759 "/usr/include/c++/5/bits/locale_facets.h" 3
inline const char *is(const char * __lo, const char * __hi, mask * __vec) const;
# 773 "/usr/include/c++/5/bits/locale_facets.h" 3
inline const char *scan_is(mask __m, const char * __lo, const char * __hi) const;
# 787 "/usr/include/c++/5/bits/locale_facets.h" 3
inline const char *scan_not(mask __m, const char * __lo, const char * __hi) const;
# 802 "/usr/include/c++/5/bits/locale_facets.h" 3
char_type toupper(char_type __c) const
# 803 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_toupper(__c); }
# 819 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *toupper(char_type *__lo, const char_type *__hi) const
# 820 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_toupper(__lo, __hi); }
# 835 "/usr/include/c++/5/bits/locale_facets.h" 3
char_type tolower(char_type __c) const
# 836 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_tolower(__c); }
# 852 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *tolower(char_type *__lo, const char_type *__hi) const
# 853 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_tolower(__lo, __hi); }
# 872 "/usr/include/c++/5/bits/locale_facets.h" 3
char_type widen(char __c) const
# 873 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 874 "/usr/include/c++/5/bits/locale_facets.h" 3
if (_M_widen_ok) {
# 875 "/usr/include/c++/5/bits/locale_facets.h" 3
return (_M_widen)[static_cast< unsigned char>(__c)]; }
# 876 "/usr/include/c++/5/bits/locale_facets.h" 3
this->_M_widen_init();
# 877 "/usr/include/c++/5/bits/locale_facets.h" 3
return this->do_widen(__c);
# 878 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 899 "/usr/include/c++/5/bits/locale_facets.h" 3
const char *widen(const char *__lo, const char *__hi, char_type *__to) const
# 900 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 901 "/usr/include/c++/5/bits/locale_facets.h" 3
if ((_M_widen_ok) == 1)
# 902 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 903 "/usr/include/c++/5/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 904 "/usr/include/c++/5/bits/locale_facets.h" 3
return __hi;
# 905 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 906 "/usr/include/c++/5/bits/locale_facets.h" 3
if (!(_M_widen_ok)) {
# 907 "/usr/include/c++/5/bits/locale_facets.h" 3
this->_M_widen_init(); }
# 908 "/usr/include/c++/5/bits/locale_facets.h" 3
return this->do_widen(__lo, __hi, __to);
# 909 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 930 "/usr/include/c++/5/bits/locale_facets.h" 3
char narrow(char_type __c, char __dfault) const
# 931 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 932 "/usr/include/c++/5/bits/locale_facets.h" 3
if ((_M_narrow)[static_cast< unsigned char>(__c)]) {
# 933 "/usr/include/c++/5/bits/locale_facets.h" 3
return (_M_narrow)[static_cast< unsigned char>(__c)]; }
# 934 "/usr/include/c++/5/bits/locale_facets.h" 3
const char __t = this->do_narrow(__c, __dfault);
# 935 "/usr/include/c++/5/bits/locale_facets.h" 3
if (__t != __dfault) {
# 936 "/usr/include/c++/5/bits/locale_facets.h" 3
((_M_narrow)[static_cast< unsigned char>(__c)]) = __t; }
# 937 "/usr/include/c++/5/bits/locale_facets.h" 3
return __t;
# 938 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 963 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *narrow(const char_type *__lo, const char_type *__hi, char
# 964 "/usr/include/c++/5/bits/locale_facets.h" 3
__dfault, char *__to) const
# 965 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 966 "/usr/include/c++/5/bits/locale_facets.h" 3
if (__builtin_expect((_M_narrow_ok) == 1, true))
# 967 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 968 "/usr/include/c++/5/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 969 "/usr/include/c++/5/bits/locale_facets.h" 3
return __hi;
# 970 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 971 "/usr/include/c++/5/bits/locale_facets.h" 3
if (!(_M_narrow_ok)) {
# 972 "/usr/include/c++/5/bits/locale_facets.h" 3
this->_M_narrow_init(); }
# 973 "/usr/include/c++/5/bits/locale_facets.h" 3
return this->do_narrow(__lo, __hi, __dfault, __to);
# 974 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 981 "/usr/include/c++/5/bits/locale_facets.h" 3
const mask *table() const throw()
# 982 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_table; }
# 986 "/usr/include/c++/5/bits/locale_facets.h" 3
static const mask *classic_table() throw();
# 996 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: virtual ~ctype();
# 1012 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type __c) const;
# 1029 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * __lo, const char_type * __hi) const;
# 1045 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type __c) const;
# 1062 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * __lo, const char_type * __hi) const;
# 1082 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_widen(char __c) const
# 1083 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return __c; }
# 1105 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__to) const
# 1106 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 1107 "/usr/include/c++/5/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 1108 "/usr/include/c++/5/bits/locale_facets.h" 3
return __hi;
# 1109 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 1131 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char do_narrow(char_type __c, char __dfault) const
# 1132 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return __c; }
# 1157 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char
# 1158 "/usr/include/c++/5/bits/locale_facets.h" 3
__dfault, char *__to) const
# 1159 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 1160 "/usr/include/c++/5/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 1161 "/usr/include/c++/5/bits/locale_facets.h" 3
return __hi;
# 1162 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 1165 "/usr/include/c++/5/bits/locale_facets.h" 3
private: void _M_narrow_init() const;
# 1166 "/usr/include/c++/5/bits/locale_facets.h" 3
void _M_widen_init() const;
# 1167 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1182 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> class ctype< wchar_t> : public __ctype_abstract_base< wchar_t> {
# 1187 "/usr/include/c++/5/bits/locale_facets.h" 3
public: typedef wchar_t char_type;
# 1188 "/usr/include/c++/5/bits/locale_facets.h" 3
typedef wctype_t __wmask_type;
# 1191 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: __c_locale _M_c_locale_ctype;
# 1194 "/usr/include/c++/5/bits/locale_facets.h" 3
bool _M_narrow_ok;
# 1195 "/usr/include/c++/5/bits/locale_facets.h" 3
char _M_narrow[128];
# 1196 "/usr/include/c++/5/bits/locale_facets.h" 3
wint_t _M_widen[1 + (static_cast< unsigned char>(-1))];
# 1199 "/usr/include/c++/5/bits/locale_facets.h" 3
mask _M_bit[16];
# 1200 "/usr/include/c++/5/bits/locale_facets.h" 3
__wmask_type _M_wmask[16];
# 1205 "/usr/include/c++/5/bits/locale_facets.h" 3
public: static locale::id id;
# 1215 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit ctype(size_t __refs = 0);
# 1226 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit ctype(__c_locale __cloc, size_t __refs = 0);
# 1230 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: __wmask_type _M_convert_to_wmask(const mask __m) const throw();
# 1234 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual ~ctype();
# 1250 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual bool do_is(mask __m, char_type __c) const;
# 1269 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_is(const char_type * __lo, const char_type * __hi, mask * __vec) const;
# 1287 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_scan_is(mask __m, const char_type * __lo, const char_type * __hi) const;
# 1305 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_scan_not(mask __m, const char_type * __lo, const char_type * __hi) const;
# 1322 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type __c) const;
# 1339 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * __lo, const char_type * __hi) const;
# 1355 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type __c) const;
# 1372 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * __lo, const char_type * __hi) const;
# 1392 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_widen(char __c) const;
# 1414 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char *do_widen(const char * __lo, const char * __hi, char_type * __to) const;
# 1437 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char do_narrow(char_type __c, char __dfault) const;
# 1463 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type * __lo, const char_type * __hi, char __dfault, char * __to) const;
# 1468 "/usr/include/c++/5/bits/locale_facets.h" 3
void _M_initialize_ctype() throw();
# 1469 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1473 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT>
# 1474 "/usr/include/c++/5/bits/locale_facets.h" 3
class ctype_byname : public ctype< _CharT> {
# 1477 "/usr/include/c++/5/bits/locale_facets.h" 3
public: typedef typename ::std::ctype< _CharT> ::mask mask;
# 1480 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit ctype_byname(const char * __s, ::std::size_t __refs = 0);
# 1490 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: virtual ~ctype_byname() { }
# 1491 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1495 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> class ctype_byname< char> : public ctype< char> {
# 1499 "/usr/include/c++/5/bits/locale_facets.h" 3
public: explicit ctype_byname(const char * __s, size_t __refs = 0);
# 1508 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: virtual ~ctype_byname();
# 1509 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1513 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> class ctype_byname< wchar_t> : public ctype< wchar_t> {
# 1517 "/usr/include/c++/5/bits/locale_facets.h" 3
public: explicit ctype_byname(const char * __s, size_t __refs = 0);
# 1526 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: virtual ~ctype_byname();
# 1527 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1531 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 37 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
namespace std __attribute((__visibility__("default"))) {
# 43 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
inline bool ctype< char> ::is(mask __m, char __c) const
# 44 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
{ return ((_M_table)[static_cast< unsigned char>(__c)]) & __m; }
# 48 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
inline const char *ctype< char> ::is(const char *__low, const char *__high, mask *__vec) const
# 49 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
{
# 50 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
while (__low < __high) {
# 51 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
(*(__vec++)) = ((_M_table)[static_cast< unsigned char>(*(__low++))]); }
# 52 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
return __high;
# 53 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
}
# 57 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
inline const char *ctype< char> ::scan_is(mask __m, const char *__low, const char *__high) const
# 58 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
{
# 59 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
while ((__low < __high) && (!(((_M_table)[static_cast< unsigned char>(*__low)]) & __m))) {
# 61 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
++__low; }
# 62 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
return __low;
# 63 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
}
# 67 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
inline const char *ctype< char> ::scan_not(mask __m, const char *__low, const char *__high) const
# 68 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
{
# 69 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
while ((__low < __high) && ((((_M_table)[static_cast< unsigned char>(*__low)]) & __m) != 0)) {
# 71 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
++__low; }
# 72 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
return __low;
# 73 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
}
# 76 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
}
# 1536 "/usr/include/c++/5/bits/locale_facets.h" 3
namespace std __attribute((__visibility__("default"))) {
# 1541 "/usr/include/c++/5/bits/locale_facets.h" 3
class __num_base {
# 1547 "/usr/include/c++/5/bits/locale_facets.h" 3
public: enum {
# 1548 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_ominus,
# 1549 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_oplus,
# 1550 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_ox,
# 1551 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_oX,
# 1552 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_odigits,
# 1553 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_odigits_end = 20,
# 1554 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_oudigits = 20,
# 1555 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_oudigits_end = 36,
# 1556 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_oe = 18,
# 1557 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_oE = 34,
# 1558 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_oend = 36
# 1559 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1566 "/usr/include/c++/5/bits/locale_facets.h" 3
static const char *_S_atoms_out;
# 1570 "/usr/include/c++/5/bits/locale_facets.h" 3
static const char *_S_atoms_in;
# 1573 "/usr/include/c++/5/bits/locale_facets.h" 3
enum {
# 1574 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_iminus,
# 1575 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_iplus,
# 1576 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_ix,
# 1577 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_iX,
# 1578 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_izero,
# 1579 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_ie = 18,
# 1580 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_iE = 24,
# 1581 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_iend = 26
# 1582 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1587 "/usr/include/c++/5/bits/locale_facets.h" 3
static void _S_format_float(const ios_base & __io, char * __fptr, char __mod) throw();
# 1588 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1590 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT>
# 1591 "/usr/include/c++/5/bits/locale_facets.h" 3
struct __numpunct_cache : public locale::facet {
# 1593 "/usr/include/c++/5/bits/locale_facets.h" 3
const char *_M_grouping;
# 1594 "/usr/include/c++/5/bits/locale_facets.h" 3
size_t _M_grouping_size;
# 1595 "/usr/include/c++/5/bits/locale_facets.h" 3
bool _M_use_grouping;
# 1596 "/usr/include/c++/5/bits/locale_facets.h" 3
const _CharT *_M_truename;
# 1597 "/usr/include/c++/5/bits/locale_facets.h" 3
size_t _M_truename_size;
# 1598 "/usr/include/c++/5/bits/locale_facets.h" 3
const _CharT *_M_falsename;
# 1599 "/usr/include/c++/5/bits/locale_facets.h" 3
size_t _M_falsename_size;
# 1600 "/usr/include/c++/5/bits/locale_facets.h" 3
_CharT _M_decimal_point;
# 1601 "/usr/include/c++/5/bits/locale_facets.h" 3
_CharT _M_thousands_sep;
# 1607 "/usr/include/c++/5/bits/locale_facets.h" 3
_CharT _M_atoms_out[__num_base::_S_oend];
# 1613 "/usr/include/c++/5/bits/locale_facets.h" 3
_CharT _M_atoms_in[__num_base::_S_iend];
# 1615 "/usr/include/c++/5/bits/locale_facets.h" 3
bool _M_allocated;
# 1617 "/usr/include/c++/5/bits/locale_facets.h" 3
__numpunct_cache(size_t __refs = 0) : locale::facet(__refs), _M_grouping((0)), _M_grouping_size((0)), _M_use_grouping(false), _M_truename((0)), _M_truename_size((0)), _M_falsename((0)), _M_falsename_size((0)), _M_decimal_point(_CharT()), _M_thousands_sep(_CharT()), _M_allocated(false)
# 1623 "/usr/include/c++/5/bits/locale_facets.h" 3
{ }
# 1625 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual ~__numpunct_cache();
# 1628 "/usr/include/c++/5/bits/locale_facets.h" 3
void _M_cache(const locale & __loc);
# 1632 "/usr/include/c++/5/bits/locale_facets.h" 3
private: __numpunct_cache &operator=(const __numpunct_cache &);
# 1635 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit __numpunct_cache(const __numpunct_cache &);
# 1636 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1638 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT>
# 1639 "/usr/include/c++/5/bits/locale_facets.h" 3
__numpunct_cache< _CharT> ::~__numpunct_cache()
# 1640 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 1641 "/usr/include/c++/5/bits/locale_facets.h" 3
if (_M_allocated)
# 1642 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 1643 "/usr/include/c++/5/bits/locale_facets.h" 3
delete [] (_M_grouping);
# 1644 "/usr/include/c++/5/bits/locale_facets.h" 3
delete [] (_M_truename);
# 1645 "/usr/include/c++/5/bits/locale_facets.h" 3
delete [] (_M_falsename);
# 1646 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 1647 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 1649 "/usr/include/c++/5/bits/locale_facets.h" 3
inline namespace __cxx11 {
# 1665 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT>
# 1666 "/usr/include/c++/5/bits/locale_facets.h" 3
class numpunct : public locale::facet {
# 1672 "/usr/include/c++/5/bits/locale_facets.h" 3
public: typedef _CharT char_type;
# 1673 "/usr/include/c++/5/bits/locale_facets.h" 3
typedef basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > string_type;
# 1675 "/usr/include/c++/5/bits/locale_facets.h" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 1678 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: __cache_type *_M_data;
# 1682 "/usr/include/c++/5/bits/locale_facets.h" 3
public: static locale::id id;
# 1690 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit numpunct(size_t __refs = 0) : locale::facet(__refs), _M_data((0))
# 1692 "/usr/include/c++/5/bits/locale_facets.h" 3
{ _M_initialize_numpunct(); }
# 1704 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit numpunct(__cache_type *__cache, size_t __refs = 0) : locale::facet(__refs), _M_data(__cache)
# 1706 "/usr/include/c++/5/bits/locale_facets.h" 3
{ _M_initialize_numpunct(); }
# 1718 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit numpunct(__c_locale __cloc, size_t __refs = 0) : locale::facet(__refs), _M_data((0))
# 1720 "/usr/include/c++/5/bits/locale_facets.h" 3
{ _M_initialize_numpunct(__cloc); }
# 1732 "/usr/include/c++/5/bits/locale_facets.h" 3
char_type decimal_point() const
# 1733 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_decimal_point(); }
# 1745 "/usr/include/c++/5/bits/locale_facets.h" 3
char_type thousands_sep() const
# 1746 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_thousands_sep(); }
# 1776 "/usr/include/c++/5/bits/locale_facets.h" 3
string grouping() const
# 1777 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_grouping(); }
# 1789 "/usr/include/c++/5/bits/locale_facets.h" 3
string_type truename() const
# 1790 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_truename(); }
# 1802 "/usr/include/c++/5/bits/locale_facets.h" 3
string_type falsename() const
# 1803 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_falsename(); }
# 1808 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: virtual ~numpunct();
# 1819 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_decimal_point() const
# 1820 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (_M_data)->_M_decimal_point; }
# 1831 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_thousands_sep() const
# 1832 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (_M_data)->_M_thousands_sep; }
# 1844 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual string do_grouping() const
# 1845 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return ((_M_data)->_M_grouping); }
# 1857 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual string_type do_truename() const
# 1858 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return ((_M_data)->_M_truename); }
# 1870 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual string_type do_falsename() const
# 1871 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return ((_M_data)->_M_falsename); }
# 1875 "/usr/include/c++/5/bits/locale_facets.h" 3
void _M_initialize_numpunct(__c_locale __cloc = 0);
# 1876 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1878 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> locale::id
# 1879 "/usr/include/c++/5/bits/locale_facets.h" 3
numpunct< _CharT> ::id;
# 1882 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> numpunct< char> ::~numpunct();
# 1886 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> void numpunct< char> ::_M_initialize_numpunct(__c_locale __cloc);
# 1890 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> numpunct< wchar_t> ::~numpunct();
# 1894 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> void numpunct< wchar_t> ::_M_initialize_numpunct(__c_locale __cloc);
# 1898 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT>
# 1899 "/usr/include/c++/5/bits/locale_facets.h" 3
class numpunct_byname : public numpunct< _CharT> {
# 1902 "/usr/include/c++/5/bits/locale_facets.h" 3
public: typedef _CharT char_type;
# 1903 "/usr/include/c++/5/bits/locale_facets.h" 3
typedef basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > string_type;
# 1906 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit numpunct_byname(const char *__s, ::std::size_t __refs = 0) : ::std::__cxx11::numpunct< _CharT> (__refs)
# 1908 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 1909 "/usr/include/c++/5/bits/locale_facets.h" 3
if ((__builtin_strcmp(__s, "C") != 0) && (__builtin_strcmp(__s, "POSIX") != 0))
# 1911 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 1912 "/usr/include/c++/5/bits/locale_facets.h" 3
::std::__c_locale __tmp;
# 1913 "/usr/include/c++/5/bits/locale_facets.h" 3
(this->_S_create_c_locale(__tmp, __s));
# 1914 "/usr/include/c++/5/bits/locale_facets.h" 3
(this->_M_initialize_numpunct(__tmp));
# 1915 "/usr/include/c++/5/bits/locale_facets.h" 3
(this->_S_destroy_c_locale(__tmp));
# 1916 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 1917 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 1927 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: virtual ~numpunct_byname() { }
# 1928 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1930 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 1947 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT, class _InIter>
# 1948 "/usr/include/c++/5/bits/locale_facets.h" 3
class num_get : public locale::facet {
# 1954 "/usr/include/c++/5/bits/locale_facets.h" 3
public: typedef _CharT char_type;
# 1955 "/usr/include/c++/5/bits/locale_facets.h" 3
typedef _InIter iter_type;
# 1959 "/usr/include/c++/5/bits/locale_facets.h" 3
static locale::id id;
# 1969 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit num_get(size_t __refs = 0) : locale::facet(__refs) { }
# 1995 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 1996 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, bool &__v) const
# 1997 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2032 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2033 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, long &__v) const
# 2034 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2037 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2038 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, unsigned short &__v) const
# 2039 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2042 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2043 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, unsigned &__v) const
# 2044 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2047 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2048 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, unsigned long &__v) const
# 2049 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2053 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2054 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, long long &__v) const
# 2055 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2058 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2059 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, unsigned long long &__v) const
# 2060 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2092 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2093 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, float &__v) const
# 2094 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2097 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2098 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, double &__v) const
# 2099 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2102 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2103 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, long double &__v) const
# 2104 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2135 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2136 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, void *&__v) const
# 2137 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2141 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: virtual ~num_get() { }
# 2143 "/usr/include/c++/5/bits/locale_facets.h" 3
__attribute((__abi_tag__("cxx11" ))) iter_type
# 2145 "/usr/include/c++/5/bits/locale_facets.h" 3
_M_extract_float(iter_type, iter_type, ios_base &, ios_base::iostate &, __cxx11::string &) const;
# 2148 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _ValueT>
# 2149 "/usr/include/c++/5/bits/locale_facets.h" 3
__attribute((__abi_tag__("cxx11" ))) iter_type
# 2148 "/usr/include/c++/5/bits/locale_facets.h" 3
_M_extract_int(iter_type, iter_type, ios_base &, ios_base::iostate &, _ValueT &) const;
# 2154 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT2> typename __gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, int> ::__type
# 2156 "/usr/include/c++/5/bits/locale_facets.h" 3
_M_find(const _CharT2 *, size_t __len, _CharT2 __c) const
# 2157 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 2158 "/usr/include/c++/5/bits/locale_facets.h" 3
int __ret = (-1);
# 2159 "/usr/include/c++/5/bits/locale_facets.h" 3
if (__len <= (10))
# 2160 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 2161 "/usr/include/c++/5/bits/locale_facets.h" 3
if ((__c >= ((_CharT2)'0')) && (__c < ((_CharT2)(((_CharT2)'0') + __len)))) {
# 2162 "/usr/include/c++/5/bits/locale_facets.h" 3
__ret = (__c - ((_CharT2)'0')); }
# 2163 "/usr/include/c++/5/bits/locale_facets.h" 3
} else
# 2165 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 2166 "/usr/include/c++/5/bits/locale_facets.h" 3
if ((__c >= ((_CharT2)'0')) && (__c <= ((_CharT2)'9'))) {
# 2167 "/usr/include/c++/5/bits/locale_facets.h" 3
__ret = (__c - ((_CharT2)'0')); } else {
# 2168 "/usr/include/c++/5/bits/locale_facets.h" 3
if ((__c >= ((_CharT2)'a')) && (__c <= ((_CharT2)'f'))) {
# 2169 "/usr/include/c++/5/bits/locale_facets.h" 3
__ret = (10 + (__c - ((_CharT2)'a'))); } else {
# 2170 "/usr/include/c++/5/bits/locale_facets.h" 3
if ((__c >= ((_CharT2)'A')) && (__c <= ((_CharT2)'F'))) {
# 2171 "/usr/include/c++/5/bits/locale_facets.h" 3
__ret = (10 + (__c - ((_CharT2)'A'))); } } }
# 2172 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 2173 "/usr/include/c++/5/bits/locale_facets.h" 3
return __ret;
# 2174 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 2176 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT2> typename __gnu_cxx::__enable_if< !__is_char< _CharT2> ::__value, int> ::__type
# 2179 "/usr/include/c++/5/bits/locale_facets.h" 3
_M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const
# 2180 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 2181 "/usr/include/c++/5/bits/locale_facets.h" 3
int __ret = (-1);
# 2182 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *__q = char_traits< _CharT2> ::find(__zero, __len, __c);
# 2183 "/usr/include/c++/5/bits/locale_facets.h" 3
if (__q)
# 2184 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 2185 "/usr/include/c++/5/bits/locale_facets.h" 3
__ret = (__q - __zero);
# 2186 "/usr/include/c++/5/bits/locale_facets.h" 3
if (__ret > 15) {
# 2187 "/usr/include/c++/5/bits/locale_facets.h" 3
__ret -= 6; }
# 2188 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 2189 "/usr/include/c++/5/bits/locale_facets.h" 3
return __ret;
# 2190 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 2208 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type, iter_type, ios_base &, ios_base::iostate &, bool &) const;
# 2211 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 2212 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, long &__v) const
# 2213 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_extract_int(__beg, __end, __io, __err, __v); }
# 2216 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 2217 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, unsigned short &__v) const
# 2218 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_extract_int(__beg, __end, __io, __err, __v); }
# 2221 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 2222 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, unsigned &__v) const
# 2223 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_extract_int(__beg, __end, __io, __err, __v); }
# 2226 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 2227 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, unsigned long &__v) const
# 2228 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_extract_int(__beg, __end, __io, __err, __v); }
# 2232 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 2233 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, long long &__v) const
# 2234 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_extract_int(__beg, __end, __io, __err, __v); }
# 2237 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 2238 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, unsigned long long &__v) const
# 2239 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_extract_int(__beg, __end, __io, __err, __v); }
# 2243 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type, iter_type, ios_base &, ios_base::iostate &, float &) const;
# 2246 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type, iter_type, ios_base &, ios_base::iostate &, double &) const;
# 2256 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type, iter_type, ios_base &, ios_base::iostate &, long double &) const;
# 2261 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type, iter_type, ios_base &, ios_base::iostate &, void *&) const;
# 2270 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 2272 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT, class _InIter> locale::id
# 2273 "/usr/include/c++/5/bits/locale_facets.h" 3
num_get< _CharT, _InIter> ::id;
# 2288 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT, class _OutIter>
# 2289 "/usr/include/c++/5/bits/locale_facets.h" 3
class num_put : public locale::facet {
# 2295 "/usr/include/c++/5/bits/locale_facets.h" 3
public: typedef _CharT char_type;
# 2296 "/usr/include/c++/5/bits/locale_facets.h" 3
typedef _OutIter iter_type;
# 2300 "/usr/include/c++/5/bits/locale_facets.h" 3
static locale::id id;
# 2310 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit num_put(size_t __refs = 0) : locale::facet(__refs) { }
# 2328 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, bool __v) const
# 2329 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2370 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, long __v) const
# 2371 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2374 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, unsigned long
# 2375 "/usr/include/c++/5/bits/locale_facets.h" 3
__v) const
# 2376 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2380 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, long long __v) const
# 2381 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2384 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, unsigned long long
# 2385 "/usr/include/c++/5/bits/locale_facets.h" 3
__v) const
# 2386 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2433 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, double __v) const
# 2434 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2437 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, long double
# 2438 "/usr/include/c++/5/bits/locale_facets.h" 3
__v) const
# 2439 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2458 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, const void *
# 2459 "/usr/include/c++/5/bits/locale_facets.h" 3
__v) const
# 2460 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2463 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: template< class _ValueT> iter_type _M_insert_float(iter_type, ios_base & __io, char_type __fill, char __mod, _ValueT __v) const;
# 2469 "/usr/include/c++/5/bits/locale_facets.h" 3
void _M_group_float(const char * __grouping, size_t __grouping_size, char_type __sep, const char_type * __p, char_type * __new, char_type * __cs, int & __len) const;
# 2473 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _ValueT> iter_type _M_insert_int(iter_type, ios_base & __io, char_type __fill, _ValueT __v) const;
# 2479 "/usr/include/c++/5/bits/locale_facets.h" 3
void _M_group_int(const char * __grouping, size_t __grouping_size, char_type __sep, ios_base & __io, char_type * __new, char_type * __cs, int & __len) const;
# 2484 "/usr/include/c++/5/bits/locale_facets.h" 3
void _M_pad(char_type __fill, streamsize __w, ios_base & __io, char_type * __new, const char_type * __cs, int & __len) const;
# 2489 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual ~num_put() { }
# 2506 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type __s, ios_base & __io, char_type __fill, bool __v) const;
# 2509 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type __s, ios_base &__io, char_type __fill, long __v) const
# 2510 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_insert_int(__s, __io, __fill, __v); }
# 2513 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type __s, ios_base &__io, char_type __fill, unsigned long
# 2514 "/usr/include/c++/5/bits/locale_facets.h" 3
__v) const
# 2515 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_insert_int(__s, __io, __fill, __v); }
# 2519 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type __s, ios_base &__io, char_type __fill, long long
# 2520 "/usr/include/c++/5/bits/locale_facets.h" 3
__v) const
# 2521 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_insert_int(__s, __io, __fill, __v); }
# 2524 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type __s, ios_base &__io, char_type __fill, unsigned long long
# 2525 "/usr/include/c++/5/bits/locale_facets.h" 3
__v) const
# 2526 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_insert_int(__s, __io, __fill, __v); }
# 2530 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type, ios_base &, char_type, double) const;
# 2538 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type, ios_base &, char_type, long double) const;
# 2542 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type, ios_base &, char_type, const void *) const;
# 2550 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 2552 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT, class _OutIter> locale::id
# 2553 "/usr/include/c++/5/bits/locale_facets.h" 3
num_put< _CharT, _OutIter> ::id;
# 2563 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2565 "/usr/include/c++/5/bits/locale_facets.h" 3
isspace(_CharT __c, const locale &__loc)
# 2566 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::space, __c)); }
# 2569 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2571 "/usr/include/c++/5/bits/locale_facets.h" 3
isprint(_CharT __c, const locale &__loc)
# 2572 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::print, __c)); }
# 2575 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2577 "/usr/include/c++/5/bits/locale_facets.h" 3
iscntrl(_CharT __c, const locale &__loc)
# 2578 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::cntrl, __c)); }
# 2581 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2583 "/usr/include/c++/5/bits/locale_facets.h" 3
isupper(_CharT __c, const locale &__loc)
# 2584 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::upper, __c)); }
# 2587 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2589 "/usr/include/c++/5/bits/locale_facets.h" 3
islower(_CharT __c, const locale &__loc)
# 2590 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::lower, __c)); }
# 2593 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2595 "/usr/include/c++/5/bits/locale_facets.h" 3
isalpha(_CharT __c, const locale &__loc)
# 2596 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::alpha, __c)); }
# 2599 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2601 "/usr/include/c++/5/bits/locale_facets.h" 3
isdigit(_CharT __c, const locale &__loc)
# 2602 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::digit, __c)); }
# 2605 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2607 "/usr/include/c++/5/bits/locale_facets.h" 3
ispunct(_CharT __c, const locale &__loc)
# 2608 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::punct, __c)); }
# 2611 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2613 "/usr/include/c++/5/bits/locale_facets.h" 3
isxdigit(_CharT __c, const locale &__loc)
# 2614 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::xdigit, __c)); }
# 2617 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2619 "/usr/include/c++/5/bits/locale_facets.h" 3
isalnum(_CharT __c, const locale &__loc)
# 2620 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::alnum, __c)); }
# 2623 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2625 "/usr/include/c++/5/bits/locale_facets.h" 3
isgraph(_CharT __c, const locale &__loc)
# 2626 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::graph, __c)); }
# 2637 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline _CharT
# 2639 "/usr/include/c++/5/bits/locale_facets.h" 3
toupper(_CharT __c, const locale &__loc)
# 2640 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).toupper(__c)); }
# 2643 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline _CharT
# 2645 "/usr/include/c++/5/bits/locale_facets.h" 3
tolower(_CharT __c, const locale &__loc)
# 2646 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).tolower(__c)); }
# 2649 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 35 "/usr/include/c++/5/bits/locale_facets.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _Facet>
# 42 "/usr/include/c++/5/bits/locale_facets.tcc" 3
struct __use_cache {
# 45 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const _Facet *operator()(const locale & __loc) const;
# 46 "/usr/include/c++/5/bits/locale_facets.tcc" 3
};
# 49 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT>
# 50 "/usr/include/c++/5/bits/locale_facets.tcc" 3
struct __use_cache< __numpunct_cache< _CharT> > {
# 53 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __numpunct_cache< _CharT> *operator()(const locale &__loc) const
# 54 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 55 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const size_t __i = (numpunct< _CharT> ::id._M_id)();
# 56 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const locale::facet **__caches = (__loc._M_impl)->_M_caches;
# 57 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!(__caches[__i]))
# 58 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 59 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__numpunct_cache< _CharT> *__tmp = (0);
# 60 "/usr/include/c++/5/bits/locale_facets.tcc" 3
try
# 61 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 62 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__tmp = (new __numpunct_cache< _CharT> );
# 63 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__tmp->_M_cache(__loc));
# 64 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 65 "/usr/include/c++/5/bits/locale_facets.tcc" 3
catch (...)
# 66 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 67 "/usr/include/c++/5/bits/locale_facets.tcc" 3
delete __tmp;
# 68 "/usr/include/c++/5/bits/locale_facets.tcc" 3
throw;
# 69 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 70 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__loc._M_impl)->_M_install_cache(__tmp, __i);
# 71 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 72 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return static_cast< const __numpunct_cache< _CharT> *>(__caches[__i]);
# 73 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 74 "/usr/include/c++/5/bits/locale_facets.tcc" 3
};
# 76 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT> void
# 78 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__numpunct_cache< _CharT> ::_M_cache(const locale &__loc)
# 79 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 80 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cxx11::numpunct< _CharT> &__np = use_facet< __cxx11::numpunct< _CharT> > (__loc);
# 82 "/usr/include/c++/5/bits/locale_facets.tcc" 3
char *__grouping = (0);
# 83 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__truename = (0);
# 84 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__falsename = (0);
# 85 "/usr/include/c++/5/bits/locale_facets.tcc" 3
try
# 86 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 87 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cxx11::string &__g = (__np.grouping());
# 88 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_grouping_size) = __g.size();
# 89 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__grouping = (new char [_M_grouping_size]);
# 90 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__g.copy(__grouping, _M_grouping_size);
# 91 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_use_grouping) = ((_M_grouping_size) && ((static_cast< signed char>(__grouping[0])) > 0) && ((__grouping[0]) != __gnu_cxx::__numeric_traits_integer< char> ::__max));
# 96 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cxx11::basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > &__tn = (__np.truename());
# 97 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_truename_size) = (__tn.size());
# 98 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__truename = (new _CharT [_M_truename_size]);
# 99 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__tn.copy(__truename, _M_truename_size));
# 101 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cxx11::basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > &__fn = (__np.falsename());
# 102 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_falsename_size) = (__fn.size());
# 103 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__falsename = (new _CharT [_M_falsename_size]);
# 104 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__fn.copy(__falsename, _M_falsename_size));
# 106 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_decimal_point) = (__np.decimal_point());
# 107 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_thousands_sep) = (__np.thousands_sep());
# 109 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ctype< _CharT> &__ct = use_facet< ctype< _CharT> > (__loc);
# 110 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__ct.widen(__num_base::_S_atoms_out, __num_base::_S_atoms_out + __num_base::_S_oend, _M_atoms_out));
# 113 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__ct.widen(__num_base::_S_atoms_in, __num_base::_S_atoms_in + __num_base::_S_iend, _M_atoms_in));
# 117 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_grouping) = __grouping;
# 118 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_truename) = __truename;
# 119 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_falsename) = __falsename;
# 120 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_allocated) = true;
# 121 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 122 "/usr/include/c++/5/bits/locale_facets.tcc" 3
catch (...)
# 123 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 124 "/usr/include/c++/5/bits/locale_facets.tcc" 3
delete [] __grouping;
# 125 "/usr/include/c++/5/bits/locale_facets.tcc" 3
delete [] __truename;
# 126 "/usr/include/c++/5/bits/locale_facets.tcc" 3
delete [] __falsename;
# 127 "/usr/include/c++/5/bits/locale_facets.tcc" 3
throw;
# 128 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 129 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 139 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__attribute((__pure__)) bool
# 140 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__verify_grouping(const char * __grouping, size_t __grouping_size, const __cxx11::string & __grouping_tmp) throw();
# 145 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter>
# 146 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__attribute((__abi_tag__("cxx11" ))) _InIter
# 149 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::_M_extract_float(_InIter __beg, _InIter __end, ios_base &__io, ios_base::iostate &
# 150 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err, __cxx11::string &__xtrc) const
# 151 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 152 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef char_traits< _CharT> __traits_type;
# 153 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 154 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__use_cache< __numpunct_cache< _CharT> > __uc;
# 155 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 156 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cache_type *__lc = __uc(__loc);
# 157 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const _CharT *__lit = ((__lc->_M_atoms_in));
# 158 "/usr/include/c++/5/bits/locale_facets.tcc" 3
char_type __c = (char_type());
# 161 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __testeof = __beg == __end;
# 164 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!__testeof)
# 165 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 166 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg);
# 167 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const bool __plus = __c == (__lit[__num_base::_S_iplus]);
# 168 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__plus || (__c == (__lit[__num_base::_S_iminus]))) && (!((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep)))) && (!(__c == (__lc->_M_decimal_point))))
# 171 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 172 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__xtrc += (__plus ? '+' : '-'));
# 173 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 174 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 176 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true; }
# 177 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 178 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 181 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __found_mantissa = false;
# 182 "/usr/include/c++/5/bits/locale_facets.tcc" 3
int __sep_pos = 0;
# 183 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (!__testeof)
# 184 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 185 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep))) || (__c == (__lc->_M_decimal_point))) {
# 187 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; } else {
# 188 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__c == (__lit[__num_base::_S_izero]))
# 189 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 190 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!__found_mantissa)
# 191 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 192 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__xtrc += ('0'));
# 193 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_mantissa = true;
# 194 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 195 "/usr/include/c++/5/bits/locale_facets.tcc" 3
++__sep_pos;
# 197 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 198 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 200 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true; }
# 201 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 203 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; } }
# 204 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 207 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __found_dec = false;
# 208 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __found_sci = false;
# 209 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cxx11::string __found_grouping;
# 210 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__lc->_M_use_grouping) {
# 211 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_grouping.reserve(32); }
# 212 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const char_type *__lit_zero = __lit + __num_base::_S_izero;
# 214 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!(__lc->_M_allocated)) {
# 216 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (!__testeof) {
# 217 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 218 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const int __digit = _M_find(__lit_zero, 10, __c);
# 219 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__digit != (-1))
# 220 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 221 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__xtrc += (('0') + __digit));
# 222 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_mantissa = true;
# 223 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 224 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__c == (__lc->_M_decimal_point)) && (!__found_dec) && (!__found_sci))
# 226 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 227 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__xtrc += ('.'));
# 228 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_dec = true;
# 229 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 230 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__c == (__lit[__num_base::_S_ie])) || (__c == (__lit[__num_base::_S_iE]))) && (!__found_sci) && __found_mantissa)
# 233 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 235 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__xtrc += ('e'));
# 236 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_sci = true;
# 239 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end)
# 240 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 241 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg);
# 242 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const bool __plus = __c == (__lit[__num_base::_S_iplus]);
# 243 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__plus || (__c == (__lit[__num_base::_S_iminus]))) {
# 244 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__xtrc += (__plus ? '+' : '-')); } else {
# 246 "/usr/include/c++/5/bits/locale_facets.tcc" 3
continue; }
# 247 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 249 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 250 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true;
# 251 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break;
# 252 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 253 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 255 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; } } }
# 257 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 258 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 260 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true; }
# 261 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} } } else {
# 263 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (!__testeof) {
# 264 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 267 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep)))
# 268 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 269 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((!__found_dec) && (!__found_sci))
# 270 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 273 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__sep_pos)
# 274 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 275 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__found_grouping += (static_cast< char>(__sep_pos)));
# 276 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__sep_pos = 0;
# 277 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 279 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 282 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__xtrc.clear();
# 283 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break;
# 284 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 285 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 287 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; }
# 288 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 289 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__c == (__lc->_M_decimal_point))
# 290 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 291 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((!__found_dec) && (!__found_sci))
# 292 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 296 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__found_grouping.size()) {
# 297 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__found_grouping += (static_cast< char>(__sep_pos))); }
# 298 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__xtrc += ('.'));
# 299 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_dec = true;
# 300 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 302 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; }
# 303 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 305 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 306 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const char_type *__q = __traits_type::find(__lit_zero, 10, __c);
# 308 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__q)
# 309 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 310 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__xtrc += ('0' + (__q - __lit_zero));
# 311 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_mantissa = true;
# 312 "/usr/include/c++/5/bits/locale_facets.tcc" 3
++__sep_pos;
# 313 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 314 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__c == (__lit[__num_base::_S_ie])) || (__c == (__lit[__num_base::_S_iE]))) && (!__found_sci) && __found_mantissa)
# 317 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 319 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__found_grouping.size()) && (!__found_dec)) {
# 320 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__found_grouping += (static_cast< char>(__sep_pos))); }
# 321 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__xtrc += ('e'));
# 322 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_sci = true;
# 325 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end)
# 326 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 327 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg);
# 328 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const bool __plus = __c == (__lit[__num_base::_S_iplus]);
# 329 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__plus || (__c == (__lit[__num_base::_S_iminus]))) && (!((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep)))) && (!(__c == (__lc->_M_decimal_point)))) {
# 333 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__xtrc += (__plus ? '+' : '-')); } else {
# 335 "/usr/include/c++/5/bits/locale_facets.tcc" 3
continue; }
# 336 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 338 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 339 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true;
# 340 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break;
# 341 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 342 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 344 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; } }
# 345 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} }
# 347 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 348 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 350 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true; }
# 351 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} } }
# 355 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__found_grouping.size())
# 356 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 358 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((!__found_dec) && (!__found_sci)) {
# 359 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__found_grouping += (static_cast< char>(__sep_pos))); }
# 361 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!std::__verify_grouping((__lc->_M_grouping), (__lc->_M_grouping_size), __found_grouping)) {
# 364 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err = ios_base::failbit; }
# 365 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 367 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __beg;
# 368 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 370 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter>
# 371 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _ValueT>
# 372 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__attribute((__abi_tag__("cxx11" ))) _InIter
# 375 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::_M_extract_int(_InIter __beg, _InIter __end, ios_base &__io, ios_base::iostate &
# 376 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err, _ValueT &__v) const
# 377 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 378 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef char_traits< _CharT> __traits_type;
# 379 "/usr/include/c++/5/bits/locale_facets.tcc" 3
using __gnu_cxx::__add_unsigned;
# 380 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef typename __gnu_cxx::__add_unsigned< _ValueT> ::__type __unsigned_type;
# 381 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 382 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__use_cache< __numpunct_cache< _CharT> > __uc;
# 383 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 384 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cache_type *__lc = __uc(__loc);
# 385 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const _CharT *__lit = ((__lc->_M_atoms_in));
# 386 "/usr/include/c++/5/bits/locale_facets.tcc" 3
char_type __c = (char_type());
# 389 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ios_base::fmtflags __basefield = ((__io.flags()) & ios_base::basefield);
# 391 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const bool __oct = __basefield == ios_base::oct;
# 392 "/usr/include/c++/5/bits/locale_facets.tcc" 3
int __base = __oct ? 8 : ((__basefield == ios_base::hex) ? 16 : 10);
# 395 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __testeof = __beg == __end;
# 398 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __negative = false;
# 399 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!__testeof)
# 400 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 401 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg);
# 402 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__negative = (__c == (__lit[__num_base::_S_iminus]));
# 403 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__negative || (__c == (__lit[__num_base::_S_iplus]))) && (!((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep)))) && (!(__c == (__lc->_M_decimal_point))))
# 406 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 407 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 408 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 410 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true; }
# 411 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 412 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 416 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __found_zero = false;
# 417 "/usr/include/c++/5/bits/locale_facets.tcc" 3
int __sep_pos = 0;
# 418 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (!__testeof)
# 419 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 420 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep))) || (__c == (__lc->_M_decimal_point))) {
# 422 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; } else {
# 423 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__c == (__lit[__num_base::_S_izero])) && ((!__found_zero) || (__base == 10)))
# 425 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 426 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_zero = true;
# 427 "/usr/include/c++/5/bits/locale_facets.tcc" 3
++__sep_pos;
# 428 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__basefield == 0) {
# 429 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__base = 8; }
# 430 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__base == 8) {
# 431 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__sep_pos = 0; }
# 432 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 433 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__found_zero && ((__c == (__lit[__num_base::_S_ix])) || (__c == (__lit[__num_base::_S_iX]))))
# 436 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 437 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__basefield == 0) {
# 438 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__base = 16; }
# 439 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__base == 16)
# 440 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 441 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_zero = false;
# 442 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__sep_pos = 0;
# 443 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 445 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; }
# 446 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 448 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; } } }
# 450 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end)
# 451 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 452 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg);
# 453 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!__found_zero) {
# 454 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; }
# 455 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 457 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true; }
# 458 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 462 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const size_t __len = (__base == 16) ? (__num_base::_S_iend) - (__num_base::_S_izero) : __base;
# 466 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cxx11::string __found_grouping;
# 467 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__lc->_M_use_grouping) {
# 468 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_grouping.reserve(32); }
# 469 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __testfail = false;
# 470 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __testoverflow = false;
# 471 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __unsigned_type __max = (__negative && __gnu_cxx::__numeric_traits< _ValueT> ::__is_signed) ? -__gnu_cxx::__numeric_traits< _ValueT> ::__min : __gnu_cxx::__numeric_traits< _ValueT> ::__max;
# 475 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __unsigned_type __smax = __max / __base;
# 476 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__unsigned_type __result = (0);
# 477 "/usr/include/c++/5/bits/locale_facets.tcc" 3
int __digit = 0;
# 478 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const char_type *__lit_zero = __lit + __num_base::_S_izero;
# 480 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!(__lc->_M_allocated)) {
# 482 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (!__testeof)
# 483 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 484 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__digit = _M_find(__lit_zero, __len, __c);
# 485 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__digit == (-1)) {
# 486 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; }
# 488 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__result > __smax) {
# 489 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testoverflow = true; } else
# 491 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 492 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__result *= __base;
# 493 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testoverflow |= (__result > (__max - __digit));
# 494 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__result += __digit;
# 495 "/usr/include/c++/5/bits/locale_facets.tcc" 3
++__sep_pos;
# 496 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 498 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 499 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 501 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true; }
# 502 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} } else {
# 504 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (!__testeof)
# 505 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 508 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep)))
# 509 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 512 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__sep_pos)
# 513 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 514 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__found_grouping += (static_cast< char>(__sep_pos)));
# 515 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__sep_pos = 0;
# 516 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 518 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 519 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testfail = true;
# 520 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break;
# 521 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 522 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 523 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__c == (__lc->_M_decimal_point)) {
# 524 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; } else
# 526 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 527 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const char_type *__q = __traits_type::find(__lit_zero, __len, __c);
# 529 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!__q) {
# 530 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; }
# 532 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__digit = (__q - __lit_zero);
# 533 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__digit > 15) {
# 534 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__digit -= 6; }
# 535 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__result > __smax) {
# 536 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testoverflow = true; } else
# 538 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 539 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__result *= __base;
# 540 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testoverflow |= (__result > (__max - __digit));
# 541 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__result += __digit;
# 542 "/usr/include/c++/5/bits/locale_facets.tcc" 3
++__sep_pos;
# 543 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 544 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} }
# 546 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 547 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 549 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true; }
# 550 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} }
# 554 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__found_grouping.size())
# 555 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 557 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__found_grouping += (static_cast< char>(__sep_pos)));
# 559 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!std::__verify_grouping((__lc->_M_grouping), (__lc->_M_grouping_size), __found_grouping)) {
# 562 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err = ios_base::failbit; }
# 563 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 567 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((!__sep_pos) && (!__found_zero) && (!(__found_grouping.size()))) || __testfail)
# 569 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 570 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = 0;
# 571 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err = ios_base::failbit;
# 572 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 573 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__testoverflow)
# 574 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 575 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__negative && __gnu_cxx::__numeric_traits< _ValueT> ::__is_signed) {
# 577 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = __gnu_cxx::__numeric_traits< _ValueT> ::__min; } else {
# 579 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = __gnu_cxx::__numeric_traits< _ValueT> ::__max; }
# 580 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err = ios_base::failbit;
# 581 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 583 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = (__negative ? -__result : __result); } }
# 585 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__testeof) {
# 586 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__err |= ios_base::eofbit); }
# 587 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __beg;
# 588 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 592 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter> _InIter
# 595 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 596 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err, bool &__v) const
# 597 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 598 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!(((__io.flags()) & ios_base::boolalpha)))
# 599 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 603 "/usr/include/c++/5/bits/locale_facets.tcc" 3
long __l = (-1);
# 604 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__beg = _M_extract_int(__beg, __end, __io, __err, __l);
# 605 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__l == (0)) || (__l == (1))) {
# 606 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = ((bool)__l); } else
# 608 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 611 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = true;
# 612 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err = ios_base::failbit;
# 613 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__beg == __end) {
# 614 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__err |= ios_base::eofbit); }
# 615 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 616 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 618 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 620 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 621 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__use_cache< __numpunct_cache< _CharT> > __uc;
# 622 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 623 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cache_type *__lc = __uc(__loc);
# 625 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __testf = true;
# 626 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __testt = true;
# 627 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __donef = (__lc->_M_falsename_size) == 0;
# 628 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __donet = (__lc->_M_truename_size) == 0;
# 629 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __testeof = false;
# 630 "/usr/include/c++/5/bits/locale_facets.tcc" 3
size_t __n = (0);
# 631 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while ((!__donef) || (!__donet))
# 632 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 633 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__beg == __end)
# 634 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 635 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true;
# 636 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break;
# 637 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 639 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const char_type __c = *__beg;
# 641 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!__donef) {
# 642 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testf = (__c == ((__lc->_M_falsename)[__n])); }
# 644 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((!__testf) && __donet) {
# 645 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; }
# 647 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!__donet) {
# 648 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testt = (__c == ((__lc->_M_truename)[__n])); }
# 650 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((!__testt) && __donef) {
# 651 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; }
# 653 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((!__testt) && (!__testf)) {
# 654 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; }
# 656 "/usr/include/c++/5/bits/locale_facets.tcc" 3
++__n;
# 657 "/usr/include/c++/5/bits/locale_facets.tcc" 3
++__beg;
# 659 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__donef = ((!__testf) || (__n >= (__lc->_M_falsename_size)));
# 660 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__donet = ((!__testt) || (__n >= (__lc->_M_truename_size)));
# 661 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 662 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__testf && (__n == (__lc->_M_falsename_size)) && __n)
# 663 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 664 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = false;
# 665 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__testt && (__n == (__lc->_M_truename_size))) {
# 666 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err = ios_base::failbit; } else {
# 668 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err = (__testeof ? ios_base::eofbit : ios_base::goodbit); }
# 669 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 670 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__testt && (__n == (__lc->_M_truename_size)) && __n)
# 671 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 672 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = true;
# 673 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err = (__testeof ? ios_base::eofbit : ios_base::goodbit);
# 674 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 676 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 679 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = false;
# 680 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err = ios_base::failbit;
# 681 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__testeof) {
# 682 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__err |= ios_base::eofbit); }
# 683 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} }
# 684 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 685 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __beg;
# 686 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 688 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter> _InIter
# 691 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 692 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err, float &__v) const
# 693 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 694 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cxx11::string __xtrc;
# 695 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__xtrc.reserve(32);
# 696 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__beg = _M_extract_float(__beg, __end, __io, __err, __xtrc);
# 697 "/usr/include/c++/5/bits/locale_facets.tcc" 3
std::__convert_to_v(__xtrc.c_str(), __v, __err, _S_get_c_locale());
# 698 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__beg == __end) {
# 699 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__err |= ios_base::eofbit); }
# 700 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __beg;
# 701 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 703 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter> _InIter
# 706 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 707 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err, double &__v) const
# 708 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 709 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cxx11::string __xtrc;
# 710 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__xtrc.reserve(32);
# 711 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__beg = _M_extract_float(__beg, __end, __io, __err, __xtrc);
# 712 "/usr/include/c++/5/bits/locale_facets.tcc" 3
std::__convert_to_v(__xtrc.c_str(), __v, __err, _S_get_c_locale());
# 713 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__beg == __end) {
# 714 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__err |= ios_base::eofbit); }
# 715 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __beg;
# 716 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 735 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter> _InIter
# 738 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 739 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err, long double &__v) const
# 740 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 741 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cxx11::string __xtrc;
# 742 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__xtrc.reserve(32);
# 743 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__beg = _M_extract_float(__beg, __end, __io, __err, __xtrc);
# 744 "/usr/include/c++/5/bits/locale_facets.tcc" 3
std::__convert_to_v(__xtrc.c_str(), __v, __err, _S_get_c_locale());
# 745 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__beg == __end) {
# 746 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__err |= ios_base::eofbit); }
# 747 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __beg;
# 748 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 750 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter> _InIter
# 753 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 754 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err, void *&__v) const
# 755 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 757 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef ios_base::fmtflags fmtflags;
# 758 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const fmtflags __fmt = __io.flags();
# 759 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__io.flags((((__fmt & ((~ios_base::basefield)))) | ios_base::hex));
# 763 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef __gnu_cxx::__conditional_type< true, unsigned long, unsigned long long> ::__type _UIntPtrType;
# 765 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_UIntPtrType __ul;
# 766 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__beg = _M_extract_int(__beg, __end, __io, __err, __ul);
# 769 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__io.flags(__fmt);
# 771 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = (reinterpret_cast< void *>(__ul));
# 772 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __beg;
# 773 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 777 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> void
# 780 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::_M_pad(_CharT __fill, streamsize __w, ios_base &__io, _CharT *
# 781 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__new, const _CharT *__cs, int &__len) const
# 782 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 785 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__pad< _CharT, char_traits< _CharT> > ::_S_pad(__io, __fill, __new, __cs, __w, __len);
# 787 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len = (static_cast< int>(__w));
# 788 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 792 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _ValueT> int
# 794 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__int_to_char(_CharT *__bufend, _ValueT __v, const _CharT *__lit, ios_base::fmtflags
# 795 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__flags, bool __dec)
# 796 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 797 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__buf = __bufend;
# 798 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__builtin_expect(__dec, true))
# 799 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 801 "/usr/include/c++/5/bits/locale_facets.tcc" 3
do
# 802 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 803 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(--__buf)) = (__lit[(__v % 10) + __num_base::_S_odigits]);
# 804 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v /= 10;
# 805 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 806 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (__v != 0);
# 807 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 808 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__flags & ios_base::basefield)) == ios_base::oct)
# 809 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 811 "/usr/include/c++/5/bits/locale_facets.tcc" 3
do
# 812 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 813 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(--__buf)) = (__lit[(__v & 7) + __num_base::_S_odigits]);
# 814 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v >>= 3;
# 815 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 816 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (__v != 0);
# 817 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 819 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 821 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const bool __uppercase = (__flags & ios_base::uppercase);
# 822 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const int __case_offset = __uppercase ? __num_base::_S_oudigits : __num_base::_S_odigits;
# 824 "/usr/include/c++/5/bits/locale_facets.tcc" 3
do
# 825 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 826 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(--__buf)) = (__lit[(__v & 15) + __case_offset]);
# 827 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v >>= 4;
# 828 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 829 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (__v != 0);
# 830 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} }
# 831 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __bufend - __buf;
# 832 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 836 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> void
# 839 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::_M_group_int(const char *__grouping, size_t __grouping_size, _CharT __sep, ios_base &, _CharT *
# 840 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__new, _CharT *__cs, int &__len) const
# 841 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 842 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__p = std::__add_grouping(__new, __sep, __grouping, __grouping_size, __cs, __cs + __len);
# 844 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len = (__p - __new);
# 845 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 847 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter>
# 848 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _ValueT> _OutIter
# 851 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::_M_insert_int(_OutIter __s, ios_base &__io, _CharT __fill, _ValueT
# 852 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v) const
# 853 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 854 "/usr/include/c++/5/bits/locale_facets.tcc" 3
using __gnu_cxx::__add_unsigned;
# 855 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef typename __gnu_cxx::__add_unsigned< _ValueT> ::__type __unsigned_type;
# 856 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 857 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__use_cache< __numpunct_cache< _CharT> > __uc;
# 858 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 859 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cache_type *__lc = __uc(__loc);
# 860 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const _CharT *__lit = ((__lc->_M_atoms_out));
# 861 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ios_base::fmtflags __flags = __io.flags();
# 864 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const int __ilen = ((5) * sizeof(_ValueT));
# 865 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__cs = static_cast< _CharT *>(__builtin_alloca(sizeof(_CharT) * __ilen));
# 870 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ios_base::fmtflags __basefield = (__flags & ios_base::basefield);
# 871 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const bool __dec = (__basefield != ios_base::oct) && (__basefield != ios_base::hex);
# 873 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __unsigned_type __u = ((__v > 0) || (!__dec)) ? (__unsigned_type)__v : (-((__unsigned_type)__v));
# 876 "/usr/include/c++/5/bits/locale_facets.tcc" 3
int __len = __int_to_char(__cs + __ilen, __u, __lit, __flags, __dec);
# 877 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cs += (__ilen - __len);
# 880 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__lc->_M_use_grouping)
# 881 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 884 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__cs2 = static_cast< _CharT *>(__builtin_alloca((sizeof(_CharT) * (__len + 1)) * (2)));
# 887 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_M_group_int((__lc->_M_grouping), (__lc->_M_grouping_size), (__lc->_M_thousands_sep), __io, __cs2 + 2, __cs, __len);
# 889 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cs = (__cs2 + 2);
# 890 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 893 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__builtin_expect(__dec, true))
# 894 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 896 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__v >= 0)
# 897 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 898 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((bool)((__flags & ios_base::showpos))) && __gnu_cxx::__numeric_traits< _ValueT> ::__is_signed) {
# 900 "/usr/include/c++/5/bits/locale_facets.tcc" 3
((*(--__cs)) = (__lit[__num_base::_S_oplus])), (++__len); }
# 901 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 903 "/usr/include/c++/5/bits/locale_facets.tcc" 3
((*(--__cs)) = (__lit[__num_base::_S_ominus])), (++__len); }
# 904 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 905 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((bool)((__flags & ios_base::showbase))) && __v)
# 906 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 907 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__basefield == ios_base::oct) {
# 908 "/usr/include/c++/5/bits/locale_facets.tcc" 3
((*(--__cs)) = (__lit[__num_base::_S_odigits])), (++__len); } else
# 910 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 912 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const bool __uppercase = (__flags & ios_base::uppercase);
# 913 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(--__cs)) = (__lit[(__num_base::_S_ox) + __uppercase]);
# 915 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(--__cs)) = (__lit[__num_base::_S_odigits]);
# 916 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len += 2;
# 917 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 918 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} }
# 921 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const streamsize __w = __io.width();
# 922 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__w > (static_cast< streamsize>(__len)))
# 923 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 924 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__cs3 = static_cast< _CharT *>(__builtin_alloca(sizeof(_CharT) * __w));
# 926 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_M_pad(__fill, __w, __io, __cs3, __cs, __len);
# 927 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cs = __cs3;
# 928 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 929 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__io.width(0);
# 933 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return std::__write(__s, __cs, __len);
# 934 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 936 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> void
# 939 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::_M_group_float(const char *__grouping, size_t __grouping_size, _CharT
# 940 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__sep, const _CharT *__p, _CharT *__new, _CharT *
# 941 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cs, int &__len) const
# 942 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 946 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const int __declen = (__p) ? __p - __cs : __len;
# 947 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__p2 = std::__add_grouping(__new, __sep, __grouping, __grouping_size, __cs, __cs + __declen);
# 952 "/usr/include/c++/5/bits/locale_facets.tcc" 3
int __newlen = __p2 - __new;
# 953 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__p)
# 954 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 955 "/usr/include/c++/5/bits/locale_facets.tcc" 3
char_traits< _CharT> ::copy(__p2, __p, __len - __declen);
# 956 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__newlen += (__len - __declen);
# 957 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 958 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len = __newlen;
# 959 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 971 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter>
# 972 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _ValueT> _OutIter
# 975 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::_M_insert_float(_OutIter __s, ios_base &__io, _CharT __fill, char __mod, _ValueT
# 976 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v) const
# 977 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 978 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 979 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__use_cache< __numpunct_cache< _CharT> > __uc;
# 980 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 981 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cache_type *__lc = __uc(__loc);
# 984 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const streamsize __prec = (__io.precision() < (0)) ? 6 : __io.precision();
# 986 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const int __max_digits = (__gnu_cxx::__numeric_traits< _ValueT> ::__digits10);
# 990 "/usr/include/c++/5/bits/locale_facets.tcc" 3
int __len;
# 992 "/usr/include/c++/5/bits/locale_facets.tcc" 3
char __fbuf[16];
# 993 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__num_base::_S_format_float(__io, __fbuf, __mod);
# 997 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const bool __use_prec = (((__io.flags()) & ios_base::floatfield)) != ios_base::floatfield;
# 1002 "/usr/include/c++/5/bits/locale_facets.tcc" 3
int __cs_size = (__max_digits * 3);
# 1003 "/usr/include/c++/5/bits/locale_facets.tcc" 3
char *__cs = static_cast< char *>(__builtin_alloca(__cs_size));
# 1004 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__use_prec) {
# 1005 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len = std::__convert_from_v(_S_get_c_locale(), __cs, __cs_size, __fbuf, __prec, __v); } else {
# 1008 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len = std::__convert_from_v(_S_get_c_locale(), __cs, __cs_size, __fbuf, __v); }
# 1012 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__len >= __cs_size)
# 1013 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1014 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cs_size = (__len + 1);
# 1015 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cs = (static_cast< char *>(__builtin_alloca(__cs_size)));
# 1016 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__use_prec) {
# 1017 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len = std::__convert_from_v(_S_get_c_locale(), __cs, __cs_size, __fbuf, __prec, __v); } else {
# 1020 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len = std::__convert_from_v(_S_get_c_locale(), __cs, __cs_size, __fbuf, __v); }
# 1022 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1044 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ctype< _CharT> &__ctype = use_facet< ctype< _CharT> > (__loc);
# 1046 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__ws = static_cast< _CharT *>(__builtin_alloca(sizeof(_CharT) * __len));
# 1048 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__ctype.widen(__cs, __cs + __len, __ws));
# 1051 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__wp = (0);
# 1052 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const char *__p = char_traits< char> ::find(__cs, __len, '.');
# 1053 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__p)
# 1054 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1055 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__wp = (__ws + (__p - __cs));
# 1056 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*__wp) = (__lc->_M_decimal_point);
# 1057 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1062 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__lc->_M_use_grouping) && ((__wp || (__len < 3)) || (((__cs[1]) <= ('9')) && ((__cs[2]) <= ('9')) && ((__cs[1]) >= ('0')) && ((__cs[2]) >= ('0')))))
# 1065 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1068 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__ws2 = static_cast< _CharT *>(__builtin_alloca((sizeof(_CharT) * __len) * (2)));
# 1071 "/usr/include/c++/5/bits/locale_facets.tcc" 3
streamsize __off = (0);
# 1072 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__cs[0]) == ('-')) || ((__cs[0]) == ('+')))
# 1073 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1074 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__off = (1);
# 1075 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__ws2[0]) = (__ws[0]);
# 1076 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len -= 1;
# 1077 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1079 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_M_group_float((__lc->_M_grouping), (__lc->_M_grouping_size), (__lc->_M_thousands_sep), __wp, __ws2 + __off, __ws + __off, __len);
# 1082 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len += __off;
# 1084 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__ws = __ws2;
# 1085 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1088 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const streamsize __w = __io.width();
# 1089 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__w > (static_cast< streamsize>(__len)))
# 1090 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1091 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__ws3 = static_cast< _CharT *>(__builtin_alloca(sizeof(_CharT) * __w));
# 1093 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_M_pad(__fill, __w, __io, __ws3, __ws, __len);
# 1094 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__ws = __ws3;
# 1095 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1096 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__io.width(0);
# 1100 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return std::__write(__s, __ws, __len);
# 1101 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1103 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> _OutIter
# 1106 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::do_put(iter_type __s, ios_base &__io, char_type __fill, bool __v) const
# 1107 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1108 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ios_base::fmtflags __flags = __io.flags();
# 1109 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__flags & ios_base::boolalpha)) == 0)
# 1110 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1111 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const long __l = __v;
# 1112 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__s = _M_insert_int(__s, __io, __fill, __l);
# 1113 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 1115 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1116 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 1117 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__use_cache< __numpunct_cache< _CharT> > __uc;
# 1118 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 1119 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cache_type *__lc = __uc(__loc);
# 1121 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const _CharT *__name = __v ? __lc->_M_truename : (__lc->_M_falsename);
# 1123 "/usr/include/c++/5/bits/locale_facets.tcc" 3
int __len = __v ? __lc->_M_truename_size : (__lc->_M_falsename_size);
# 1126 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const streamsize __w = __io.width();
# 1127 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__w > (static_cast< streamsize>(__len)))
# 1128 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1129 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const streamsize __plen = __w - __len;
# 1130 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__ps = static_cast< _CharT *>(__builtin_alloca(sizeof(_CharT) * __plen));
# 1134 "/usr/include/c++/5/bits/locale_facets.tcc" 3
char_traits< _CharT> ::assign(__ps, __plen, __fill);
# 1135 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__io.width(0);
# 1137 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__flags & ios_base::adjustfield)) == ios_base::left)
# 1138 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1139 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__s = std::__write(__s, __name, __len);
# 1140 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__s = std::__write(__s, __ps, __plen);
# 1141 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 1143 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1144 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__s = std::__write(__s, __ps, __plen);
# 1145 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__s = std::__write(__s, __name, __len);
# 1146 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1147 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __s;
# 1148 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1149 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__io.width(0);
# 1150 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__s = std::__write(__s, __name, __len);
# 1151 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1152 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __s;
# 1153 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1155 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> _OutIter
# 1158 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::do_put(iter_type __s, ios_base &__io, char_type __fill, double __v) const
# 1159 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{ return _M_insert_float(__s, __io, __fill, ((char)0), __v); }
# 1169 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> _OutIter
# 1172 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::do_put(iter_type __s, ios_base &__io, char_type __fill, long double
# 1173 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v) const
# 1174 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{ return _M_insert_float(__s, __io, __fill, 'L', __v); }
# 1176 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> _OutIter
# 1179 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::do_put(iter_type __s, ios_base &__io, char_type __fill, const void *
# 1180 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v) const
# 1181 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1182 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ios_base::fmtflags __flags = __io.flags();
# 1183 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ios_base::fmtflags __fmt = (~((ios_base::basefield | ios_base::uppercase)));
# 1185 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__io.flags((((__flags & __fmt)) | ((ios_base::hex | ios_base::showbase))));
# 1189 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef __gnu_cxx::__conditional_type< true, unsigned long, unsigned long long> ::__type _UIntPtrType;
# 1191 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__s = _M_insert_int(__s, __io, __fill, reinterpret_cast< _UIntPtrType>(__v));
# 1193 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__io.flags(__flags);
# 1194 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __s;
# 1195 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1206 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _Traits> void
# 1208 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__pad< _CharT, _Traits> ::_S_pad(ios_base &__io, _CharT __fill, _CharT *
# 1209 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__news, const _CharT *__olds, streamsize
# 1210 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__newlen, streamsize __oldlen)
# 1211 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1212 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const size_t __plen = static_cast< size_t>(__newlen - __oldlen);
# 1213 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ios_base::fmtflags __adjust = ((__io.flags()) & ios_base::adjustfield);
# 1216 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__adjust == ios_base::left)
# 1217 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1218 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_Traits::copy(__news, __olds, __oldlen);
# 1219 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_Traits::assign(__news + __oldlen, __plen, __fill);
# 1220 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return;
# 1221 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1223 "/usr/include/c++/5/bits/locale_facets.tcc" 3
size_t __mod = (0);
# 1224 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__adjust == ios_base::internal)
# 1225 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1229 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 1230 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ctype< _CharT> &__ctype = use_facet< ctype< _CharT> > (__loc);
# 1232 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__ctype.widen('-')) == (__olds[0])) || ((__ctype.widen('+')) == (__olds[0])))
# 1234 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1235 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__news[0]) = (__olds[0]);
# 1236 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__mod = (1);
# 1237 "/usr/include/c++/5/bits/locale_facets.tcc" 3
++__news;
# 1238 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 1239 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__ctype.widen('0')) == (__olds[0])) && (__oldlen > (1)) && (((__ctype.widen('x')) == (__olds[1])) || ((__ctype.widen('X')) == (__olds[1]))))
# 1243 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1244 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__news[0]) = (__olds[0]);
# 1245 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__news[1]) = (__olds[1]);
# 1246 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__mod = (2);
# 1247 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__news += 2;
# 1248 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} }
# 1250 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1251 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_Traits::assign(__news, __plen, __fill);
# 1252 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_Traits::copy(__news + __plen, __olds + __mod, __oldlen - __mod);
# 1253 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1255 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT> _CharT *
# 1257 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__add_grouping(_CharT *__s, _CharT __sep, const char *
# 1258 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__gbeg, size_t __gsize, const _CharT *
# 1259 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__first, const _CharT *__last)
# 1260 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1261 "/usr/include/c++/5/bits/locale_facets.tcc" 3
size_t __idx = (0);
# 1262 "/usr/include/c++/5/bits/locale_facets.tcc" 3
size_t __ctr = (0);
# 1264 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (((__last - __first) > (__gbeg[__idx])) && ((static_cast< signed char>(__gbeg[__idx])) > 0) && ((__gbeg[__idx]) != __gnu_cxx::__numeric_traits_integer< char> ::__max))
# 1267 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1268 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__last -= (__gbeg[__idx]);
# 1269 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__idx < (__gsize - (1))) ? ++__idx : (++__ctr);
# 1270 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1272 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (__first != __last) {
# 1273 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(__s++)) = (*(__first++)); }
# 1275 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (__ctr--)
# 1276 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1277 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(__s++)) = __sep;
# 1278 "/usr/include/c++/5/bits/locale_facets.tcc" 3
for (char __i = __gbeg[__idx]; __i > 0; --__i) {
# 1279 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(__s++)) = (*(__first++)); }
# 1280 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1282 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (__idx--)
# 1283 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1284 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(__s++)) = __sep;
# 1285 "/usr/include/c++/5/bits/locale_facets.tcc" 3
for (char __i = __gbeg[__idx]; __i > 0; --__i) {
# 1286 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(__s++)) = (*(__first++)); }
# 1287 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1289 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __s;
# 1290 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1295 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template class __cxx11::numpunct< char> ;
# 1296 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template class __cxx11::numpunct_byname< char> ;
# 1297 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template class num_get< char, istreambuf_iterator< char, char_traits< char> > > ;
# 1298 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template class num_put< char, ostreambuf_iterator< char, char_traits< char> > > ;
# 1301 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template const ctype< char> &use_facet< ctype< char> > (const locale &);
# 1305 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template const __cxx11::numpunct< char> &use_facet< __cxx11::numpunct< char> > (const locale &);
# 1309 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template const num_put< char, ostreambuf_iterator< char, char_traits< char> > > &use_facet< num_put< char, ostreambuf_iterator< char, char_traits< char> > > > (const locale &);
# 1313 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template const num_get< char, istreambuf_iterator< char, char_traits< char> > > &use_facet< num_get< char, istreambuf_iterator< char, char_traits< char> > > > (const locale &);
# 1317 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template bool has_facet< ctype< char> > (const locale &) throw();
# 1321 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template bool has_facet< __cxx11::numpunct< char> > (const locale &) throw();
# 1325 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template bool has_facet< num_put< char, ostreambuf_iterator< char, char_traits< char> > > > (const locale &) throw();
# 1329 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template bool has_facet< num_get< char, istreambuf_iterator< char, char_traits< char> > > > (const locale &) throw();
# 1334 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template class __cxx11::numpunct< wchar_t> ;
# 1335 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template class __cxx11::numpunct_byname< wchar_t> ;
# 1336 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template class num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > ;
# 1337 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template class num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > ;
# 1340 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template const ctype< wchar_t> &use_facet< ctype< wchar_t> > (const locale &);
# 1344 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template const __cxx11::numpunct< wchar_t> &use_facet< __cxx11::numpunct< wchar_t> > (const locale &);
# 1348 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template const num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > &use_facet< num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &);
# 1352 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template const num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > &use_facet< num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &);
# 1356 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template bool has_facet< ctype< wchar_t> > (const locale &) throw();
# 1360 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template bool has_facet< __cxx11::numpunct< wchar_t> > (const locale &) throw();
# 1364 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template bool has_facet< num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &) throw();
# 1368 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template bool has_facet< num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &) throw();
# 1375 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 41 "/usr/include/c++/5/bits/basic_ios.h" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/5/bits/basic_ios.h" 3
template< class _Facet> inline const _Facet &
# 47 "/usr/include/c++/5/bits/basic_ios.h" 3
__check_facet(const _Facet *__f)
# 48 "/usr/include/c++/5/bits/basic_ios.h" 3
{
# 49 "/usr/include/c++/5/bits/basic_ios.h" 3
if (!__f) {
# 50 "/usr/include/c++/5/bits/basic_ios.h" 3
__throw_bad_cast(); }
# 51 "/usr/include/c++/5/bits/basic_ios.h" 3
return *__f;
# 52 "/usr/include/c++/5/bits/basic_ios.h" 3
}
# 66 "/usr/include/c++/5/bits/basic_ios.h" 3
template< class _CharT, class _Traits>
# 67 "/usr/include/c++/5/bits/basic_ios.h" 3
class basic_ios : public ios_base {
# 76 "/usr/include/c++/5/bits/basic_ios.h" 3
public: typedef _CharT char_type;
# 77 "/usr/include/c++/5/bits/basic_ios.h" 3
typedef typename _Traits::int_type int_type;
# 78 "/usr/include/c++/5/bits/basic_ios.h" 3
typedef typename _Traits::pos_type pos_type;
# 79 "/usr/include/c++/5/bits/basic_ios.h" 3
typedef typename _Traits::off_type off_type;
# 80 "/usr/include/c++/5/bits/basic_ios.h" 3
typedef _Traits traits_type;
# 87 "/usr/include/c++/5/bits/basic_ios.h" 3
typedef ctype< _CharT> __ctype_type;
# 89 "/usr/include/c++/5/bits/basic_ios.h" 3
typedef num_put< _CharT, ostreambuf_iterator< _CharT, _Traits> > __num_put_type;
# 91 "/usr/include/c++/5/bits/basic_ios.h" 3
typedef num_get< _CharT, istreambuf_iterator< _CharT, _Traits> > __num_get_type;
# 96 "/usr/include/c++/5/bits/basic_ios.h" 3
protected: basic_ostream< _CharT, _Traits> *_M_tie;
# 97 "/usr/include/c++/5/bits/basic_ios.h" 3
mutable char_type _M_fill;
# 98 "/usr/include/c++/5/bits/basic_ios.h" 3
mutable bool _M_fill_init;
# 99 "/usr/include/c++/5/bits/basic_ios.h" 3
basic_streambuf< _CharT, _Traits> *_M_streambuf;
# 102 "/usr/include/c++/5/bits/basic_ios.h" 3
const __ctype_type *_M_ctype;
# 104 "/usr/include/c++/5/bits/basic_ios.h" 3
const __num_put_type *_M_num_put;
# 106 "/usr/include/c++/5/bits/basic_ios.h" 3
const __num_get_type *_M_num_get;
# 120 "/usr/include/c++/5/bits/basic_ios.h" 3
public: operator void *() const
# 121 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return this->fail() ? 0 : (const_cast< basic_ios *>(this)); }
# 125 "/usr/include/c++/5/bits/basic_ios.h" 3
bool operator!() const
# 126 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return this->fail(); }
# 137 "/usr/include/c++/5/bits/basic_ios.h" 3
iostate rdstate() const
# 138 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return ios_base::_M_streambuf_state; }
# 148 "/usr/include/c++/5/bits/basic_ios.h" 3
void clear(iostate __state = goodbit);
# 157 "/usr/include/c++/5/bits/basic_ios.h" 3
void setstate(iostate __state)
# 158 "/usr/include/c++/5/bits/basic_ios.h" 3
{ this->clear(((this->rdstate()) | __state)); }
# 164 "/usr/include/c++/5/bits/basic_ios.h" 3
void _M_setstate(iostate __state)
# 165 "/usr/include/c++/5/bits/basic_ios.h" 3
{
# 168 "/usr/include/c++/5/bits/basic_ios.h" 3
((ios_base::_M_streambuf_state) |= __state);
# 169 "/usr/include/c++/5/bits/basic_ios.h" 3
if (((this->exceptions()) & __state)) {
# 170 "/usr/include/c++/5/bits/basic_ios.h" 3
throw; }
# 171 "/usr/include/c++/5/bits/basic_ios.h" 3
}
# 180 "/usr/include/c++/5/bits/basic_ios.h" 3
bool good() const
# 181 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return (this->rdstate()) == 0; }
# 190 "/usr/include/c++/5/bits/basic_ios.h" 3
bool eof() const
# 191 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return (((this->rdstate()) & eofbit)) != 0; }
# 201 "/usr/include/c++/5/bits/basic_ios.h" 3
bool fail() const
# 202 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return (((this->rdstate()) & ((badbit | failbit)))) != 0; }
# 211 "/usr/include/c++/5/bits/basic_ios.h" 3
bool bad() const
# 212 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return (((this->rdstate()) & badbit)) != 0; }
# 222 "/usr/include/c++/5/bits/basic_ios.h" 3
iostate exceptions() const
# 223 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return ios_base::_M_exception; }
# 257 "/usr/include/c++/5/bits/basic_ios.h" 3
void exceptions(iostate __except)
# 258 "/usr/include/c++/5/bits/basic_ios.h" 3
{
# 259 "/usr/include/c++/5/bits/basic_ios.h" 3
(ios_base::_M_exception) = __except;
# 260 "/usr/include/c++/5/bits/basic_ios.h" 3
this->clear(ios_base::_M_streambuf_state);
# 261 "/usr/include/c++/5/bits/basic_ios.h" 3
}
# 270 "/usr/include/c++/5/bits/basic_ios.h" 3
explicit basic_ios(basic_streambuf< _CharT, _Traits> *__sb) : ios_base(), _M_tie((0)), _M_fill(), _M_fill_init(false), _M_streambuf((0)), _M_ctype((0)), _M_num_put((0)), _M_num_get((0))
# 273 "/usr/include/c++/5/bits/basic_ios.h" 3
{ this->init(__sb); }
# 282 "/usr/include/c++/5/bits/basic_ios.h" 3
virtual ~basic_ios() { }
# 295 "/usr/include/c++/5/bits/basic_ios.h" 3
basic_ostream< _CharT, _Traits> *tie() const
# 296 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return _M_tie; }
# 307 "/usr/include/c++/5/bits/basic_ios.h" 3
basic_ostream< _CharT, _Traits> *tie(basic_ostream< _CharT, _Traits> *__tiestr)
# 308 "/usr/include/c++/5/bits/basic_ios.h" 3
{
# 309 "/usr/include/c++/5/bits/basic_ios.h" 3
basic_ostream< _CharT, _Traits> *__old = _M_tie;
# 310 "/usr/include/c++/5/bits/basic_ios.h" 3
(_M_tie) = __tiestr;
# 311 "/usr/include/c++/5/bits/basic_ios.h" 3
return __old;
# 312 "/usr/include/c++/5/bits/basic_ios.h" 3
}
# 321 "/usr/include/c++/5/bits/basic_ios.h" 3
basic_streambuf< _CharT, _Traits> *rdbuf() const
# 322 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return _M_streambuf; }
# 347 "/usr/include/c++/5/bits/basic_ios.h" 3
basic_streambuf< _CharT, _Traits> *rdbuf(basic_streambuf< _CharT, _Traits> * __sb);
# 361 "/usr/include/c++/5/bits/basic_ios.h" 3
basic_ios &copyfmt(const basic_ios & __rhs);
# 370 "/usr/include/c++/5/bits/basic_ios.h" 3
char_type fill() const
# 371 "/usr/include/c++/5/bits/basic_ios.h" 3
{
# 372 "/usr/include/c++/5/bits/basic_ios.h" 3
if (!(_M_fill_init))
# 373 "/usr/include/c++/5/bits/basic_ios.h" 3
{
# 374 "/usr/include/c++/5/bits/basic_ios.h" 3
(_M_fill) = this->widen(' ');
# 375 "/usr/include/c++/5/bits/basic_ios.h" 3
(_M_fill_init) = true;
# 376 "/usr/include/c++/5/bits/basic_ios.h" 3
}
# 377 "/usr/include/c++/5/bits/basic_ios.h" 3
return _M_fill;
# 378 "/usr/include/c++/5/bits/basic_ios.h" 3
}
# 390 "/usr/include/c++/5/bits/basic_ios.h" 3
char_type fill(char_type __ch)
# 391 "/usr/include/c++/5/bits/basic_ios.h" 3
{
# 392 "/usr/include/c++/5/bits/basic_ios.h" 3
char_type __old = (this->fill());
# 393 "/usr/include/c++/5/bits/basic_ios.h" 3
(_M_fill) = __ch;
# 394 "/usr/include/c++/5/bits/basic_ios.h" 3
return __old;
# 395 "/usr/include/c++/5/bits/basic_ios.h" 3
}
# 410 "/usr/include/c++/5/bits/basic_ios.h" 3
locale imbue(const locale & __loc);
# 430 "/usr/include/c++/5/bits/basic_ios.h" 3
char narrow(char_type __c, char __dfault) const
# 431 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return (__check_facet(_M_ctype).narrow(__c, __dfault)); }
# 449 "/usr/include/c++/5/bits/basic_ios.h" 3
char_type widen(char __c) const
# 450 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return (__check_facet(_M_ctype).widen(__c)); }
# 460 "/usr/include/c++/5/bits/basic_ios.h" 3
protected: basic_ios() : ios_base(), _M_tie((0)), _M_fill(char_type()), _M_fill_init(false), _M_streambuf((0)), _M_ctype((0)), _M_num_put((0)), _M_num_get((0))
# 463 "/usr/include/c++/5/bits/basic_ios.h" 3
{ }
# 472 "/usr/include/c++/5/bits/basic_ios.h" 3
void init(basic_streambuf< _CharT, _Traits> * __sb);
# 510 "/usr/include/c++/5/bits/basic_ios.h" 3
void _M_cache_locale(const locale & __loc);
# 511 "/usr/include/c++/5/bits/basic_ios.h" 3
};
# 514 "/usr/include/c++/5/bits/basic_ios.h" 3
}
# 35 "/usr/include/c++/5/bits/basic_ios.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 39 "/usr/include/c++/5/bits/basic_ios.tcc" 3
template< class _CharT, class _Traits> void
# 41 "/usr/include/c++/5/bits/basic_ios.tcc" 3
basic_ios< _CharT, _Traits> ::clear(iostate __state)
# 42 "/usr/include/c++/5/bits/basic_ios.tcc" 3
{
# 43 "/usr/include/c++/5/bits/basic_ios.tcc" 3
if ((this->rdbuf())) {
# 44 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(ios_base::_M_streambuf_state) = __state; } else {
# 46 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(ios_base::_M_streambuf_state) = ((__state | badbit)); }
# 47 "/usr/include/c++/5/bits/basic_ios.tcc" 3
if (((this->exceptions()) & (this->rdstate()))) {
# 48 "/usr/include/c++/5/bits/basic_ios.tcc" 3
__throw_ios_failure("basic_ios::clear"); }
# 49 "/usr/include/c++/5/bits/basic_ios.tcc" 3
}
# 51 "/usr/include/c++/5/bits/basic_ios.tcc" 3
template< class _CharT, class _Traits> basic_streambuf< _CharT, _Traits> *
# 53 "/usr/include/c++/5/bits/basic_ios.tcc" 3
basic_ios< _CharT, _Traits> ::rdbuf(basic_streambuf< _CharT, _Traits> *__sb)
# 54 "/usr/include/c++/5/bits/basic_ios.tcc" 3
{
# 55 "/usr/include/c++/5/bits/basic_ios.tcc" 3
basic_streambuf< _CharT, _Traits> *__old = _M_streambuf;
# 56 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_streambuf) = __sb;
# 57 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->clear();
# 58 "/usr/include/c++/5/bits/basic_ios.tcc" 3
return __old;
# 59 "/usr/include/c++/5/bits/basic_ios.tcc" 3
}
# 61 "/usr/include/c++/5/bits/basic_ios.tcc" 3
template< class _CharT, class _Traits> basic_ios< _CharT, _Traits> &
# 63 "/usr/include/c++/5/bits/basic_ios.tcc" 3
basic_ios< _CharT, _Traits> ::copyfmt(const basic_ios &__rhs)
# 64 "/usr/include/c++/5/bits/basic_ios.tcc" 3
{
# 67 "/usr/include/c++/5/bits/basic_ios.tcc" 3
if (this != (&__rhs))
# 68 "/usr/include/c++/5/bits/basic_ios.tcc" 3
{
# 73 "/usr/include/c++/5/bits/basic_ios.tcc" 3
_Words *__words = ((__rhs.ios_base::_M_word_size) <= (_S_local_word_size)) ? ios_base::_M_local_word : (new _Words [__rhs.ios_base::_M_word_size]);
# 77 "/usr/include/c++/5/bits/basic_ios.tcc" 3
_Callback_list *__cb = __rhs.ios_base::_M_callbacks;
# 78 "/usr/include/c++/5/bits/basic_ios.tcc" 3
if (__cb) {
# 79 "/usr/include/c++/5/bits/basic_ios.tcc" 3
__cb->_M_add_reference(); }
# 80 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->ios_base::_M_call_callbacks(erase_event);
# 81 "/usr/include/c++/5/bits/basic_ios.tcc" 3
if ((ios_base::_M_word) != (ios_base::_M_local_word))
# 82 "/usr/include/c++/5/bits/basic_ios.tcc" 3
{
# 83 "/usr/include/c++/5/bits/basic_ios.tcc" 3
delete [] (ios_base::_M_word);
# 84 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(ios_base::_M_word) = (0);
# 85 "/usr/include/c++/5/bits/basic_ios.tcc" 3
}
# 86 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->ios_base::_M_dispose_callbacks();
# 89 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(ios_base::_M_callbacks) = __cb;
# 90 "/usr/include/c++/5/bits/basic_ios.tcc" 3
for (int __i = 0; __i < (__rhs.ios_base::_M_word_size); ++__i) {
# 91 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(__words[__i]) = ((__rhs.ios_base::_M_word)[__i]); }
# 92 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(ios_base::_M_word) = __words;
# 93 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(ios_base::_M_word_size) = (__rhs.ios_base::_M_word_size);
# 95 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->flags(__rhs.flags());
# 96 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->width(__rhs.width());
# 97 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->precision(__rhs.precision());
# 98 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(this->tie((__rhs.tie())));
# 99 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(this->fill((__rhs.fill())));
# 100 "/usr/include/c++/5/bits/basic_ios.tcc" 3
((ios_base::_M_ios_locale) = (__rhs.getloc()));
# 101 "/usr/include/c++/5/bits/basic_ios.tcc" 3
_M_cache_locale(ios_base::_M_ios_locale);
# 103 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->ios_base::_M_call_callbacks(copyfmt_event);
# 106 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->exceptions(__rhs.exceptions());
# 107 "/usr/include/c++/5/bits/basic_ios.tcc" 3
}
# 108 "/usr/include/c++/5/bits/basic_ios.tcc" 3
return *this;
# 109 "/usr/include/c++/5/bits/basic_ios.tcc" 3
}
# 112 "/usr/include/c++/5/bits/basic_ios.tcc" 3
template< class _CharT, class _Traits> locale
# 114 "/usr/include/c++/5/bits/basic_ios.tcc" 3
basic_ios< _CharT, _Traits> ::imbue(const locale &__loc)
# 115 "/usr/include/c++/5/bits/basic_ios.tcc" 3
{
# 116 "/usr/include/c++/5/bits/basic_ios.tcc" 3
locale __old(this->getloc());
# 117 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->ios_base::imbue(__loc);
# 118 "/usr/include/c++/5/bits/basic_ios.tcc" 3
_M_cache_locale(__loc);
# 119 "/usr/include/c++/5/bits/basic_ios.tcc" 3
if ((this->rdbuf()) != 0) {
# 120 "/usr/include/c++/5/bits/basic_ios.tcc" 3
((this->rdbuf())->pubimbue(__loc)); }
# 121 "/usr/include/c++/5/bits/basic_ios.tcc" 3
return __old;
# 122 "/usr/include/c++/5/bits/basic_ios.tcc" 3
}
# 124 "/usr/include/c++/5/bits/basic_ios.tcc" 3
template< class _CharT, class _Traits> void
# 126 "/usr/include/c++/5/bits/basic_ios.tcc" 3
basic_ios< _CharT, _Traits> ::init(basic_streambuf< _CharT, _Traits> *__sb)
# 127 "/usr/include/c++/5/bits/basic_ios.tcc" 3
{
# 129 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->ios_base::_M_init();
# 132 "/usr/include/c++/5/bits/basic_ios.tcc" 3
_M_cache_locale(ios_base::_M_ios_locale);
# 146 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_fill) = _CharT();
# 147 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_fill_init) = false;
# 149 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_tie) = 0;
# 150 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(ios_base::_M_exception) = goodbit;
# 151 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_streambuf) = __sb;
# 152 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(ios_base::_M_streambuf_state) = ((__sb) ? goodbit : badbit);
# 153 "/usr/include/c++/5/bits/basic_ios.tcc" 3
}
# 155 "/usr/include/c++/5/bits/basic_ios.tcc" 3
template< class _CharT, class _Traits> void
# 157 "/usr/include/c++/5/bits/basic_ios.tcc" 3
basic_ios< _CharT, _Traits> ::_M_cache_locale(const locale &__loc)
# 158 "/usr/include/c++/5/bits/basic_ios.tcc" 3
{
# 159 "/usr/include/c++/5/bits/basic_ios.tcc" 3
if (__builtin_expect(has_facet< __ctype_type> (__loc), true)) {
# 160 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_ctype) = (&use_facet< __ctype_type> (__loc)); } else {
# 162 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_ctype) = 0; }
# 164 "/usr/include/c++/5/bits/basic_ios.tcc" 3
if (__builtin_expect(has_facet< __num_put_type> (__loc), true)) {
# 165 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_num_put) = (&use_facet< __num_put_type> (__loc)); } else {
# 167 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_num_put) = 0; }
# 169 "/usr/include/c++/5/bits/basic_ios.tcc" 3
if (__builtin_expect(has_facet< __num_get_type> (__loc), true)) {
# 170 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_num_get) = (&use_facet< __num_get_type> (__loc)); } else {
# 172 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_num_get) = 0; }
# 173 "/usr/include/c++/5/bits/basic_ios.tcc" 3
}
# 178 "/usr/include/c++/5/bits/basic_ios.tcc" 3
extern template class basic_ios< char, char_traits< char> > ;
# 181 "/usr/include/c++/5/bits/basic_ios.tcc" 3
extern template class basic_ios< wchar_t, char_traits< wchar_t> > ;
# 186 "/usr/include/c++/5/bits/basic_ios.tcc" 3
}
# 41 "/usr/include/c++/5/ostream" 3
namespace std __attribute((__visibility__("default"))) {
# 57 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits>
# 58 "/usr/include/c++/5/ostream" 3
class basic_ostream : virtual public basic_ios< _CharT, _Traits> {
# 62 "/usr/include/c++/5/ostream" 3
public: typedef _CharT char_type;
# 63 "/usr/include/c++/5/ostream" 3
typedef typename _Traits::int_type int_type;
# 64 "/usr/include/c++/5/ostream" 3
typedef typename _Traits::pos_type pos_type;
# 65 "/usr/include/c++/5/ostream" 3
typedef typename _Traits::off_type off_type;
# 66 "/usr/include/c++/5/ostream" 3
typedef _Traits traits_type;
# 69 "/usr/include/c++/5/ostream" 3
typedef basic_streambuf< _CharT, _Traits> __streambuf_type;
# 70 "/usr/include/c++/5/ostream" 3
typedef ::std::basic_ios< _CharT, _Traits> __ios_type;
# 71 "/usr/include/c++/5/ostream" 3
typedef basic_ostream __ostream_type;
# 73 "/usr/include/c++/5/ostream" 3
typedef num_put< _CharT, ostreambuf_iterator< _CharT, _Traits> > __num_put_type;
# 74 "/usr/include/c++/5/ostream" 3
typedef ctype< _CharT> __ctype_type;
# 84 "/usr/include/c++/5/ostream" 3
explicit basic_ostream(__streambuf_type *__sb)
# 85 "/usr/include/c++/5/ostream" 3
{ (this->init(__sb)); }
# 93 "/usr/include/c++/5/ostream" 3
virtual ~basic_ostream() { }
# 96 "/usr/include/c++/5/ostream" 3
class sentry;
# 97 "/usr/include/c++/5/ostream" 3
friend class sentry;
# 108 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &))
# 109 "/usr/include/c++/5/ostream" 3
{
# 113 "/usr/include/c++/5/ostream" 3
return __pf(*this);
# 114 "/usr/include/c++/5/ostream" 3
}
# 117 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &))
# 118 "/usr/include/c++/5/ostream" 3
{
# 122 "/usr/include/c++/5/ostream" 3
__pf(*this);
# 123 "/usr/include/c++/5/ostream" 3
return *this;
# 124 "/usr/include/c++/5/ostream" 3
}
# 127 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(::std::ios_base &(*__pf)(::std::ios_base &))
# 128 "/usr/include/c++/5/ostream" 3
{
# 132 "/usr/include/c++/5/ostream" 3
__pf(*this);
# 133 "/usr/include/c++/5/ostream" 3
return *this;
# 134 "/usr/include/c++/5/ostream" 3
}
# 166 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(long __n)
# 167 "/usr/include/c++/5/ostream" 3
{ return _M_insert(__n); }
# 170 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(unsigned long __n)
# 171 "/usr/include/c++/5/ostream" 3
{ return _M_insert(__n); }
# 174 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(bool __n)
# 175 "/usr/include/c++/5/ostream" 3
{ return _M_insert(__n); }
# 178 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(short __n);
# 181 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(unsigned short __n)
# 182 "/usr/include/c++/5/ostream" 3
{
# 185 "/usr/include/c++/5/ostream" 3
return _M_insert(static_cast< unsigned long>(__n));
# 186 "/usr/include/c++/5/ostream" 3
}
# 189 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(int __n);
# 192 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(unsigned __n)
# 193 "/usr/include/c++/5/ostream" 3
{
# 196 "/usr/include/c++/5/ostream" 3
return _M_insert(static_cast< unsigned long>(__n));
# 197 "/usr/include/c++/5/ostream" 3
}
# 201 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(long long __n)
# 202 "/usr/include/c++/5/ostream" 3
{ return _M_insert(__n); }
# 205 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(unsigned long long __n)
# 206 "/usr/include/c++/5/ostream" 3
{ return _M_insert(__n); }
# 220 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(double __f)
# 221 "/usr/include/c++/5/ostream" 3
{ return _M_insert(__f); }
# 224 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(float __f)
# 225 "/usr/include/c++/5/ostream" 3
{
# 228 "/usr/include/c++/5/ostream" 3
return _M_insert(static_cast< double>(__f));
# 229 "/usr/include/c++/5/ostream" 3
}
# 232 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(long double __f)
# 233 "/usr/include/c++/5/ostream" 3
{ return _M_insert(__f); }
# 245 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(const void *__p)
# 246 "/usr/include/c++/5/ostream" 3
{ return _M_insert(__p); }
# 270 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(__streambuf_type * __sb);
# 303 "/usr/include/c++/5/ostream" 3
__ostream_type &put(char_type __c);
# 311 "/usr/include/c++/5/ostream" 3
void _M_write(const char_type *__s, ::std::streamsize __n)
# 312 "/usr/include/c++/5/ostream" 3
{
# 313 "/usr/include/c++/5/ostream" 3
const ::std::streamsize __put = ((this->rdbuf())->sputn(__s, __n));
# 314 "/usr/include/c++/5/ostream" 3
if (__put != __n) {
# 315 "/usr/include/c++/5/ostream" 3
(this->setstate(ios_base::badbit)); }
# 316 "/usr/include/c++/5/ostream" 3
}
# 335 "/usr/include/c++/5/ostream" 3
__ostream_type &write(const char_type * __s, ::std::streamsize __n);
# 348 "/usr/include/c++/5/ostream" 3
__ostream_type &flush();
# 358 "/usr/include/c++/5/ostream" 3
pos_type tellp();
# 369 "/usr/include/c++/5/ostream" 3
__ostream_type &seekp(pos_type);
# 381 "/usr/include/c++/5/ostream" 3
__ostream_type &seekp(off_type, ::std::ios_base::seekdir);
# 384 "/usr/include/c++/5/ostream" 3
protected: basic_ostream()
# 385 "/usr/include/c++/5/ostream" 3
{ (this->init(0)); }
# 413 "/usr/include/c++/5/ostream" 3
template< class _ValueT> __ostream_type &_M_insert(_ValueT __v);
# 416 "/usr/include/c++/5/ostream" 3
};
# 425 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits>
# 426 "/usr/include/c++/5/ostream" 3
class basic_ostream< _CharT, _Traits> ::sentry {
# 429 "/usr/include/c++/5/ostream" 3
bool _M_ok;
# 430 "/usr/include/c++/5/ostream" 3
basic_ostream &_M_os;
# 445 "/usr/include/c++/5/ostream" 3
public: explicit sentry(basic_ostream & __os);
# 454 "/usr/include/c++/5/ostream" 3
~sentry()
# 455 "/usr/include/c++/5/ostream" 3
{
# 457 "/usr/include/c++/5/ostream" 3
if (((bool)(((_M_os).flags()) & ios_base::unitbuf)) && (!uncaught_exception()))
# 458 "/usr/include/c++/5/ostream" 3
{
# 460 "/usr/include/c++/5/ostream" 3
if (((_M_os).rdbuf()) && ((((_M_os).rdbuf())->pubsync()) == (-1))) {
# 461 "/usr/include/c++/5/ostream" 3
((_M_os).setstate(ios_base::badbit)); }
# 462 "/usr/include/c++/5/ostream" 3
}
# 463 "/usr/include/c++/5/ostream" 3
}
# 475 "/usr/include/c++/5/ostream" 3
operator bool() const
# 476 "/usr/include/c++/5/ostream" 3
{ return _M_ok; }
# 477 "/usr/include/c++/5/ostream" 3
};
# 495 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits> inline basic_ostream< _CharT, _Traits> &
# 497 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< _CharT, _Traits> &__out, _CharT __c)
# 498 "/usr/include/c++/5/ostream" 3
{ return __ostream_insert(__out, &__c, 1); }
# 500 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits> inline basic_ostream< _CharT, _Traits> &
# 502 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< _CharT, _Traits> &__out, char __c)
# 503 "/usr/include/c++/5/ostream" 3
{ return __out << (__out.widen(__c)); }
# 506 "/usr/include/c++/5/ostream" 3
template< class _Traits> inline basic_ostream< char, _Traits> &
# 508 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< char, _Traits> &__out, char __c)
# 509 "/usr/include/c++/5/ostream" 3
{ return __ostream_insert(__out, &__c, 1); }
# 512 "/usr/include/c++/5/ostream" 3
template< class _Traits> inline basic_ostream< char, _Traits> &
# 514 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< char, _Traits> &__out, signed char __c)
# 515 "/usr/include/c++/5/ostream" 3
{ return __out << (static_cast< char>(__c)); }
# 517 "/usr/include/c++/5/ostream" 3
template< class _Traits> inline basic_ostream< char, _Traits> &
# 519 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< char, _Traits> &__out, unsigned char __c)
# 520 "/usr/include/c++/5/ostream" 3
{ return __out << (static_cast< char>(__c)); }
# 537 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits> inline basic_ostream< _CharT, _Traits> &
# 539 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< _CharT, _Traits> &__out, const _CharT *__s)
# 540 "/usr/include/c++/5/ostream" 3
{
# 541 "/usr/include/c++/5/ostream" 3
if (!__s) {
# 542 "/usr/include/c++/5/ostream" 3
(__out.setstate(ios_base::badbit)); } else {
# 544 "/usr/include/c++/5/ostream" 3
__ostream_insert(__out, __s, static_cast< streamsize>(_Traits::length(__s))); }
# 546 "/usr/include/c++/5/ostream" 3
return __out;
# 547 "/usr/include/c++/5/ostream" 3
}
# 549 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &operator<<(basic_ostream< _CharT, _Traits> & __out, const char * __s);
# 554 "/usr/include/c++/5/ostream" 3
template< class _Traits> inline basic_ostream< char, _Traits> &
# 556 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< char, _Traits> &__out, const char *__s)
# 557 "/usr/include/c++/5/ostream" 3
{
# 558 "/usr/include/c++/5/ostream" 3
if (!__s) {
# 559 "/usr/include/c++/5/ostream" 3
(__out.setstate(ios_base::badbit)); } else {
# 561 "/usr/include/c++/5/ostream" 3
__ostream_insert(__out, __s, static_cast< streamsize>(_Traits::length(__s))); }
# 563 "/usr/include/c++/5/ostream" 3
return __out;
# 564 "/usr/include/c++/5/ostream" 3
}
# 567 "/usr/include/c++/5/ostream" 3
template< class _Traits> inline basic_ostream< char, _Traits> &
# 569 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< char, _Traits> &__out, const signed char *__s)
# 570 "/usr/include/c++/5/ostream" 3
{ return __out << (reinterpret_cast< const char *>(__s)); }
# 572 "/usr/include/c++/5/ostream" 3
template< class _Traits> inline basic_ostream< char, _Traits> &
# 574 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< char, _Traits> &__out, const unsigned char *__s)
# 575 "/usr/include/c++/5/ostream" 3
{ return __out << (reinterpret_cast< const char *>(__s)); }
# 588 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits> inline basic_ostream< _CharT, _Traits> &
# 590 "/usr/include/c++/5/ostream" 3
endl(basic_ostream< _CharT, _Traits> &__os)
# 591 "/usr/include/c++/5/ostream" 3
{ return flush((__os.put((__os.widen('\n'))))); }
# 600 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits> inline basic_ostream< _CharT, _Traits> &
# 602 "/usr/include/c++/5/ostream" 3
ends(basic_ostream< _CharT, _Traits> &__os)
# 603 "/usr/include/c++/5/ostream" 3
{ return (__os.put(_CharT())); }
# 610 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits> inline basic_ostream< _CharT, _Traits> &
# 612 "/usr/include/c++/5/ostream" 3
flush(basic_ostream< _CharT, _Traits> &__os)
# 613 "/usr/include/c++/5/ostream" 3
{ return (__os.flush()); }
# 636 "/usr/include/c++/5/ostream" 3
}
# 41 "/usr/include/c++/5/bits/ostream.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits>
# 47 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::sentry::sentry(basic_ostream &__os) : _M_ok(false), _M_os(__os)
# 49 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 51 "/usr/include/c++/5/bits/ostream.tcc" 3
if ((__os.tie()) && (__os.good())) {
# 52 "/usr/include/c++/5/bits/ostream.tcc" 3
((__os.tie())->flush()); }
# 54 "/usr/include/c++/5/bits/ostream.tcc" 3
if ((__os.good())) {
# 55 "/usr/include/c++/5/bits/ostream.tcc" 3
(_M_ok) = true; } else {
# 57 "/usr/include/c++/5/bits/ostream.tcc" 3
(__os.setstate(ios_base::failbit)); }
# 58 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 60 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits>
# 61 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _ValueT> basic_ostream< _CharT, _Traits> &
# 64 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::_M_insert(_ValueT __v)
# 65 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 66 "/usr/include/c++/5/bits/ostream.tcc" 3
sentry __cerb(*this);
# 67 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__cerb)
# 68 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 69 "/usr/include/c++/5/bits/ostream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 70 "/usr/include/c++/5/bits/ostream.tcc" 3
try
# 71 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 72 "/usr/include/c++/5/bits/ostream.tcc" 3
const __num_put_type &__np = __check_facet((this->_M_num_put));
# 73 "/usr/include/c++/5/bits/ostream.tcc" 3
if (((__np.put(*this, *this, (this->fill()), __v)).failed())) {
# 74 "/usr/include/c++/5/bits/ostream.tcc" 3
(__err |= ::std::ios_base::badbit); }
# 75 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 76 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 77 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 78 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 79 "/usr/include/c++/5/bits/ostream.tcc" 3
throw;
# 80 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 81 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (...)
# 82 "/usr/include/c++/5/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 83 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__err) {
# 84 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->setstate(__err)); }
# 85 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 86 "/usr/include/c++/5/bits/ostream.tcc" 3
return *this;
# 87 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 89 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 92 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::operator<<(short __n)
# 93 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 96 "/usr/include/c++/5/bits/ostream.tcc" 3
const ::std::ios_base::fmtflags __fmt = (this->flags()) & ios_base::basefield;
# 97 "/usr/include/c++/5/bits/ostream.tcc" 3
if ((__fmt == ::std::ios_base::oct) || (__fmt == ::std::ios_base::hex)) {
# 98 "/usr/include/c++/5/bits/ostream.tcc" 3
return _M_insert(static_cast< long>(static_cast< unsigned short>(__n))); } else {
# 100 "/usr/include/c++/5/bits/ostream.tcc" 3
return _M_insert(static_cast< long>(__n)); }
# 101 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 103 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 106 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::operator<<(int __n)
# 107 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 110 "/usr/include/c++/5/bits/ostream.tcc" 3
const ::std::ios_base::fmtflags __fmt = (this->flags()) & ios_base::basefield;
# 111 "/usr/include/c++/5/bits/ostream.tcc" 3
if ((__fmt == ::std::ios_base::oct) || (__fmt == ::std::ios_base::hex)) {
# 112 "/usr/include/c++/5/bits/ostream.tcc" 3
return _M_insert(static_cast< long>(static_cast< unsigned>(__n))); } else {
# 114 "/usr/include/c++/5/bits/ostream.tcc" 3
return _M_insert(static_cast< long>(__n)); }
# 115 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 117 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 120 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::operator<<(__streambuf_type *__sbin)
# 121 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 122 "/usr/include/c++/5/bits/ostream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 123 "/usr/include/c++/5/bits/ostream.tcc" 3
sentry __cerb(*this);
# 124 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__cerb && __sbin)
# 125 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 126 "/usr/include/c++/5/bits/ostream.tcc" 3
try
# 127 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 128 "/usr/include/c++/5/bits/ostream.tcc" 3
if (!__copy_streambufs(__sbin, (this->rdbuf()))) {
# 129 "/usr/include/c++/5/bits/ostream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 130 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 131 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 132 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 133 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 134 "/usr/include/c++/5/bits/ostream.tcc" 3
throw;
# 135 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 136 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (...)
# 137 "/usr/include/c++/5/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::failbit)); }
# 138 "/usr/include/c++/5/bits/ostream.tcc" 3
} else {
# 139 "/usr/include/c++/5/bits/ostream.tcc" 3
if (!__sbin) {
# 140 "/usr/include/c++/5/bits/ostream.tcc" 3
(__err |= ::std::ios_base::badbit); } }
# 141 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__err) {
# 142 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->setstate(__err)); }
# 143 "/usr/include/c++/5/bits/ostream.tcc" 3
return *this;
# 144 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 146 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 149 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::put(char_type __c)
# 150 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 157 "/usr/include/c++/5/bits/ostream.tcc" 3
sentry __cerb(*this);
# 158 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__cerb)
# 159 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 160 "/usr/include/c++/5/bits/ostream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 161 "/usr/include/c++/5/bits/ostream.tcc" 3
try
# 162 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 163 "/usr/include/c++/5/bits/ostream.tcc" 3
const int_type __put = ((this->rdbuf())->sputc(__c));
# 164 "/usr/include/c++/5/bits/ostream.tcc" 3
if (traits_type::eq_int_type(__put, traits_type::eof())) {
# 165 "/usr/include/c++/5/bits/ostream.tcc" 3
(__err |= ::std::ios_base::badbit); }
# 166 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 167 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 168 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 169 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 170 "/usr/include/c++/5/bits/ostream.tcc" 3
throw;
# 171 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 172 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (...)
# 173 "/usr/include/c++/5/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 174 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__err) {
# 175 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->setstate(__err)); }
# 176 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 177 "/usr/include/c++/5/bits/ostream.tcc" 3
return *this;
# 178 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 180 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 183 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::write(const _CharT *__s, ::std::streamsize __n)
# 184 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 192 "/usr/include/c++/5/bits/ostream.tcc" 3
sentry __cerb(*this);
# 193 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__cerb)
# 194 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 195 "/usr/include/c++/5/bits/ostream.tcc" 3
try
# 196 "/usr/include/c++/5/bits/ostream.tcc" 3
{ _M_write(__s, __n); }
# 197 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 198 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 199 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 200 "/usr/include/c++/5/bits/ostream.tcc" 3
throw;
# 201 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 202 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (...)
# 203 "/usr/include/c++/5/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 204 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 205 "/usr/include/c++/5/bits/ostream.tcc" 3
return *this;
# 206 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 208 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> typename basic_ostream< _CharT, _Traits> ::__ostream_type &
# 211 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::flush()
# 212 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 216 "/usr/include/c++/5/bits/ostream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 217 "/usr/include/c++/5/bits/ostream.tcc" 3
try
# 218 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 219 "/usr/include/c++/5/bits/ostream.tcc" 3
if ((this->rdbuf()) && (((this->rdbuf())->pubsync()) == (-1))) {
# 220 "/usr/include/c++/5/bits/ostream.tcc" 3
(__err |= ::std::ios_base::badbit); }
# 221 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 222 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 223 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 224 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 225 "/usr/include/c++/5/bits/ostream.tcc" 3
throw;
# 226 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 227 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (...)
# 228 "/usr/include/c++/5/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 229 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__err) {
# 230 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->setstate(__err)); }
# 231 "/usr/include/c++/5/bits/ostream.tcc" 3
return *this;
# 232 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 234 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> typename basic_ostream< _CharT, _Traits> ::pos_type
# 237 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::tellp()
# 238 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 239 "/usr/include/c++/5/bits/ostream.tcc" 3
pos_type __ret = ((pos_type)(-1));
# 240 "/usr/include/c++/5/bits/ostream.tcc" 3
try
# 241 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 242 "/usr/include/c++/5/bits/ostream.tcc" 3
if (!(this->fail())) {
# 243 "/usr/include/c++/5/bits/ostream.tcc" 3
__ret = ((this->rdbuf())->pubseekoff(0, ios_base::cur, ios_base::out)); }
# 244 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 245 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 246 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 247 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 248 "/usr/include/c++/5/bits/ostream.tcc" 3
throw;
# 249 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 250 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (...)
# 251 "/usr/include/c++/5/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 252 "/usr/include/c++/5/bits/ostream.tcc" 3
return __ret;
# 253 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 255 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 258 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::seekp(pos_type __pos)
# 259 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 260 "/usr/include/c++/5/bits/ostream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 261 "/usr/include/c++/5/bits/ostream.tcc" 3
try
# 262 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 263 "/usr/include/c++/5/bits/ostream.tcc" 3
if (!(this->fail()))
# 264 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 267 "/usr/include/c++/5/bits/ostream.tcc" 3
const pos_type __p = ((this->rdbuf())->pubseekpos(__pos, ios_base::out));
# 271 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__p == ((pos_type)((off_type)(-1)))) {
# 272 "/usr/include/c++/5/bits/ostream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 273 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 274 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 275 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 276 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 277 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 278 "/usr/include/c++/5/bits/ostream.tcc" 3
throw;
# 279 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 280 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (...)
# 281 "/usr/include/c++/5/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 282 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__err) {
# 283 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->setstate(__err)); }
# 284 "/usr/include/c++/5/bits/ostream.tcc" 3
return *this;
# 285 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 287 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 290 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::seekp(off_type __off, ::std::ios_base::seekdir __dir)
# 291 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 292 "/usr/include/c++/5/bits/ostream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 293 "/usr/include/c++/5/bits/ostream.tcc" 3
try
# 294 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 295 "/usr/include/c++/5/bits/ostream.tcc" 3
if (!(this->fail()))
# 296 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 299 "/usr/include/c++/5/bits/ostream.tcc" 3
const pos_type __p = ((this->rdbuf())->pubseekoff(__off, __dir, ios_base::out));
# 303 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__p == ((pos_type)((off_type)(-1)))) {
# 304 "/usr/include/c++/5/bits/ostream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 305 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 306 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 307 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 308 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 309 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 310 "/usr/include/c++/5/bits/ostream.tcc" 3
throw;
# 311 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 312 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (...)
# 313 "/usr/include/c++/5/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 314 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__err) {
# 315 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->setstate(__err)); }
# 316 "/usr/include/c++/5/bits/ostream.tcc" 3
return *this;
# 317 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 319 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 321 "/usr/include/c++/5/bits/ostream.tcc" 3
operator<<(basic_ostream< _CharT, _Traits> &__out, const char *__s)
# 322 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 323 "/usr/include/c++/5/bits/ostream.tcc" 3
if (!__s) {
# 324 "/usr/include/c++/5/bits/ostream.tcc" 3
(__out.setstate(ios_base::badbit)); } else
# 326 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 329 "/usr/include/c++/5/bits/ostream.tcc" 3
const size_t __clen = char_traits< char> ::length(__s);
# 330 "/usr/include/c++/5/bits/ostream.tcc" 3
try
# 331 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 332 "/usr/include/c++/5/bits/ostream.tcc" 3
struct __ptr_guard {
# 334 "/usr/include/c++/5/bits/ostream.tcc" 3
_CharT *__p;
# 335 "/usr/include/c++/5/bits/ostream.tcc" 3
__ptr_guard(_CharT *__ip) : __p(__ip) { }
# 336 "/usr/include/c++/5/bits/ostream.tcc" 3
~__ptr_guard() { delete [] (__p); }
# 337 "/usr/include/c++/5/bits/ostream.tcc" 3
_CharT *__get() { return __p; }
# 338 "/usr/include/c++/5/bits/ostream.tcc" 3
} __pg(new _CharT [__clen]);
# 340 "/usr/include/c++/5/bits/ostream.tcc" 3
_CharT *__ws = __pg.__get();
# 341 "/usr/include/c++/5/bits/ostream.tcc" 3
for (size_t __i = (0); __i < __clen; ++__i) {
# 342 "/usr/include/c++/5/bits/ostream.tcc" 3
(__ws[__i]) = (__out.widen(__s[__i])); }
# 343 "/usr/include/c++/5/bits/ostream.tcc" 3
__ostream_insert(__out, __ws, __clen);
# 344 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 345 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 346 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 347 "/usr/include/c++/5/bits/ostream.tcc" 3
(__out._M_setstate(ios_base::badbit));
# 348 "/usr/include/c++/5/bits/ostream.tcc" 3
throw;
# 349 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 350 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (...)
# 351 "/usr/include/c++/5/bits/ostream.tcc" 3
{ (__out._M_setstate(ios_base::badbit)); }
# 352 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 353 "/usr/include/c++/5/bits/ostream.tcc" 3
return __out;
# 354 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 359 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template class basic_ostream< char, char_traits< char> > ;
# 360 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &endl(basic_ostream< char, char_traits< char> > & __os);
# 361 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &ends(basic_ostream< char, char_traits< char> > & __os);
# 362 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &flush(basic_ostream< char, char_traits< char> > & __os);
# 363 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & __out, char __c);
# 364 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & __out, unsigned char __c);
# 365 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & __out, signed char __c);
# 366 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & __out, const char * __s);
# 367 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & __out, const unsigned char * __s);
# 368 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & __out, const signed char * __s);
# 370 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long __v);
# 371 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(unsigned long __v);
# 372 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(bool __v);
# 374 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long long __v);
# 375 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(unsigned long long __v);
# 377 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(double __v);
# 378 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long double __v);
# 379 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(const void * __v);
# 382 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template class basic_ostream< wchar_t, char_traits< wchar_t> > ;
# 383 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &endl(basic_ostream< wchar_t, char_traits< wchar_t> > & __os);
# 384 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &ends(basic_ostream< wchar_t, char_traits< wchar_t> > & __os);
# 385 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &flush(basic_ostream< wchar_t, char_traits< wchar_t> > & __os);
# 386 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & __out, wchar_t __c);
# 387 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & __out, char __c);
# 388 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & __out, const wchar_t * __s);
# 389 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & __out, const char * __s);
# 391 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long __v);
# 392 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(unsigned long __v);
# 393 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(bool __v);
# 395 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long long __v);
# 396 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(unsigned long long __v);
# 398 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(double __v);
# 399 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long double __v);
# 400 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(const void * __v);
# 405 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 41 "/usr/include/c++/5/istream" 3
namespace std __attribute((__visibility__("default"))) {
# 57 "/usr/include/c++/5/istream" 3
template< class _CharT, class _Traits>
# 58 "/usr/include/c++/5/istream" 3
class basic_istream : virtual public basic_ios< _CharT, _Traits> {
# 62 "/usr/include/c++/5/istream" 3
public: typedef _CharT char_type;
# 63 "/usr/include/c++/5/istream" 3
typedef typename _Traits::int_type int_type;
# 64 "/usr/include/c++/5/istream" 3
typedef typename _Traits::pos_type pos_type;
# 65 "/usr/include/c++/5/istream" 3
typedef typename _Traits::off_type off_type;
# 66 "/usr/include/c++/5/istream" 3
typedef _Traits traits_type;
# 69 "/usr/include/c++/5/istream" 3
typedef basic_streambuf< _CharT, _Traits> __streambuf_type;
# 70 "/usr/include/c++/5/istream" 3
typedef ::std::basic_ios< _CharT, _Traits> __ios_type;
# 71 "/usr/include/c++/5/istream" 3
typedef basic_istream __istream_type;
# 73 "/usr/include/c++/5/istream" 3
typedef num_get< _CharT, istreambuf_iterator< _CharT, _Traits> > __num_get_type;
# 74 "/usr/include/c++/5/istream" 3
typedef ctype< _CharT> __ctype_type;
# 82 "/usr/include/c++/5/istream" 3
protected: ::std::streamsize _M_gcount;
# 93 "/usr/include/c++/5/istream" 3
public: explicit basic_istream(__streambuf_type *__sb) : _M_gcount(((::std::streamsize)0))
# 95 "/usr/include/c++/5/istream" 3
{ (this->init(__sb)); }
# 103 "/usr/include/c++/5/istream" 3
virtual ~basic_istream()
# 104 "/usr/include/c++/5/istream" 3
{ (_M_gcount) = ((::std::streamsize)0); }
# 107 "/usr/include/c++/5/istream" 3
class sentry;
# 108 "/usr/include/c++/5/istream" 3
friend class sentry;
# 120 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(__istream_type &(*__pf)(__istream_type &))
# 121 "/usr/include/c++/5/istream" 3
{ return __pf(*this); }
# 124 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(__ios_type &(*__pf)(__ios_type &))
# 125 "/usr/include/c++/5/istream" 3
{
# 126 "/usr/include/c++/5/istream" 3
__pf(*this);
# 127 "/usr/include/c++/5/istream" 3
return *this;
# 128 "/usr/include/c++/5/istream" 3
}
# 131 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(::std::ios_base &(*__pf)(::std::ios_base &))
# 132 "/usr/include/c++/5/istream" 3
{
# 133 "/usr/include/c++/5/istream" 3
__pf(*this);
# 134 "/usr/include/c++/5/istream" 3
return *this;
# 135 "/usr/include/c++/5/istream" 3
}
# 168 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(bool &__n)
# 169 "/usr/include/c++/5/istream" 3
{ return _M_extract(__n); }
# 172 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(short & __n);
# 175 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(unsigned short &__n)
# 176 "/usr/include/c++/5/istream" 3
{ return _M_extract(__n); }
# 179 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(int & __n);
# 182 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(unsigned &__n)
# 183 "/usr/include/c++/5/istream" 3
{ return _M_extract(__n); }
# 186 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(long &__n)
# 187 "/usr/include/c++/5/istream" 3
{ return _M_extract(__n); }
# 190 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(unsigned long &__n)
# 191 "/usr/include/c++/5/istream" 3
{ return _M_extract(__n); }
# 195 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(long long &__n)
# 196 "/usr/include/c++/5/istream" 3
{ return _M_extract(__n); }
# 199 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(unsigned long long &__n)
# 200 "/usr/include/c++/5/istream" 3
{ return _M_extract(__n); }
# 214 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(float &__f)
# 215 "/usr/include/c++/5/istream" 3
{ return _M_extract(__f); }
# 218 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(double &__f)
# 219 "/usr/include/c++/5/istream" 3
{ return _M_extract(__f); }
# 222 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(long double &__f)
# 223 "/usr/include/c++/5/istream" 3
{ return _M_extract(__f); }
# 235 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(void *&__p)
# 236 "/usr/include/c++/5/istream" 3
{ return _M_extract(__p); }
# 259 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(__streambuf_type * __sb);
# 269 "/usr/include/c++/5/istream" 3
::std::streamsize gcount() const
# 270 "/usr/include/c++/5/istream" 3
{ return _M_gcount; }
# 302 "/usr/include/c++/5/istream" 3
int_type get();
# 316 "/usr/include/c++/5/istream" 3
__istream_type &get(char_type & __c);
# 343 "/usr/include/c++/5/istream" 3
__istream_type &get(char_type * __s, ::std::streamsize __n, char_type __delim);
# 354 "/usr/include/c++/5/istream" 3
__istream_type &get(char_type *__s, ::std::streamsize __n)
# 355 "/usr/include/c++/5/istream" 3
{ return (this->get(__s, __n, (this->widen('\n')))); }
# 377 "/usr/include/c++/5/istream" 3
__istream_type &get(__streambuf_type & __sb, char_type __delim);
# 387 "/usr/include/c++/5/istream" 3
__istream_type &get(__streambuf_type &__sb)
# 388 "/usr/include/c++/5/istream" 3
{ return (this->get(__sb, (this->widen('\n')))); }
# 416 "/usr/include/c++/5/istream" 3
__istream_type &getline(char_type * __s, ::std::streamsize __n, char_type __delim);
# 427 "/usr/include/c++/5/istream" 3
__istream_type &getline(char_type *__s, ::std::streamsize __n)
# 428 "/usr/include/c++/5/istream" 3
{ return (this->getline(__s, __n, (this->widen('\n')))); }
# 451 "/usr/include/c++/5/istream" 3
__istream_type &ignore(::std::streamsize __n, int_type __delim);
# 454 "/usr/include/c++/5/istream" 3
__istream_type &ignore(::std::streamsize __n);
# 457 "/usr/include/c++/5/istream" 3
__istream_type &ignore();
# 468 "/usr/include/c++/5/istream" 3
int_type peek();
# 486 "/usr/include/c++/5/istream" 3
__istream_type &read(char_type * __s, ::std::streamsize __n);
# 505 "/usr/include/c++/5/istream" 3
::std::streamsize readsome(char_type * __s, ::std::streamsize __n);
# 522 "/usr/include/c++/5/istream" 3
__istream_type &putback(char_type __c);
# 538 "/usr/include/c++/5/istream" 3
__istream_type &unget();
# 556 "/usr/include/c++/5/istream" 3
int sync();
# 571 "/usr/include/c++/5/istream" 3
pos_type tellg();
# 586 "/usr/include/c++/5/istream" 3
__istream_type &seekg(pos_type);
# 602 "/usr/include/c++/5/istream" 3
__istream_type &seekg(off_type, ::std::ios_base::seekdir);
# 606 "/usr/include/c++/5/istream" 3
protected: basic_istream() : _M_gcount(((::std::streamsize)0))
# 608 "/usr/include/c++/5/istream" 3
{ (this->init(0)); }
# 639 "/usr/include/c++/5/istream" 3
template< class _ValueT> __istream_type &_M_extract(_ValueT & __v);
# 642 "/usr/include/c++/5/istream" 3
};
# 648 "/usr/include/c++/5/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::getline(char_type * __s, streamsize __n, char_type __delim);
# 653 "/usr/include/c++/5/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::ignore(streamsize __n);
# 658 "/usr/include/c++/5/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::ignore(streamsize __n, int_type __delim);
# 664 "/usr/include/c++/5/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::getline(char_type * __s, streamsize __n, char_type __delim);
# 669 "/usr/include/c++/5/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::ignore(streamsize __n);
# 674 "/usr/include/c++/5/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::ignore(streamsize __n, int_type __delim);
# 685 "/usr/include/c++/5/istream" 3
template< class _CharT, class _Traits>
# 686 "/usr/include/c++/5/istream" 3
class basic_istream< _CharT, _Traits> ::sentry {
# 689 "/usr/include/c++/5/istream" 3
bool _M_ok;
# 693 "/usr/include/c++/5/istream" 3
public: typedef _Traits traits_type;
# 694 "/usr/include/c++/5/istream" 3
typedef basic_streambuf< _CharT, _Traits> __streambuf_type;
# 695 "/usr/include/c++/5/istream" 3
typedef basic_istream __istream_type;
# 696 "/usr/include/c++/5/istream" 3
typedef typename ::std::basic_istream< _CharT, _Traits> ::__ctype_type __ctype_type;
# 697 "/usr/include/c++/5/istream" 3
typedef typename _Traits::int_type __int_type;
# 722 "/usr/include/c++/5/istream" 3
explicit sentry(basic_istream & __is, bool __noskipws = false);
# 734 "/usr/include/c++/5/istream" 3
operator bool() const
# 735 "/usr/include/c++/5/istream" 3
{ return _M_ok; }
# 736 "/usr/include/c++/5/istream" 3
};
# 750 "/usr/include/c++/5/istream" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &operator>>(basic_istream< _CharT, _Traits> & __in, _CharT & __c);
# 754 "/usr/include/c++/5/istream" 3
template< class _Traits> inline basic_istream< char, _Traits> &
# 756 "/usr/include/c++/5/istream" 3
operator>>(basic_istream< char, _Traits> &__in, unsigned char &__c)
# 757 "/usr/include/c++/5/istream" 3
{ return __in >> (reinterpret_cast< char &>(__c)); }
# 759 "/usr/include/c++/5/istream" 3
template< class _Traits> inline basic_istream< char, _Traits> &
# 761 "/usr/include/c++/5/istream" 3
operator>>(basic_istream< char, _Traits> &__in, signed char &__c)
# 762 "/usr/include/c++/5/istream" 3
{ return __in >> (reinterpret_cast< char &>(__c)); }
# 792 "/usr/include/c++/5/istream" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &operator>>(basic_istream< _CharT, _Traits> & __in, _CharT * __s);
# 799 "/usr/include/c++/5/istream" 3
template<> basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & __in, char * __s);
# 801 "/usr/include/c++/5/istream" 3
template< class _Traits> inline basic_istream< char, _Traits> &
# 803 "/usr/include/c++/5/istream" 3
operator>>(basic_istream< char, _Traits> &__in, unsigned char *__s)
# 804 "/usr/include/c++/5/istream" 3
{ return __in >> (reinterpret_cast< char *>(__s)); }
# 806 "/usr/include/c++/5/istream" 3
template< class _Traits> inline basic_istream< char, _Traits> &
# 808 "/usr/include/c++/5/istream" 3
operator>>(basic_istream< char, _Traits> &__in, signed char *__s)
# 809 "/usr/include/c++/5/istream" 3
{ return __in >> (reinterpret_cast< char *>(__s)); }
# 823 "/usr/include/c++/5/istream" 3
template< class _CharT, class _Traits>
# 824 "/usr/include/c++/5/istream" 3
class basic_iostream : public basic_istream< _CharT, _Traits> , public basic_ostream< _CharT, _Traits> {
# 832 "/usr/include/c++/5/istream" 3
public: typedef _CharT char_type;
# 833 "/usr/include/c++/5/istream" 3
typedef typename _Traits::int_type int_type;
# 834 "/usr/include/c++/5/istream" 3
typedef typename _Traits::pos_type pos_type;
# 835 "/usr/include/c++/5/istream" 3
typedef typename _Traits::off_type off_type;
# 836 "/usr/include/c++/5/istream" 3
typedef _Traits traits_type;
# 839 "/usr/include/c++/5/istream" 3
typedef ::std::basic_istream< _CharT, _Traits> __istream_type;
# 840 "/usr/include/c++/5/istream" 3
typedef ::std::basic_ostream< _CharT, _Traits> __ostream_type;
# 849 "/usr/include/c++/5/istream" 3
explicit basic_iostream(basic_streambuf< _CharT, _Traits> *__sb) : __istream_type(__sb), __ostream_type(__sb)
# 850 "/usr/include/c++/5/istream" 3
{ }
# 856 "/usr/include/c++/5/istream" 3
virtual ~basic_iostream() { }
# 859 "/usr/include/c++/5/istream" 3
protected: basic_iostream() : __istream_type(), __ostream_type()
# 860 "/usr/include/c++/5/istream" 3
{ }
# 884 "/usr/include/c++/5/istream" 3
};
# 906 "/usr/include/c++/5/istream" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &ws(basic_istream< _CharT, _Traits> & __is);
# 932 "/usr/include/c++/5/istream" 3
}
# 41 "/usr/include/c++/5/bits/istream.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits>
# 47 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::sentry::sentry(basic_istream &__in, bool __noskip) : _M_ok(false)
# 48 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 49 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 50 "/usr/include/c++/5/bits/istream.tcc" 3
if ((__in.good()))
# 51 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 52 "/usr/include/c++/5/bits/istream.tcc" 3
if ((__in.tie())) {
# 53 "/usr/include/c++/5/bits/istream.tcc" 3
((__in.tie())->flush()); }
# 54 "/usr/include/c++/5/bits/istream.tcc" 3
if ((!__noskip) && ((bool)((__in.flags()) & ios_base::skipws)))
# 55 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 56 "/usr/include/c++/5/bits/istream.tcc" 3
const __int_type __eof = traits_type::eof();
# 57 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (__in.rdbuf());
# 58 "/usr/include/c++/5/bits/istream.tcc" 3
__int_type __c = (__sb->sgetc());
# 60 "/usr/include/c++/5/bits/istream.tcc" 3
const __ctype_type &__ct = __check_facet((__in._M_ctype));
# 61 "/usr/include/c++/5/bits/istream.tcc" 3
while ((!traits_type::eq_int_type(__c, __eof)) && (__ct.is(ctype_base::space, traits_type::to_char_type(__c)))) {
# 64 "/usr/include/c++/5/bits/istream.tcc" 3
__c = (__sb->snextc()); }
# 69 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __eof)) {
# 70 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); }
# 71 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 72 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 74 "/usr/include/c++/5/bits/istream.tcc" 3
if ((__in.good()) && (__err == ::std::ios_base::goodbit)) {
# 75 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_ok) = true; } else
# 77 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 78 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit);
# 79 "/usr/include/c++/5/bits/istream.tcc" 3
(__in.setstate(__err));
# 80 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 81 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 83 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits>
# 84 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _ValueT> basic_istream< _CharT, _Traits> &
# 87 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::_M_extract(_ValueT &__v)
# 88 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 89 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, false);
# 90 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 91 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 92 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 93 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 94 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 95 "/usr/include/c++/5/bits/istream.tcc" 3
const __num_get_type &__ng = __check_facet((this->_M_num_get));
# 96 "/usr/include/c++/5/bits/istream.tcc" 3
(__ng.get(*this, 0, *this, __err, __v));
# 97 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 98 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 99 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 100 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 101 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 102 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 103 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 104 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 105 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 106 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 107 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 108 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 109 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 111 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 114 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::operator>>(short &__n)
# 115 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 118 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, false);
# 119 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 120 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 121 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 122 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 123 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 124 "/usr/include/c++/5/bits/istream.tcc" 3
long __l;
# 125 "/usr/include/c++/5/bits/istream.tcc" 3
const __num_get_type &__ng = __check_facet((this->_M_num_get));
# 126 "/usr/include/c++/5/bits/istream.tcc" 3
(__ng.get(*this, 0, *this, __err, __l));
# 130 "/usr/include/c++/5/bits/istream.tcc" 3
if (__l < ::__gnu_cxx::__numeric_traits_integer< short> ::__min)
# 131 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 132 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit);
# 133 "/usr/include/c++/5/bits/istream.tcc" 3
__n = ::__gnu_cxx::__numeric_traits_integer< short> ::__min;
# 134 "/usr/include/c++/5/bits/istream.tcc" 3
} else {
# 135 "/usr/include/c++/5/bits/istream.tcc" 3
if (__l > ::__gnu_cxx::__numeric_traits_integer< short> ::__max)
# 136 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 137 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit);
# 138 "/usr/include/c++/5/bits/istream.tcc" 3
__n = ::__gnu_cxx::__numeric_traits_integer< short> ::__max;
# 139 "/usr/include/c++/5/bits/istream.tcc" 3
} else {
# 141 "/usr/include/c++/5/bits/istream.tcc" 3
__n = ((short)__l); } }
# 142 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 143 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 144 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 145 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 146 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 147 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 148 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 149 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 150 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 151 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 152 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 153 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 154 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 156 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 159 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::operator>>(int &__n)
# 160 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 163 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, false);
# 164 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 165 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 166 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 167 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 168 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 169 "/usr/include/c++/5/bits/istream.tcc" 3
long __l;
# 170 "/usr/include/c++/5/bits/istream.tcc" 3
const __num_get_type &__ng = __check_facet((this->_M_num_get));
# 171 "/usr/include/c++/5/bits/istream.tcc" 3
(__ng.get(*this, 0, *this, __err, __l));
# 175 "/usr/include/c++/5/bits/istream.tcc" 3
if (__l < ::__gnu_cxx::__numeric_traits_integer< int> ::__min)
# 176 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 177 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit);
# 178 "/usr/include/c++/5/bits/istream.tcc" 3
__n = ::__gnu_cxx::__numeric_traits_integer< int> ::__min;
# 179 "/usr/include/c++/5/bits/istream.tcc" 3
} else {
# 180 "/usr/include/c++/5/bits/istream.tcc" 3
if (__l > ::__gnu_cxx::__numeric_traits_integer< int> ::__max)
# 181 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 182 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit);
# 183 "/usr/include/c++/5/bits/istream.tcc" 3
__n = ::__gnu_cxx::__numeric_traits_integer< int> ::__max;
# 184 "/usr/include/c++/5/bits/istream.tcc" 3
} else {
# 186 "/usr/include/c++/5/bits/istream.tcc" 3
__n = ((int)__l); } }
# 187 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 188 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 189 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 190 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 191 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 192 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 193 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 194 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 195 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 196 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 197 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 198 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 199 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 201 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 204 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::operator>>(__streambuf_type *__sbout)
# 205 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 206 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 207 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, false);
# 208 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb && __sbout)
# 209 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 210 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 211 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 212 "/usr/include/c++/5/bits/istream.tcc" 3
bool __ineof;
# 213 "/usr/include/c++/5/bits/istream.tcc" 3
if (!__copy_streambufs_eof((this->rdbuf()), __sbout, __ineof)) {
# 214 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 215 "/usr/include/c++/5/bits/istream.tcc" 3
if (__ineof) {
# 216 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); }
# 217 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 218 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 219 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 220 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::failbit));
# 221 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 222 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 223 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 224 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::failbit)); }
# 225 "/usr/include/c++/5/bits/istream.tcc" 3
} else {
# 226 "/usr/include/c++/5/bits/istream.tcc" 3
if (!__sbout) {
# 227 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); } }
# 228 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 229 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 230 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 231 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 233 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> typename basic_istream< _CharT, _Traits> ::int_type
# 236 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::get()
# 237 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 238 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 239 "/usr/include/c++/5/bits/istream.tcc" 3
int_type __c = __eof;
# 240 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 241 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 242 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 243 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 244 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 245 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 246 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 247 "/usr/include/c++/5/bits/istream.tcc" 3
__c = ((this->rdbuf())->sbumpc());
# 249 "/usr/include/c++/5/bits/istream.tcc" 3
if (!traits_type::eq_int_type(__c, __eof)) {
# 250 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (1); } else {
# 252 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); }
# 253 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 254 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 255 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 256 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 257 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 258 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 259 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 260 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 261 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 262 "/usr/include/c++/5/bits/istream.tcc" 3
if (!(_M_gcount)) {
# 263 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 264 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 265 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 266 "/usr/include/c++/5/bits/istream.tcc" 3
return __c;
# 267 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 269 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 272 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::get(char_type &__c)
# 273 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 274 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 275 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 276 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 277 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 278 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 279 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 280 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 281 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __cb = ((this->rdbuf())->sbumpc());
# 283 "/usr/include/c++/5/bits/istream.tcc" 3
if (!traits_type::eq_int_type(__cb, traits_type::eof()))
# 284 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 285 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (1);
# 286 "/usr/include/c++/5/bits/istream.tcc" 3
__c = traits_type::to_char_type(__cb);
# 287 "/usr/include/c++/5/bits/istream.tcc" 3
} else {
# 289 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); }
# 290 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 291 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 292 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 293 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 294 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 295 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 296 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 297 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 298 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 299 "/usr/include/c++/5/bits/istream.tcc" 3
if (!(_M_gcount)) {
# 300 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 301 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 302 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 303 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 304 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 306 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 309 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::get(char_type *__s, ::std::streamsize __n, char_type __delim)
# 310 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 311 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 312 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 313 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 314 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 315 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 316 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 317 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 318 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __idelim = traits_type::to_int_type(__delim);
# 319 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 320 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 321 "/usr/include/c++/5/bits/istream.tcc" 3
int_type __c = (__sb->sgetc());
# 323 "/usr/include/c++/5/bits/istream.tcc" 3
while ((((_M_gcount) + (1)) < __n) && (!traits_type::eq_int_type(__c, __eof)) && (!traits_type::eq_int_type(__c, __idelim)))
# 326 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 327 "/usr/include/c++/5/bits/istream.tcc" 3
(*(__s++)) = traits_type::to_char_type(__c);
# 328 "/usr/include/c++/5/bits/istream.tcc" 3
++(_M_gcount);
# 329 "/usr/include/c++/5/bits/istream.tcc" 3
__c = (__sb->snextc());
# 330 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 331 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __eof)) {
# 332 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); }
# 333 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 334 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 335 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 336 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 337 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 338 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 339 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 340 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 341 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 344 "/usr/include/c++/5/bits/istream.tcc" 3
if (__n > (0)) {
# 345 "/usr/include/c++/5/bits/istream.tcc" 3
(*__s) = char_type(); }
# 346 "/usr/include/c++/5/bits/istream.tcc" 3
if (!(_M_gcount)) {
# 347 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 348 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 349 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 350 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 351 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 353 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 356 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::get(__streambuf_type &__sb, char_type __delim)
# 357 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 358 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 359 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 360 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 361 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 362 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 363 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 364 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 365 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __idelim = traits_type::to_int_type(__delim);
# 366 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 367 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__this_sb = (this->rdbuf());
# 368 "/usr/include/c++/5/bits/istream.tcc" 3
int_type __c = (__this_sb->sgetc());
# 369 "/usr/include/c++/5/bits/istream.tcc" 3
char_type __c2 = traits_type::to_char_type(__c);
# 371 "/usr/include/c++/5/bits/istream.tcc" 3
while ((!traits_type::eq_int_type(__c, __eof)) && (!traits_type::eq_int_type(__c, __idelim)) && (!traits_type::eq_int_type((__sb.sputc(__c2)), __eof)))
# 374 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 375 "/usr/include/c++/5/bits/istream.tcc" 3
++(_M_gcount);
# 376 "/usr/include/c++/5/bits/istream.tcc" 3
__c = (__this_sb->snextc());
# 377 "/usr/include/c++/5/bits/istream.tcc" 3
__c2 = traits_type::to_char_type(__c);
# 378 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 379 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __eof)) {
# 380 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); }
# 381 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 382 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 383 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 384 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 385 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 386 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 387 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 388 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 389 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 390 "/usr/include/c++/5/bits/istream.tcc" 3
if (!(_M_gcount)) {
# 391 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 392 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 393 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 394 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 395 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 397 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 400 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::getline(char_type *__s, ::std::streamsize __n, char_type __delim)
# 401 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 402 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 403 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 404 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 405 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 406 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 407 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 408 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 409 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __idelim = traits_type::to_int_type(__delim);
# 410 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 411 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 412 "/usr/include/c++/5/bits/istream.tcc" 3
int_type __c = (__sb->sgetc());
# 414 "/usr/include/c++/5/bits/istream.tcc" 3
while ((((_M_gcount) + (1)) < __n) && (!traits_type::eq_int_type(__c, __eof)) && (!traits_type::eq_int_type(__c, __idelim)))
# 417 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 418 "/usr/include/c++/5/bits/istream.tcc" 3
(*(__s++)) = traits_type::to_char_type(__c);
# 419 "/usr/include/c++/5/bits/istream.tcc" 3
__c = (__sb->snextc());
# 420 "/usr/include/c++/5/bits/istream.tcc" 3
++(_M_gcount);
# 421 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 422 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __eof)) {
# 423 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); } else
# 425 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 426 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __idelim))
# 427 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 428 "/usr/include/c++/5/bits/istream.tcc" 3
(__sb->sbumpc());
# 429 "/usr/include/c++/5/bits/istream.tcc" 3
++(_M_gcount);
# 430 "/usr/include/c++/5/bits/istream.tcc" 3
} else {
# 432 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 433 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 434 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 435 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 436 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 437 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 438 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 439 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 440 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 441 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 442 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 445 "/usr/include/c++/5/bits/istream.tcc" 3
if (__n > (0)) {
# 446 "/usr/include/c++/5/bits/istream.tcc" 3
(*__s) = char_type(); }
# 447 "/usr/include/c++/5/bits/istream.tcc" 3
if (!(_M_gcount)) {
# 448 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 449 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 450 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 451 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 452 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 457 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> typename basic_istream< _CharT, _Traits> ::__istream_type &
# 460 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::ignore()
# 461 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 462 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 463 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 464 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 465 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 466 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 467 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 468 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 469 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 470 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 472 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type((__sb->sbumpc()), __eof)) {
# 473 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); } else {
# 475 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (1); }
# 476 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 477 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 478 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 479 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 480 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 481 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 482 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 483 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 484 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 485 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 486 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 487 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 488 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 490 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 493 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::ignore(::std::streamsize __n)
# 494 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 495 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 496 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 497 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb && (__n > (0)))
# 498 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 499 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 500 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 501 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 502 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 503 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 504 "/usr/include/c++/5/bits/istream.tcc" 3
int_type __c = (__sb->sgetc());
# 513 "/usr/include/c++/5/bits/istream.tcc" 3
bool __large_ignore = false;
# 514 "/usr/include/c++/5/bits/istream.tcc" 3
while (true)
# 515 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 516 "/usr/include/c++/5/bits/istream.tcc" 3
while (((_M_gcount) < __n) && (!traits_type::eq_int_type(__c, __eof)))
# 518 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 519 "/usr/include/c++/5/bits/istream.tcc" 3
++(_M_gcount);
# 520 "/usr/include/c++/5/bits/istream.tcc" 3
__c = (__sb->snextc());
# 521 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 522 "/usr/include/c++/5/bits/istream.tcc" 3
if ((__n == ::__gnu_cxx::__numeric_traits_integer< long> ::__max) && (!traits_type::eq_int_type(__c, __eof)))
# 524 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 525 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = ::__gnu_cxx::__numeric_traits_integer< long> ::__min;
# 527 "/usr/include/c++/5/bits/istream.tcc" 3
__large_ignore = true;
# 528 "/usr/include/c++/5/bits/istream.tcc" 3
} else {
# 530 "/usr/include/c++/5/bits/istream.tcc" 3
break; }
# 531 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 533 "/usr/include/c++/5/bits/istream.tcc" 3
if (__large_ignore) {
# 534 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = ::__gnu_cxx::__numeric_traits_integer< long> ::__max; }
# 536 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __eof)) {
# 537 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); }
# 538 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 539 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 540 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 541 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 542 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 543 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 544 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 545 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 546 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 547 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 548 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 549 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 550 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 552 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 555 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::ignore(::std::streamsize __n, int_type __delim)
# 556 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 557 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 558 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 559 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb && (__n > (0)))
# 560 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 561 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 562 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 563 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 564 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 565 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 566 "/usr/include/c++/5/bits/istream.tcc" 3
int_type __c = (__sb->sgetc());
# 569 "/usr/include/c++/5/bits/istream.tcc" 3
bool __large_ignore = false;
# 570 "/usr/include/c++/5/bits/istream.tcc" 3
while (true)
# 571 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 572 "/usr/include/c++/5/bits/istream.tcc" 3
while (((_M_gcount) < __n) && (!traits_type::eq_int_type(__c, __eof)) && (!traits_type::eq_int_type(__c, __delim)))
# 575 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 576 "/usr/include/c++/5/bits/istream.tcc" 3
++(_M_gcount);
# 577 "/usr/include/c++/5/bits/istream.tcc" 3
__c = (__sb->snextc());
# 578 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 579 "/usr/include/c++/5/bits/istream.tcc" 3
if ((__n == ::__gnu_cxx::__numeric_traits_integer< long> ::__max) && (!traits_type::eq_int_type(__c, __eof)) && (!traits_type::eq_int_type(__c, __delim)))
# 582 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 583 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = ::__gnu_cxx::__numeric_traits_integer< long> ::__min;
# 585 "/usr/include/c++/5/bits/istream.tcc" 3
__large_ignore = true;
# 586 "/usr/include/c++/5/bits/istream.tcc" 3
} else {
# 588 "/usr/include/c++/5/bits/istream.tcc" 3
break; }
# 589 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 591 "/usr/include/c++/5/bits/istream.tcc" 3
if (__large_ignore) {
# 592 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = ::__gnu_cxx::__numeric_traits_integer< long> ::__max; }
# 594 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __eof)) {
# 595 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); } else {
# 596 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __delim))
# 597 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 598 "/usr/include/c++/5/bits/istream.tcc" 3
if ((_M_gcount) < ::__gnu_cxx::__numeric_traits_integer< long> ::__max) {
# 600 "/usr/include/c++/5/bits/istream.tcc" 3
++(_M_gcount); }
# 601 "/usr/include/c++/5/bits/istream.tcc" 3
(__sb->sbumpc());
# 602 "/usr/include/c++/5/bits/istream.tcc" 3
} }
# 603 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 604 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 605 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 606 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 607 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 608 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 609 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 610 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 611 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 612 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 613 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 614 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 615 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 617 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> typename basic_istream< _CharT, _Traits> ::int_type
# 620 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::peek()
# 621 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 622 "/usr/include/c++/5/bits/istream.tcc" 3
int_type __c = traits_type::eof();
# 623 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 624 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 625 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 626 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 627 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 628 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 629 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 630 "/usr/include/c++/5/bits/istream.tcc" 3
__c = ((this->rdbuf())->sgetc());
# 631 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, traits_type::eof())) {
# 632 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); }
# 633 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 634 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 635 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 636 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 637 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 638 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 639 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 640 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 641 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 642 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 643 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 644 "/usr/include/c++/5/bits/istream.tcc" 3
return __c;
# 645 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 647 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 650 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::read(char_type *__s, ::std::streamsize __n)
# 651 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 652 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 653 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 654 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 655 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 656 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 657 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 658 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 659 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = ((this->rdbuf())->sgetn(__s, __n));
# 660 "/usr/include/c++/5/bits/istream.tcc" 3
if ((_M_gcount) != __n) {
# 661 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ((::std::ios_base::eofbit | ::std::ios_base::failbit))); }
# 662 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 663 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 664 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 665 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 666 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 667 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 668 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 669 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 670 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 671 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 672 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 673 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 674 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 676 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> streamsize
# 679 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::readsome(char_type *__s, ::std::streamsize __n)
# 680 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 681 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 682 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 683 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 684 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 685 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 686 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 687 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 689 "/usr/include/c++/5/bits/istream.tcc" 3
const ::std::streamsize __num = ((this->rdbuf())->in_avail());
# 690 "/usr/include/c++/5/bits/istream.tcc" 3
if (__num > (0)) {
# 691 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = ((this->rdbuf())->sgetn(__s, std::min(__num, __n))); } else {
# 692 "/usr/include/c++/5/bits/istream.tcc" 3
if (__num == (-1)) {
# 693 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); } }
# 694 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 695 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 696 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 697 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 698 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 699 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 700 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 701 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 702 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 703 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 704 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 705 "/usr/include/c++/5/bits/istream.tcc" 3
return _M_gcount;
# 706 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 708 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 711 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::putback(char_type __c)
# 712 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 715 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 717 "/usr/include/c++/5/bits/istream.tcc" 3
(this->clear((this->rdstate()) & ((~::std::ios_base::eofbit))));
# 718 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 719 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 720 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 721 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 722 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 723 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 724 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 725 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 726 "/usr/include/c++/5/bits/istream.tcc" 3
if ((!__sb) || traits_type::eq_int_type((__sb->sputbackc(__c)), __eof)) {
# 728 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::badbit); }
# 729 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 730 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 731 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 732 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 733 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 734 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 735 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 736 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 737 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 738 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 739 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 740 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 741 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 743 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> typename basic_istream< _CharT, _Traits> ::__istream_type &
# 746 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::unget()
# 747 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 750 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 752 "/usr/include/c++/5/bits/istream.tcc" 3
(this->clear((this->rdstate()) & ((~::std::ios_base::eofbit))));
# 753 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 754 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 755 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 756 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 757 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 758 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 759 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 760 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 761 "/usr/include/c++/5/bits/istream.tcc" 3
if ((!__sb) || traits_type::eq_int_type((__sb->sungetc()), __eof)) {
# 763 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::badbit); }
# 764 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 765 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 766 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 767 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 768 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 769 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 770 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 771 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 772 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 773 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 774 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 775 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 776 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 778 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> int
# 781 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::sync()
# 782 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 785 "/usr/include/c++/5/bits/istream.tcc" 3
int __ret = (-1);
# 786 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 787 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 788 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 789 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 790 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 791 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 792 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 793 "/usr/include/c++/5/bits/istream.tcc" 3
if (__sb)
# 794 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 795 "/usr/include/c++/5/bits/istream.tcc" 3
if ((__sb->pubsync()) == (-1)) {
# 796 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::badbit); } else {
# 798 "/usr/include/c++/5/bits/istream.tcc" 3
__ret = 0; }
# 799 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 800 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 801 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 802 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 803 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 804 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 805 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 806 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 807 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 808 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 809 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 810 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 811 "/usr/include/c++/5/bits/istream.tcc" 3
return __ret;
# 812 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 814 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> typename basic_istream< _CharT, _Traits> ::pos_type
# 817 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::tellg()
# 818 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 821 "/usr/include/c++/5/bits/istream.tcc" 3
pos_type __ret = ((pos_type)(-1));
# 822 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 823 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 824 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 825 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 826 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 827 "/usr/include/c++/5/bits/istream.tcc" 3
if (!(this->fail())) {
# 828 "/usr/include/c++/5/bits/istream.tcc" 3
__ret = ((this->rdbuf())->pubseekoff(0, ios_base::cur, ios_base::in)); }
# 830 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 831 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 832 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 833 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 834 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 835 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 836 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 837 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 838 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 839 "/usr/include/c++/5/bits/istream.tcc" 3
return __ret;
# 840 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 842 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 845 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::seekg(pos_type __pos)
# 846 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 850 "/usr/include/c++/5/bits/istream.tcc" 3
(this->clear((this->rdstate()) & ((~::std::ios_base::eofbit))));
# 851 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 852 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 853 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 854 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 855 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 856 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 857 "/usr/include/c++/5/bits/istream.tcc" 3
if (!(this->fail()))
# 858 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 860 "/usr/include/c++/5/bits/istream.tcc" 3
const pos_type __p = ((this->rdbuf())->pubseekpos(__pos, ios_base::in));
# 864 "/usr/include/c++/5/bits/istream.tcc" 3
if (__p == ((pos_type)((off_type)(-1)))) {
# 865 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 866 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 867 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 868 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 869 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 870 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 871 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 872 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 873 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 874 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 875 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 876 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 877 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 878 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 879 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 881 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 884 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::seekg(off_type __off, ::std::ios_base::seekdir __dir)
# 885 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 889 "/usr/include/c++/5/bits/istream.tcc" 3
(this->clear((this->rdstate()) & ((~::std::ios_base::eofbit))));
# 890 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 891 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 892 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 893 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 894 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 895 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 896 "/usr/include/c++/5/bits/istream.tcc" 3
if (!(this->fail()))
# 897 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 899 "/usr/include/c++/5/bits/istream.tcc" 3
const pos_type __p = ((this->rdbuf())->pubseekoff(__off, __dir, ios_base::in));
# 903 "/usr/include/c++/5/bits/istream.tcc" 3
if (__p == ((pos_type)((off_type)(-1)))) {
# 904 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 905 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 906 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 907 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 908 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 909 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 910 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 911 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 912 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 913 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 914 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 915 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 916 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 917 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 918 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 921 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 923 "/usr/include/c++/5/bits/istream.tcc" 3
operator>>(basic_istream< _CharT, _Traits> &__in, _CharT &__c)
# 924 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 925 "/usr/include/c++/5/bits/istream.tcc" 3
typedef basic_istream< _CharT, _Traits> __istream_type;
# 926 "/usr/include/c++/5/bits/istream.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::int_type __int_type;
# 928 "/usr/include/c++/5/bits/istream.tcc" 3
typename basic_istream< _CharT, _Traits> ::sentry __cerb(__in, false);
# 929 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 930 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 931 "/usr/include/c++/5/bits/istream.tcc" 3
ios_base::iostate __err = ios_base::goodbit;
# 932 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 933 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 934 "/usr/include/c++/5/bits/istream.tcc" 3
const __int_type __cb = ((__in.rdbuf())->sbumpc());
# 935 "/usr/include/c++/5/bits/istream.tcc" 3
if (!_Traits::eq_int_type(__cb, _Traits::eof())) {
# 936 "/usr/include/c++/5/bits/istream.tcc" 3
__c = _Traits::to_char_type(__cb); } else {
# 938 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ((ios_base::eofbit | ios_base::failbit))); }
# 939 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 940 "/usr/include/c++/5/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 941 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 942 "/usr/include/c++/5/bits/istream.tcc" 3
(__in._M_setstate(ios_base::badbit));
# 943 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 944 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 945 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 946 "/usr/include/c++/5/bits/istream.tcc" 3
{ (__in._M_setstate(ios_base::badbit)); }
# 947 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 948 "/usr/include/c++/5/bits/istream.tcc" 3
(__in.setstate(__err)); }
# 949 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 950 "/usr/include/c++/5/bits/istream.tcc" 3
return __in;
# 951 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 953 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 955 "/usr/include/c++/5/bits/istream.tcc" 3
operator>>(basic_istream< _CharT, _Traits> &__in, _CharT *__s)
# 956 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 957 "/usr/include/c++/5/bits/istream.tcc" 3
typedef basic_istream< _CharT, _Traits> __istream_type;
# 958 "/usr/include/c++/5/bits/istream.tcc" 3
typedef basic_streambuf< _CharT, _Traits> __streambuf_type;
# 959 "/usr/include/c++/5/bits/istream.tcc" 3
typedef typename _Traits::int_type int_type;
# 960 "/usr/include/c++/5/bits/istream.tcc" 3
typedef _CharT char_type;
# 961 "/usr/include/c++/5/bits/istream.tcc" 3
typedef ctype< _CharT> __ctype_type;
# 963 "/usr/include/c++/5/bits/istream.tcc" 3
streamsize __extracted = (0);
# 964 "/usr/include/c++/5/bits/istream.tcc" 3
ios_base::iostate __err = ios_base::goodbit;
# 965 "/usr/include/c++/5/bits/istream.tcc" 3
typename basic_istream< _CharT, _Traits> ::sentry __cerb(__in, false);
# 966 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 967 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 968 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 969 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 971 "/usr/include/c++/5/bits/istream.tcc" 3
streamsize __num = (__in.width());
# 972 "/usr/include/c++/5/bits/istream.tcc" 3
if (__num <= (0)) {
# 973 "/usr/include/c++/5/bits/istream.tcc" 3
__num = __gnu_cxx::__numeric_traits_integer< long> ::__max; }
# 975 "/usr/include/c++/5/bits/istream.tcc" 3
const __ctype_type &__ct = use_facet< ctype< _CharT> > ((__in.getloc()));
# 977 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = _Traits::eof();
# 978 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (__in.rdbuf());
# 979 "/usr/include/c++/5/bits/istream.tcc" 3
int_type __c = (__sb->sgetc());
# 981 "/usr/include/c++/5/bits/istream.tcc" 3
while ((__extracted < (__num - (1))) && (!_Traits::eq_int_type(__c, __eof)) && (!(__ct.is(ctype_base::space, _Traits::to_char_type(__c)))))
# 985 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 986 "/usr/include/c++/5/bits/istream.tcc" 3
(*(__s++)) = _Traits::to_char_type(__c);
# 987 "/usr/include/c++/5/bits/istream.tcc" 3
++__extracted;
# 988 "/usr/include/c++/5/bits/istream.tcc" 3
__c = (__sb->snextc());
# 989 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 990 "/usr/include/c++/5/bits/istream.tcc" 3
if (_Traits::eq_int_type(__c, __eof)) {
# 991 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ios_base::eofbit); }
# 995 "/usr/include/c++/5/bits/istream.tcc" 3
(*__s) = char_type();
# 996 "/usr/include/c++/5/bits/istream.tcc" 3
(__in.width(0));
# 997 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 998 "/usr/include/c++/5/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 999 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 1000 "/usr/include/c++/5/bits/istream.tcc" 3
(__in._M_setstate(ios_base::badbit));
# 1001 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 1002 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 1003 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 1004 "/usr/include/c++/5/bits/istream.tcc" 3
{ (__in._M_setstate(ios_base::badbit)); }
# 1005 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 1006 "/usr/include/c++/5/bits/istream.tcc" 3
if (!__extracted) {
# 1007 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ios_base::failbit); }
# 1008 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 1009 "/usr/include/c++/5/bits/istream.tcc" 3
(__in.setstate(__err)); }
# 1010 "/usr/include/c++/5/bits/istream.tcc" 3
return __in;
# 1011 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 1014 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 1016 "/usr/include/c++/5/bits/istream.tcc" 3
ws(basic_istream< _CharT, _Traits> &__in)
# 1017 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 1018 "/usr/include/c++/5/bits/istream.tcc" 3
typedef basic_istream< _CharT, _Traits> __istream_type;
# 1019 "/usr/include/c++/5/bits/istream.tcc" 3
typedef basic_streambuf< _CharT, _Traits> __streambuf_type;
# 1020 "/usr/include/c++/5/bits/istream.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::int_type __int_type;
# 1021 "/usr/include/c++/5/bits/istream.tcc" 3
typedef ctype< _CharT> __ctype_type;
# 1023 "/usr/include/c++/5/bits/istream.tcc" 3
const __ctype_type &__ct = use_facet< ctype< _CharT> > ((__in.getloc()));
# 1024 "/usr/include/c++/5/bits/istream.tcc" 3
const __int_type __eof = _Traits::eof();
# 1025 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (__in.rdbuf());
# 1026 "/usr/include/c++/5/bits/istream.tcc" 3
__int_type __c = (__sb->sgetc());
# 1028 "/usr/include/c++/5/bits/istream.tcc" 3
while ((!_Traits::eq_int_type(__c, __eof)) && (__ct.is(ctype_base::space, _Traits::to_char_type(__c)))) {
# 1030 "/usr/include/c++/5/bits/istream.tcc" 3
__c = (__sb->snextc()); }
# 1032 "/usr/include/c++/5/bits/istream.tcc" 3
if (_Traits::eq_int_type(__c, __eof)) {
# 1033 "/usr/include/c++/5/bits/istream.tcc" 3
(__in.setstate(ios_base::eofbit)); }
# 1034 "/usr/include/c++/5/bits/istream.tcc" 3
return __in;
# 1035 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 1040 "/usr/include/c++/5/bits/istream.tcc" 3
extern template class basic_istream< char, char_traits< char> > ;
# 1041 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &ws(basic_istream< char, char_traits< char> > & __is);
# 1042 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & __in, char & __c);
# 1043 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > &, char *);
# 1044 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & __in, unsigned char & __c);
# 1045 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & __in, signed char & __c);
# 1046 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & __in, unsigned char * __s);
# 1047 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & __in, signed char * __s);
# 1049 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned short & __v);
# 1050 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned & __v);
# 1051 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long & __v);
# 1052 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned long & __v);
# 1053 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(bool & __v);
# 1055 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long long & __v);
# 1056 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned long long & __v);
# 1058 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(float & __v);
# 1059 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(double & __v);
# 1060 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long double & __v);
# 1061 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(void *& __v);
# 1063 "/usr/include/c++/5/bits/istream.tcc" 3
extern template class basic_iostream< char, char_traits< char> > ;
# 1066 "/usr/include/c++/5/bits/istream.tcc" 3
extern template class basic_istream< wchar_t, char_traits< wchar_t> > ;
# 1067 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &ws(basic_istream< wchar_t, char_traits< wchar_t> > & __is);
# 1068 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &operator>>(basic_istream< wchar_t, char_traits< wchar_t> > & __in, wchar_t & __c);
# 1069 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &operator>>(basic_istream< wchar_t, char_traits< wchar_t> > &, wchar_t *);
# 1071 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned short & __v);
# 1072 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned & __v);
# 1073 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long & __v);
# 1074 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned long & __v);
# 1075 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(bool & __v);
# 1077 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long long & __v);
# 1078 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned long long & __v);
# 1080 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(float & __v);
# 1081 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(double & __v);
# 1082 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long double & __v);
# 1083 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(void *& __v);
# 1085 "/usr/include/c++/5/bits/istream.tcc" 3
extern template class basic_iostream< wchar_t, char_traits< wchar_t> > ;
# 1090 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 37 "/usr/include/c++/5/bits/stream_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 47 "/usr/include/c++/5/bits/stream_iterator.h" 3
template< class _Tp, class _CharT = char, class
# 48 "/usr/include/c++/5/bits/stream_iterator.h" 3
_Traits = char_traits< _CharT> , class _Dist = ptrdiff_t>
# 49 "/usr/include/c++/5/bits/stream_iterator.h" 3
class istream_iterator : public iterator< input_iterator_tag, _Tp, _Dist, const _Tp *, const _Tp &> {
# 53 "/usr/include/c++/5/bits/stream_iterator.h" 3
public: typedef _CharT char_type;
# 54 "/usr/include/c++/5/bits/stream_iterator.h" 3
typedef _Traits traits_type;
# 55 "/usr/include/c++/5/bits/stream_iterator.h" 3
typedef basic_istream< _CharT, _Traits> istream_type;
# 58 "/usr/include/c++/5/bits/stream_iterator.h" 3
private: istream_type *_M_stream;
# 59 "/usr/include/c++/5/bits/stream_iterator.h" 3
_Tp _M_value;
# 60 "/usr/include/c++/5/bits/stream_iterator.h" 3
bool _M_ok;
# 64 "/usr/include/c++/5/bits/stream_iterator.h" 3
public: istream_iterator() : _M_stream((0)), _M_value(), _M_ok(false)
# 65 "/usr/include/c++/5/bits/stream_iterator.h" 3
{ }
# 68 "/usr/include/c++/5/bits/stream_iterator.h" 3
istream_iterator(istream_type &__s) : _M_stream((&__s))
# 70 "/usr/include/c++/5/bits/stream_iterator.h" 3
{ _M_read(); }
# 72 "/usr/include/c++/5/bits/stream_iterator.h" 3
istream_iterator(const istream_iterator &__obj) : _M_stream(__obj._M_stream), _M_value(__obj._M_value), _M_ok(__obj._M_ok)
# 75 "/usr/include/c++/5/bits/stream_iterator.h" 3
{ }
# 78 "/usr/include/c++/5/bits/stream_iterator.h" 3
const _Tp &operator*() const
# 79 "/usr/include/c++/5/bits/stream_iterator.h" 3
{
# 82 "/usr/include/c++/5/bits/stream_iterator.h" 3
;
# 83 "/usr/include/c++/5/bits/stream_iterator.h" 3
return _M_value;
# 84 "/usr/include/c++/5/bits/stream_iterator.h" 3
}
# 87 "/usr/include/c++/5/bits/stream_iterator.h" 3
const _Tp *operator->() const { return &operator*(); }
# 90 "/usr/include/c++/5/bits/stream_iterator.h" 3
istream_iterator &operator++()
# 91 "/usr/include/c++/5/bits/stream_iterator.h" 3
{
# 94 "/usr/include/c++/5/bits/stream_iterator.h" 3
;
# 95 "/usr/include/c++/5/bits/stream_iterator.h" 3
_M_read();
# 96 "/usr/include/c++/5/bits/stream_iterator.h" 3
return *this;
# 97 "/usr/include/c++/5/bits/stream_iterator.h" 3
}
# 100 "/usr/include/c++/5/bits/stream_iterator.h" 3
istream_iterator operator++(int)
# 101 "/usr/include/c++/5/bits/stream_iterator.h" 3
{
# 104 "/usr/include/c++/5/bits/stream_iterator.h" 3
;
# 105 "/usr/include/c++/5/bits/stream_iterator.h" 3
istream_iterator __tmp = *this;
# 106 "/usr/include/c++/5/bits/stream_iterator.h" 3
_M_read();
# 107 "/usr/include/c++/5/bits/stream_iterator.h" 3
return __tmp;
# 108 "/usr/include/c++/5/bits/stream_iterator.h" 3
}
# 111 "/usr/include/c++/5/bits/stream_iterator.h" 3
bool _M_equal(const istream_iterator &__x) const
# 112 "/usr/include/c++/5/bits/stream_iterator.h" 3
{ return ((_M_ok) == (__x._M_ok)) && ((!(_M_ok)) || ((_M_stream) == (__x._M_stream))); }
# 116 "/usr/include/c++/5/bits/stream_iterator.h" 3
private: void _M_read()
# 117 "/usr/include/c++/5/bits/stream_iterator.h" 3
{
# 118 "/usr/include/c++/5/bits/stream_iterator.h" 3
(_M_ok) = (((_M_stream) && (*(_M_stream))) ? true : false);
# 119 "/usr/include/c++/5/bits/stream_iterator.h" 3
if (_M_ok)
# 120 "/usr/include/c++/5/bits/stream_iterator.h" 3
{
# 121 "/usr/include/c++/5/bits/stream_iterator.h" 3
(*(_M_stream)) >> (_M_value);
# 122 "/usr/include/c++/5/bits/stream_iterator.h" 3
(_M_ok) = ((*(_M_stream)) ? true : false);
# 123 "/usr/include/c++/5/bits/stream_iterator.h" 3
}
# 124 "/usr/include/c++/5/bits/stream_iterator.h" 3
}
# 125 "/usr/include/c++/5/bits/stream_iterator.h" 3
};
# 128 "/usr/include/c++/5/bits/stream_iterator.h" 3
template< class _Tp, class _CharT, class _Traits, class _Dist> inline bool
# 130 "/usr/include/c++/5/bits/stream_iterator.h" 3
operator==(const istream_iterator< _Tp, _CharT, _Traits, _Dist> &__x, const istream_iterator< _Tp, _CharT, _Traits, _Dist> &
# 131 "/usr/include/c++/5/bits/stream_iterator.h" 3
__y)
# 132 "/usr/include/c++/5/bits/stream_iterator.h" 3
{ return (__x._M_equal(__y)); }
# 135 "/usr/include/c++/5/bits/stream_iterator.h" 3
template< class _Tp, class _CharT, class _Traits, class _Dist> inline bool
# 137 "/usr/include/c++/5/bits/stream_iterator.h" 3
operator!=(const istream_iterator< _Tp, _CharT, _Traits, _Dist> &__x, const istream_iterator< _Tp, _CharT, _Traits, _Dist> &
# 138 "/usr/include/c++/5/bits/stream_iterator.h" 3
__y)
# 139 "/usr/include/c++/5/bits/stream_iterator.h" 3
{ return !(__x._M_equal(__y)); }
# 152 "/usr/include/c++/5/bits/stream_iterator.h" 3
template< class _Tp, class _CharT = char, class
# 153 "/usr/include/c++/5/bits/stream_iterator.h" 3
_Traits = char_traits< _CharT> >
# 154 "/usr/include/c++/5/bits/stream_iterator.h" 3
class ostream_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 160 "/usr/include/c++/5/bits/stream_iterator.h" 3
public: typedef _CharT char_type;
# 161 "/usr/include/c++/5/bits/stream_iterator.h" 3
typedef _Traits traits_type;
# 162 "/usr/include/c++/5/bits/stream_iterator.h" 3
typedef basic_ostream< _CharT, _Traits> ostream_type;
# 166 "/usr/include/c++/5/bits/stream_iterator.h" 3
private: ostream_type *_M_stream;
# 167 "/usr/include/c++/5/bits/stream_iterator.h" 3
const _CharT *_M_string;
# 171 "/usr/include/c++/5/bits/stream_iterator.h" 3
public: ostream_iterator(ostream_type &__s) : _M_stream((&__s)), _M_string((0)) { }
# 183 "/usr/include/c++/5/bits/stream_iterator.h" 3
ostream_iterator(ostream_type &__s, const _CharT *__c) : _M_stream((&__s)), _M_string(__c)
# 184 "/usr/include/c++/5/bits/stream_iterator.h" 3
{ }
# 187 "/usr/include/c++/5/bits/stream_iterator.h" 3
ostream_iterator(const ostream_iterator &__obj) : _M_stream(__obj._M_stream), _M_string(__obj._M_string)
# 188 "/usr/include/c++/5/bits/stream_iterator.h" 3
{ }
# 193 "/usr/include/c++/5/bits/stream_iterator.h" 3
ostream_iterator &operator=(const _Tp &__value)
# 194 "/usr/include/c++/5/bits/stream_iterator.h" 3
{
# 197 "/usr/include/c++/5/bits/stream_iterator.h" 3
;
# 198 "/usr/include/c++/5/bits/stream_iterator.h" 3
(*(_M_stream)) << __value;
# 199 "/usr/include/c++/5/bits/stream_iterator.h" 3
if (_M_string) { (*(_M_stream)) << (_M_string); }
# 200 "/usr/include/c++/5/bits/stream_iterator.h" 3
return *this;
# 201 "/usr/include/c++/5/bits/stream_iterator.h" 3
}
# 204 "/usr/include/c++/5/bits/stream_iterator.h" 3
ostream_iterator &operator*()
# 205 "/usr/include/c++/5/bits/stream_iterator.h" 3
{ return *this; }
# 208 "/usr/include/c++/5/bits/stream_iterator.h" 3
ostream_iterator &operator++()
# 209 "/usr/include/c++/5/bits/stream_iterator.h" 3
{ return *this; }
# 212 "/usr/include/c++/5/bits/stream_iterator.h" 3
ostream_iterator &operator++(int)
# 213 "/usr/include/c++/5/bits/stream_iterator.h" 3
{ return *this; }
# 214 "/usr/include/c++/5/bits/stream_iterator.h" 3
};
# 219 "/usr/include/c++/5/bits/stream_iterator.h" 3
}
# 36 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"

# 36 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
namespace thrust {
# 42 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
template< class T>
# 43 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
struct iterator_traits {
# 45 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
typedef typename T::difference_type difference_type;
# 46 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
typedef typename T::value_type value_type;
# 47 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
typedef typename T::pointer pointer;
# 48 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
typedef typename T::reference reference;
# 49 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
typedef typename T::iterator_category iterator_category;
# 50 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
};
# 53 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
template< class T>
# 54 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
struct iterator_traits< T *> {
# 56 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
typedef std::ptrdiff_t difference_type;
# 57 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
typedef T value_type;
# 58 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
typedef T *pointer;
# 59 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
typedef T &reference;
# 60 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
typedef std::random_access_iterator_tag iterator_category;
# 61 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
};
# 63 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
template< class T>
# 64 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
struct iterator_traits< const T *> {
# 66 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
typedef std::ptrdiff_t difference_type;
# 67 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
typedef T value_type;
# 68 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
typedef const T *pointer;
# 69 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
typedef const T &reference;
# 70 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
typedef std::random_access_iterator_tag iterator_category;
# 71 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
};
# 73 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
template< class Iterator> struct iterator_value;
# 75 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
template< class Iterator> struct iterator_pointer;
# 77 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
template< class Iterator> struct iterator_reference;
# 79 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
template< class Iterator> struct iterator_difference;
# 81 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
template< class Iterator> struct iterator_traversal;
# 83 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
template< class Iterator> struct iterator_system;
# 86 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
template< class Iterator>
# 87 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
struct __attribute((deprecated)) iterator_space {
# 89 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
__attribute((deprecated)) typedef typename iterator_system< Iterator> ::type type;
# 90 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
};
# 93 "/usr/local/cuda/include/thrust/iterator/iterator_traits.h"
}
# 19 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traversal_tags.h"
namespace thrust {
# 23 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traversal_tags.h"
struct no_traversal_tag { };
# 25 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traversal_tags.h"
struct incrementable_traversal_tag : public no_traversal_tag {
# 26 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traversal_tags.h"
};
# 28 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traversal_tags.h"
struct single_pass_traversal_tag : public incrementable_traversal_tag {
# 29 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traversal_tags.h"
};
# 31 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traversal_tags.h"
struct forward_traversal_tag : public single_pass_traversal_tag {
# 32 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traversal_tags.h"
};
# 34 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traversal_tags.h"
struct bidirectional_traversal_tag : public forward_traversal_tag {
# 35 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traversal_tags.h"
};
# 37 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traversal_tags.h"
struct random_access_traversal_tag : public bidirectional_traversal_tag {
# 38 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traversal_tags.h"
};
# 40 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traversal_tags.h"
}
# 21 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
namespace thrust {
# 23 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
namespace detail {
# 41 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
template< class DerivedPolicy> struct execution_policy_base { };
# 44 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
template< class DerivedPolicy> inline execution_policy_base< DerivedPolicy> &
# 46 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
strip_const(const execution_policy_base< DerivedPolicy> &x)
# 47 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
{
# 48 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
return const_cast< execution_policy_base< DerivedPolicy> &>(x);
# 49 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
}
# 52 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
template< class DerivedPolicy> inline DerivedPolicy &
# 54 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
derived_cast(execution_policy_base< DerivedPolicy> &x)
# 55 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
{
# 56 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
return static_cast< DerivedPolicy &>(x);
# 57 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
}
# 60 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
template< class DerivedPolicy> inline const DerivedPolicy &
# 62 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
derived_cast(const execution_policy_base< DerivedPolicy> &x)
# 63 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
{
# 64 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
return static_cast< const DerivedPolicy &>(x);
# 65 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
}
# 68 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
}
# 71 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
template< class DerivedPolicy>
# 72 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
struct execution_policy : public detail::execution_policy_base< DerivedPolicy> {
# 74 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
};
# 77 "/usr/local/cuda/include/thrust/detail/execution_policy.h"
}
# 22 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
namespace system {
# 26 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
namespace detail {
# 28 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
namespace sequential {
# 39 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
struct tag;
# 42 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
template< class > struct execution_policy;
# 46 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
template<> struct execution_policy< tag> : public thrust::execution_policy< tag> {
# 48 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
};
# 51 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
struct tag : public execution_policy< tag> {
# 53 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
tag() { }
# 54 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
};
# 57 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
template< class Derived>
# 58 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
struct execution_policy : public thrust::execution_policy< Derived> {
# 62 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
operator ::thrust::system::detail::sequential::tag() const
# 63 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
{
# 64 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
return ::thrust::system::detail::sequential::tag();
# 65 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
}
# 66 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
};
# 72 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
static const tag seq;
# 76 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
}
# 77 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
}
# 78 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
}
# 79 "/usr/local/cuda/include/thrust/system/detail/sequential/execution_policy.h"
}
# 22 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
namespace cpp {
# 29 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
namespace detail {
# 39 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
struct tag;
# 42 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
template< class > struct execution_policy;
# 46 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
template<> struct execution_policy< tag> : public system::detail::sequential::execution_policy< tag> {
# 48 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
};
# 52 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
struct tag : public execution_policy< tag> { };
# 55 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
template< class Derived>
# 56 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
struct execution_policy : public system::detail::sequential::execution_policy< Derived> {
# 60 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
operator ::thrust::system::cpp::detail::tag() const
# 61 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
{
# 62 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
return ::thrust::system::cpp::detail::tag();
# 63 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
}
# 64 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
};
# 66 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
}
# 69 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
using detail::execution_policy;
# 70 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
using detail::tag;
# 72 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
}
# 73 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
}
# 76 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
namespace cpp {
# 79 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
using system::cpp::execution_policy;
# 80 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
using system::cpp::tag;
# 82 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
}
# 83 "/usr/local/cuda/include/thrust/system/cpp/detail/execution_policy.h"
}
# 26 "/usr/local/cuda/include/thrust/iterator/detail/host_system_tag.h"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/iterator/detail/host_system_tag.h"
typedef system::cpp::detail::tag host_system_tag;
# 31 "/usr/local/cuda/include/thrust/iterator/detail/host_system_tag.h"
}
# 34 "/usr/local/cuda/include/thrust/iterator/detail/host_system_tag.h"
namespace thrust {
# 37 "/usr/local/cuda/include/thrust/iterator/detail/host_system_tag.h"
__attribute((deprecated)) typedef host_system_tag host_space_tag;
# 39 "/usr/local/cuda/include/thrust/iterator/detail/host_system_tag.h"
}
# 22 "/usr/local/cuda/include/thrust/iterator/detail/any_system_tag.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/iterator/detail/any_system_tag.h"
struct any_system_tag : public execution_policy< any_system_tag> {
# 30 "/usr/local/cuda/include/thrust/iterator/detail/any_system_tag.h"
template< class T> operator T() const { return T(); }
# 31 "/usr/local/cuda/include/thrust/iterator/detail/any_system_tag.h"
};
# 34 "/usr/local/cuda/include/thrust/iterator/detail/any_system_tag.h"
__attribute((deprecated)) typedef any_system_tag any_space_tag;
# 36 "/usr/local/cuda/include/thrust/iterator/detail/any_system_tag.h"
}
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
namespace system {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
namespace cuda {
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
namespace detail {
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
struct tag;
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
template< class > struct execution_policy;
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
template<> struct execution_policy< tag> : public thrust::execution_policy< tag> {
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
};
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
struct tag : public execution_policy< tag> { };
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
template< class Derived>
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
struct execution_policy : public thrust::execution_policy< Derived> {
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
operator ::thrust::system::cuda::detail::tag() const
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
{
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
return ::thrust::system::cuda::detail::tag();
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
}
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
};
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
template< class System1, class System2>
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
struct cross_system : public thrust::execution_policy< cross_system< System1, System2> > {
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
cross_system(::thrust::execution_policy< System1> &system1, ::thrust::execution_policy< System2> &
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
system2) : system1(system1), system2(system2)
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
{ }
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
::thrust::execution_policy< System1> &system1;
# 80 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
::thrust::execution_policy< System2> &system2;
# 83 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
::thrust::system::cuda::detail::cross_system< System2, System1> rotate() const
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
{
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
return ::thrust::system::cuda::detail::cross_system< System2, System1> (system2, system1);
# 86 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
}
# 87 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
};
# 93 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
template< class System1, class System2> inline cross_system< System1, System2>
# 95 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
select_system(const execution_policy< System1> &system1, const cpp::detail::execution_policy< System2> &system2)
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
{
# 97 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
thrust::execution_policy< System1> &non_const_system1 = const_cast< execution_policy< System1> &>(system1);
# 98 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
cpp::detail::execution_policy< System2> &non_const_system2 = const_cast< cpp::detail::execution_policy< System2> &>(system2);
# 99 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
return cross_system< System1, System2> (non_const_system1, non_const_system2);
# 100 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
}
# 103 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
template< class System1, class System2> inline cross_system< System1, System2>
# 105 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
select_system(const cpp::detail::execution_policy< System1> &system1, execution_policy< System2> &system2)
# 106 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
{
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
cpp::detail::execution_policy< System1> &non_const_system1 = const_cast< cpp::detail::execution_policy< System1> &>(system1);
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
thrust::execution_policy< System2> &non_const_system2 = const_cast< execution_policy< System2> &>(system2);
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
return cross_system< System1, System2> (non_const_system1, non_const_system2);
# 110 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
}
# 113 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
}
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
using detail::execution_policy;
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
using detail::tag;
# 119 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
}
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
}
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
namespace cuda {
# 126 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
using system::cuda::execution_policy;
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
using system::cuda::tag;
# 129 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
}
# 130 "/usr/local/cuda/include/thrust/system/cuda/detail/execution_policy.h"
}
# 26 "/usr/local/cuda/include/thrust/iterator/detail/device_system_tag.h"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/iterator/detail/device_system_tag.h"
typedef system::cuda::detail::tag device_system_tag;
# 31 "/usr/local/cuda/include/thrust/iterator/detail/device_system_tag.h"
}
# 34 "/usr/local/cuda/include/thrust/iterator/detail/device_system_tag.h"
namespace thrust {
# 37 "/usr/local/cuda/include/thrust/iterator/detail/device_system_tag.h"
__attribute((deprecated)) typedef device_system_tag device_space_tag;
# 39 "/usr/local/cuda/include/thrust/iterator/detail/device_system_tag.h"
}
# 21 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_with_system_and_traversal.h"
namespace thrust {
# 23 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_with_system_and_traversal.h"
namespace detail {
# 27 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_with_system_and_traversal.h"
template< class Category, class System, class Traversal>
# 28 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_with_system_and_traversal.h"
struct iterator_category_with_system_and_traversal : public Category {
# 31 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_with_system_and_traversal.h"
};
# 35 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_with_system_and_traversal.h"
template< class Category> struct iterator_category_to_system;
# 37 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_with_system_and_traversal.h"
template< class Category, class System, class Traversal>
# 38 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_with_system_and_traversal.h"
struct iterator_category_to_system< iterator_category_with_system_and_traversal< Category, System, Traversal> > {
# 40 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_with_system_and_traversal.h"
typedef System type;
# 41 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_with_system_and_traversal.h"
};
# 45 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_with_system_and_traversal.h"
template< class Category> struct iterator_category_to_traversal;
# 47 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_with_system_and_traversal.h"
template< class Category, class System, class Traversal>
# 48 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_with_system_and_traversal.h"
struct iterator_category_to_traversal< iterator_category_with_system_and_traversal< Category, System, Traversal> > {
# 50 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_with_system_and_traversal.h"
typedef Traversal type;
# 51 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_with_system_and_traversal.h"
};
# 55 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_with_system_and_traversal.h"
}
# 56 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_with_system_and_traversal.h"
}
# 42 "/usr/local/cuda/include/thrust/iterator/iterator_categories.h"
namespace thrust {
# 64 "/usr/local/cuda/include/thrust/iterator/iterator_categories.h"
struct input_device_iterator_tag : public detail::iterator_category_with_system_and_traversal< std::input_iterator_tag, system::cuda::detail::tag, single_pass_traversal_tag> {
# 70 "/usr/local/cuda/include/thrust/iterator/iterator_categories.h"
};
# 83 "/usr/local/cuda/include/thrust/iterator/iterator_categories.h"
struct output_device_iterator_tag : public detail::iterator_category_with_system_and_traversal< std::output_iterator_tag, system::cuda::detail::tag, single_pass_traversal_tag> {
# 89 "/usr/local/cuda/include/thrust/iterator/iterator_categories.h"
};
# 102 "/usr/local/cuda/include/thrust/iterator/iterator_categories.h"
struct forward_device_iterator_tag : public detail::iterator_category_with_system_and_traversal< std::forward_iterator_tag, system::cuda::detail::tag, forward_traversal_tag> {
# 108 "/usr/local/cuda/include/thrust/iterator/iterator_categories.h"
};
# 121 "/usr/local/cuda/include/thrust/iterator/iterator_categories.h"
struct bidirectional_device_iterator_tag : public detail::iterator_category_with_system_and_traversal< std::bidirectional_iterator_tag, system::cuda::detail::tag, bidirectional_traversal_tag> {
# 127 "/usr/local/cuda/include/thrust/iterator/iterator_categories.h"
};
# 140 "/usr/local/cuda/include/thrust/iterator/iterator_categories.h"
struct random_access_device_iterator_tag : public detail::iterator_category_with_system_and_traversal< std::random_access_iterator_tag, system::cuda::detail::tag, random_access_traversal_tag> {
# 146 "/usr/local/cuda/include/thrust/iterator/iterator_categories.h"
};
# 160 "/usr/local/cuda/include/thrust/iterator/iterator_categories.h"
typedef std::input_iterator_tag input_host_iterator_tag;
# 174 "/usr/local/cuda/include/thrust/iterator/iterator_categories.h"
typedef std::output_iterator_tag output_host_iterator_tag;
# 188 "/usr/local/cuda/include/thrust/iterator/iterator_categories.h"
typedef std::forward_iterator_tag forward_host_iterator_tag;
# 202 "/usr/local/cuda/include/thrust/iterator/iterator_categories.h"
typedef std::bidirectional_iterator_tag bidirectional_host_iterator_tag;
# 216 "/usr/local/cuda/include/thrust/iterator/iterator_categories.h"
typedef std::random_access_iterator_tag random_access_host_iterator_tag;
# 221 "/usr/local/cuda/include/thrust/iterator/iterator_categories.h"
}
# 24 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
struct input_universal_iterator_tag {
# 31 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
operator input_host_iterator_tag() { return input_host_iterator_tag(); }
# 33 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
operator input_device_iterator_tag() { return input_device_iterator_tag(); }
# 34 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
};
# 36 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
struct output_universal_iterator_tag {
# 38 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
operator output_host_iterator_tag() { return output_host_iterator_tag(); }
# 40 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
operator output_device_iterator_tag() { return output_device_iterator_tag(); }
# 41 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
};
# 43 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
struct forward_universal_iterator_tag : public input_universal_iterator_tag {
# 46 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
operator forward_host_iterator_tag() { return forward_host_iterator_tag(); }
# 48 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
operator forward_device_iterator_tag() { return forward_device_iterator_tag(); }
# 49 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
};
# 51 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
struct bidirectional_universal_iterator_tag : public forward_universal_iterator_tag {
# 54 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
operator bidirectional_host_iterator_tag() { return bidirectional_host_iterator_tag(); }
# 56 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
operator bidirectional_device_iterator_tag() { return bidirectional_device_iterator_tag(); }
# 57 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
};
# 60 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
namespace detail {
# 64 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
template< class T>
# 65 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
struct one_degree_of_separation : public T {
# 68 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
};
# 70 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
}
# 73 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
struct random_access_universal_iterator_tag {
# 76 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
operator random_access_host_iterator_tag() { return random_access_host_iterator_tag(); }
# 78 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
operator random_access_device_iterator_tag() { return random_access_device_iterator_tag(); }
# 81 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
operator detail::one_degree_of_separation< bidirectional_universal_iterator_tag> () { return detail::one_degree_of_separation< bidirectional_universal_iterator_tag> (); }
# 83 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
};
# 86 "/usr/local/cuda/include/thrust/iterator/detail/universal_categories.h"
}
# 27 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_system.h"
namespace thrust {
# 30 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_system.h"
namespace detail {
# 34 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_system.h"
template< class > struct is_iterator_system;
# 36 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_system.h"
template< class > struct device_iterator_category_to_backend_system;
# 40 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_system.h"
template< class Category>
# 41 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_system.h"
struct iterator_category_to_system : public eval_if< or_< is_convertible< Category, std::input_iterator_tag> , is_convertible< Category, std::output_iterator_tag> > ::value, identity_< system::cpp::detail::tag> , eval_if< or_< is_convertible< Category, input_device_iterator_tag> , is_convertible< Category, output_device_iterator_tag> > ::value, identity_< system::cuda::detail::tag> , identity_< void> > > {
# 65 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_system.h"
};
# 68 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_system.h"
template< class CategoryOrTraversal>
# 69 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_system.h"
struct iterator_category_or_traversal_to_system : public eval_if< is_iterator_system< CategoryOrTraversal> ::value, identity_< CategoryOrTraversal> , iterator_category_to_system< CategoryOrTraversal> > {
# 76 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_system.h"
};
# 78 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_system.h"
}
# 79 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_system.h"
}
# 25 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
namespace thrust {
# 28 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
namespace detail {
# 32 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
template< class > struct is_iterator_system;
# 33 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
template< class > struct is_iterator_traversal;
# 36 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
using namespace detail;
# 38 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
template< class Category>
# 39 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
struct host_system_category_to_traversal : public eval_if< is_convertible< Category, std::random_access_iterator_tag> ::value, identity_< random_access_traversal_tag> , eval_if< is_convertible< Category, std::bidirectional_iterator_tag> ::value, identity_< bidirectional_traversal_tag> , eval_if< is_convertible< Category, std::forward_iterator_tag> ::value, identity_< forward_traversal_tag> , eval_if< is_convertible< Category, std::input_iterator_tag> ::value, identity_< single_pass_traversal_tag> , eval_if< is_convertible< Category, std::output_iterator_tag> ::value, identity_< incrementable_traversal_tag> , void> > > > > {
# 62 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
};
# 66 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
template< class Category>
# 67 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
struct device_system_category_to_traversal : public eval_if< is_convertible< Category, random_access_device_iterator_tag> ::value, identity_< random_access_traversal_tag> , eval_if< is_convertible< Category, bidirectional_device_iterator_tag> ::value, identity_< bidirectional_traversal_tag> , eval_if< is_convertible< Category, forward_device_iterator_tag> ::value, identity_< forward_traversal_tag> , eval_if< is_convertible< Category, input_device_iterator_tag> ::value, identity_< single_pass_traversal_tag> , eval_if< is_convertible< Category, output_device_iterator_tag> ::value, identity_< incrementable_traversal_tag> , void> > > > > {
# 90 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
};
# 93 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
template< class Category>
# 94 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
struct category_to_traversal : public eval_if< or_< is_convertible< Category, std::input_iterator_tag> , is_convertible< Category, std::output_iterator_tag> > ::value, host_system_category_to_traversal< Category> , eval_if< or_< is_convertible< Category, input_device_iterator_tag> , is_convertible< Category, output_device_iterator_tag> > ::value, device_system_category_to_traversal< Category> , void> > {
# 117 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
};
# 120 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
template< class CategoryOrTraversal>
# 121 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
struct iterator_category_to_traversal : public eval_if< is_iterator_traversal< CategoryOrTraversal> ::value, identity_< CategoryOrTraversal> , category_to_traversal< CategoryOrTraversal> > {
# 128 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
};
# 131 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
}
# 133 "/usr/local/cuda/include/thrust/iterator/detail/iterator_category_to_traversal.h"
}
# 26 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
template< class Iterator>
# 30 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
struct iterator_value {
# 32 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
typedef typename iterator_traits< Iterator> ::value_type type;
# 33 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
};
# 36 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
template< class Iterator>
# 37 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
struct iterator_pointer {
# 39 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
typedef typename iterator_traits< Iterator> ::pointer type;
# 40 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
};
# 43 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
template< class Iterator>
# 44 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
struct iterator_reference {
# 46 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
typedef typename iterator_traits< Iterator> ::reference type;
# 47 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
};
# 50 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
template< class Iterator>
# 51 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
struct iterator_difference {
# 53 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
typedef typename iterator_traits< Iterator> ::difference_type type;
# 54 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
};
# 57 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
template< class Iterator>
# 58 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
struct iterator_system : public detail::iterator_category_to_system< typename iterator_traits< Iterator> ::iterator_category> {
# 63 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
};
# 67 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
template<> struct iterator_system< void *> {
# 69 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
typedef detail::eval_if< detail::integral_constant< bool, true> ::value, detail::identity_< system::cpp::detail::tag> , detail::eval_if< detail::integral_constant< bool, false> ::value, detail::identity_< system::cuda::detail::tag> , detail::identity_< void> > > ::type type;
# 70 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
};
# 73 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
template<> struct iterator_system< const void *> {
# 75 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
typedef detail::eval_if< true, detail::identity_< system::cpp::detail::tag> , detail::eval_if< false, detail::identity_< system::cuda::detail::tag> , detail::identity_< void> > > ::type type;
# 76 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
};
# 79 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
template< class Iterator>
# 80 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
struct iterator_traversal : public detail::iterator_category_to_traversal< typename iterator_traits< Iterator> ::iterator_category> {
# 85 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
};
# 87 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
namespace detail {
# 90 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
template< class T>
# 91 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
struct is_iterator_traversal : public is_convertible< T, incrementable_traversal_tag> {
# 94 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
};
# 97 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
template< class T>
# 98 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
struct is_iterator_system : public or_< is_convertible< T, any_system_tag> , or_< is_convertible< T, system::cpp::detail::tag> , is_convertible< T, system::cuda::detail::tag> > > {
# 107 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
};
# 110 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
}
# 111 "/usr/local/cuda/include/thrust/iterator/detail/iterator_traits.inl"
}
# 26 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
namespace thrust {
# 28 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
namespace detail {
# 31 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class Ptr> struct pointer_element;
# 33 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< template< class > class Ptr, class Arg>
# 34 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct pointer_element< Ptr< Arg> > {
# 36 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef Arg type;
# 37 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 39 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< template< class , class > class Ptr, class Arg1, class Arg2>
# 40 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct pointer_element< Ptr< Arg1, Arg2> > {
# 42 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef Arg1 type;
# 43 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 45 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< template< class , class , class > class Ptr, class Arg1, class Arg2, class Arg3>
# 46 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct pointer_element< Ptr< Arg1, Arg2, Arg3> > {
# 48 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef Arg1 type;
# 49 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 51 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< template< class , class , class , class > class Ptr, class Arg1, class Arg2, class Arg3, class Arg4>
# 52 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct pointer_element< Ptr< Arg1, Arg2, Arg3, Arg4> > {
# 54 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef Arg1 type;
# 55 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 57 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< template< class , class , class , class , class > class Ptr, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5>
# 58 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct pointer_element< Ptr< Arg1, Arg2, Arg3, Arg4, Arg5> > {
# 60 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef Arg1 type;
# 61 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 63 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class T>
# 64 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct pointer_element< T *> {
# 66 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef T type;
# 67 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 69 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class Ptr>
# 70 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct pointer_difference {
# 72 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef typename Ptr::difference_type type;
# 73 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 75 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class T>
# 76 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct pointer_difference< T *> {
# 78 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef std::ptrdiff_t type;
# 79 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 81 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class Ptr, class T> struct rebind_pointer;
# 83 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class T, class U>
# 84 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct rebind_pointer< T *, U> {
# 86 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef U *type;
# 87 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 89 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< template< class > class Ptr, class Arg, class T>
# 90 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct rebind_pointer< Ptr< Arg> , T> {
# 92 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef Ptr< T> type;
# 93 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 95 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< template< class , class > class Ptr, class Arg1, class Arg2, class T>
# 96 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct rebind_pointer< Ptr< Arg1, Arg2> , T> {
# 98 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef Ptr< T, Arg2> type;
# 99 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 101 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< template< class , class , class > class Ptr, class Arg1, class Arg2, class Arg3, class T>
# 102 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct rebind_pointer< Ptr< Arg1, Arg2, Arg3> , T> {
# 104 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef Ptr< T, Arg2, Arg3> type;
# 105 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 107 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< template< class , class , class , class > class Ptr, class Arg1, class Arg2, class Arg3, class Arg4, class T>
# 108 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct rebind_pointer< Ptr< Arg1, Arg2, Arg3, Arg4> , T> {
# 110 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef Ptr< T, Arg2, Arg3, Arg4> type;
# 111 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 114 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class T> struct has_raw_pointer { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::raw_pointer *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 116 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
namespace pointer_traits_detail {
# 119 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class Ptr, class Enable = void> struct pointer_raw_pointer_impl { };
# 121 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class T>
# 122 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct pointer_raw_pointer_impl< T *, void> {
# 124 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef T *type;
# 125 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 127 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class Ptr>
# 128 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct pointer_raw_pointer_impl< Ptr, typename enable_if< has_raw_pointer< Ptr> ::value> ::type> {
# 130 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef typename Ptr::raw_pointer type;
# 131 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 133 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
}
# 135 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class T>
# 136 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct pointer_raw_pointer : public pointer_traits_detail::pointer_raw_pointer_impl< T> {
# 138 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 140 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
namespace pointer_traits_detail {
# 143 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class Void>
# 144 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct capture_address {
# 146 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class T>
# 148 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
capture_address(T &r) : m_addr((&r))
# 150 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
{ }
# 153 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
Void *operator&() const
# 154 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
{
# 155 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
return m_addr;
# 156 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
}
# 158 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
Void *m_addr;
# 159 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 162 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class T>
# 163 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct pointer_to_param : public eval_if< is_void< T> ::value, identity_< capture_address< T> > , add_reference< T> > {
# 169 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 171 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
}
# 173 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class Ptr>
# 174 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct pointer_traits {
# 176 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef Ptr pointer;
# 177 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef typename pointer_element< Ptr> ::type element_type;
# 178 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef typename pointer_difference< Ptr> ::type difference_type;
# 180 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class U>
# 181 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct rebind {
# 183 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef typename rebind_pointer< Ptr, U> ::type other;
# 184 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 187 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
static pointer pointer_to(typename pointer_traits_detail::pointer_to_param< typename pointer_element< Ptr> ::type> ::type r)
# 188 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
{
# 192 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
return (pointer)(&r);
# 193 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
}
# 196 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef typename pointer_raw_pointer< Ptr> ::type raw_pointer;
# 199 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
static raw_pointer get(pointer ptr)
# 200 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
{
# 201 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
return (ptr.get());
# 202 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
}
# 203 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 205 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class T>
# 206 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct pointer_traits< T *> {
# 208 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef T *pointer;
# 209 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef T element_type;
# 210 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef typename pointer_difference< T *> ::type difference_type;
# 212 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class U>
# 213 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct rebind {
# 215 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef U *other;
# 216 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 219 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
static pointer pointer_to(typename pointer_traits_detail::pointer_to_param< T> ::type r)
# 220 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
{
# 221 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
return &r;
# 222 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
}
# 225 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
typedef typename pointer_raw_pointer< T *> ::type raw_pointer;
# 228 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
static raw_pointer get(pointer ptr)
# 229 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
{
# 230 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
return ptr;
# 231 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
}
# 232 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 234 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class FromPtr, class ToPtr>
# 235 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct is_pointer_convertible : public and_< is_convertible< typename pointer_element< FromPtr> ::type *, typename pointer_element< ToPtr> ::type *> , is_convertible< typename iterator_system< FromPtr> ::type, typename iterator_system< ToPtr> ::type> > {
# 246 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 250 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class T>
# 251 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct is_thrust_pointer : public is_metafunction_defined< pointer_raw_pointer< T> > {
# 253 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 256 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class FromPtr, class ToPtr>
# 257 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct lazy_is_pointer_convertible : public eval_if< is_thrust_pointer< FromPtr> ::value && is_thrust_pointer< ToPtr> ::value, is_pointer_convertible< FromPtr, ToPtr> , identity_< integral_constant< bool, false> > > {
# 263 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 265 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
template< class FromPtr, class ToPtr, class T = void>
# 266 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
struct enable_if_pointer_is_convertible : public enable_if< lazy_is_pointer_convertible< FromPtr, ToPtr> ::type::value, T> {
# 271 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
};
# 274 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
}
# 275 "/usr/local/cuda/include/thrust/detail/type_traits/pointer_traits.h"
}
# 23 "/usr/local/cuda/include/thrust/iterator/detail/is_iterator_category.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/iterator/detail/is_iterator_category.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/iterator/detail/is_iterator_category.h"
template< class T>
# 30 "/usr/local/cuda/include/thrust/iterator/detail/is_iterator_category.h"
struct is_host_iterator_category : public or_< is_convertible< T, std::input_iterator_tag> , is_convertible< T, std::output_iterator_tag> > {
# 36 "/usr/local/cuda/include/thrust/iterator/detail/is_iterator_category.h"
};
# 38 "/usr/local/cuda/include/thrust/iterator/detail/is_iterator_category.h"
template< class T>
# 39 "/usr/local/cuda/include/thrust/iterator/detail/is_iterator_category.h"
struct is_device_iterator_category : public or_< is_convertible< T, input_device_iterator_tag> , is_convertible< T, output_device_iterator_tag> > {
# 45 "/usr/local/cuda/include/thrust/iterator/detail/is_iterator_category.h"
};
# 48 "/usr/local/cuda/include/thrust/iterator/detail/is_iterator_category.h"
template< class T>
# 49 "/usr/local/cuda/include/thrust/iterator/detail/is_iterator_category.h"
struct is_iterator_category : public or_< is_host_iterator_category< T> , is_device_iterator_category< T> > {
# 55 "/usr/local/cuda/include/thrust/iterator/detail/is_iterator_category.h"
};
# 57 "/usr/local/cuda/include/thrust/iterator/detail/is_iterator_category.h"
}
# 59 "/usr/local/cuda/include/thrust/iterator/detail/is_iterator_category.h"
}
# 30 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
namespace detail {
# 81 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
template< class System, class Traversal, class ValueParam, class Reference> struct iterator_facade_default_category;
# 95 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
template< class Traversal, class ValueParam, class Reference>
# 96 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
struct iterator_facade_default_category_std : public eval_if< is_convertible< Traversal, forward_traversal_tag> ::value, eval_if< is_convertible< Traversal, random_access_traversal_tag> ::value, identity_< std::random_access_iterator_tag> , eval_if< is_convertible< Traversal, bidirectional_traversal_tag> ::value, identity_< std::bidirectional_iterator_tag> , identity_< std::forward_iterator_tag> > > , eval_if< is_convertible< Traversal, single_pass_traversal_tag> ::value, identity_< std::input_iterator_tag> , identity_< Traversal> > > {
# 115 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
};
# 119 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
template< class Traversal, class ValueParam, class Reference>
# 120 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
struct iterator_facade_default_category_host : public eval_if< is_convertible< Traversal, forward_traversal_tag> ::value, eval_if< is_convertible< Traversal, random_access_traversal_tag> ::value, identity_< std::random_access_iterator_tag> , eval_if< is_convertible< Traversal, bidirectional_traversal_tag> ::value, identity_< std::bidirectional_iterator_tag> , identity_< std::forward_iterator_tag> > > , eval_if< is_convertible< Traversal, single_pass_traversal_tag> ::value, identity_< std::input_iterator_tag> , identity_< Traversal> > > {
# 139 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
};
# 143 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
template< class Traversal, class ValueParam, class Reference>
# 144 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
struct iterator_facade_default_category_device : public eval_if< is_convertible< Traversal, forward_traversal_tag> ::value, eval_if< is_convertible< Traversal, random_access_traversal_tag> ::value, identity_< random_access_device_iterator_tag> , eval_if< is_convertible< Traversal, bidirectional_traversal_tag> ::value, identity_< bidirectional_device_iterator_tag> , identity_< forward_device_iterator_tag> > > , eval_if< is_convertible< Traversal, single_pass_traversal_tag> ::value, identity_< input_device_iterator_tag> , identity_< Traversal> > > {
# 163 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
};
# 167 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
template< class Traversal, class ValueParam, class Reference>
# 168 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
struct iterator_facade_default_category_any {
# 174 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
typedef iterator_category_with_system_and_traversal< typename iterator_facade_default_category_std< Traversal, ValueParam, Reference> ::type, any_system_tag, Traversal> type;
# 175 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
};
# 178 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
template< class System, class Traversal, class ValueParam, class Reference>
# 179 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
struct iterator_facade_default_category : public eval_if< is_convertible< System, any_system_tag> ::value, iterator_facade_default_category_any< Traversal, ValueParam, Reference> , eval_if< is_convertible< System, system::cpp::detail::tag> ::value, iterator_facade_default_category_host< Traversal, ValueParam, Reference> , eval_if< is_convertible< System, system::cuda::detail::tag> ::value, iterator_facade_default_category_device< Traversal, ValueParam, Reference> , identity_< iterator_category_with_system_and_traversal< typename iterator_facade_default_category_std< Traversal, ValueParam, Reference> ::type, System, Traversal> > > > > {
# 207 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
};
# 210 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
template< class System, class Traversal, class ValueParam, class Reference>
# 211 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
struct iterator_facade_category_impl {
# 215 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
typedef typename iterator_facade_default_category< System, Traversal, ValueParam, Reference> ::type category;
# 232 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
typedef typename eval_if< and_< is_same< Traversal, typename iterator_category_to_traversal< typename iterator_facade_default_category< System, Traversal, ValueParam, Reference> ::type> ::type> , is_same< System, typename iterator_category_to_system< typename iterator_facade_default_category< System, Traversal, ValueParam, Reference> ::type> ::type> > ::value, identity_< typename iterator_facade_default_category< System, Traversal, ValueParam, Reference> ::type> , identity_< iterator_category_with_system_and_traversal< typename iterator_facade_default_category< System, Traversal, ValueParam, Reference> ::type, System, Traversal> > > ::type type;
# 233 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
};
# 236 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
template< class CategoryOrSystem, class
# 237 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
CategoryOrTraversal, class
# 238 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
ValueParam, class
# 239 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
Reference>
# 240 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
struct iterator_facade_category {
# 247 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
typedef typename eval_if< is_iterator_category< CategoryOrTraversal> ::value, identity_< CategoryOrTraversal> , iterator_facade_category_impl< CategoryOrSystem, CategoryOrTraversal, ValueParam, Reference> > ::type type;
# 248 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
};
# 251 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
}
# 252 "/usr/local/cuda/include/thrust/iterator/detail/iterator_facade_category.h"
}
# 22 "/usr/local/cuda/include/thrust/iterator/detail/distance_from_result.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/iterator/detail/distance_from_result.h"
namespace detail {
# 30 "/usr/local/cuda/include/thrust/iterator/detail/distance_from_result.h"
template< class IteratorFacade1, class IteratorFacade2>
# 31 "/usr/local/cuda/include/thrust/iterator/detail/distance_from_result.h"
struct distance_from_result : public eval_if< is_convertible< IteratorFacade2, IteratorFacade1> ::value, identity_< typename IteratorFacade1::difference_type> , identity_< typename IteratorFacade2::difference_type> > {
# 37 "/usr/local/cuda/include/thrust/iterator/detail/distance_from_result.h"
};
# 39 "/usr/local/cuda/include/thrust/iterator/detail/distance_from_result.h"
}
# 41 "/usr/local/cuda/include/thrust/iterator/detail/distance_from_result.h"
}
# 40 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
namespace thrust {
# 55 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived, class Value, class System, class Traversal, class Reference, class Difference> class iterator_facade;
# 61 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
class iterator_core_access {
# 67 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived, class Value, class System, class Traversal, class Reference, class Difference> friend class iterator_facade;
# 70 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived1, class Value1, class System1, class Traversal1, class Reference1, class Difference1, class
# 71 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived2, class Value2, class System2, class Traversal2, class Reference2, class Difference2> friend inline bool
# 70 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
operator==(const iterator_facade< Derived1, Value1, System1, Traversal1, Reference1, Difference1> & lhs, const iterator_facade< Derived2, Value2, System2, Traversal2, Reference2, Difference2> & rhs);
# 77 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived1, class Value1, class System1, class Traversal1, class Reference1, class Difference1, class
# 78 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived2, class Value2, class System2, class Traversal2, class Reference2, class Difference2> friend inline bool
# 77 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
operator!=(const iterator_facade< Derived1, Value1, System1, Traversal1, Reference1, Difference1> & lhs, const iterator_facade< Derived2, Value2, System2, Traversal2, Reference2, Difference2> & rhs);
# 84 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived1, class Value1, class System1, class Traversal1, class Reference1, class Difference1, class
# 85 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived2, class Value2, class System2, class Traversal2, class Reference2, class Difference2> friend inline bool
# 84 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
operator<(const iterator_facade< Derived1, Value1, System1, Traversal1, Reference1, Difference1> & lhs, const iterator_facade< Derived2, Value2, System2, Traversal2, Reference2, Difference2> & rhs);
# 91 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived1, class Value1, class System1, class Traversal1, class Reference1, class Difference1, class
# 92 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived2, class Value2, class System2, class Traversal2, class Reference2, class Difference2> friend inline bool
# 91 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
operator>(const iterator_facade< Derived1, Value1, System1, Traversal1, Reference1, Difference1> & lhs, const iterator_facade< Derived2, Value2, System2, Traversal2, Reference2, Difference2> & rhs);
# 98 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived1, class Value1, class System1, class Traversal1, class Reference1, class Difference1, class
# 99 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived2, class Value2, class System2, class Traversal2, class Reference2, class Difference2> friend inline bool
# 98 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
operator<=(const iterator_facade< Derived1, Value1, System1, Traversal1, Reference1, Difference1> & lhs, const iterator_facade< Derived2, Value2, System2, Traversal2, Reference2, Difference2> & rhs);
# 105 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived1, class Value1, class System1, class Traversal1, class Reference1, class Difference1, class
# 106 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived2, class Value2, class System2, class Traversal2, class Reference2, class Difference2> friend inline bool
# 105 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
operator>=(const iterator_facade< Derived1, Value1, System1, Traversal1, Reference1, Difference1> & lhs, const iterator_facade< Derived2, Value2, System2, Traversal2, Reference2, Difference2> & rhs);
# 113 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived1, class Value1, class System1, class Traversal1, class Reference1, class Difference1, class
# 114 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived2, class Value2, class System2, class Traversal2, class Reference2, class Difference2> friend inline typename detail::distance_from_result< iterator_facade< Derived1, Value1, System1, Traversal1, Reference1, Difference1> , iterator_facade< Derived2, Value2, System2, Traversal2, Reference2, Difference2> > ::type
# 113 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
operator-(const iterator_facade< Derived1, Value1, System1, Traversal1, Reference1, Difference1> & lhs, const iterator_facade< Derived2, Value2, System2, Traversal2, Reference2, Difference2> & rhs);
# 124 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Facade> static typename Facade::reference
# 126 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
dereference(const Facade &f)
# 127 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 128 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return (f.dereference());
# 129 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 131 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Facade> static void
# 133 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
increment(Facade &f)
# 134 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 135 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
(f.increment());
# 136 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 138 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Facade> static void
# 140 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
decrement(Facade &f)
# 141 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 142 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
(f.decrement());
# 143 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 145 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Facade1, class Facade2> static bool
# 147 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
equal(const Facade1 &f1, const Facade2 &f2)
# 148 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 149 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return (f1.equal(f2));
# 150 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 167 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Facade> static void
# 169 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
advance(Facade &f, typename Facade::difference_type n)
# 170 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 171 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
(f.advance(n));
# 172 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 176 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Facade1, class Facade2> static typename Facade1::difference_type
# 179 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
distance_from(const Facade1 &f1, const Facade2 &f2, detail::true_type)
# 180 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 181 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return -(f1.distance_to(f2));
# 182 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 186 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Facade1, class Facade2> static typename Facade2::difference_type
# 189 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
distance_from(const Facade1 &f1, const Facade2 &f2, detail::false_type)
# 190 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 191 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return (f2.distance_to(f1));
# 192 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 194 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Facade1, class Facade2> static typename detail::distance_from_result< Facade1, Facade2> ::type
# 197 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
distance_from(const Facade1 &f1, const Facade2 &f2)
# 198 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 201 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return distance_from(f1, f2, typename detail::is_convertible< Facade2, Facade1> ::type());
# 203 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 208 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived, class Value, class System, class Traversal, class Reference, class Difference> static Derived &
# 210 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
derived(iterator_facade< Derived, Value, System, Traversal, Reference, Difference> &facade)
# 211 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 212 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return *(static_cast< Derived *>(&facade));
# 213 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 215 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived, class Value, class System, class Traversal, class Reference, class Difference> static const Derived &
# 217 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
derived(const iterator_facade< Derived, Value, System, Traversal, Reference, Difference> &facade)
# 218 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 219 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return *(static_cast< const Derived *>(&facade));
# 220 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 224 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
};
# 246 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived, class
# 247 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Value, class
# 248 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
System, class
# 249 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Traversal, class
# 250 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Reference, class
# 251 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Difference = std::ptrdiff_t>
# 252 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
class iterator_facade {
# 262 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived &derived()
# 263 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 264 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return *(static_cast< Derived *>(this));
# 265 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 268 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
const Derived &derived() const
# 269 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 270 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return *(static_cast< const Derived *>(this));
# 271 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 278 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
public: typedef typename detail::remove_const< Value> ::type value_type;
# 282 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
typedef Reference reference;
# 291 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
typedef void pointer;
# 296 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
typedef Difference difference_type;
# 302 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
typedef typename detail::iterator_facade_category< System, Traversal, Value, Reference> ::type iterator_category;
# 308 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
reference operator*() const
# 309 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 310 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return iterator_core_access::dereference(this->derived());
# 311 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 326 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
reference operator[](difference_type n) const
# 327 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 328 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return *(this->derived() + n);
# 329 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 335 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived &operator++()
# 336 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 337 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
iterator_core_access::increment(this->derived());
# 338 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return this->derived();
# 339 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 345 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived operator++(int)
# 346 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 347 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived tmp(this->derived());
# 348 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
++(*this);
# 349 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return tmp;
# 350 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 356 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived &operator--()
# 357 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 358 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
iterator_core_access::decrement(this->derived());
# 359 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return this->derived();
# 360 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 366 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived operator--(int)
# 367 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 368 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived tmp(this->derived());
# 369 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
--(*this);
# 370 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return tmp;
# 371 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 378 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived &operator+=(difference_type n)
# 379 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 380 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
iterator_core_access::advance(this->derived(), n);
# 381 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return this->derived();
# 382 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 389 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived &operator-=(difference_type n)
# 390 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 391 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
iterator_core_access::advance(this->derived(), -n);
# 392 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return this->derived();
# 393 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 400 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived operator-(difference_type n) const
# 401 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 402 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived result(this->derived());
# 403 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return result -= n;
# 404 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 405 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
};
# 411 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived1, class Value1, class System1, class Traversal1, class Reference1, class Difference1, class
# 412 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived2, class Value2, class System2, class Traversal2, class Reference2, class Difference2> inline bool
# 417 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
operator==(const iterator_facade< Derived1, Value1, System1, Traversal1, Reference1, Difference1> &lhs, const iterator_facade< Derived2, Value2, System2, Traversal2, Reference2, Difference2> &
# 418 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
rhs)
# 419 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 420 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return iterator_core_access::equal(*(static_cast< const Derived1 *>(&lhs)), *(static_cast< const Derived2 *>(&rhs)));
# 423 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 425 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived1, class Value1, class System1, class Traversal1, class Reference1, class Difference1, class
# 426 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived2, class Value2, class System2, class Traversal2, class Reference2, class Difference2> inline bool
# 431 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
operator!=(const iterator_facade< Derived1, Value1, System1, Traversal1, Reference1, Difference1> &lhs, const iterator_facade< Derived2, Value2, System2, Traversal2, Reference2, Difference2> &
# 432 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
rhs)
# 433 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 434 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return !iterator_core_access::equal(*(static_cast< const Derived1 *>(&lhs)), *(static_cast< const Derived2 *>(&rhs)));
# 437 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 439 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived1, class Value1, class System1, class Traversal1, class Reference1, class Difference1, class
# 440 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived2, class Value2, class System2, class Traversal2, class Reference2, class Difference2> inline bool
# 445 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
operator<(const iterator_facade< Derived1, Value1, System1, Traversal1, Reference1, Difference1> &lhs, const iterator_facade< Derived2, Value2, System2, Traversal2, Reference2, Difference2> &
# 446 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
rhs)
# 447 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 448 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return 0 > iterator_core_access::distance_from(*(static_cast< const Derived1 *>(&lhs)), *(static_cast< const Derived2 *>(&rhs)));
# 451 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 453 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived1, class Value1, class System1, class Traversal1, class Reference1, class Difference1, class
# 454 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived2, class Value2, class System2, class Traversal2, class Reference2, class Difference2> inline bool
# 459 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
operator>(const iterator_facade< Derived1, Value1, System1, Traversal1, Reference1, Difference1> &lhs, const iterator_facade< Derived2, Value2, System2, Traversal2, Reference2, Difference2> &
# 460 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
rhs)
# 461 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 462 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return 0 < iterator_core_access::distance_from(*(static_cast< const Derived1 *>(&lhs)), *(static_cast< const Derived2 *>(&rhs)));
# 465 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 467 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived1, class Value1, class System1, class Traversal1, class Reference1, class Difference1, class
# 468 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived2, class Value2, class System2, class Traversal2, class Reference2, class Difference2> inline bool
# 473 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
operator<=(const iterator_facade< Derived1, Value1, System1, Traversal1, Reference1, Difference1> &lhs, const iterator_facade< Derived2, Value2, System2, Traversal2, Reference2, Difference2> &
# 474 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
rhs)
# 475 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 476 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return 0 >= iterator_core_access::distance_from(*(static_cast< const Derived1 *>(&lhs)), *(static_cast< const Derived2 *>(&rhs)));
# 479 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 481 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived1, class Value1, class System1, class Traversal1, class Reference1, class Difference1, class
# 482 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived2, class Value2, class System2, class Traversal2, class Reference2, class Difference2> inline bool
# 487 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
operator>=(const iterator_facade< Derived1, Value1, System1, Traversal1, Reference1, Difference1> &lhs, const iterator_facade< Derived2, Value2, System2, Traversal2, Reference2, Difference2> &
# 488 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
rhs)
# 489 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 490 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return 0 <= iterator_core_access::distance_from(*(static_cast< const Derived1 *>(&lhs)), *(static_cast< const Derived2 *>(&rhs)));
# 493 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 496 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived1, class Value1, class System1, class Traversal1, class Reference1, class Difference1, class
# 497 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived2, class Value2, class System2, class Traversal2, class Reference2, class Difference2> inline typename detail::distance_from_result< iterator_facade< Derived1, Value1, System1, Traversal1, Reference1, Difference1> , iterator_facade< Derived2, Value2, System2, Traversal2, Reference2, Difference2> > ::type
# 506 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
operator-(const iterator_facade< Derived1, Value1, System1, Traversal1, Reference1, Difference1> &lhs, const iterator_facade< Derived2, Value2, System2, Traversal2, Reference2, Difference2> &
# 507 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
rhs)
# 508 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 509 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return iterator_core_access::distance_from(*(static_cast< const Derived1 *>(&lhs)), *(static_cast< const Derived2 *>(&rhs)));
# 512 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 515 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived, class Value, class System, class Traversal, class Reference, class Difference> inline Derived
# 517 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
operator+(const iterator_facade< Derived, Value, System, Traversal, Reference, Difference> &i, typename Derived::difference_type
# 518 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
n)
# 519 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 520 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived tmp(static_cast< const Derived &>(i));
# 521 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return tmp += n;
# 522 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 524 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
template< class Derived, class Value, class System, class Traversal, class Reference, class Difference> inline Derived
# 526 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
operator+(typename Derived::difference_type n, const iterator_facade< Derived, Value, System, Traversal, Reference, Difference> &
# 527 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
i)
# 528 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
{
# 529 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
Derived tmp(static_cast< const Derived &>(i));
# 530 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
return tmp += n;
# 531 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 542 "/usr/local/cuda/include/thrust/iterator/iterator_facade.h"
}
# 21 "/usr/local/cuda/include/thrust/detail/use_default.h"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/detail/use_default.h"
struct use_default { };
# 26 "/usr/local/cuda/include/thrust/detail/use_default.h"
}
# 24 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
template< class Derived, class
# 30 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
Base, class
# 31 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
Value, class
# 32 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
System, class
# 33 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
Traversal, class
# 34 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
Reference, class
# 35 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
Difference> class iterator_adaptor;
# 40 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
namespace detail {
# 46 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
template< class T, class DefaultNullaryFn>
# 47 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
struct ia_dflt_help : public eval_if< is_same< T, use_default> ::value, DefaultNullaryFn, identity_< T> > {
# 54 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
};
# 59 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
template< class Derived, class
# 60 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
Base, class
# 61 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
Value, class
# 62 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
System, class
# 63 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
Traversal, class
# 64 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
Reference, class
# 65 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
Difference>
# 67 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
struct iterator_adaptor_base {
# 72 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
typedef typename ia_dflt_help< Value, iterator_value< Base> > ::type value;
# 77 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
typedef typename ia_dflt_help< System, iterator_system< Base> > ::type system;
# 82 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
typedef typename ia_dflt_help< Traversal, iterator_traversal< Base> > ::type traversal;
# 91 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
typedef typename ia_dflt_help< Reference, eval_if< is_same< Value, use_default> ::value, iterator_reference< Base> , add_reference< Value> > > ::type reference;
# 96 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
typedef typename ia_dflt_help< Difference, iterator_difference< Base> > ::type difference;
# 105 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
typedef iterator_facade< Derived, typename ia_dflt_help< Value, iterator_value< Base> > ::type, typename ia_dflt_help< System, iterator_system< Base> > ::type, typename ia_dflt_help< Traversal, iterator_traversal< Base> > ::type, typename ia_dflt_help< Reference, eval_if< is_same< Value, use_default> ::value, iterator_reference< Base> , add_reference< Value> > > ::type, typename ia_dflt_help< Difference, iterator_difference< Base> > ::type> type;
# 106 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
};
# 109 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
}
# 110 "/usr/local/cuda/include/thrust/iterator/detail/iterator_adaptor_base.h"
}
# 40 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
namespace thrust {
# 114 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
template< class Derived, class
# 115 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
Base, class
# 116 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
Value = use_default, class
# 117 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
System = use_default, class
# 118 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
Traversal = use_default, class
# 119 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
Reference = use_default, class
# 120 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
Difference = use_default>
# 121 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
class iterator_adaptor : public detail::iterator_adaptor_base< Derived, Base, Value, System, Traversal, Reference, Difference> ::type {
# 129 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
friend class iterator_core_access;
# 134 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
protected: typedef typename ::thrust::detail::iterator_adaptor_base< Derived, Base, Value, System, Traversal, Reference, Difference> ::type super_t;
# 143 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
public: iterator_adaptor() { }
# 148 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
explicit iterator_adaptor(const Base &iter) : m_iterator(iter)
# 150 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
{ }
# 154 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
typedef Base base_type;
# 158 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
typedef typename ::thrust::detail::iterator_adaptor_base< Derived, Base, Value, System, Traversal, Reference, Difference> ::type::reference reference;
# 160 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
typedef typename ::thrust::detail::iterator_adaptor_base< Derived, Base, Value, System, Traversal, Reference, Difference> ::type::difference_type difference_type;
# 167 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
const Base &base() const
# 168 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
{ return m_iterator; }
# 174 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
protected: const Base &base_reference() const
# 175 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
{ return m_iterator; }
# 180 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
Base &base_reference()
# 181 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
{ return m_iterator; }
# 189 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
private: reference dereference() const
# 190 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
{ return *(m_iterator); }
# 193 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
template< class OtherDerived, class OtherIterator, class V, class S, class T, class R, class D> bool
# 195 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
equal(const ::thrust::iterator_adaptor< OtherDerived, OtherIterator, V, S, T, R, D> &x) const
# 196 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
{ return (m_iterator) == (x.base()); }
# 200 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
void advance(difference_type n)
# 201 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
{
# 203 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
(m_iterator) += n;
# 204 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
}
# 208 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
void increment()
# 209 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
{ ++(m_iterator); }
# 213 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
void decrement()
# 214 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
{
# 216 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
--(m_iterator);
# 217 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
}
# 220 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
template< class OtherDerived, class OtherIterator, class V, class S, class T, class R, class D> difference_type
# 222 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
distance_to(const ::thrust::iterator_adaptor< OtherDerived, OtherIterator, V, S, T, R, D> &y) const
# 223 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
{ return (y.base()) - (m_iterator); }
# 226 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
Base m_iterator;
# 230 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
};
# 238 "/usr/local/cuda/include/thrust/iterator/iterator_adaptor.h"
}
# 22 "/usr/local/cuda/include/thrust/detail/reference_forward_declaration.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/detail/reference_forward_declaration.h"
template< class Element, class Pointer, class Derived = use_default> class reference;
# 27 "/usr/local/cuda/include/thrust/detail/reference_forward_declaration.h"
}
# 28 "/usr/local/cuda/include/thrust/detail/pointer.h"
namespace thrust {
# 32 "/usr/local/cuda/include/thrust/detail/pointer.h"
template< class Element, class Tag, class Reference = use_default, class Derived = use_default> class pointer;
# 34 "/usr/local/cuda/include/thrust/detail/pointer.h"
}
# 41 "/usr/local/cuda/include/thrust/detail/pointer.h"
namespace thrust {
# 44 "/usr/local/cuda/include/thrust/detail/pointer.h"
template< class Element, class Tag, class Reference, class Derived>
# 45 "/usr/local/cuda/include/thrust/detail/pointer.h"
struct iterator_traits< pointer< Element, Tag, Reference, Derived> > {
# 48 "/usr/local/cuda/include/thrust/detail/pointer.h"
private: typedef thrust::pointer< Element, Tag, Reference, Derived> ptr;
# 51 "/usr/local/cuda/include/thrust/detail/pointer.h"
public: typedef typename thrust::pointer< Element, Tag, Reference, Derived> ::iterator_category iterator_category;
# 52 "/usr/local/cuda/include/thrust/detail/pointer.h"
typedef typename thrust::pointer< Element, Tag, Reference, Derived> ::value_type value_type;
# 53 "/usr/local/cuda/include/thrust/detail/pointer.h"
typedef typename thrust::pointer< Element, Tag, Reference, Derived> ::difference_type difference_type;
# 55 "/usr/local/cuda/include/thrust/detail/pointer.h"
typedef void pointer;
# 56 "/usr/local/cuda/include/thrust/detail/pointer.h"
typedef typename thrust::pointer< Element, Tag, Reference, Derived> ::reference reference;
# 57 "/usr/local/cuda/include/thrust/detail/pointer.h"
};
# 59 "/usr/local/cuda/include/thrust/detail/pointer.h"
}
# 62 "/usr/local/cuda/include/thrust/detail/pointer.h"
namespace thrust {
# 65 "/usr/local/cuda/include/thrust/detail/pointer.h"
namespace detail {
# 69 "/usr/local/cuda/include/thrust/detail/pointer.h"
template< class Element, class Tag, class Reference, class Derived>
# 70 "/usr/local/cuda/include/thrust/detail/pointer.h"
struct pointer_base {
# 78 "/usr/local/cuda/include/thrust/detail/pointer.h"
typedef typename eval_if< is_void< typename remove_const< Element> ::type> ::value, identity_< void> , remove_cv< Element> > ::type value_type;
# 85 "/usr/local/cuda/include/thrust/detail/pointer.h"
typedef typename eval_if< is_same< Derived, use_default> ::value, identity_< pointer< Element, Tag, Reference, Derived> > , identity_< Derived> > ::type derived_type;
# 97 "/usr/local/cuda/include/thrust/detail/pointer.h"
typedef typename eval_if< is_void< typename remove_const< Element> ::type> ::value, identity_< void> , eval_if< is_same< Reference, use_default> ::value, identity_< reference< Element, typename eval_if< is_same< Derived, use_default> ::value, identity_< pointer< Element, Tag, Reference, Derived> > , identity_< Derived> > ::type> > , identity_< Reference> > > ::type reference_arg;
# 107 "/usr/local/cuda/include/thrust/detail/pointer.h"
typedef iterator_adaptor< typename eval_if< is_same< Derived, use_default> ::value, identity_< pointer< Element, Tag, Reference, Derived> > , identity_< Derived> > ::type, Element *, typename eval_if< is_void< typename remove_const< Element> ::type> ::value, identity_< void> , remove_cv< Element> > ::type, Tag, random_access_traversal_tag, typename eval_if< is_void< typename remove_const< Element> ::type> ::value, identity_< void> , eval_if< is_same< Reference, use_default> ::value, identity_< reference< Element, typename eval_if< is_same< Derived, use_default> ::value, identity_< pointer< Element, Tag, Reference, Derived> > , identity_< Derived> > ::type> > , identity_< Reference> > > ::type, long> type;
# 108 "/usr/local/cuda/include/thrust/detail/pointer.h"
};
# 111 "/usr/local/cuda/include/thrust/detail/pointer.h"
}
# 121 "/usr/local/cuda/include/thrust/detail/pointer.h"
template< class Element, class Tag, class Reference, class Derived>
# 122 "/usr/local/cuda/include/thrust/detail/pointer.h"
class pointer : public detail::pointer_base< Element, Tag, Reference, Derived> ::type {
# 126 "/usr/local/cuda/include/thrust/detail/pointer.h"
typedef typename ::thrust::detail::pointer_base< Element, Tag, Reference, Derived> ::type super_t;
# 128 "/usr/local/cuda/include/thrust/detail/pointer.h"
typedef typename ::thrust::detail::pointer_base< Element, Tag, Reference, Derived> ::derived_type derived_type;
# 131 "/usr/local/cuda/include/thrust/detail/pointer.h"
friend class iterator_core_access;
# 134 "/usr/local/cuda/include/thrust/detail/pointer.h"
typename ::thrust::detail::pointer_base< Element, Tag, Reference, Derived> ::type::reference dereference() const;
# 137 "/usr/local/cuda/include/thrust/detail/pointer.h"
using ::thrust::detail::pointer_base< Element, Tag, Reference, Derived> ::type::base;
# 138 "/usr/local/cuda/include/thrust/detail/pointer.h"
using ::thrust::detail::pointer_base< Element, Tag, Reference, Derived> ::type::base_type;
# 141 "/usr/local/cuda/include/thrust/detail/pointer.h"
public: typedef typename ::thrust::detail::pointer_base< Element, Tag, Reference, Derived> ::type::base_type raw_pointer;
# 146 "/usr/local/cuda/include/thrust/detail/pointer.h"
pointer();
# 150 "/usr/local/cuda/include/thrust/detail/pointer.h"
template< class OtherElement> explicit pointer(OtherElement * ptr);
# 156 "/usr/local/cuda/include/thrust/detail/pointer.h"
template< class OtherPointer> pointer(const OtherPointer & other, typename ::thrust::detail::enable_if_pointer_is_convertible< OtherPointer, pointer> ::type * = 0);
# 168 "/usr/local/cuda/include/thrust/detail/pointer.h"
template< class OtherPointer> typename ::thrust::detail::enable_if_pointer_is_convertible< OtherPointer, pointer, typename ::thrust::detail::pointer_base< Element, Tag, Reference, Derived> ::derived_type &> ::type operator=(const OtherPointer & other);
# 180 "/usr/local/cuda/include/thrust/detail/pointer.h"
Element *get() const;
# 181 "/usr/local/cuda/include/thrust/detail/pointer.h"
};
# 184 "/usr/local/cuda/include/thrust/detail/pointer.h"
template< class Element, class Tag, class Reference, class Derived, class
# 185 "/usr/local/cuda/include/thrust/detail/pointer.h"
charT, class traits> std::basic_ostream< charT, traits> &
# 184 "/usr/local/cuda/include/thrust/detail/pointer.h"
operator<<(std::basic_ostream< charT, traits> & os, const pointer< Element, Tag, Reference, Derived> & p);
# 190 "/usr/local/cuda/include/thrust/detail/pointer.h"
}
# 21 "/usr/local/cuda/include/thrust/detail/pointer.inl"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/detail/pointer.inl"
template< class Element, class Tag, class Reference, class Derived>
# 27 "/usr/local/cuda/include/thrust/detail/pointer.inl"
pointer< Element, Tag, Reference, Derived> ::pointer() : super_t(static_cast< Element *>(0))
# 29 "/usr/local/cuda/include/thrust/detail/pointer.inl"
{ }
# 32 "/usr/local/cuda/include/thrust/detail/pointer.inl"
template< class Element, class Tag, class Reference, class Derived>
# 33 "/usr/local/cuda/include/thrust/detail/pointer.inl"
template< class OtherElement>
# 35 "/usr/local/cuda/include/thrust/detail/pointer.inl"
pointer< Element, Tag, Reference, Derived> ::pointer(OtherElement *other) : super_t(other)
# 37 "/usr/local/cuda/include/thrust/detail/pointer.inl"
{ }
# 40 "/usr/local/cuda/include/thrust/detail/pointer.inl"
template< class Element, class Tag, class Reference, class Derived>
# 41 "/usr/local/cuda/include/thrust/detail/pointer.inl"
template< class OtherPointer>
# 43 "/usr/local/cuda/include/thrust/detail/pointer.inl"
pointer< Element, Tag, Reference, Derived> ::pointer(const OtherPointer &other, typename ::thrust::detail::enable_if_pointer_is_convertible< OtherPointer, pointer> ::type *) : super_t(thrust::detail::pointer_traits< OtherPointer> ::get(other))
# 49 "/usr/local/cuda/include/thrust/detail/pointer.inl"
{ }
# 52 "/usr/local/cuda/include/thrust/detail/pointer.inl"
template< class Element, class Tag, class Reference, class Derived>
# 53 "/usr/local/cuda/include/thrust/detail/pointer.inl"
template< class OtherPointer> typename detail::enable_if_pointer_is_convertible< OtherPointer, pointer< Element, Tag, Reference, Derived> , typename detail::pointer_base< Element, Tag, Reference, Derived> ::derived_type &> ::type
# 60 "/usr/local/cuda/include/thrust/detail/pointer.inl"
pointer< Element, Tag, Reference, Derived> ::operator=(const OtherPointer &other)
# 61 "/usr/local/cuda/include/thrust/detail/pointer.inl"
{
# 62 "/usr/local/cuda/include/thrust/detail/pointer.inl"
super_t::base_reference() = thrust::detail::pointer_traits< OtherPointer> ::get(other);
# 63 "/usr/local/cuda/include/thrust/detail/pointer.inl"
return static_cast< derived_type &>(*this);
# 64 "/usr/local/cuda/include/thrust/detail/pointer.inl"
}
# 67 "/usr/local/cuda/include/thrust/detail/pointer.inl"
template< class Element, class Tag, class Reference, class Derived> typename detail::pointer_base< Element, Tag, Reference, Derived> ::type::reference
# 70 "/usr/local/cuda/include/thrust/detail/pointer.inl"
pointer< Element, Tag, Reference, Derived> ::dereference() const
# 71 "/usr/local/cuda/include/thrust/detail/pointer.inl"
{
# 72 "/usr/local/cuda/include/thrust/detail/pointer.inl"
return (typename ::thrust::detail::pointer_base< Element, Tag, Reference, Derived> ::type::reference)(static_cast< const derived_type &>(*this));
# 73 "/usr/local/cuda/include/thrust/detail/pointer.inl"
}
# 76 "/usr/local/cuda/include/thrust/detail/pointer.inl"
template< class Element, class Tag, class Reference, class Derived> Element *
# 78 "/usr/local/cuda/include/thrust/detail/pointer.inl"
pointer< Element, Tag, Reference, Derived> ::get() const
# 79 "/usr/local/cuda/include/thrust/detail/pointer.inl"
{
# 80 "/usr/local/cuda/include/thrust/detail/pointer.inl"
return super_t::base();
# 81 "/usr/local/cuda/include/thrust/detail/pointer.inl"
}
# 83 "/usr/local/cuda/include/thrust/detail/pointer.inl"
template< class Element, class Tag, class Reference, class Derived, class
# 84 "/usr/local/cuda/include/thrust/detail/pointer.inl"
charT, class traits> std::basic_ostream< charT, traits> &
# 86 "/usr/local/cuda/include/thrust/detail/pointer.inl"
operator<<(std::basic_ostream< charT, traits> &os, const pointer< Element, Tag, Reference, Derived> &
# 87 "/usr/local/cuda/include/thrust/detail/pointer.inl"
p) {
# 88 "/usr/local/cuda/include/thrust/detail/pointer.inl"
return os << (p.get());
# 89 "/usr/local/cuda/include/thrust/detail/pointer.inl"
}
# 91 "/usr/local/cuda/include/thrust/detail/pointer.inl"
namespace detail {
# 146 "/usr/local/cuda/include/thrust/detail/pointer.inl"
}
# 149 "/usr/local/cuda/include/thrust/detail/pointer.inl"
}
# 26 "/usr/local/cuda/include/thrust/detail/reference.h"
namespace thrust {
# 28 "/usr/local/cuda/include/thrust/detail/reference.h"
namespace detail {
# 31 "/usr/local/cuda/include/thrust/detail/reference.h"
template< class > struct is_wrapped_reference;
# 33 "/usr/local/cuda/include/thrust/detail/reference.h"
}
# 42 "/usr/local/cuda/include/thrust/detail/reference.h"
template< class Element, class Pointer, class Derived>
# 43 "/usr/local/cuda/include/thrust/detail/reference.h"
class reference {
# 50 "/usr/local/cuda/include/thrust/detail/reference.h"
typedef typename detail::eval_if< detail::is_same< Derived, use_default> ::value, detail::identity_< reference> , detail::identity_< Derived> > ::type derived_type;
# 54 "/usr/local/cuda/include/thrust/detail/reference.h"
struct wrapped_reference_hint { };
# 55 "/usr/local/cuda/include/thrust/detail/reference.h"
template< class > friend struct detail::is_wrapped_reference;
# 58 "/usr/local/cuda/include/thrust/detail/reference.h"
public: typedef Pointer pointer;
# 59 "/usr/local/cuda/include/thrust/detail/reference.h"
typedef typename detail::remove_const< Element> ::type value_type;
# 62 "/usr/local/cuda/include/thrust/detail/reference.h"
explicit reference(const pointer & ptr);
# 64 "/usr/local/cuda/include/thrust/detail/reference.h"
template< class OtherElement, class OtherPointer, class OtherDerived> reference(const thrust::reference< OtherElement, OtherPointer, OtherDerived> & other, typename detail::enable_if_convertible< typename thrust::reference< OtherElement, OtherPointer, OtherDerived> ::pointer, Pointer> ::type * = 0);
# 73 "/usr/local/cuda/include/thrust/detail/reference.h"
derived_type &operator=(const reference & other);
# 76 "/usr/local/cuda/include/thrust/detail/reference.h"
template< class OtherElement, class OtherPointer, class OtherDerived> derived_type &operator=(const thrust::reference< OtherElement, OtherPointer, OtherDerived> & other);
# 81 "/usr/local/cuda/include/thrust/detail/reference.h"
derived_type &operator=(const value_type & x);
# 84 "/usr/local/cuda/include/thrust/detail/reference.h"
pointer operator&() const;
# 87 "/usr/local/cuda/include/thrust/detail/reference.h"
operator value_type() const;
# 90 "/usr/local/cuda/include/thrust/detail/reference.h"
void swap(derived_type & other);
# 92 "/usr/local/cuda/include/thrust/detail/reference.h"
derived_type &operator++();
# 94 "/usr/local/cuda/include/thrust/detail/reference.h"
value_type operator++(int);
# 97 "/usr/local/cuda/include/thrust/detail/reference.h"
derived_type &operator+=(const value_type & rhs);
# 99 "/usr/local/cuda/include/thrust/detail/reference.h"
derived_type &operator--();
# 101 "/usr/local/cuda/include/thrust/detail/reference.h"
value_type operator--(int);
# 104 "/usr/local/cuda/include/thrust/detail/reference.h"
derived_type &operator-=(const value_type & rhs);
# 107 "/usr/local/cuda/include/thrust/detail/reference.h"
derived_type &operator*=(const value_type & rhs);
# 110 "/usr/local/cuda/include/thrust/detail/reference.h"
derived_type &operator/=(const value_type & rhs);
# 113 "/usr/local/cuda/include/thrust/detail/reference.h"
derived_type &operator%=(const value_type & rhs);
# 116 "/usr/local/cuda/include/thrust/detail/reference.h"
derived_type &operator<<=(const value_type & rhs);
# 119 "/usr/local/cuda/include/thrust/detail/reference.h"
derived_type &operator>>=(const value_type & rhs);
# 122 "/usr/local/cuda/include/thrust/detail/reference.h"
derived_type &operator&=(const value_type & rhs);
# 125 "/usr/local/cuda/include/thrust/detail/reference.h"
derived_type &operator|=(const value_type & rhs);
# 128 "/usr/local/cuda/include/thrust/detail/reference.h"
derived_type &operator^=(const value_type & rhs);
# 131 "/usr/local/cuda/include/thrust/detail/reference.h"
private: const pointer m_ptr;
# 134 "/usr/local/cuda/include/thrust/detail/reference.h"
template< class OtherElement, class OtherPointer, class OtherDerived> friend class reference;
# 136 "/usr/local/cuda/include/thrust/detail/reference.h"
template< class System> inline value_type strip_const_get_value(const System & system) const;
# 140 "/usr/local/cuda/include/thrust/detail/reference.h"
template< class OtherPointer> inline void assign_from(OtherPointer src);
# 145 "/usr/local/cuda/include/thrust/detail/reference.h"
template< class System1, class System2, class OtherPointer> inline void assign_from(System1 * system1, System2 * system2, OtherPointer src);
# 149 "/usr/local/cuda/include/thrust/detail/reference.h"
template< class System, class OtherPointer> inline void strip_const_assign_value(const System & system, OtherPointer src);
# 154 "/usr/local/cuda/include/thrust/detail/reference.h"
template< class System> inline void swap(System * system, derived_type & other);
# 159 "/usr/local/cuda/include/thrust/detail/reference.h"
template< class System> inline value_type convert_to_value_type(System * system) const;
# 162 "/usr/local/cuda/include/thrust/detail/reference.h"
};
# 165 "/usr/local/cuda/include/thrust/detail/reference.h"
template< class Element, class Pointer, class Derived, class
# 166 "/usr/local/cuda/include/thrust/detail/reference.h"
charT, class traits> std::basic_ostream< charT, traits> &
# 165 "/usr/local/cuda/include/thrust/detail/reference.h"
operator<<(std::basic_ostream< charT, traits> & os, const reference< Element, Pointer, Derived> & y);
# 171 "/usr/local/cuda/include/thrust/detail/reference.h"
}
# 21 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
namespace detail {
# 27 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
namespace minimum_type_detail {
# 34 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
template< class T1, class T2, bool GreaterEqual, bool LessEqual> struct minimum_type_impl { };
# 36 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
template< class T1, class T2>
# 37 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
struct minimum_type_impl< T1, T2, true, false> {
# 39 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
typedef T2 type;
# 40 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
};
# 42 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
template< class T1, class T2>
# 43 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
struct minimum_type_impl< T1, T2, false, true> {
# 45 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
typedef T1 type;
# 46 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
};
# 48 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
template< class T1, class T2>
# 49 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
struct minimum_type_impl< T1, T2, true, true> {
# 51 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
typedef T1 type;
# 52 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
};
# 54 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
template< class T1, class T2>
# 55 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
struct primitive_minimum_type : public minimum_type_impl< T1, T2, is_convertible< T1, T2> ::value, is_convertible< T2, T1> ::value> {
# 63 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
};
# 67 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
template< class T>
# 68 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
struct primitive_minimum_type< T, T> {
# 70 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
typedef T type;
# 71 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
};
# 74 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
struct any_conversion {
# 76 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
template< class T> operator T();
# 77 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
};
# 79 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
}
# 81 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
template< class T1, class
# 82 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
T2 = minimum_type_detail::any_conversion, class
# 83 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
T3 = minimum_type_detail::any_conversion, class
# 84 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
T4 = minimum_type_detail::any_conversion, class
# 85 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
T5 = minimum_type_detail::any_conversion, class
# 86 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
T6 = minimum_type_detail::any_conversion, class
# 87 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
T7 = minimum_type_detail::any_conversion, class
# 88 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
T8 = minimum_type_detail::any_conversion, class
# 89 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
T9 = minimum_type_detail::any_conversion, class
# 90 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
T10 = minimum_type_detail::any_conversion, class
# 91 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
T11 = minimum_type_detail::any_conversion, class
# 92 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
T12 = minimum_type_detail::any_conversion, class
# 93 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
T13 = minimum_type_detail::any_conversion, class
# 94 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
T14 = minimum_type_detail::any_conversion, class
# 95 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
T15 = minimum_type_detail::any_conversion, class
# 96 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
T16 = minimum_type_detail::any_conversion> struct minimum_type;
# 100 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
template< class T1, class T2>
# 101 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
struct minimum_type< T1, T2, minimum_type_detail::any_conversion, minimum_type_detail::any_conversion, minimum_type_detail::any_conversion, minimum_type_detail::any_conversion, minimum_type_detail::any_conversion, minimum_type_detail::any_conversion, minimum_type_detail::any_conversion, minimum_type_detail::any_conversion, minimum_type_detail::any_conversion, minimum_type_detail::any_conversion, minimum_type_detail::any_conversion, minimum_type_detail::any_conversion, minimum_type_detail::any_conversion, minimum_type_detail::any_conversion> : public minimum_type_detail::primitive_minimum_type< T1, T2> {
# 103 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
};
# 105 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
template< class T1, class T2>
# 106 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
struct lazy_minimum_type : public minimum_type< typename T1::type, typename T2::type> {
# 111 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
};
# 114 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
template< class T1, class T2, class T3, class T4, class
# 115 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
T5, class T6, class T7, class T8, class
# 116 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
T9, class T10, class T11, class T12, class
# 117 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
T13, class T14, class T15, class T16>
# 118 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
struct minimum_type : public lazy_minimum_type< lazy_minimum_type< lazy_minimum_type< minimum_type< T1, T2> , minimum_type< T3, T4> > , lazy_minimum_type< minimum_type< T5, T6> , minimum_type< T7, T8> > > , lazy_minimum_type< lazy_minimum_type< minimum_type< T9, T10> , minimum_type< T11, T12> > , lazy_minimum_type< minimum_type< T13, T14> , minimum_type< T15, T16> > > > {
# 157 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
};
# 159 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
}
# 161 "/usr/local/cuda/include/thrust/detail/type_traits/minimum_type.h"
}
# 24 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
namespace detail {
# 30 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
template< class T1, class
# 31 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T2 = void, class
# 32 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T3 = void, class
# 33 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T4 = void, class
# 34 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T5 = void, class
# 35 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T6 = void, class
# 36 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T7 = void, class
# 37 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T8 = void, class
# 38 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T9 = void, class
# 39 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T10 = void, class
# 40 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T11 = void, class
# 41 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T12 = void, class
# 42 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T13 = void, class
# 43 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T14 = void, class
# 44 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T15 = void, class
# 45 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T16 = void>
# 46 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
struct unrelated_systems { };
# 51 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
template< class T1, class
# 52 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T2 = minimum_type_detail::any_conversion, class
# 53 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T3 = minimum_type_detail::any_conversion, class
# 54 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T4 = minimum_type_detail::any_conversion, class
# 55 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T5 = minimum_type_detail::any_conversion, class
# 56 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T6 = minimum_type_detail::any_conversion, class
# 57 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T7 = minimum_type_detail::any_conversion, class
# 58 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T8 = minimum_type_detail::any_conversion, class
# 59 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T9 = minimum_type_detail::any_conversion, class
# 60 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T10 = minimum_type_detail::any_conversion, class
# 61 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T11 = minimum_type_detail::any_conversion, class
# 62 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T12 = minimum_type_detail::any_conversion, class
# 63 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T13 = minimum_type_detail::any_conversion, class
# 64 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T14 = minimum_type_detail::any_conversion, class
# 65 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T15 = minimum_type_detail::any_conversion, class
# 66 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
T16 = minimum_type_detail::any_conversion>
# 67 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
struct minimum_system : public eval_if< is_metafunction_defined< minimum_type< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> > ::value, minimum_type< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> , identity_< unrelated_systems< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> > > {
# 77 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
};
# 80 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
}
# 81 "/usr/local/cuda/include/thrust/iterator/detail/minimum_system.h"
}
# 26 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
namespace thrust {
# 30 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
struct any_system_tag;
# 32 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
namespace system {
# 34 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
namespace detail {
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
namespace generic_type_traits_ns {
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
typedef char yes;
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
typedef char (&no)[2];
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
struct any_conversion {
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
template< class T> any_conversion(const T &);
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
any_conversion(const any_system_tag &);
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
};
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
namespace select_system_exists_ns {
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
no select_system(const any_conversion &);
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
no select_system(const any_conversion &, const any_conversion &);
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
no select_system(const any_conversion &, const any_conversion &, const any_conversion &);
# 57 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
no select_system(const any_conversion &, const any_conversion &, const any_conversion &, const any_conversion &);
# 58 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
no select_system(const any_conversion &, const any_conversion &, const any_conversion &, const any_conversion &, const any_conversion &);
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
no select_system(const any_conversion &, const any_conversion &, const any_conversion &, const any_conversion &, const any_conversion &, const any_conversion &);
# 61 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
template< class T> yes check(const T &);
# 63 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
no check(no);
# 65 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
template< class Tag>
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
struct select_system1_exists {
# 68 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag &tag;
# 70 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static const bool value = (sizeof(check(select_system(tag))) == sizeof(yes));
# 71 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
};
# 73 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
template< class Tag1, class Tag2>
# 74 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
struct select_system2_exists {
# 76 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag1 &tag1;
# 77 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag2 &tag2;
# 79 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static const bool value = (sizeof(check(select_system(tag1, tag2))) == sizeof(yes));
# 80 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
};
# 82 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
template< class Tag1, class Tag2, class Tag3>
# 83 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
struct select_system3_exists {
# 85 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag1 &tag1;
# 86 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag2 &tag2;
# 87 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag3 &tag3;
# 89 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static const bool value = (sizeof(check(select_system(tag1, tag2, tag3))) == sizeof(yes));
# 90 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
};
# 92 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
template< class Tag1, class Tag2, class Tag3, class Tag4>
# 93 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
struct select_system4_exists {
# 95 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag1 &tag1;
# 96 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag2 &tag2;
# 97 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag3 &tag3;
# 98 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag4 &tag4;
# 100 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static const bool value = (sizeof(check(select_system(tag1, tag2, tag3, tag4))) == sizeof(yes));
# 101 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
};
# 103 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
template< class Tag1, class Tag2, class Tag3, class Tag4, class Tag5>
# 104 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
struct select_system5_exists {
# 106 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag1 &tag1;
# 107 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag2 &tag2;
# 108 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag3 &tag3;
# 109 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag4 &tag4;
# 110 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag5 &tag5;
# 112 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static const bool value = (sizeof(check(select_system(tag1, tag2, tag3, tag4, tag5))) == sizeof(yes));
# 113 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
};
# 115 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
template< class Tag1, class Tag2, class Tag3, class Tag4, class Tag5, class Tag6>
# 116 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
struct select_system6_exists {
# 118 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag1 &tag1;
# 119 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag2 &tag2;
# 120 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag3 &tag3;
# 121 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag4 &tag4;
# 122 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag5 &tag5;
# 123 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static Tag6 &tag6;
# 125 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
static const bool value = (sizeof(check(select_system(tag1, tag2, tag3, tag4, tag5, tag6))) == sizeof(yes));
# 126 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
};
# 127 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
}
# 129 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
}
# 131 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
namespace generic {
# 134 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
template< class Tag>
# 135 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
struct select_system1_exists : public generic_type_traits_ns::select_system_exists_ns::select_system1_exists< Tag> {
# 137 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
};
# 139 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
template< class Tag1, class Tag2>
# 140 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
struct select_system2_exists : public generic_type_traits_ns::select_system_exists_ns::select_system2_exists< Tag1, Tag2> {
# 142 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
};
# 144 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
template< class Tag1, class Tag2, class Tag3>
# 145 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
struct select_system3_exists : public generic_type_traits_ns::select_system_exists_ns::select_system3_exists< Tag1, Tag2, Tag3> {
# 147 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
};
# 149 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
template< class Tag1, class Tag2, class Tag3, class Tag4>
# 150 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
struct select_system4_exists : public generic_type_traits_ns::select_system_exists_ns::select_system4_exists< Tag1, Tag2, Tag3, Tag4> {
# 152 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
};
# 154 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
template< class Tag1, class Tag2, class Tag3, class Tag4, class Tag5>
# 155 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
struct select_system5_exists : public generic_type_traits_ns::select_system_exists_ns::select_system5_exists< Tag1, Tag2, Tag3, Tag4, Tag5> {
# 157 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
};
# 159 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
template< class Tag1, class Tag2, class Tag3, class Tag4, class Tag5, class Tag6>
# 160 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
struct select_system6_exists : public generic_type_traits_ns::select_system_exists_ns::select_system6_exists< Tag1, Tag2, Tag3, Tag4, Tag5, Tag6> {
# 162 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
};
# 164 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
}
# 165 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
}
# 166 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
}
# 167 "/usr/local/cuda/include/thrust/system/detail/generic/type_traits.h"
}
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
namespace system {
# 31 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
namespace detail {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
namespace generic {
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
namespace select_system_detail {
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
template< class System> System &
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
min_system(execution_policy< System> &system1, execution_policy< System> &)
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
{
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
return thrust::detail::derived_cast(system1);
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
}
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
template< class System1, class System2> typename thrust::detail::enable_if< thrust::detail::is_same< System1, typename thrust::detail::minimum_system< System1, System2> ::type> ::value, System1 &> ::type
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
min_system(execution_policy< System1> &system1, execution_policy< System2> &)
# 60 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
{
# 61 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
return thrust::detail::derived_cast(system1);
# 62 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
}
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
template< class System1, class System2> typename thrust::detail::enable_if< thrust::detail::is_same< System2, typename thrust::detail::minimum_system< System1, System2> ::type> ::value, System2 &> ::type
# 75 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
min_system(execution_policy< System1> &, execution_policy< System2> &system2)
# 76 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
{
# 77 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
return thrust::detail::derived_cast(system2);
# 78 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
}
# 81 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
}
# 84 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
template< class System> typename thrust::detail::disable_if< select_system1_exists< System> ::value, System &> ::type
# 90 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
select_system(execution_policy< System> &system)
# 91 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
{
# 92 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
return thrust::detail::derived_cast(system);
# 93 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
}
# 96 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
template< class System1, class System2> typename thrust::detail::enable_if_defined< thrust::detail::minimum_system< System1, System2> > ::type &
# 101 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
select_system(execution_policy< System1> &system1, execution_policy< System2> &
# 102 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
system2)
# 103 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
{
# 104 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
return select_system_detail::min_system(system1, system2);
# 105 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
}
# 108 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
template< class System1, class System2, class System3> typename thrust::detail::lazy_disable_if< select_system3_exists< System1, System2, System3> ::value, thrust::detail::minimum_system< System1, System2, System3> > ::type &
# 114 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
select_system(execution_policy< System1> &system1, execution_policy< System2> &
# 115 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
system2, execution_policy< System3> &
# 116 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
system3)
# 117 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
{
# 118 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
return select_system(select_system(system1, system2), system3);
# 119 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
}
# 122 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
template< class System1, class System2, class System3, class System4> typename thrust::detail::lazy_disable_if< select_system4_exists< System1, System2, System3, System4> ::value, thrust::detail::minimum_system< System1, System2, System3, System4> > ::type &
# 128 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
select_system(execution_policy< System1> &system1, execution_policy< System2> &
# 129 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
system2, execution_policy< System3> &
# 130 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
system3, execution_policy< System4> &
# 131 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
system4)
# 132 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
{
# 133 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
return select_system(select_system(system1, system2, system3), system4);
# 134 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
}
# 137 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
template< class System1, class System2, class System3, class System4, class System5> typename thrust::detail::lazy_disable_if< select_system5_exists< System1, System2, System3, System4, System5> ::value, thrust::detail::minimum_system< System1, System2, System3, System4, System5> > ::type &
# 143 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
select_system(execution_policy< System1> &system1, execution_policy< System2> &
# 144 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
system2, execution_policy< System3> &
# 145 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
system3, execution_policy< System4> &
# 146 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
system4, execution_policy< System5> &
# 147 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
system5)
# 148 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
{
# 149 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
return select_system(select_system(system1, system2, system3, system4), system5);
# 150 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
}
# 153 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
template< class System1, class System2, class System3, class System4, class System5, class System6> typename thrust::detail::lazy_disable_if< select_system6_exists< System1, System2, System3, System4, System5, System6> ::value, thrust::detail::minimum_system< System1, System2, System3, System4, System5, System6> > ::type &
# 159 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
select_system(execution_policy< System1> &system1, execution_policy< System2> &
# 160 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
system2, execution_policy< System3> &
# 161 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
system3, execution_policy< System4> &
# 162 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
system4, execution_policy< System5> &
# 163 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
system5, execution_policy< System6> &
# 164 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
system6)
# 165 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
{
# 166 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
return select_system(select_system(system1, system2, system3, system4, system5), system6);
# 167 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
}
# 172 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
inline device_system_tag select_system(any_system_tag)
# 173 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
{
# 174 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
return device_system_tag();
# 175 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
}
# 178 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
}
# 179 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
}
# 180 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
}
# 181 "/usr/local/cuda/include/thrust/system/detail/generic/select_system.h"
}
# 26 "/usr/local/cuda/include/thrust/system/detail/generic/tag.h"
namespace thrust {
# 28 "/usr/local/cuda/include/thrust/system/detail/generic/tag.h"
namespace system {
# 30 "/usr/local/cuda/include/thrust/system/detail/generic/tag.h"
namespace detail {
# 32 "/usr/local/cuda/include/thrust/system/detail/generic/tag.h"
namespace generic {
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/tag.h"
struct tag {
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/tag.h"
template< class T>
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/tag.h"
tag(const T &) { }
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/tag.h"
};
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/tag.h"
}
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/tag.h"
}
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/tag.h"
}
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/tag.h"
}
# 67 "/usr/include/c++/5/bits/stl_relops.h" 3

# 67 "/usr/include/c++/5/bits/stl_relops.h" 3
namespace std __attribute((__visibility__("default"))) {
# 69 "/usr/include/c++/5/bits/stl_relops.h" 3
namespace rel_ops {
# 85 "/usr/include/c++/5/bits/stl_relops.h" 3
template< class _Tp> inline bool
# 87 "/usr/include/c++/5/bits/stl_relops.h" 3
operator!=(const _Tp &__x, const _Tp &__y)
# 88 "/usr/include/c++/5/bits/stl_relops.h" 3
{ return !(__x == __y); }
# 98 "/usr/include/c++/5/bits/stl_relops.h" 3
template< class _Tp> inline bool
# 100 "/usr/include/c++/5/bits/stl_relops.h" 3
operator>(const _Tp &__x, const _Tp &__y)
# 101 "/usr/include/c++/5/bits/stl_relops.h" 3
{ return __y < __x; }
# 111 "/usr/include/c++/5/bits/stl_relops.h" 3
template< class _Tp> inline bool
# 113 "/usr/include/c++/5/bits/stl_relops.h" 3
operator<=(const _Tp &__x, const _Tp &__y)
# 114 "/usr/include/c++/5/bits/stl_relops.h" 3
{ return !(__y < __x); }
# 124 "/usr/include/c++/5/bits/stl_relops.h" 3
template< class _Tp> inline bool
# 126 "/usr/include/c++/5/bits/stl_relops.h" 3
operator>=(const _Tp &__x, const _Tp &__y)
# 127 "/usr/include/c++/5/bits/stl_relops.h" 3
{ return !(__x < __y); }
# 130 "/usr/include/c++/5/bits/stl_relops.h" 3
}
# 132 "/usr/include/c++/5/bits/stl_relops.h" 3
}
# 26 "/usr/local/cuda/include/thrust/pair.h"

# 26 "/usr/local/cuda/include/thrust/pair.h"
namespace thrust {
# 48 "/usr/local/cuda/include/thrust/pair.h"
template< class T1, class T2>
# 49 "/usr/local/cuda/include/thrust/pair.h"
struct pair {
# 53 "/usr/local/cuda/include/thrust/pair.h"
typedef T1 first_type;
# 57 "/usr/local/cuda/include/thrust/pair.h"
typedef T2 second_type;
# 61 "/usr/local/cuda/include/thrust/pair.h"
first_type first;
# 65 "/usr/local/cuda/include/thrust/pair.h"
second_type second;
# 71 "/usr/local/cuda/include/thrust/pair.h"
pair();
# 79 "/usr/local/cuda/include/thrust/pair.h"
inline pair(const T1 & x, const T2 & y);
# 90 "/usr/local/cuda/include/thrust/pair.h"
template< class U1, class U2> inline pair(const thrust::pair< U1, U2> & p);
# 103 "/usr/local/cuda/include/thrust/pair.h"
template< class U1, class U2> inline pair(const std::pair< U1, U2> & p);
# 112 "/usr/local/cuda/include/thrust/pair.h"
inline void swap(pair & p);
# 113 "/usr/local/cuda/include/thrust/pair.h"
};
# 125 "/usr/local/cuda/include/thrust/pair.h"
template< class T1, class T2> inline bool operator==(const pair< T1, T2> & x, const pair< T1, T2> & y);
# 139 "/usr/local/cuda/include/thrust/pair.h"
template< class T1, class T2> inline bool operator<(const pair< T1, T2> & x, const pair< T1, T2> & y);
# 153 "/usr/local/cuda/include/thrust/pair.h"
template< class T1, class T2> inline bool operator!=(const pair< T1, T2> & x, const pair< T1, T2> & y);
# 167 "/usr/local/cuda/include/thrust/pair.h"
template< class T1, class T2> inline bool operator>(const pair< T1, T2> & x, const pair< T1, T2> & y);
# 181 "/usr/local/cuda/include/thrust/pair.h"
template< class T1, class T2> inline bool operator<=(const pair< T1, T2> & x, const pair< T1, T2> & y);
# 195 "/usr/local/cuda/include/thrust/pair.h"
template< class T1, class T2> inline bool operator>=(const pair< T1, T2> & x, const pair< T1, T2> & y);
# 205 "/usr/local/cuda/include/thrust/pair.h"
template< class T1, class T2> inline void swap(pair< T1, T2> & x, pair< T1, T2> & y);
# 219 "/usr/local/cuda/include/thrust/pair.h"
template< class T1, class T2> inline pair< T1, T2> make_pair(T1 x, T2 y);
# 231 "/usr/local/cuda/include/thrust/pair.h"
template< int N, class T> struct tuple_element;
# 240 "/usr/local/cuda/include/thrust/pair.h"
template< class Pair> struct tuple_size;
# 280 "/usr/local/cuda/include/thrust/pair.h"
}
# 22 "/usr/local/cuda/include/thrust/detail/swap.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/detail/swap.h"
template< class Assignable1, class Assignable2> inline void
# 28 "/usr/local/cuda/include/thrust/detail/swap.h"
swap(Assignable1 &a, Assignable2 &b)
# 29 "/usr/local/cuda/include/thrust/detail/swap.h"
{
# 30 "/usr/local/cuda/include/thrust/detail/swap.h"
Assignable1 temp = a;
# 31 "/usr/local/cuda/include/thrust/detail/swap.h"
a = b;
# 32 "/usr/local/cuda/include/thrust/detail/swap.h"
b = temp;
# 33 "/usr/local/cuda/include/thrust/detail/swap.h"
}
# 35 "/usr/local/cuda/include/thrust/detail/swap.h"
}
# 20 "/usr/local/cuda/include/thrust/detail/pair.inl"
namespace thrust {
# 23 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class T1, class T2>
# 25 "/usr/local/cuda/include/thrust/detail/pair.inl"
pair< T1, T2> ::pair() : first(), second()
# 27 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 28 "/usr/local/cuda/include/thrust/detail/pair.inl"
;
# 29 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 32 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class T1, class T2> inline
# 34 "/usr/local/cuda/include/thrust/detail/pair.inl"
pair< T1, T2> ::pair(const T1 &x, const T2 &y) : first(x), second(y)
# 36 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 37 "/usr/local/cuda/include/thrust/detail/pair.inl"
;
# 38 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 41 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class T1, class T2>
# 42 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class U1, class U2> inline
# 44 "/usr/local/cuda/include/thrust/detail/pair.inl"
pair< T1, T2> ::pair(const thrust::pair< U1, U2> &p) : first((p.first)), second((p.second))
# 46 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 47 "/usr/local/cuda/include/thrust/detail/pair.inl"
;
# 48 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 51 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class T1, class T2>
# 52 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class U1, class U2> inline
# 54 "/usr/local/cuda/include/thrust/detail/pair.inl"
pair< T1, T2> ::pair(const std::pair< U1, U2> &p) : first((p.first)), second((p.second))
# 56 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 57 "/usr/local/cuda/include/thrust/detail/pair.inl"
;
# 58 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 61 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class T1, class T2> inline void
# 64 "/usr/local/cuda/include/thrust/detail/pair.inl"
pair< T1, T2> ::swap(pair &p)
# 65 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 66 "/usr/local/cuda/include/thrust/detail/pair.inl"
using thrust::swap;
# 68 "/usr/local/cuda/include/thrust/detail/pair.inl"
swap(first, p.first);
# 69 "/usr/local/cuda/include/thrust/detail/pair.inl"
swap(second, p.second);
# 70 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 73 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class T1, class T2> inline bool
# 75 "/usr/local/cuda/include/thrust/detail/pair.inl"
operator==(const pair< T1, T2> &x, const pair< T1, T2> &y)
# 76 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 77 "/usr/local/cuda/include/thrust/detail/pair.inl"
return ((x.first) == (y.first)) && ((x.second) == (y.second));
# 78 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 81 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class T1, class T2> inline bool
# 83 "/usr/local/cuda/include/thrust/detail/pair.inl"
operator<(const pair< T1, T2> &x, const pair< T1, T2> &y)
# 84 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 85 "/usr/local/cuda/include/thrust/detail/pair.inl"
return ((x.first) < (y.first)) || ((!((y.first) < (x.first))) && ((x.second) < (y.second)));
# 86 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 89 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class T1, class T2> inline bool
# 91 "/usr/local/cuda/include/thrust/detail/pair.inl"
operator!=(const pair< T1, T2> &x, const pair< T1, T2> &y)
# 92 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 93 "/usr/local/cuda/include/thrust/detail/pair.inl"
return !(x == y);
# 94 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 97 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class T1, class T2> inline bool
# 99 "/usr/local/cuda/include/thrust/detail/pair.inl"
operator>(const pair< T1, T2> &x, const pair< T1, T2> &y)
# 100 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 101 "/usr/local/cuda/include/thrust/detail/pair.inl"
return y < x;
# 102 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 105 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class T1, class T2> inline bool
# 107 "/usr/local/cuda/include/thrust/detail/pair.inl"
operator<=(const pair< T1, T2> &x, const pair< T1, T2> &y)
# 108 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 109 "/usr/local/cuda/include/thrust/detail/pair.inl"
return !(y < x);
# 110 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 113 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class T1, class T2> inline bool
# 115 "/usr/local/cuda/include/thrust/detail/pair.inl"
operator>=(const pair< T1, T2> &x, const pair< T1, T2> &y)
# 116 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 117 "/usr/local/cuda/include/thrust/detail/pair.inl"
return !(x < y);
# 118 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 121 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class T1, class T2> inline void
# 123 "/usr/local/cuda/include/thrust/detail/pair.inl"
swap(pair< T1, T2> &x, pair< T1, T2> &y)
# 124 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 125 "/usr/local/cuda/include/thrust/detail/pair.inl"
return (x.swap(y));
# 126 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 129 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class T1, class T2> inline pair< T1, T2>
# 131 "/usr/local/cuda/include/thrust/detail/pair.inl"
make_pair(T1 x, T2 y)
# 132 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 133 "/usr/local/cuda/include/thrust/detail/pair.inl"
return pair< T1, T2> (x, y);
# 134 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 138 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class T1, class T2>
# 139 "/usr/local/cuda/include/thrust/detail/pair.inl"
struct tuple_element< 0, pair< T1, T2> > {
# 141 "/usr/local/cuda/include/thrust/detail/pair.inl"
typedef T1 type;
# 142 "/usr/local/cuda/include/thrust/detail/pair.inl"
};
# 144 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class T1, class T2>
# 145 "/usr/local/cuda/include/thrust/detail/pair.inl"
struct tuple_element< 1, pair< T1, T2> > {
# 147 "/usr/local/cuda/include/thrust/detail/pair.inl"
typedef T2 type;
# 148 "/usr/local/cuda/include/thrust/detail/pair.inl"
};
# 152 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class T1, class T2>
# 153 "/usr/local/cuda/include/thrust/detail/pair.inl"
struct tuple_size< pair< T1, T2> > {
# 155 "/usr/local/cuda/include/thrust/detail/pair.inl"
static const unsigned value = (2);
# 156 "/usr/local/cuda/include/thrust/detail/pair.inl"
};
# 160 "/usr/local/cuda/include/thrust/detail/pair.inl"
namespace detail {
# 164 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< int N, class Pair> struct pair_get { };
# 166 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class Pair>
# 167 "/usr/local/cuda/include/thrust/detail/pair.inl"
struct pair_get< 0, Pair> {
# 171 "/usr/local/cuda/include/thrust/detail/pair.inl"
const typename tuple_element< 0, Pair> ::type &operator()(const Pair &p) const
# 172 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 173 "/usr/local/cuda/include/thrust/detail/pair.inl"
return p.first;
# 174 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 178 "/usr/local/cuda/include/thrust/detail/pair.inl"
typename tuple_element< 0, Pair> ::type &operator()(Pair &p) const
# 179 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 180 "/usr/local/cuda/include/thrust/detail/pair.inl"
return p.first;
# 181 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 182 "/usr/local/cuda/include/thrust/detail/pair.inl"
};
# 185 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< class Pair>
# 186 "/usr/local/cuda/include/thrust/detail/pair.inl"
struct pair_get< 1, Pair> {
# 190 "/usr/local/cuda/include/thrust/detail/pair.inl"
const typename tuple_element< 1, Pair> ::type &operator()(const Pair &p) const
# 191 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 192 "/usr/local/cuda/include/thrust/detail/pair.inl"
return p.second;
# 193 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 197 "/usr/local/cuda/include/thrust/detail/pair.inl"
typename tuple_element< 1, Pair> ::type &operator()(Pair &p) const
# 198 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 199 "/usr/local/cuda/include/thrust/detail/pair.inl"
return p.second;
# 200 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 201 "/usr/local/cuda/include/thrust/detail/pair.inl"
};
# 203 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 207 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< unsigned N, class T1, class T2> inline typename tuple_element< N, pair< T1, T2> > ::type &
# 210 "/usr/local/cuda/include/thrust/detail/pair.inl"
get(pair< T1, T2> &p)
# 211 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 212 "/usr/local/cuda/include/thrust/detail/pair.inl"
return detail::pair_get< N, pair< T1, T2> > ()(p);
# 213 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 215 "/usr/local/cuda/include/thrust/detail/pair.inl"
template< unsigned N, class T1, class T2> inline const typename tuple_element< N, pair< T1, T2> > ::type &
# 218 "/usr/local/cuda/include/thrust/detail/pair.inl"
get(const pair< T1, T2> &p)
# 219 "/usr/local/cuda/include/thrust/detail/pair.inl"
{
# 220 "/usr/local/cuda/include/thrust/detail/pair.inl"
return detail::pair_get< N, pair< T1, T2> > ()(p);
# 221 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 224 "/usr/local/cuda/include/thrust/detail/pair.inl"
}
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/memory.h"
namespace thrust {
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/memory.h"
namespace system {
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/memory.h"
namespace detail {
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/memory.h"
namespace generic {
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/memory.h"
template< class DerivedPolicy, class Size> void malloc(execution_policy< DerivedPolicy> &, Size);
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/memory.h"
template< class T, class DerivedPolicy> pointer< T, DerivedPolicy, use_default, use_default> malloc(execution_policy< DerivedPolicy> & s, std::size_t n);
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/memory.h"
template< class DerivedPolicy, class Pointer> void free(execution_policy< DerivedPolicy> &, Pointer);
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/memory.h"
template< class Pointer1, class Pointer2> void assign_value(tag, Pointer1, Pointer2);
# 58 "/usr/local/cuda/include/thrust/system/detail/generic/memory.h"
template< class DerivedPolicy, class Pointer> void get_value(execution_policy< DerivedPolicy> &, Pointer);
# 62 "/usr/local/cuda/include/thrust/system/detail/generic/memory.h"
template< class Pointer1, class Pointer2> void iter_swap(tag, Pointer1, Pointer2);
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/memory.h"
}
# 67 "/usr/local/cuda/include/thrust/system/detail/generic/memory.h"
}
# 68 "/usr/local/cuda/include/thrust/system/detail/generic/memory.h"
}
# 69 "/usr/local/cuda/include/thrust/system/detail/generic/memory.h"
}
# 22 "/usr/local/cuda/include/thrust/detail/raw_pointer_cast.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/detail/raw_pointer_cast.h"
template< class Pointer> inline typename detail::pointer_traits< Pointer> ::raw_pointer
# 27 "/usr/local/cuda/include/thrust/detail/raw_pointer_cast.h"
raw_pointer_cast(const Pointer &ptr)
# 28 "/usr/local/cuda/include/thrust/detail/raw_pointer_cast.h"
{
# 29 "/usr/local/cuda/include/thrust/detail/raw_pointer_cast.h"
return thrust::detail::pointer_traits< Pointer> ::get(ptr);
# 30 "/usr/local/cuda/include/thrust/detail/raw_pointer_cast.h"
}
# 32 "/usr/local/cuda/include/thrust/detail/raw_pointer_cast.h"
}
# 24 "/usr/local/cuda/include/thrust/system/detail/sequential/malloc_and_free.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/system/detail/sequential/malloc_and_free.h"
namespace system {
# 28 "/usr/local/cuda/include/thrust/system/detail/sequential/malloc_and_free.h"
namespace detail {
# 30 "/usr/local/cuda/include/thrust/system/detail/sequential/malloc_and_free.h"
namespace sequential {
# 34 "/usr/local/cuda/include/thrust/system/detail/sequential/malloc_and_free.h"
template< class DerivedPolicy> inline void *
# 36 "/usr/local/cuda/include/thrust/system/detail/sequential/malloc_and_free.h"
malloc(execution_policy< DerivedPolicy> &, std::size_t n)
# 37 "/usr/local/cuda/include/thrust/system/detail/sequential/malloc_and_free.h"
{
# 39 "/usr/local/cuda/include/thrust/system/detail/sequential/malloc_and_free.h"
return std::malloc(n);
# 43 "/usr/local/cuda/include/thrust/system/detail/sequential/malloc_and_free.h"
}
# 46 "/usr/local/cuda/include/thrust/system/detail/sequential/malloc_and_free.h"
template< class DerivedPolicy, class Pointer> inline void
# 48 "/usr/local/cuda/include/thrust/system/detail/sequential/malloc_and_free.h"
free(execution_policy< DerivedPolicy> &, Pointer ptr)
# 49 "/usr/local/cuda/include/thrust/system/detail/sequential/malloc_and_free.h"
{
# 51 "/usr/local/cuda/include/thrust/system/detail/sequential/malloc_and_free.h"
std::free(thrust::raw_pointer_cast(ptr));
# 53 "/usr/local/cuda/include/thrust/system/detail/sequential/malloc_and_free.h"
}
# 56 "/usr/local/cuda/include/thrust/system/detail/sequential/malloc_and_free.h"
}
# 57 "/usr/local/cuda/include/thrust/system/detail/sequential/malloc_and_free.h"
}
# 58 "/usr/local/cuda/include/thrust/system/detail/sequential/malloc_and_free.h"
}
# 59 "/usr/local/cuda/include/thrust/system/detail/sequential/malloc_and_free.h"
}
# 27 "/usr/local/cuda/include/thrust/system/detail/errno.h"
namespace thrust {
# 30 "/usr/local/cuda/include/thrust/system/detail/errno.h"
namespace system {
# 33 "/usr/local/cuda/include/thrust/system/detail/errno.h"
namespace detail {
# 36 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eafnosupport = 9901;
# 37 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eaddrinuse = 9902;
# 38 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eaddrnotavail = 9903;
# 39 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eisconn = 9904;
# 40 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int ebadmsg = 9905;
# 41 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int econnaborted = 9906;
# 42 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int ealready = 9907;
# 43 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int econnrefused = 9908;
# 44 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int econnreset = 9909;
# 45 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int edestaddrreq = 9910;
# 46 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int ehostunreach = 9911;
# 47 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eidrm = 9912;
# 48 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int emsgsize = 9913;
# 49 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enetdown = 9914;
# 50 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enetreset = 9915;
# 51 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enetunreach = 9916;
# 52 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enobufs = 9917;
# 53 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enolink = 9918;
# 54 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enodata = 9919;
# 55 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enomsg = 9920;
# 56 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enoprotoopt = 9921;
# 57 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enosr = 9922;
# 58 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enotsock = 9923;
# 59 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enostr = 9924;
# 60 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enotconn = 9925;
# 61 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enotsup = 9926;
# 62 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int ecanceled = 9927;
# 63 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int einprogress = 9928;
# 64 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eopnotsupp = 9929;
# 65 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int ewouldblock = 9930;
# 66 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eownerdead = 9931;
# 67 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eproto = 9932;
# 68 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eprotonosupport = 9933;
# 69 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enotrecoverable = 9934;
# 70 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int etime = 9935;
# 71 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int etxtbsy = 9936;
# 72 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int etimedout = 9938;
# 73 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eloop = 9939;
# 74 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eoverflow = 9940;
# 75 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eprototype = 9941;
# 76 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enosys = 9942;
# 77 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int einval = 9943;
# 78 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int erange = 9944;
# 79 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eilseq = 9945;
# 80 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int e2big = 9946;
# 81 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int edom = 9947;
# 82 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int efault = 9948;
# 83 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int ebadf = 9949;
# 84 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int epipe = 9950;
# 85 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int exdev = 9951;
# 86 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int ebusy = 9952;
# 87 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enotempty = 9953;
# 88 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enoexec = 9954;
# 89 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eexist = 9955;
# 90 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int efbig = 9956;
# 91 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enametoolong = 9957;
# 92 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enotty = 9958;
# 93 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eintr = 9959;
# 94 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int espipe = 9960;
# 95 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eio = 9961;
# 96 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eisdir = 9962;
# 97 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int echild = 9963;
# 98 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enolck = 9964;
# 99 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enospc = 9965;
# 100 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enxio = 9966;
# 101 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enodev = 9967;
# 102 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enoent = 9968;
# 103 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int esrch = 9969;
# 104 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enotdir = 9970;
# 105 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enomem = 9971;
# 106 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eperm = 9972;
# 107 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eacces = 9973;
# 108 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int erofs = 9974;
# 109 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int edeadlk = 9975;
# 110 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int eagain = 9976;
# 111 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int enfile = 9977;
# 112 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int emfile = 9978;
# 113 "/usr/local/cuda/include/thrust/system/detail/errno.h"
static const int emlink = 9979;
# 115 "/usr/local/cuda/include/thrust/system/detail/errno.h"
}
# 117 "/usr/local/cuda/include/thrust/system/detail/errno.h"
}
# 119 "/usr/local/cuda/include/thrust/system/detail/errno.h"
}
# 42 "/usr/include/c++/5/iostream" 3

# 42 "/usr/include/c++/5/iostream" 3
namespace std __attribute((__visibility__("default"))) {
# 60 "/usr/include/c++/5/iostream" 3
extern istream cin;
# 61 "/usr/include/c++/5/iostream" 3
extern ostream cout;
# 62 "/usr/include/c++/5/iostream" 3
extern ostream cerr;
# 63 "/usr/include/c++/5/iostream" 3
extern ostream clog;
# 66 "/usr/include/c++/5/iostream" 3
extern wistream wcin;
# 67 "/usr/include/c++/5/iostream" 3
extern wostream wcout;
# 68 "/usr/include/c++/5/iostream" 3
extern wostream wcerr;
# 69 "/usr/include/c++/5/iostream" 3
extern wostream wclog;
# 74 "/usr/include/c++/5/iostream" 3
static ios_base::Init __ioinit;
# 77 "/usr/include/c++/5/iostream" 3
}
# 30 "/usr/local/cuda/include/thrust/system/error_code.h"

# 30 "/usr/local/cuda/include/thrust/system/error_code.h"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/system/error_code.h"
namespace system {
# 41 "/usr/local/cuda/include/thrust/system/error_code.h"
class error_condition;
# 42 "/usr/local/cuda/include/thrust/system/error_code.h"
class error_code;
# 46 "/usr/local/cuda/include/thrust/system/error_code.h"
template< class T> struct is_error_code_enum : public thrust::detail::false_type { };
# 50 "/usr/local/cuda/include/thrust/system/error_code.h"
template< class T> struct is_error_condition_enum : public thrust::detail::false_type { };
# 54 "/usr/local/cuda/include/thrust/system/error_code.h"
namespace errc {
# 57 "/usr/local/cuda/include/thrust/system/error_code.h"
enum errc_t {
# 59 "/usr/local/cuda/include/thrust/system/error_code.h"
address_family_not_supported = 9901,
# 60 "/usr/local/cuda/include/thrust/system/error_code.h"
address_in_use,
# 61 "/usr/local/cuda/include/thrust/system/error_code.h"
address_not_available,
# 62 "/usr/local/cuda/include/thrust/system/error_code.h"
already_connected,
# 63 "/usr/local/cuda/include/thrust/system/error_code.h"
argument_list_too_long = 9946,
# 64 "/usr/local/cuda/include/thrust/system/error_code.h"
argument_out_of_domain,
# 65 "/usr/local/cuda/include/thrust/system/error_code.h"
bad_address,
# 66 "/usr/local/cuda/include/thrust/system/error_code.h"
bad_file_descriptor,
# 67 "/usr/local/cuda/include/thrust/system/error_code.h"
bad_message = 9905,
# 68 "/usr/local/cuda/include/thrust/system/error_code.h"
broken_pipe = 9950,
# 69 "/usr/local/cuda/include/thrust/system/error_code.h"
connection_aborted = 9906,
# 70 "/usr/local/cuda/include/thrust/system/error_code.h"
connection_already_in_progress,
# 71 "/usr/local/cuda/include/thrust/system/error_code.h"
connection_refused,
# 72 "/usr/local/cuda/include/thrust/system/error_code.h"
connection_reset,
# 73 "/usr/local/cuda/include/thrust/system/error_code.h"
cross_device_link = 9951,
# 74 "/usr/local/cuda/include/thrust/system/error_code.h"
destination_address_required = 9910,
# 75 "/usr/local/cuda/include/thrust/system/error_code.h"
device_or_resource_busy = 9952,
# 76 "/usr/local/cuda/include/thrust/system/error_code.h"
directory_not_empty,
# 77 "/usr/local/cuda/include/thrust/system/error_code.h"
executable_format_error,
# 78 "/usr/local/cuda/include/thrust/system/error_code.h"
file_exists,
# 79 "/usr/local/cuda/include/thrust/system/error_code.h"
file_too_large,
# 80 "/usr/local/cuda/include/thrust/system/error_code.h"
filename_too_long,
# 81 "/usr/local/cuda/include/thrust/system/error_code.h"
function_not_supported = 9942,
# 82 "/usr/local/cuda/include/thrust/system/error_code.h"
host_unreachable = 9911,
# 83 "/usr/local/cuda/include/thrust/system/error_code.h"
identifier_removed,
# 84 "/usr/local/cuda/include/thrust/system/error_code.h"
illegal_byte_sequence = 9945,
# 85 "/usr/local/cuda/include/thrust/system/error_code.h"
inappropriate_io_control_operation = 9958,
# 86 "/usr/local/cuda/include/thrust/system/error_code.h"
interrupted,
# 87 "/usr/local/cuda/include/thrust/system/error_code.h"
invalid_argument = 9943,
# 88 "/usr/local/cuda/include/thrust/system/error_code.h"
invalid_seek = 9960,
# 89 "/usr/local/cuda/include/thrust/system/error_code.h"
io_error,
# 90 "/usr/local/cuda/include/thrust/system/error_code.h"
is_a_directory,
# 91 "/usr/local/cuda/include/thrust/system/error_code.h"
message_size = 9913,
# 92 "/usr/local/cuda/include/thrust/system/error_code.h"
network_down,
# 93 "/usr/local/cuda/include/thrust/system/error_code.h"
network_reset,
# 94 "/usr/local/cuda/include/thrust/system/error_code.h"
network_unreachable,
# 95 "/usr/local/cuda/include/thrust/system/error_code.h"
no_buffer_space,
# 96 "/usr/local/cuda/include/thrust/system/error_code.h"
no_child_process = 9963,
# 97 "/usr/local/cuda/include/thrust/system/error_code.h"
no_link = 9918,
# 98 "/usr/local/cuda/include/thrust/system/error_code.h"
no_lock_available = 9964,
# 99 "/usr/local/cuda/include/thrust/system/error_code.h"
no_message_available = 9919,
# 100 "/usr/local/cuda/include/thrust/system/error_code.h"
no_message,
# 101 "/usr/local/cuda/include/thrust/system/error_code.h"
no_protocol_option,
# 102 "/usr/local/cuda/include/thrust/system/error_code.h"
no_space_on_device = 9965,
# 103 "/usr/local/cuda/include/thrust/system/error_code.h"
no_stream_resources = 9922,
# 104 "/usr/local/cuda/include/thrust/system/error_code.h"
no_such_device_or_address = 9966,
# 105 "/usr/local/cuda/include/thrust/system/error_code.h"
no_such_device,
# 106 "/usr/local/cuda/include/thrust/system/error_code.h"
no_such_file_or_directory,
# 107 "/usr/local/cuda/include/thrust/system/error_code.h"
no_such_process,
# 108 "/usr/local/cuda/include/thrust/system/error_code.h"
not_a_directory,
# 109 "/usr/local/cuda/include/thrust/system/error_code.h"
not_a_socket = 9923,
# 110 "/usr/local/cuda/include/thrust/system/error_code.h"
not_a_stream,
# 111 "/usr/local/cuda/include/thrust/system/error_code.h"
not_connected,
# 112 "/usr/local/cuda/include/thrust/system/error_code.h"
not_enough_memory = 9971,
# 113 "/usr/local/cuda/include/thrust/system/error_code.h"
not_supported = 9926,
# 114 "/usr/local/cuda/include/thrust/system/error_code.h"
operation_canceled,
# 115 "/usr/local/cuda/include/thrust/system/error_code.h"
operation_in_progress,
# 116 "/usr/local/cuda/include/thrust/system/error_code.h"
operation_not_permitted = 9972,
# 117 "/usr/local/cuda/include/thrust/system/error_code.h"
operation_not_supported = 9929,
# 118 "/usr/local/cuda/include/thrust/system/error_code.h"
operation_would_block,
# 119 "/usr/local/cuda/include/thrust/system/error_code.h"
owner_dead,
# 120 "/usr/local/cuda/include/thrust/system/error_code.h"
permission_denied = 9973,
# 121 "/usr/local/cuda/include/thrust/system/error_code.h"
protocol_error = 9932,
# 122 "/usr/local/cuda/include/thrust/system/error_code.h"
protocol_not_supported,
# 123 "/usr/local/cuda/include/thrust/system/error_code.h"
read_only_file_system = 9974,
# 124 "/usr/local/cuda/include/thrust/system/error_code.h"
resource_deadlock_would_occur,
# 125 "/usr/local/cuda/include/thrust/system/error_code.h"
resource_unavailable_try_again,
# 126 "/usr/local/cuda/include/thrust/system/error_code.h"
result_out_of_range = 9944,
# 127 "/usr/local/cuda/include/thrust/system/error_code.h"
state_not_recoverable = 9934,
# 128 "/usr/local/cuda/include/thrust/system/error_code.h"
stream_timeout,
# 129 "/usr/local/cuda/include/thrust/system/error_code.h"
text_file_busy,
# 130 "/usr/local/cuda/include/thrust/system/error_code.h"
timed_out = 9938,
# 131 "/usr/local/cuda/include/thrust/system/error_code.h"
too_many_files_open_in_system = 9977,
# 132 "/usr/local/cuda/include/thrust/system/error_code.h"
too_many_files_open,
# 133 "/usr/local/cuda/include/thrust/system/error_code.h"
too_many_links,
# 134 "/usr/local/cuda/include/thrust/system/error_code.h"
too_many_symbolic_link_levels = 9939,
# 135 "/usr/local/cuda/include/thrust/system/error_code.h"
value_too_large,
# 136 "/usr/local/cuda/include/thrust/system/error_code.h"
wrong_protocol_type
# 137 "/usr/local/cuda/include/thrust/system/error_code.h"
};
# 139 "/usr/local/cuda/include/thrust/system/error_code.h"
}
# 144 "/usr/local/cuda/include/thrust/system/error_code.h"
template<> struct is_error_condition_enum< errc::errc_t> : public thrust::detail::true_type { };
# 154 "/usr/local/cuda/include/thrust/system/error_code.h"
class error_category {
# 159 "/usr/local/cuda/include/thrust/system/error_code.h"
public: inline virtual ~error_category();
# 167 "/usr/local/cuda/include/thrust/system/error_code.h"
inline virtual const char *name() const = 0;
# 171 "/usr/local/cuda/include/thrust/system/error_code.h"
inline virtual error_condition default_error_condition(int ev) const;
# 175 "/usr/local/cuda/include/thrust/system/error_code.h"
inline virtual bool equivalent(int code, const error_condition & condition) const;
# 179 "/usr/local/cuda/include/thrust/system/error_code.h"
inline virtual bool equivalent(const error_code & code, int condition) const;
# 183 "/usr/local/cuda/include/thrust/system/error_code.h"
virtual std::__cxx11::string message(int ev) const = 0;
# 187 "/usr/local/cuda/include/thrust/system/error_code.h"
inline bool operator==(const error_category & rhs) const;
# 191 "/usr/local/cuda/include/thrust/system/error_code.h"
inline bool operator!=(const error_category & rhs) const;
# 196 "/usr/local/cuda/include/thrust/system/error_code.h"
inline bool operator<(const error_category & rhs) const;
# 197 "/usr/local/cuda/include/thrust/system/error_code.h"
};
# 208 "/usr/local/cuda/include/thrust/system/error_code.h"
inline const error_category &generic_category();
# 222 "/usr/local/cuda/include/thrust/system/error_code.h"
inline const error_category &system_category();
# 232 "/usr/local/cuda/include/thrust/system/error_code.h"
class error_code {
# 240 "/usr/local/cuda/include/thrust/system/error_code.h"
public: inline error_code();
# 245 "/usr/local/cuda/include/thrust/system/error_code.h"
inline error_code(int val, const error_category & cat);
# 250 "/usr/local/cuda/include/thrust/system/error_code.h"
template< class ErrorCodeEnum> error_code(ErrorCodeEnum e, typename thrust::detail::enable_if< is_error_code_enum< ErrorCodeEnum> ::value> ::type * = 0);
# 262 "/usr/local/cuda/include/thrust/system/error_code.h"
inline void assign(int val, const error_category & cat);
# 266 "/usr/local/cuda/include/thrust/system/error_code.h"
template< class ErrorCodeEnum> typename thrust::detail::enable_if< is_error_code_enum< ErrorCodeEnum> ::value, error_code> ::type &operator=(ErrorCodeEnum e);
# 277 "/usr/local/cuda/include/thrust/system/error_code.h"
inline void clear();
# 283 "/usr/local/cuda/include/thrust/system/error_code.h"
inline int value() const;
# 287 "/usr/local/cuda/include/thrust/system/error_code.h"
inline const error_category &category() const;
# 291 "/usr/local/cuda/include/thrust/system/error_code.h"
inline error_condition default_error_condition() const;
# 295 "/usr/local/cuda/include/thrust/system/error_code.h"
inline std::__cxx11::string message() const;
# 302 "/usr/local/cuda/include/thrust/system/error_code.h"
inline operator bool() const;
# 307 "/usr/local/cuda/include/thrust/system/error_code.h"
private: int m_val;
# 308 "/usr/local/cuda/include/thrust/system/error_code.h"
const error_category *m_cat;
# 311 "/usr/local/cuda/include/thrust/system/error_code.h"
};
# 320 "/usr/local/cuda/include/thrust/system/error_code.h"
inline error_code make_error_code(errc::errc_t e);
# 325 "/usr/local/cuda/include/thrust/system/error_code.h"
inline bool operator<(const error_code & lhs, const error_code & rhs);
# 330 "/usr/local/cuda/include/thrust/system/error_code.h"
template< class charT, class traits> std::basic_ostream< charT, traits> &operator<<(std::basic_ostream< charT, traits> & os, const error_code & ec);
# 344 "/usr/local/cuda/include/thrust/system/error_code.h"
class error_condition {
# 353 "/usr/local/cuda/include/thrust/system/error_code.h"
public: inline error_condition();
# 359 "/usr/local/cuda/include/thrust/system/error_code.h"
inline error_condition(int val, const error_category & cat);
# 366 "/usr/local/cuda/include/thrust/system/error_code.h"
template< class ErrorConditionEnum> error_condition(ErrorConditionEnum e, typename thrust::detail::enable_if< is_error_condition_enum< ErrorConditionEnum> ::value> ::type * = 0);
# 382 "/usr/local/cuda/include/thrust/system/error_code.h"
inline void assign(int val, const error_category & cat);
# 390 "/usr/local/cuda/include/thrust/system/error_code.h"
template< class ErrorConditionEnum> typename thrust::detail::enable_if< is_error_condition_enum< ErrorConditionEnum> ::value, error_condition> ::type &operator=(ErrorConditionEnum e);
# 403 "/usr/local/cuda/include/thrust/system/error_code.h"
inline void clear();
# 409 "/usr/local/cuda/include/thrust/system/error_code.h"
inline int value() const;
# 413 "/usr/local/cuda/include/thrust/system/error_code.h"
inline const error_category &category() const;
# 417 "/usr/local/cuda/include/thrust/system/error_code.h"
inline std::__cxx11::string message() const;
# 424 "/usr/local/cuda/include/thrust/system/error_code.h"
inline operator bool() const;
# 430 "/usr/local/cuda/include/thrust/system/error_code.h"
private: int m_val;
# 431 "/usr/local/cuda/include/thrust/system/error_code.h"
const error_category *m_cat;
# 435 "/usr/local/cuda/include/thrust/system/error_code.h"
};
# 444 "/usr/local/cuda/include/thrust/system/error_code.h"
inline error_condition make_error_condition(errc::errc_t e);
# 449 "/usr/local/cuda/include/thrust/system/error_code.h"
inline bool operator<(const error_condition & lhs, const error_condition & rhs);
# 457 "/usr/local/cuda/include/thrust/system/error_code.h"
inline bool operator==(const error_code & lhs, const error_code & rhs);
# 462 "/usr/local/cuda/include/thrust/system/error_code.h"
inline bool operator==(const error_code & lhs, const error_condition & rhs);
# 467 "/usr/local/cuda/include/thrust/system/error_code.h"
inline bool operator==(const error_condition & lhs, const error_code & rhs);
# 472 "/usr/local/cuda/include/thrust/system/error_code.h"
inline bool operator==(const error_condition & lhs, const error_condition & rhs);
# 477 "/usr/local/cuda/include/thrust/system/error_code.h"
inline bool operator!=(const error_code & lhs, const error_code & rhs);
# 482 "/usr/local/cuda/include/thrust/system/error_code.h"
inline bool operator!=(const error_code & lhs, const error_condition & rhs);
# 487 "/usr/local/cuda/include/thrust/system/error_code.h"
inline bool operator!=(const error_condition & lhs, const error_code & rhs);
# 492 "/usr/local/cuda/include/thrust/system/error_code.h"
inline bool operator!=(const error_condition & lhs, const error_condition & rhs);
# 498 "/usr/local/cuda/include/thrust/system/error_code.h"
}
# 502 "/usr/local/cuda/include/thrust/system/error_code.h"
using system::error_category;
# 503 "/usr/local/cuda/include/thrust/system/error_code.h"
using system::error_code;
# 504 "/usr/local/cuda/include/thrust/system/error_code.h"
using system::error_condition;
# 505 "/usr/local/cuda/include/thrust/system/error_code.h"
using system::is_error_code_enum;
# 506 "/usr/local/cuda/include/thrust/system/error_code.h"
using system::is_error_condition_enum;
# 507 "/usr/local/cuda/include/thrust/system/error_code.h"
using system::make_error_code;
# 508 "/usr/local/cuda/include/thrust/system/error_code.h"
using system::make_error_condition;
# 511 "/usr/local/cuda/include/thrust/system/error_code.h"
namespace errc = system::errc;
# 513 "/usr/local/cuda/include/thrust/system/error_code.h"
using system::generic_category;
# 514 "/usr/local/cuda/include/thrust/system/error_code.h"
using system::system_category;
# 516 "/usr/local/cuda/include/thrust/system/error_code.h"
}
# 20 "/usr/local/cuda/include/thrust/detail/tuple.inl"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/detail/tuple.inl"
struct null_type { };
# 28 "/usr/local/cuda/include/thrust/detail/tuple.inl"
inline bool operator==(const null_type &, const null_type &) { return true; }
# 31 "/usr/local/cuda/include/thrust/detail/tuple.inl"
inline bool operator>=(const null_type &, const null_type &) { return true; }
# 34 "/usr/local/cuda/include/thrust/detail/tuple.inl"
inline bool operator<=(const null_type &, const null_type &) { return true; }
# 37 "/usr/local/cuda/include/thrust/detail/tuple.inl"
inline bool operator!=(const null_type &, const null_type &) { return false; }
# 40 "/usr/local/cuda/include/thrust/detail/tuple.inl"
inline bool operator<(const null_type &, const null_type &) { return false; }
# 43 "/usr/local/cuda/include/thrust/detail/tuple.inl"
inline bool operator>(const null_type &, const null_type &) { return false; }
# 46 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class
# 47 "/usr/local/cuda/include/thrust/detail/tuple.inl"
T0 = null_type, class T1 = null_type, class T2 = null_type, class
# 48 "/usr/local/cuda/include/thrust/detail/tuple.inl"
T3 = null_type, class T4 = null_type, class T5 = null_type, class
# 49 "/usr/local/cuda/include/thrust/detail/tuple.inl"
T6 = null_type, class T7 = null_type, class T8 = null_type, class
# 50 "/usr/local/cuda/include/thrust/detail/tuple.inl"
T9 = null_type> class tuple;
# 54 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< int i, class T> struct tuple_element;
# 57 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T>
# 58 "/usr/local/cuda/include/thrust/detail/tuple.inl"
struct tuple_element< 0, T> {
# 60 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef typename T::head_type type;
# 61 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 63 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< int N, class T>
# 64 "/usr/local/cuda/include/thrust/detail/tuple.inl"
struct tuple_element< N, const T> {
# 67 "/usr/local/cuda/include/thrust/detail/tuple.inl"
private: typedef typename T::tail_type Next;
# 68 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef typename thrust::tuple_element< N - 1, typename T::tail_type> ::type unqualified_type;
# 71 "/usr/local/cuda/include/thrust/detail/tuple.inl"
public: typedef typename detail::add_const< typename thrust::tuple_element< N - 1, typename T::tail_type> ::type> ::type type;
# 72 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 74 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T>
# 75 "/usr/local/cuda/include/thrust/detail/tuple.inl"
struct tuple_element< 0, const T> {
# 77 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef typename detail::add_const< typename T::head_type> ::type type;
# 78 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 83 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T> struct tuple_size;
# 87 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template<> struct tuple_size< tuple<> > {
# 89 "/usr/local/cuda/include/thrust/detail/tuple.inl"
static const int value = 0;
# 90 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 93 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template<> struct tuple_size< null_type> {
# 95 "/usr/local/cuda/include/thrust/detail/tuple.inl"
static const int value = 0;
# 96 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 101 "/usr/local/cuda/include/thrust/detail/tuple.inl"
namespace detail {
# 104 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class HT, class TT> struct cons;
# 106 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 110 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T> struct access_traits {
# 112 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef const T &const_type;
# 113 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef T &non_const_type;
# 115 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef const typename detail::remove_cv< T> ::type &parameter_type;
# 122 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 124 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T> struct access_traits< T &> {
# 126 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef T &const_type;
# 127 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef T &non_const_type;
# 129 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef T &parameter_type;
# 130 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 133 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< int N, class HT, class TT> inline typename access_traits< typename tuple_element< N, detail::cons< HT, TT> > ::type> ::non_const_type get(detail::cons< HT, TT> & c);
# 142 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< int N, class HT, class TT> inline typename access_traits< typename tuple_element< N, detail::cons< HT, TT> > ::type> ::const_type get(const detail::cons< HT, TT> & c);
# 151 "/usr/local/cuda/include/thrust/detail/tuple.inl"
namespace detail {
# 156 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T> class generate_error;
# 162 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< int N>
# 163 "/usr/local/cuda/include/thrust/detail/tuple.inl"
struct get_class {
# 165 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class RET, class HT, class TT> static RET
# 167 "/usr/local/cuda/include/thrust/detail/tuple.inl"
get(const cons< HT, TT> &t)
# 168 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 171 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return detail::get_class< N - 1> ::template get< RET> ((t.tail));
# 175 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 177 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class RET, class HT, class TT> static RET
# 179 "/usr/local/cuda/include/thrust/detail/tuple.inl"
get(cons< HT, TT> &t)
# 180 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 183 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return detail::get_class< N - 1> ::template get< RET> ((t.tail));
# 187 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 188 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 191 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template<> struct get_class< 0> {
# 193 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class RET, class HT, class TT> static RET
# 195 "/usr/local/cuda/include/thrust/detail/tuple.inl"
get(const cons< HT, TT> &t)
# 196 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 197 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return t.head;
# 198 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 200 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class RET, class HT, class TT> static RET
# 202 "/usr/local/cuda/include/thrust/detail/tuple.inl"
get(cons< HT, TT> &t)
# 203 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 204 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return t.head;
# 205 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 206 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 209 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< bool If, class Then, class Else> struct IF {
# 211 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef Then RET;
# 212 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 214 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class Then, class Else> struct IF< false, Then, Else> {
# 216 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef Else RET;
# 217 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 225 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T> class non_storeable_type {
# 228 "/usr/local/cuda/include/thrust/detail/tuple.inl"
non_storeable_type();
# 229 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 231 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T> struct wrap_non_storeable_type {
# 238 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef T type;
# 239 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 241 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template<> struct wrap_non_storeable_type< void> {
# 243 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef non_storeable_type< void> type;
# 244 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 247 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class HT, class TT>
# 248 "/usr/local/cuda/include/thrust/detail/tuple.inl"
struct cons {
# 250 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef HT head_type;
# 251 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef TT tail_type;
# 254 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef typename wrap_non_storeable_type< HT> ::type stored_head_type;
# 256 "/usr/local/cuda/include/thrust/detail/tuple.inl"
stored_head_type head;
# 257 "/usr/local/cuda/include/thrust/detail/tuple.inl"
tail_type tail;
# 261 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typename access_traits< typename wrap_non_storeable_type< HT> ::type> ::non_const_type get_head() { return head; }
# 265 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typename access_traits< TT> ::non_const_type get_tail() { return tail; }
# 269 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typename access_traits< typename wrap_non_storeable_type< HT> ::type> ::const_type get_head() const { return head; }
# 273 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typename access_traits< TT> ::const_type get_tail() const { return tail; }
# 276 "/usr/local/cuda/include/thrust/detail/tuple.inl"
cons() : head(), tail() { }
# 285 "/usr/local/cuda/include/thrust/detail/tuple.inl"
cons(typename access_traits< typename wrap_non_storeable_type< HT> ::type> ::parameter_type h, const tail_type &
# 286 "/usr/local/cuda/include/thrust/detail/tuple.inl"
t) : head(h), tail(t)
# 287 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{ }
# 289 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T1, class T2, class T3, class T4, class T5, class
# 290 "/usr/local/cuda/include/thrust/detail/tuple.inl"
T6, class T7, class T8, class T9, class T10>
# 292 "/usr/local/cuda/include/thrust/detail/tuple.inl"
cons(T1 &t1, T2 &t2, T3 &t3, T4 &t4, T5 &t5, T6 &
# 293 "/usr/local/cuda/include/thrust/detail/tuple.inl"
t6, T7 &t7, T8 &t8, T9 &t9, T10 &t10) : head(t1), tail(t2, t3, t4, t5, t6, t7, t8, t9, t10, static_cast< const null_type &>(null_type()))
# 296 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{ }
# 298 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T2, class T3, class T4, class T5, class
# 299 "/usr/local/cuda/include/thrust/detail/tuple.inl"
T6, class T7, class T8, class T9, class T10>
# 301 "/usr/local/cuda/include/thrust/detail/tuple.inl"
cons(const null_type &, T2 &t2, T3 &t3, T4 &t4, T5 &t5, T6 &
# 302 "/usr/local/cuda/include/thrust/detail/tuple.inl"
t6, T7 &t7, T8 &t8, T9 &t9, T10 &t10) : head(), tail(t2, t3, t4, t5, t6, t7, t8, t9, t10, static_cast< const null_type &>(null_type()))
# 305 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{ }
# 308 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class HT2, class TT2>
# 310 "/usr/local/cuda/include/thrust/detail/tuple.inl"
cons(const detail::cons< HT2, TT2> &u) : head((u.head)), tail((u.tail)) { }
# 312 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class HT2, class TT2> cons &
# 314 "/usr/local/cuda/include/thrust/detail/tuple.inl"
operator=(const detail::cons< HT2, TT2> &u) {
# 315 "/usr/local/cuda/include/thrust/detail/tuple.inl"
(head) = (u.head); (tail) = (u.tail); return *this;
# 316 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 321 "/usr/local/cuda/include/thrust/detail/tuple.inl"
cons &operator=(const cons &u) {
# 322 "/usr/local/cuda/include/thrust/detail/tuple.inl"
(head) = (u.head); (tail) = (u.tail); return *this;
# 323 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 334 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< int N> typename access_traits< typename tuple_element< N, cons> ::type> ::non_const_type
# 339 "/usr/local/cuda/include/thrust/detail/tuple.inl"
get() {
# 340 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return thrust::get< N> (*this);
# 341 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 343 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< int N> typename access_traits< typename tuple_element< N, cons> ::type> ::const_type
# 348 "/usr/local/cuda/include/thrust/detail/tuple.inl"
get() const {
# 349 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return thrust::get< N> (*this);
# 350 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 353 "/usr/local/cuda/include/thrust/detail/tuple.inl"
void swap(cons &c)
# 354 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 355 "/usr/local/cuda/include/thrust/detail/tuple.inl"
using thrust::swap;
# 357 "/usr/local/cuda/include/thrust/detail/tuple.inl"
swap(head, c.head);
# 358 "/usr/local/cuda/include/thrust/detail/tuple.inl"
((tail).swap(c.tail));
# 359 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 360 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 362 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class HT>
# 363 "/usr/local/cuda/include/thrust/detail/tuple.inl"
struct cons< HT, null_type> {
# 365 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef HT head_type;
# 366 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef null_type tail_type;
# 367 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef detail::cons< HT, null_type> self_type;
# 370 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef typename wrap_non_storeable_type< HT> ::type stored_head_type;
# 371 "/usr/local/cuda/include/thrust/detail/tuple.inl"
stored_head_type head;
# 375 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typename access_traits< typename wrap_non_storeable_type< HT> ::type> ::non_const_type get_head() { return head; }
# 378 "/usr/local/cuda/include/thrust/detail/tuple.inl"
null_type get_tail() { return null_type(); }
# 382 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typename access_traits< typename wrap_non_storeable_type< HT> ::type> ::const_type get_head() const { return head; }
# 385 "/usr/local/cuda/include/thrust/detail/tuple.inl"
null_type get_tail() const { return null_type(); }
# 388 "/usr/local/cuda/include/thrust/detail/tuple.inl"
cons() : head() { }
# 391 "/usr/local/cuda/include/thrust/detail/tuple.inl"
cons(typename access_traits< typename wrap_non_storeable_type< HT> ::type> ::parameter_type h, const null_type & = null_type()) : head(h)
# 393 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{ }
# 395 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T1>
# 397 "/usr/local/cuda/include/thrust/detail/tuple.inl"
cons(T1 &t1, const null_type &, const null_type &, const null_type &, const null_type &, const null_type &, const null_type &, const null_type &, const null_type &, const null_type &) : head(t1)
# 400 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{ }
# 403 "/usr/local/cuda/include/thrust/detail/tuple.inl"
cons(const null_type &, const null_type &, const null_type &, const null_type &, const null_type &, const null_type &, const null_type &, const null_type &, const null_type &, const null_type &) : head()
# 407 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{ }
# 409 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class HT2>
# 411 "/usr/local/cuda/include/thrust/detail/tuple.inl"
cons(const detail::cons< HT2, null_type> &u) : head((u.head)) { }
# 413 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class HT2> detail::cons< HT, null_type> &
# 415 "/usr/local/cuda/include/thrust/detail/tuple.inl"
operator=(const detail::cons< HT2, null_type> &u)
# 416 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 417 "/usr/local/cuda/include/thrust/detail/tuple.inl"
(head) = (u.head);
# 418 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return *this;
# 419 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 424 "/usr/local/cuda/include/thrust/detail/tuple.inl"
detail::cons< HT, null_type> &operator=(const detail::cons< HT, null_type> &u) { (head) = (u.head); return *this; }
# 426 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< int N> typename access_traits< typename tuple_element< N, detail::cons< HT, null_type> > ::type> ::non_const_type
# 433 "/usr/local/cuda/include/thrust/detail/tuple.inl"
get()
# 434 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 435 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return thrust::get< N> (*this);
# 436 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 438 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< int N> typename access_traits< typename tuple_element< N, detail::cons< HT, null_type> > ::type> ::const_type
# 445 "/usr/local/cuda/include/thrust/detail/tuple.inl"
get() const
# 446 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 447 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return thrust::get< N> (*this);
# 448 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 451 "/usr/local/cuda/include/thrust/detail/tuple.inl"
void swap(detail::cons< HT, null_type> &c)
# 452 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 453 "/usr/local/cuda/include/thrust/detail/tuple.inl"
using thrust::swap;
# 455 "/usr/local/cuda/include/thrust/detail/tuple.inl"
swap(head, c.head);
# 456 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 457 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 459 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1, class T2, class T3, class T4, class
# 460 "/usr/local/cuda/include/thrust/detail/tuple.inl"
T5, class T6, class T7, class T8, class T9>
# 461 "/usr/local/cuda/include/thrust/detail/tuple.inl"
struct map_tuple_to_cons {
# 466 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef cons< T0, typename detail::map_tuple_to_cons< T1, T2, T3, T4, T5, T6, T7, T8, T9, null_type> ::type> type;
# 467 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 471 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template<> struct map_tuple_to_cons< null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> {
# 473 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef null_type type;
# 474 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 492 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T>
# 493 "/usr/local/cuda/include/thrust/detail/tuple.inl"
struct make_tuple_traits {
# 494 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef T type;
# 502 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 516 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T>
# 517 "/usr/local/cuda/include/thrust/detail/tuple.inl"
struct make_tuple_traits< T &> {
# 520 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef typename generate_error< T &> ::do_not_use_with_reference_type error;
# 521 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 527 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T, int n> struct make_tuple_traits< T [n]> {
# 528 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef const T (&type)[n];
# 529 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 531 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T, int n>
# 532 "/usr/local/cuda/include/thrust/detail/tuple.inl"
struct make_tuple_traits< const T [n]> {
# 533 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef const T (&type)[n];
# 534 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 536 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T, int n> struct make_tuple_traits< volatile T [n]> {
# 537 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef const volatile T (&type)[n];
# 538 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 540 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T, int n>
# 541 "/usr/local/cuda/include/thrust/detail/tuple.inl"
struct make_tuple_traits< const volatile T [n]> {
# 542 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef const volatile T (&type)[n];
# 543 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 559 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class
# 560 "/usr/local/cuda/include/thrust/detail/tuple.inl"
T0 = null_type, class T1 = null_type, class T2 = null_type, class
# 561 "/usr/local/cuda/include/thrust/detail/tuple.inl"
T3 = null_type, class T4 = null_type, class T5 = null_type, class
# 562 "/usr/local/cuda/include/thrust/detail/tuple.inl"
T6 = null_type, class T7 = null_type, class T8 = null_type, class
# 563 "/usr/local/cuda/include/thrust/detail/tuple.inl"
T9 = null_type>
# 565 "/usr/local/cuda/include/thrust/detail/tuple.inl"
struct make_tuple_mapper {
# 576 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef tuple< typename make_tuple_traits< T0> ::type, typename make_tuple_traits< T1> ::type, typename make_tuple_traits< T2> ::type, typename make_tuple_traits< T3> ::type, typename make_tuple_traits< T4> ::type, typename make_tuple_traits< T5> ::type, typename make_tuple_traits< T6> ::type, typename make_tuple_traits< T7> ::type, typename make_tuple_traits< T8> ::type, typename make_tuple_traits< T9> ::type> type;
# 577 "/usr/local/cuda/include/thrust/detail/tuple.inl"
};
# 579 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 582 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< int N, class HT, class TT> inline typename access_traits< typename tuple_element< N, detail::cons< HT, TT> > ::type> ::non_const_type
# 587 "/usr/local/cuda/include/thrust/detail/tuple.inl"
get(detail::cons< HT, TT> &c)
# 588 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 594 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return detail::get_class< N> ::template get< typename access_traits< typename tuple_element< N, detail::cons< HT, TT> > ::type> ::non_const_type, HT, TT> (c);
# 601 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 607 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< int N, class HT, class TT> inline typename access_traits< typename tuple_element< N, detail::cons< HT, TT> > ::type> ::const_type
# 612 "/usr/local/cuda/include/thrust/detail/tuple.inl"
get(const detail::cons< HT, TT> &c)
# 613 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 619 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return detail::get_class< N> ::template get< typename access_traits< typename tuple_element< N, detail::cons< HT, TT> > ::type> ::const_type, HT, TT> (c);
# 626 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 629 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0> inline typename detail::make_tuple_mapper< T0> ::type
# 632 "/usr/local/cuda/include/thrust/detail/tuple.inl"
make_tuple(const T0 &t0)
# 633 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 634 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef typename detail::make_tuple_mapper< T0> ::type t;
# 635 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return (t)t0;
# 636 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 638 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1> inline typename detail::make_tuple_mapper< T0, T1> ::type
# 641 "/usr/local/cuda/include/thrust/detail/tuple.inl"
make_tuple(const T0 &t0, const T1 &t1)
# 642 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 643 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef typename detail::make_tuple_mapper< T0, T1> ::type t;
# 644 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return t(t0, t1);
# 645 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 647 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1, class T2> inline typename detail::make_tuple_mapper< T0, T1, T2> ::type
# 650 "/usr/local/cuda/include/thrust/detail/tuple.inl"
make_tuple(const T0 &t0, const T1 &t1, const T2 &t2)
# 651 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 652 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef typename detail::make_tuple_mapper< T0, T1, T2> ::type t;
# 653 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return t(t0, t1, t2);
# 654 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 656 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1, class T2, class T3> inline typename detail::make_tuple_mapper< T0, T1, T2, T3> ::type
# 659 "/usr/local/cuda/include/thrust/detail/tuple.inl"
make_tuple(const T0 &t0, const T1 &t1, const T2 &t2, const T3 &t3)
# 660 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 661 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef typename detail::make_tuple_mapper< T0, T1, T2, T3> ::type t;
# 662 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return t(t0, t1, t2, t3);
# 663 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 665 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1, class T2, class T3, class T4> inline typename detail::make_tuple_mapper< T0, T1, T2, T3, T4> ::type
# 668 "/usr/local/cuda/include/thrust/detail/tuple.inl"
make_tuple(const T0 &t0, const T1 &t1, const T2 &t2, const T3 &t3, const T4 &t4)
# 669 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 670 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef typename detail::make_tuple_mapper< T0, T1, T2, T3, T4> ::type t;
# 671 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return t(t0, t1, t2, t3, t4);
# 672 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 674 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1, class T2, class T3, class T4, class T5> inline typename detail::make_tuple_mapper< T0, T1, T2, T3, T4, T5> ::type
# 677 "/usr/local/cuda/include/thrust/detail/tuple.inl"
make_tuple(const T0 &t0, const T1 &t1, const T2 &t2, const T3 &t3, const T4 &t4, const T5 &t5)
# 678 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 679 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef typename detail::make_tuple_mapper< T0, T1, T2, T3, T4, T5> ::type t;
# 680 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return t(t0, t1, t2, t3, t4, t5);
# 681 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 683 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6> inline typename detail::make_tuple_mapper< T0, T1, T2, T3, T4, T5, T6> ::type
# 686 "/usr/local/cuda/include/thrust/detail/tuple.inl"
make_tuple(const T0 &t0, const T1 &t1, const T2 &t2, const T3 &t3, const T4 &t4, const T5 &t5, const T6 &t6)
# 687 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 688 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef typename detail::make_tuple_mapper< T0, T1, T2, T3, T4, T5, T6> ::type t;
# 689 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return t(t0, t1, t2, t3, t4, t5, t6);
# 690 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 692 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7> inline typename detail::make_tuple_mapper< T0, T1, T2, T3, T4, T5, T6, T7> ::type
# 695 "/usr/local/cuda/include/thrust/detail/tuple.inl"
make_tuple(const T0 &t0, const T1 &t1, const T2 &t2, const T3 &t3, const T4 &t4, const T5 &t5, const T6 &t6, const T7 &t7)
# 696 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 697 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef typename detail::make_tuple_mapper< T0, T1, T2, T3, T4, T5, T6, T7> ::type t;
# 698 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return t(t0, t1, t2, t3, t4, t5, t6, t7);
# 699 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 701 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8> inline typename detail::make_tuple_mapper< T0, T1, T2, T3, T4, T5, T6, T7, T8> ::type
# 704 "/usr/local/cuda/include/thrust/detail/tuple.inl"
make_tuple(const T0 &t0, const T1 &t1, const T2 &t2, const T3 &t3, const T4 &t4, const T5 &t5, const T6 &t6, const T7 &t7, const T8 &t8)
# 705 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 706 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef typename detail::make_tuple_mapper< T0, T1, T2, T3, T4, T5, T6, T7, T8> ::type t;
# 707 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return t(t0, t1, t2, t3, t4, t5, t6, t7, t8);
# 708 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 710 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9> inline typename detail::make_tuple_mapper< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> ::type
# 713 "/usr/local/cuda/include/thrust/detail/tuple.inl"
make_tuple(const T0 &t0, const T1 &t1, const T2 &t2, const T3 &t3, const T4 &t4, const T5 &t5, const T6 &t6, const T7 &t7, const T8 &t8, const T9 &t9)
# 714 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 715 "/usr/local/cuda/include/thrust/detail/tuple.inl"
typedef typename detail::make_tuple_mapper< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> ::type t;
# 716 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return t(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9);
# 717 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 720 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0> inline tuple< T0 &>
# 722 "/usr/local/cuda/include/thrust/detail/tuple.inl"
tie(T0 &t0)
# 723 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 724 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return ((tuple< T0 &> )(t0));
# 725 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 727 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1> inline tuple< T0 &, T1 &>
# 729 "/usr/local/cuda/include/thrust/detail/tuple.inl"
tie(T0 &t0, T1 &t1)
# 730 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 731 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return tuple< T0 &, T1 &> (t0, t1);
# 732 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 734 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1, class T2> inline tuple< T0 &, T1 &, T2 &>
# 736 "/usr/local/cuda/include/thrust/detail/tuple.inl"
tie(T0 &t0, T1 &t1, T2 &t2)
# 737 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 738 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return tuple< T0 &, T1 &, T2 &> (t0, t1, t2);
# 739 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 741 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1, class T2, class T3> inline tuple< T0 &, T1 &, T2 &, T3 &>
# 743 "/usr/local/cuda/include/thrust/detail/tuple.inl"
tie(T0 &t0, T1 &t1, T2 &t2, T3 &t3)
# 744 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 745 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return tuple< T0 &, T1 &, T2 &, T3 &> (t0, t1, t2, t3);
# 746 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 748 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1, class T2, class T3, class T4> inline tuple< T0 &, T1 &, T2 &, T3 &, T4 &>
# 750 "/usr/local/cuda/include/thrust/detail/tuple.inl"
tie(T0 &t0, T1 &t1, T2 &t2, T3 &t3, T4 &t4)
# 751 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 752 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return tuple< T0 &, T1 &, T2 &, T3 &, T4 &> (t0, t1, t2, t3, t4);
# 753 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 755 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1, class T2, class T3, class T4, class T5> inline tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &>
# 757 "/usr/local/cuda/include/thrust/detail/tuple.inl"
tie(T0 &t0, T1 &t1, T2 &t2, T3 &t3, T4 &t4, T5 &t5)
# 758 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 759 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &> (t0, t1, t2, t3, t4, t5);
# 760 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 762 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6> inline tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &>
# 764 "/usr/local/cuda/include/thrust/detail/tuple.inl"
tie(T0 &t0, T1 &t1, T2 &t2, T3 &t3, T4 &t4, T5 &t5, T6 &t6)
# 765 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 766 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &> (t0, t1, t2, t3, t4, t5, t6);
# 767 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 769 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7> inline tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &, T7 &>
# 771 "/usr/local/cuda/include/thrust/detail/tuple.inl"
tie(T0 &t0, T1 &t1, T2 &t2, T3 &t3, T4 &t4, T5 &t5, T6 &t6, T7 &t7)
# 772 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 773 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &, T7 &> (t0, t1, t2, t3, t4, t5, t6, t7);
# 774 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 776 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8> inline tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &, T7 &, T8 &>
# 778 "/usr/local/cuda/include/thrust/detail/tuple.inl"
tie(T0 &t0, T1 &t1, T2 &t2, T3 &t3, T4 &t4, T5 &t5, T6 &t6, T7 &t7, T8 &t8)
# 779 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 780 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &, T7 &, T8 &> (t0, t1, t2, t3, t4, t5, t6, t7, t8);
# 781 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 783 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9> inline tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &, T7 &, T8 &, T9 &>
# 785 "/usr/local/cuda/include/thrust/detail/tuple.inl"
tie(T0 &t0, T1 &t1, T2 &t2, T3 &t3, T4 &t4, T5 &t5, T6 &t6, T7 &t7, T8 &t8, T9 &t9)
# 786 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 787 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &, T7 &, T8 &, T9 &> (t0, t1, t2, t3, t4, t5, t6, t7, t8, t9);
# 788 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 790 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class
# 791 "/usr/local/cuda/include/thrust/detail/tuple.inl"
T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9, class
# 792 "/usr/local/cuda/include/thrust/detail/tuple.inl"
U0, class U1, class U2, class U3, class U4, class U5, class U6, class U7, class U8, class U9> inline void
# 795 "/usr/local/cuda/include/thrust/detail/tuple.inl"
swap(tuple< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> &x, tuple< U0, U1, U2, U3, U4, U5, U6, U7, U8, U9> &
# 796 "/usr/local/cuda/include/thrust/detail/tuple.inl"
y)
# 797 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 798 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return (x.swap(y));
# 799 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 803 "/usr/local/cuda/include/thrust/detail/tuple.inl"
namespace detail {
# 806 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T1, class T2> inline bool
# 808 "/usr/local/cuda/include/thrust/detail/tuple.inl"
eq(const T1 &lhs, const T2 &rhs) {
# 809 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return ((lhs.get_head()) == (rhs.get_head())) && eq((lhs.get_tail()), (rhs.get_tail()));
# 811 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 813 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template<> inline bool eq< null_type, null_type> (const null_type &, const null_type &) { return true; }
# 815 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T1, class T2> inline bool
# 817 "/usr/local/cuda/include/thrust/detail/tuple.inl"
neq(const T1 &lhs, const T2 &rhs) {
# 818 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return ((lhs.get_head()) != (rhs.get_head())) || neq((lhs.get_tail()), (rhs.get_tail()));
# 820 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 823 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template<> inline bool neq< null_type, null_type> (const null_type &, const null_type &) { return false; }
# 825 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T1, class T2> inline bool
# 827 "/usr/local/cuda/include/thrust/detail/tuple.inl"
lt(const T1 &lhs, const T2 &rhs) {
# 828 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return ((lhs.get_head()) < (rhs.get_head())) || ((!((rhs.get_head()) < (lhs.get_head()))) && lt((lhs.get_tail()), (rhs.get_tail())));
# 831 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 834 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template<> inline bool lt< null_type, null_type> (const null_type &, const null_type &) { return false; }
# 836 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T1, class T2> inline bool
# 838 "/usr/local/cuda/include/thrust/detail/tuple.inl"
gt(const T1 &lhs, const T2 &rhs) {
# 839 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return ((lhs.get_head()) > (rhs.get_head())) || ((!((rhs.get_head()) > (lhs.get_head()))) && gt((lhs.get_tail()), (rhs.get_tail())));
# 842 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 845 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template<> inline bool gt< null_type, null_type> (const null_type &, const null_type &) { return false; }
# 847 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T1, class T2> inline bool
# 849 "/usr/local/cuda/include/thrust/detail/tuple.inl"
lte(const T1 &lhs, const T2 &rhs) {
# 850 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return ((lhs.get_head()) <= (rhs.get_head())) && ((!((rhs.get_head()) <= (lhs.get_head()))) || lte((lhs.get_tail()), (rhs.get_tail())));
# 853 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 856 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template<> inline bool lte< null_type, null_type> (const null_type &, const null_type &) { return true; }
# 858 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T1, class T2> inline bool
# 860 "/usr/local/cuda/include/thrust/detail/tuple.inl"
gte(const T1 &lhs, const T2 &rhs) {
# 861 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return ((lhs.get_head()) >= (rhs.get_head())) && ((!((rhs.get_head()) >= (lhs.get_head()))) || gte((lhs.get_tail()), (rhs.get_tail())));
# 864 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 867 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template<> inline bool gte< null_type, null_type> (const null_type &, const null_type &) { return true; }
# 869 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 875 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T1, class T2, class S1, class S2> inline bool
# 877 "/usr/local/cuda/include/thrust/detail/tuple.inl"
operator==(const detail::cons< T1, T2> &lhs, const detail::cons< S1, S2> &rhs)
# 878 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 883 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return detail::eq(lhs, rhs);
# 884 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 888 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T1, class T2, class S1, class S2> inline bool
# 890 "/usr/local/cuda/include/thrust/detail/tuple.inl"
operator!=(const detail::cons< T1, T2> &lhs, const detail::cons< S1, S2> &rhs)
# 891 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 896 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return detail::neq(lhs, rhs);
# 897 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 900 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T1, class T2, class S1, class S2> inline bool
# 902 "/usr/local/cuda/include/thrust/detail/tuple.inl"
operator<(const detail::cons< T1, T2> &lhs, const detail::cons< S1, S2> &rhs)
# 903 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 908 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return detail::lt(lhs, rhs);
# 909 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 912 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T1, class T2, class S1, class S2> inline bool
# 914 "/usr/local/cuda/include/thrust/detail/tuple.inl"
operator>(const detail::cons< T1, T2> &lhs, const detail::cons< S1, S2> &rhs)
# 915 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 920 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return detail::gt(lhs, rhs);
# 921 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 924 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T1, class T2, class S1, class S2> inline bool
# 926 "/usr/local/cuda/include/thrust/detail/tuple.inl"
operator<=(const detail::cons< T1, T2> &lhs, const detail::cons< S1, S2> &rhs)
# 927 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 932 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return detail::lte(lhs, rhs);
# 933 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 936 "/usr/local/cuda/include/thrust/detail/tuple.inl"
template< class T1, class T2, class S1, class S2> inline bool
# 938 "/usr/local/cuda/include/thrust/detail/tuple.inl"
operator>=(const detail::cons< T1, T2> &lhs, const detail::cons< S1, S2> &rhs)
# 939 "/usr/local/cuda/include/thrust/detail/tuple.inl"
{
# 944 "/usr/local/cuda/include/thrust/detail/tuple.inl"
return detail::gte(lhs, rhs);
# 945 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 947 "/usr/local/cuda/include/thrust/detail/tuple.inl"
}
# 37 "/usr/local/cuda/include/thrust/tuple.h"
namespace thrust {
# 51 "/usr/local/cuda/include/thrust/tuple.h"
struct null_type;
# 65 "/usr/local/cuda/include/thrust/tuple.h"
template< int N, class T>
# 66 "/usr/local/cuda/include/thrust/tuple.h"
struct tuple_element {
# 69 "/usr/local/cuda/include/thrust/tuple.h"
private: typedef typename T::tail_type Next;
# 74 "/usr/local/cuda/include/thrust/tuple.h"
public: typedef typename thrust::tuple_element< N - 1, typename T::tail_type> ::type type;
# 75 "/usr/local/cuda/include/thrust/tuple.h"
};
# 85 "/usr/local/cuda/include/thrust/tuple.h"
template< class T>
# 86 "/usr/local/cuda/include/thrust/tuple.h"
struct tuple_size {
# 90 "/usr/local/cuda/include/thrust/tuple.h"
static const int value = (1 + tuple_size< typename T::tail_type> ::value);
# 91 "/usr/local/cuda/include/thrust/tuple.h"
};
# 118 "/usr/local/cuda/include/thrust/tuple.h"
template< int N, class HT, class TT> inline typename access_traits< typename tuple_element< N, detail::cons< HT, TT> > ::type> ::non_const_type get(detail::cons< HT, TT> & t);
# 149 "/usr/local/cuda/include/thrust/tuple.h"
template< int N, class HT, class TT> inline typename access_traits< typename tuple_element< N, detail::cons< HT, TT> > ::type> ::const_type get(const detail::cons< HT, TT> & t);
# 195 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1, class T2, class T3, class T4, class
# 196 "/usr/local/cuda/include/thrust/tuple.h"
T5, class T6, class T7, class T8, class T9>
# 197 "/usr/local/cuda/include/thrust/tuple.h"
class tuple : public detail::map_tuple_to_cons< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> ::type {
# 204 "/usr/local/cuda/include/thrust/tuple.h"
typedef typename ::thrust::detail::map_tuple_to_cons< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> ::type inherited;
# 213 "/usr/local/cuda/include/thrust/tuple.h"
public: tuple() { }
# 220 "/usr/local/cuda/include/thrust/tuple.h"
tuple(typename access_traits< T0> ::parameter_type t0) : inherited(t0, static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()))
# 230 "/usr/local/cuda/include/thrust/tuple.h"
{ }
# 239 "/usr/local/cuda/include/thrust/tuple.h"
tuple(typename access_traits< T0> ::parameter_type t0, typename access_traits< T1> ::parameter_type
# 240 "/usr/local/cuda/include/thrust/tuple.h"
t1) : inherited(t0, t1, static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()))
# 249 "/usr/local/cuda/include/thrust/tuple.h"
{ }
# 255 "/usr/local/cuda/include/thrust/tuple.h"
tuple(typename access_traits< T0> ::parameter_type t0, typename access_traits< T1> ::parameter_type
# 256 "/usr/local/cuda/include/thrust/tuple.h"
t1, typename access_traits< T2> ::parameter_type
# 257 "/usr/local/cuda/include/thrust/tuple.h"
t2) : inherited(t0, t1, t2, static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()))
# 265 "/usr/local/cuda/include/thrust/tuple.h"
{ }
# 268 "/usr/local/cuda/include/thrust/tuple.h"
tuple(typename access_traits< T0> ::parameter_type t0, typename access_traits< T1> ::parameter_type
# 269 "/usr/local/cuda/include/thrust/tuple.h"
t1, typename access_traits< T2> ::parameter_type
# 270 "/usr/local/cuda/include/thrust/tuple.h"
t2, typename access_traits< T3> ::parameter_type
# 271 "/usr/local/cuda/include/thrust/tuple.h"
t3) : inherited(t0, t1, t2, t3, static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()))
# 278 "/usr/local/cuda/include/thrust/tuple.h"
{ }
# 281 "/usr/local/cuda/include/thrust/tuple.h"
tuple(typename access_traits< T0> ::parameter_type t0, typename access_traits< T1> ::parameter_type
# 282 "/usr/local/cuda/include/thrust/tuple.h"
t1, typename access_traits< T2> ::parameter_type
# 283 "/usr/local/cuda/include/thrust/tuple.h"
t2, typename access_traits< T3> ::parameter_type
# 284 "/usr/local/cuda/include/thrust/tuple.h"
t3, typename access_traits< T4> ::parameter_type
# 285 "/usr/local/cuda/include/thrust/tuple.h"
t4) : inherited(t0, t1, t2, t3, t4, static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()))
# 291 "/usr/local/cuda/include/thrust/tuple.h"
{ }
# 294 "/usr/local/cuda/include/thrust/tuple.h"
tuple(typename access_traits< T0> ::parameter_type t0, typename access_traits< T1> ::parameter_type
# 295 "/usr/local/cuda/include/thrust/tuple.h"
t1, typename access_traits< T2> ::parameter_type
# 296 "/usr/local/cuda/include/thrust/tuple.h"
t2, typename access_traits< T3> ::parameter_type
# 297 "/usr/local/cuda/include/thrust/tuple.h"
t3, typename access_traits< T4> ::parameter_type
# 298 "/usr/local/cuda/include/thrust/tuple.h"
t4, typename access_traits< T5> ::parameter_type
# 299 "/usr/local/cuda/include/thrust/tuple.h"
t5) : inherited(t0, t1, t2, t3, t4, t5, static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()))
# 304 "/usr/local/cuda/include/thrust/tuple.h"
{ }
# 307 "/usr/local/cuda/include/thrust/tuple.h"
tuple(typename access_traits< T0> ::parameter_type t0, typename access_traits< T1> ::parameter_type
# 308 "/usr/local/cuda/include/thrust/tuple.h"
t1, typename access_traits< T2> ::parameter_type
# 309 "/usr/local/cuda/include/thrust/tuple.h"
t2, typename access_traits< T3> ::parameter_type
# 310 "/usr/local/cuda/include/thrust/tuple.h"
t3, typename access_traits< T4> ::parameter_type
# 311 "/usr/local/cuda/include/thrust/tuple.h"
t4, typename access_traits< T5> ::parameter_type
# 312 "/usr/local/cuda/include/thrust/tuple.h"
t5, typename access_traits< T6> ::parameter_type
# 313 "/usr/local/cuda/include/thrust/tuple.h"
t6) : inherited(t0, t1, t2, t3, t4, t5, t6, static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()))
# 317 "/usr/local/cuda/include/thrust/tuple.h"
{ }
# 320 "/usr/local/cuda/include/thrust/tuple.h"
tuple(typename access_traits< T0> ::parameter_type t0, typename access_traits< T1> ::parameter_type
# 321 "/usr/local/cuda/include/thrust/tuple.h"
t1, typename access_traits< T2> ::parameter_type
# 322 "/usr/local/cuda/include/thrust/tuple.h"
t2, typename access_traits< T3> ::parameter_type
# 323 "/usr/local/cuda/include/thrust/tuple.h"
t3, typename access_traits< T4> ::parameter_type
# 324 "/usr/local/cuda/include/thrust/tuple.h"
t4, typename access_traits< T5> ::parameter_type
# 325 "/usr/local/cuda/include/thrust/tuple.h"
t5, typename access_traits< T6> ::parameter_type
# 326 "/usr/local/cuda/include/thrust/tuple.h"
t6, typename access_traits< T7> ::parameter_type
# 327 "/usr/local/cuda/include/thrust/tuple.h"
t7) : inherited(t0, t1, t2, t3, t4, t5, t6, t7, static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()))
# 330 "/usr/local/cuda/include/thrust/tuple.h"
{ }
# 333 "/usr/local/cuda/include/thrust/tuple.h"
tuple(typename access_traits< T0> ::parameter_type t0, typename access_traits< T1> ::parameter_type
# 334 "/usr/local/cuda/include/thrust/tuple.h"
t1, typename access_traits< T2> ::parameter_type
# 335 "/usr/local/cuda/include/thrust/tuple.h"
t2, typename access_traits< T3> ::parameter_type
# 336 "/usr/local/cuda/include/thrust/tuple.h"
t3, typename access_traits< T4> ::parameter_type
# 337 "/usr/local/cuda/include/thrust/tuple.h"
t4, typename access_traits< T5> ::parameter_type
# 338 "/usr/local/cuda/include/thrust/tuple.h"
t5, typename access_traits< T6> ::parameter_type
# 339 "/usr/local/cuda/include/thrust/tuple.h"
t6, typename access_traits< T7> ::parameter_type
# 340 "/usr/local/cuda/include/thrust/tuple.h"
t7, typename access_traits< T8> ::parameter_type
# 341 "/usr/local/cuda/include/thrust/tuple.h"
t8) : inherited(t0, t1, t2, t3, t4, t5, t6, t7, t8, static_cast< const ::thrust::null_type &>(::thrust::null_type()))
# 343 "/usr/local/cuda/include/thrust/tuple.h"
{ }
# 346 "/usr/local/cuda/include/thrust/tuple.h"
tuple(typename access_traits< T0> ::parameter_type t0, typename access_traits< T1> ::parameter_type
# 347 "/usr/local/cuda/include/thrust/tuple.h"
t1, typename access_traits< T2> ::parameter_type
# 348 "/usr/local/cuda/include/thrust/tuple.h"
t2, typename access_traits< T3> ::parameter_type
# 349 "/usr/local/cuda/include/thrust/tuple.h"
t3, typename access_traits< T4> ::parameter_type
# 350 "/usr/local/cuda/include/thrust/tuple.h"
t4, typename access_traits< T5> ::parameter_type
# 351 "/usr/local/cuda/include/thrust/tuple.h"
t5, typename access_traits< T6> ::parameter_type
# 352 "/usr/local/cuda/include/thrust/tuple.h"
t6, typename access_traits< T7> ::parameter_type
# 353 "/usr/local/cuda/include/thrust/tuple.h"
t7, typename access_traits< T8> ::parameter_type
# 354 "/usr/local/cuda/include/thrust/tuple.h"
t8, typename access_traits< T9> ::parameter_type
# 355 "/usr/local/cuda/include/thrust/tuple.h"
t9) : inherited(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9)
# 356 "/usr/local/cuda/include/thrust/tuple.h"
{ }
# 359 "/usr/local/cuda/include/thrust/tuple.h"
template< class U1, class U2>
# 361 "/usr/local/cuda/include/thrust/tuple.h"
tuple(const ::thrust::detail::cons< U1, U2> &p) : inherited(p) { }
# 363 "/usr/local/cuda/include/thrust/tuple.h"
template< class U1, class U2> tuple &
# 365 "/usr/local/cuda/include/thrust/tuple.h"
operator=(const ::thrust::detail::cons< U1, U2> &k)
# 366 "/usr/local/cuda/include/thrust/tuple.h"
{
# 367 "/usr/local/cuda/include/thrust/tuple.h"
::thrust::detail::map_tuple_to_cons< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> ::type::operator=(k);
# 368 "/usr/local/cuda/include/thrust/tuple.h"
return *this;
# 369 "/usr/local/cuda/include/thrust/tuple.h"
}
# 377 "/usr/local/cuda/include/thrust/tuple.h"
template< class U1, class U2> tuple &
# 379 "/usr/local/cuda/include/thrust/tuple.h"
operator=(const pair< U1, U2> &k) {
# 381 "/usr/local/cuda/include/thrust/tuple.h"
(this->head) = (k.first);
# 382 "/usr/local/cuda/include/thrust/tuple.h"
((this->tail).head) = (k.second);
# 383 "/usr/local/cuda/include/thrust/tuple.h"
return *this;
# 384 "/usr/local/cuda/include/thrust/tuple.h"
}
# 391 "/usr/local/cuda/include/thrust/tuple.h"
void swap(tuple &t)
# 392 "/usr/local/cuda/include/thrust/tuple.h"
{
# 393 "/usr/local/cuda/include/thrust/tuple.h"
inherited::swap(t);
# 394 "/usr/local/cuda/include/thrust/tuple.h"
}
# 395 "/usr/local/cuda/include/thrust/tuple.h"
};
# 401 "/usr/local/cuda/include/thrust/tuple.h"
template<> class tuple< null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> : public null_type {
# 405 "/usr/local/cuda/include/thrust/tuple.h"
public: typedef null_type inherited;
# 406 "/usr/local/cuda/include/thrust/tuple.h"
};
# 418 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0> inline typename detail::make_tuple_mapper< T0> ::type make_tuple(const T0 & t0);
# 434 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1> inline typename detail::make_tuple_mapper< T0, T1> ::type make_tuple(const T0 & t0, const T1 & t1);
# 445 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0> inline tuple< T0 &, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> tie(T0 & t0);
# 460 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1> inline tuple< T0 &, T1 &, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> tie(T0 & t0, T1 & t1);
# 469 "/usr/local/cuda/include/thrust/tuple.h"
template< class
# 470 "/usr/local/cuda/include/thrust/tuple.h"
T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9, class
# 471 "/usr/local/cuda/include/thrust/tuple.h"
U0, class U1, class U2, class U3, class U4, class U5, class U6, class U7, class U8, class U9> inline void
# 469 "/usr/local/cuda/include/thrust/tuple.h"
swap(tuple< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> & x, tuple< U0, U1, U2, U3, U4, U5, U6, U7, U8, U9> & y);
# 482 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1, class T2> inline typename detail::make_tuple_mapper< T0, T1, T2> ::type make_tuple(const T0 & t0, const T1 & t1, const T2 & t2);
# 487 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1, class T2, class T3> inline typename detail::make_tuple_mapper< T0, T1, T2, T3> ::type make_tuple(const T0 & t0, const T1 & t1, const T2 & t2, const T3 & t3);
# 492 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1, class T2, class T3, class T4> inline typename detail::make_tuple_mapper< T0, T1, T2, T3, T4> ::type make_tuple(const T0 & t0, const T1 & t1, const T2 & t2, const T3 & t3, const T4 & t4);
# 497 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1, class T2, class T3, class T4, class T5> inline typename detail::make_tuple_mapper< T0, T1, T2, T3, T4, T5> ::type make_tuple(const T0 & t0, const T1 & t1, const T2 & t2, const T3 & t3, const T4 & t4, const T5 & t5);
# 502 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6> inline typename detail::make_tuple_mapper< T0, T1, T2, T3, T4, T5, T6> ::type make_tuple(const T0 & t0, const T1 & t1, const T2 & t2, const T3 & t3, const T4 & t4, const T5 & t5, const T6 & t6);
# 507 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7> inline typename detail::make_tuple_mapper< T0, T1, T2, T3, T4, T5, T6, T7> ::type make_tuple(const T0 & t0, const T1 & t1, const T2 & t2, const T3 & t3, const T4 & t4, const T5 & t5, const T6 & t6, const T7 & t7);
# 512 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8> inline typename detail::make_tuple_mapper< T0, T1, T2, T3, T4, T5, T6, T7, T8> ::type make_tuple(const T0 & t0, const T1 & t1, const T2 & t2, const T3 & t3, const T4 & t4, const T5 & t5, const T6 & t6, const T7 & t7, const T8 & t8);
# 517 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9> inline typename detail::make_tuple_mapper< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> ::type make_tuple(const T0 & t0, const T1 & t1, const T2 & t2, const T3 & t3, const T4 & t4, const T5 & t5, const T6 & t6, const T7 & t7, const T8 & t8, const T9 & t9);
# 522 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1, class T2> inline tuple< T0 &, T1 &, T2 &, null_type, null_type, null_type, null_type, null_type, null_type, null_type> tie(T0 & t0, T1 & t1, T2 & t2);
# 526 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1, class T2, class T3> inline tuple< T0 &, T1 &, T2 &, T3 &, null_type, null_type, null_type, null_type, null_type, null_type> tie(T0 & t0, T1 & t1, T2 & t2, T3 & t3);
# 530 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1, class T2, class T3, class T4> inline tuple< T0 &, T1 &, T2 &, T3 &, T4 &, null_type, null_type, null_type, null_type, null_type> tie(T0 & t0, T1 & t1, T2 & t2, T3 & t3, T4 & t4);
# 534 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1, class T2, class T3, class T4, class T5> inline tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, null_type, null_type, null_type, null_type> tie(T0 & t0, T1 & t1, T2 & t2, T3 & t3, T4 & t4, T5 & t5);
# 538 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6> inline tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &, null_type, null_type, null_type> tie(T0 & t0, T1 & t1, T2 & t2, T3 & t3, T4 & t4, T5 & t5, T6 & t6);
# 542 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7> inline tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &, T7 &, null_type, null_type> tie(T0 & t0, T1 & t1, T2 & t2, T3 & t3, T4 & t4, T5 & t5, T6 & t6, T7 & t7);
# 546 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8> inline tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &, T7 &, T8 &, null_type> tie(T0 & t0, T1 & t1, T2 & t2, T3 & t3, T4 & t4, T5 & t5, T6 & t6, T7 & t7, T8 & t8);
# 550 "/usr/local/cuda/include/thrust/tuple.h"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9> inline tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &, T7 &, T8 &, T9 &> tie(T0 & t0, T1 & t1, T2 & t2, T3 & t3, T4 & t4, T5 & t5, T6 & t6, T7 & t7, T8 & t8, T9 & t9);
# 556 "/usr/local/cuda/include/thrust/tuple.h"
inline bool operator==(const null_type &, const null_type &);
# 559 "/usr/local/cuda/include/thrust/tuple.h"
inline bool operator>=(const null_type &, const null_type &);
# 562 "/usr/local/cuda/include/thrust/tuple.h"
inline bool operator<=(const null_type &, const null_type &);
# 565 "/usr/local/cuda/include/thrust/tuple.h"
inline bool operator!=(const null_type &, const null_type &);
# 568 "/usr/local/cuda/include/thrust/tuple.h"
inline bool operator<(const null_type &, const null_type &);
# 571 "/usr/local/cuda/include/thrust/tuple.h"
inline bool operator>(const null_type &, const null_type &);
# 582 "/usr/local/cuda/include/thrust/tuple.h"
}
# 31 "/usr/local/cuda/include/thrust/detail/functional/value.h"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/detail/functional/value.h"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/detail/functional/value.h"
namespace functional {
# 39 "/usr/local/cuda/include/thrust/detail/functional/value.h"
template< class Eval> struct actor;
# 42 "/usr/local/cuda/include/thrust/detail/functional/value.h"
template< class T>
# 43 "/usr/local/cuda/include/thrust/detail/functional/value.h"
class value {
# 48 "/usr/local/cuda/include/thrust/detail/functional/value.h"
public:
# 47 "/usr/local/cuda/include/thrust/detail/functional/value.h"
template< class Env>
# 48 "/usr/local/cuda/include/thrust/detail/functional/value.h"
struct result {
# 50 "/usr/local/cuda/include/thrust/detail/functional/value.h"
typedef T type;
# 51 "/usr/local/cuda/include/thrust/detail/functional/value.h"
};
# 54 "/usr/local/cuda/include/thrust/detail/functional/value.h"
value(const T &arg) : m_val(arg)
# 56 "/usr/local/cuda/include/thrust/detail/functional/value.h"
{ }
# 58 "/usr/local/cuda/include/thrust/detail/functional/value.h"
template< class Env> T
# 60 "/usr/local/cuda/include/thrust/detail/functional/value.h"
eval(const Env &) const
# 61 "/usr/local/cuda/include/thrust/detail/functional/value.h"
{
# 62 "/usr/local/cuda/include/thrust/detail/functional/value.h"
return m_val;
# 63 "/usr/local/cuda/include/thrust/detail/functional/value.h"
}
# 66 "/usr/local/cuda/include/thrust/detail/functional/value.h"
private: T m_val;
# 67 "/usr/local/cuda/include/thrust/detail/functional/value.h"
};
# 69 "/usr/local/cuda/include/thrust/detail/functional/value.h"
template< class T> actor< value< T> >
# 71 "/usr/local/cuda/include/thrust/detail/functional/value.h"
val(const T &x)
# 72 "/usr/local/cuda/include/thrust/detail/functional/value.h"
{
# 73 "/usr/local/cuda/include/thrust/detail/functional/value.h"
return ((value< T> )(x));
# 74 "/usr/local/cuda/include/thrust/detail/functional/value.h"
}
# 77 "/usr/local/cuda/include/thrust/detail/functional/value.h"
}
# 78 "/usr/local/cuda/include/thrust/detail/functional/value.h"
}
# 79 "/usr/local/cuda/include/thrust/detail/functional/value.h"
}
# 31 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
namespace functional {
# 39 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
template< class Eval0, class
# 40 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
Eval1 = null_type, class
# 41 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
Eval2 = null_type, class
# 42 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
Eval3 = null_type, class
# 43 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
Eval4 = null_type, class
# 44 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
Eval5 = null_type, class
# 45 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
Eval6 = null_type, class
# 46 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
Eval7 = null_type, class
# 47 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
Eval8 = null_type, class
# 48 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
Eval9 = null_type, class
# 49 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
Eval10 = null_type> class composite;
# 52 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
template< class Eval0, class Eval1>
# 53 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
class composite< Eval0, Eval1, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> {
# 68 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
public:
# 67 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
template< class Env>
# 68 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
struct result {
# 74 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
typedef typename Eval0::template result< tuple< typename Eval1::template result< Env> ::type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > ::type type;
# 75 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
};
# 78 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
composite(const Eval0 &e0, const Eval1 &e1) : m_eval0(e0), m_eval1(e1)
# 81 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
{ }
# 83 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
template< class Env> typename result< Env> ::type
# 86 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
eval(const Env &x) const
# 87 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
{
# 88 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
typename Eval1::template result< Env> ::type result1 = ((m_eval1).eval(x));
# 89 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
return ((m_eval0).eval(thrust::tie(result1)));
# 90 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
}
# 93 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
private: Eval0 m_eval0;
# 94 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
Eval1 m_eval1;
# 95 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
};
# 97 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
template< class Eval0, class Eval1, class Eval2>
# 98 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
class composite< Eval0, Eval1, Eval2, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> {
# 113 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
public:
# 112 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
template< class Env>
# 113 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
struct result {
# 120 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
typedef typename Eval0::template result< tuple< typename Eval1::template result< Env> ::type, typename Eval2::template result< Env> ::type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > ::type type;
# 121 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
};
# 124 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
composite(const Eval0 &e0, const Eval1 &e1, const Eval2 &e2) : m_eval0(e0), m_eval1(e1), m_eval2(e2)
# 128 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
{ }
# 130 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
template< class Env> typename result< Env> ::type
# 133 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
eval(const Env &x) const
# 134 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
{
# 135 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
typename Eval1::template result< Env> ::type result1 = ((m_eval1).eval(x));
# 136 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
typename Eval2::template result< Env> ::type result2 = ((m_eval2).eval(x));
# 137 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
return ((m_eval0).eval(thrust::tie(result1, result2)));
# 138 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
}
# 141 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
private: Eval0 m_eval0;
# 142 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
Eval1 m_eval1;
# 143 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
Eval2 m_eval2;
# 144 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
};
# 146 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
template< class Eval0, class Eval1> actor< composite< Eval0, Eval1> >
# 148 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
compose(const Eval0 &e0, const Eval1 &e1)
# 149 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
{
# 150 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
return ((actor< composite< Eval0, Eval1> > )(composite< Eval0, Eval1> (e0, e1)));
# 151 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
}
# 153 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
template< class Eval0, class Eval1, class Eval2> actor< composite< Eval0, Eval1, Eval2> >
# 155 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
compose(const Eval0 &e0, const Eval1 &e1, const Eval2 &e2)
# 156 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
{
# 157 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
return ((actor< composite< Eval0, Eval1, Eval2> > )(composite< Eval0, Eval1, Eval2> (e0, e1, e2)));
# 158 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
}
# 160 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
}
# 161 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
}
# 162 "/usr/local/cuda/include/thrust/detail/functional/composite.h"
}
# 23 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
namespace detail {
# 27 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
namespace functional {
# 32 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
template< template< class > class UnaryOperator>
# 33 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
struct unary_operator {
# 35 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
template< class Env>
# 36 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
struct argument : public eval_if< tuple_size< Env> ::value == 0, identity_< null_type> , tuple_element< 0, Env> > {
# 43 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
};
# 45 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
template< class Env>
# 46 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
struct operator_type {
# 52 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
typedef UnaryOperator< typename remove_reference< typename argument< Env> ::type> ::type> type;
# 53 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
};
# 55 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
template< class Env>
# 56 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
struct result {
# 58 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
typedef typename operator_type< Env> ::type op_type;
# 59 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
typedef typename operator_type< Env> ::type::result_type type;
# 60 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
};
# 62 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
template< class Env> typename result< Env> ::type
# 64 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
eval(const Env &e) const
# 65 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
{
# 66 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
typename operator_type< Env> ::type op;
# 67 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
return op(thrust::get< 0> (e));
# 68 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
}
# 69 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
};
# 73 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
template< template< class > class BinaryOperator>
# 74 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
struct binary_operator {
# 76 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
template< class Env>
# 77 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
struct first_argument : public eval_if< tuple_size< Env> ::value == 0, identity_< null_type> , tuple_element< 0, Env> > {
# 84 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
};
# 86 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
template< class Env>
# 87 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
struct operator_type {
# 93 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
typedef BinaryOperator< typename remove_reference< typename first_argument< Env> ::type> ::type> type;
# 94 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
};
# 96 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
template< class Env>
# 97 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
struct result {
# 99 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
typedef typename operator_type< Env> ::type op_type;
# 100 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
typedef typename operator_type< Env> ::type::result_type type;
# 101 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
};
# 103 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
template< class Env> typename result< Env> ::type
# 105 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
eval(const Env &e) const
# 106 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
{
# 107 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
typename operator_type< Env> ::type op;
# 108 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
return op(thrust::get< 0> (e), thrust::get< 1> (e));
# 109 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
}
# 110 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
};
# 112 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
}
# 113 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
}
# 114 "/usr/local/cuda/include/thrust/detail/functional/operators/operator_adaptors.h"
}
# 25 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
template< class , class , class > struct binary_function;
# 31 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
namespace detail {
# 33 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
namespace functional {
# 37 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
template< class > struct as_actor;
# 40 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
template< class T>
# 41 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
struct assign : public binary_function< T &, T, T &> {
# 44 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
T &operator()(T &lhs, const T &rhs) const { return lhs = rhs; }
# 45 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
};
# 47 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
template< class Eval, class T>
# 48 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
struct assign_result {
# 56 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
typedef actor< composite< binary_operator< assign> , actor< Eval> , typename as_actor< T> ::type> > type;
# 57 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
};
# 59 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
template< class Eval, class T> typename assign_result< Eval, T> ::type
# 62 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
do_assign(const actor< Eval> &_1, const T &_2)
# 63 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
{
# 64 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
return compose(binary_operator< assign> (), _1, as_actor< T> ::convert(_2));
# 67 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
}
# 69 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
}
# 70 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
}
# 71 "/usr/local/cuda/include/thrust/detail/functional/operators/assignment_operator.h"
}
# 22 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct plus;
# 27 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct multiplies;
# 28 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct minimum;
# 29 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct maximum;
# 30 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct logical_or;
# 31 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct logical_and;
# 32 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct bit_or;
# 33 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct bit_and;
# 34 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct bit_xor;
# 36 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
namespace detail {
# 42 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct has_result_type { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::result_type *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 44 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct has_argument_type { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::argument_type *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 46 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct has_first_argument_type { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::first_argument_type *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 48 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct has_second_argument_type { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::second_argument_type *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 51 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class AdaptableBinaryFunction>
# 52 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
struct result_type {
# 54 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
typedef typename AdaptableBinaryFunction::result_type type;
# 55 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
};
# 58 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T>
# 59 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
struct is_adaptable_unary_function : public and_< has_result_type< T> , has_argument_type< T> > {
# 64 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
};
# 67 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T>
# 68 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
struct is_adaptable_binary_function : public and_< has_result_type< T> , and_< has_first_argument_type< T> , has_second_argument_type< T> > > {
# 76 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
};
# 79 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class BinaryFunction>
# 80 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
struct is_commutative : public false_type {
# 82 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
};
# 84 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct is_commutative< plus< T> > : public is_arithmetic< T> { };
# 85 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct is_commutative< multiplies< T> > : public is_arithmetic< T> { };
# 86 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct is_commutative< minimum< T> > : public is_arithmetic< T> { };
# 87 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct is_commutative< maximum< T> > : public is_arithmetic< T> { };
# 88 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct is_commutative< logical_or< T> > : public is_arithmetic< T> { };
# 89 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct is_commutative< logical_and< T> > : public is_arithmetic< T> { };
# 90 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct is_commutative< bit_or< T> > : public is_arithmetic< T> { };
# 91 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct is_commutative< bit_and< T> > : public is_arithmetic< T> { };
# 92 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
template< class T> struct is_commutative< bit_xor< T> > : public is_arithmetic< T> { };
# 94 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
}
# 95 "/usr/local/cuda/include/thrust/detail/type_traits/function_traits.h"
}
# 23 "/usr/local/cuda/include/thrust/detail/type_traits/result_of_adaptable_function.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/detail/type_traits/result_of_adaptable_function.h"
namespace detail {
# 33 "/usr/local/cuda/include/thrust/detail/type_traits/result_of_adaptable_function.h"
template< class Signature, class Enable = void> struct result_of_adaptable_function;
# 38 "/usr/local/cuda/include/thrust/detail/type_traits/result_of_adaptable_function.h"
template< class Functor, class Arg1>
# 39 "/usr/local/cuda/include/thrust/detail/type_traits/result_of_adaptable_function.h"
struct result_of_adaptable_function< Functor (Arg1), typename enable_if< has_result_type< Functor> ::value> ::type> {
# 44 "/usr/local/cuda/include/thrust/detail/type_traits/result_of_adaptable_function.h"
typedef typename Functor::result_type type;
# 45 "/usr/local/cuda/include/thrust/detail/type_traits/result_of_adaptable_function.h"
};
# 48 "/usr/local/cuda/include/thrust/detail/type_traits/result_of_adaptable_function.h"
template< class Functor, class Arg1, class Arg2>
# 49 "/usr/local/cuda/include/thrust/detail/type_traits/result_of_adaptable_function.h"
struct result_of_adaptable_function< Functor (Arg1, Arg2), typename enable_if< has_result_type< Functor> ::value> ::type> {
# 54 "/usr/local/cuda/include/thrust/detail/type_traits/result_of_adaptable_function.h"
typedef typename Functor::result_type type;
# 55 "/usr/local/cuda/include/thrust/detail/type_traits/result_of_adaptable_function.h"
};
# 58 "/usr/local/cuda/include/thrust/detail/type_traits/result_of_adaptable_function.h"
}
# 59 "/usr/local/cuda/include/thrust/detail/type_traits/result_of_adaptable_function.h"
}
# 35 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
namespace thrust {
# 37 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
namespace detail {
# 39 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
namespace functional {
# 42 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class Action, class Env>
# 43 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
struct apply_actor {
# 45 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
typedef typename Action::template result< Env> ::type type;
# 46 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
};
# 48 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class Eval>
# 49 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
struct actor : public Eval {
# 52 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
typedef Eval eval_type;
# 55 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
actor();
# 58 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
actor(const Eval & base);
# 62 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
typename apply_actor< Eval, ::thrust::null_type> ::type operator()() const;
# 64 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class T0> typename apply_actor< Eval, tuple< T0 &, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type> > ::type operator()(T0 & _0) const;
# 69 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class T0, class T1> typename apply_actor< Eval, tuple< T0 &, T1 &, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type> > ::type operator()(T0 & _0, T1 & _1) const;
# 74 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class T0, class T1, class T2> typename apply_actor< Eval, tuple< T0 &, T1 &, T2 &, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type> > ::type operator()(T0 & _0, T1 & _1, T2 & _2) const;
# 79 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class T0, class T1, class T2, class T3> typename apply_actor< Eval, tuple< T0 &, T1 &, T2 &, T3 &, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type> > ::type operator()(T0 & _0, T1 & _1, T2 & _2, T3 & _3) const;
# 84 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class T0, class T1, class T2, class T3, class T4> typename apply_actor< Eval, tuple< T0 &, T1 &, T2 &, T3 &, T4 &, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type> > ::type operator()(T0 & _0, T1 & _1, T2 & _2, T3 & _3, T4 & _4) const;
# 89 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class T0, class T1, class T2, class T3, class T4, class T5> typename apply_actor< Eval, tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type> > ::type operator()(T0 & _0, T1 & _1, T2 & _2, T3 & _3, T4 & _4, T5 & _5) const;
# 94 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6> typename apply_actor< Eval, tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type> > ::type operator()(T0 & _0, T1 & _1, T2 & _2, T3 & _3, T4 & _4, T5 & _5, T6 & _6) const;
# 99 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7> typename apply_actor< Eval, tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &, T7 &, ::thrust::null_type, ::thrust::null_type> > ::type operator()(T0 & _0, T1 & _1, T2 & _2, T3 & _3, T4 & _4, T5 & _5, T6 & _6, T7 & _7) const;
# 104 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8> typename apply_actor< Eval, tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &, T7 &, T8 &, ::thrust::null_type> > ::type operator()(T0 & _0, T1 & _1, T2 & _2, T3 & _3, T4 & _4, T5 & _5, T6 & _6, T7 & _7, T8 & _8) const;
# 109 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9> typename apply_actor< Eval, tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &, T7 &, T8 &, T9 &> > ::type operator()(T0 & _0, T1 & _1, T2 & _2, T3 & _3, T4 & _4, T5 & _5, T6 & _6, T7 & _7, T8 & _8, T9 & _9) const;
# 114 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class T> typename assign_result< Eval, T> ::type operator=(const T & _1) const;
# 118 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
};
# 121 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class T>
# 122 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
struct as_actor {
# 124 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
typedef value< T> type;
# 126 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
static type convert(const T &x)
# 127 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
{
# 128 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
return val(x);
# 129 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
}
# 130 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
};
# 133 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class Eval>
# 134 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
struct as_actor< actor< Eval> > {
# 136 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
typedef actor< Eval> type;
# 138 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
static const type &convert(const actor< Eval> &x)
# 139 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
{
# 140 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
return x;
# 141 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
}
# 142 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
};
# 144 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class T> typename as_actor< T> ::type
# 147 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
make_actor(const T &x)
# 148 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
{
# 149 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
return as_actor< T> ::convert(x);
# 150 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
}
# 152 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
}
# 155 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class Eval>
# 156 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
struct result_of_adaptable_function< functional::actor< Eval> (void), void> {
# 163 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
typedef typename functional::apply_actor< functional::actor< Eval> , null_type> ::type type;
# 164 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
};
# 166 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class Eval, class Arg1>
# 167 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
struct result_of_adaptable_function< functional::actor< Eval> (Arg1), void> {
# 174 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
typedef typename functional::apply_actor< functional::actor< Eval> , tuple< Arg1, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > ::type type;
# 175 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
};
# 177 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
template< class Eval, class Arg1, class Arg2>
# 178 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
struct result_of_adaptable_function< functional::actor< Eval> (Arg1, Arg2), void> {
# 185 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
typedef typename functional::apply_actor< functional::actor< Eval> , tuple< Arg1, Arg2, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > ::type type;
# 186 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
};
# 188 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
}
# 189 "/usr/local/cuda/include/thrust/detail/functional/actor.h"
}
# 31 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
namespace thrust {
# 34 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
namespace detail {
# 36 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
namespace functional {
# 39 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class Eval>
# 41 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
actor< Eval> ::actor() : eval_type()
# 43 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
{ }
# 45 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class Eval>
# 47 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
actor< Eval> ::actor(const Eval &base) : eval_type(base)
# 49 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
{ }
# 51 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class Eval> typename apply_actor< Eval, null_type> ::type
# 57 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
actor< Eval> ::operator()() const
# 58 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
{
# 59 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
return eval_type::eval(::thrust::null_type());
# 60 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
}
# 62 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class Eval>
# 63 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class T0> typename apply_actor< Eval, tuple< T0 &, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > ::type
# 69 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
actor< Eval> ::operator()(T0 &_0) const
# 70 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
{
# 71 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
return eval_type::eval(::thrust::tie(_0));
# 72 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
}
# 74 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class Eval>
# 75 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class T0, class T1> typename apply_actor< Eval, tuple< T0 &, T1 &, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > ::type
# 81 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
actor< Eval> ::operator()(T0 &_0, T1 &_1) const
# 82 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
{
# 83 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
return eval_type::eval(::thrust::tie(_0, _1));
# 84 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
}
# 86 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class Eval>
# 87 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class T0, class T1, class T2> typename apply_actor< Eval, tuple< T0 &, T1 &, T2 &, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > ::type
# 93 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
actor< Eval> ::operator()(T0 &_0, T1 &_1, T2 &_2) const
# 94 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
{
# 95 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
return eval_type::eval(::thrust::tie(_0, _1, _2));
# 96 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
}
# 98 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class Eval>
# 99 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class T0, class T1, class T2, class T3> typename apply_actor< Eval, tuple< T0 &, T1 &, T2 &, T3 &, null_type, null_type, null_type, null_type, null_type, null_type> > ::type
# 105 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
actor< Eval> ::operator()(T0 &_0, T1 &_1, T2 &_2, T3 &_3) const
# 106 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
{
# 107 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
return eval_type::eval(::thrust::tie(_0, _1, _2, _3));
# 108 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
}
# 110 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class Eval>
# 111 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class T0, class T1, class T2, class T3, class T4> typename apply_actor< Eval, tuple< T0 &, T1 &, T2 &, T3 &, T4 &, null_type, null_type, null_type, null_type, null_type> > ::type
# 117 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
actor< Eval> ::operator()(T0 &_0, T1 &_1, T2 &_2, T3 &_3, T4 &_4) const
# 118 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
{
# 119 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
return eval_type::eval(::thrust::tie(_0, _1, _2, _3, _4));
# 120 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
}
# 122 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class Eval>
# 123 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class T0, class T1, class T2, class T3, class T4, class T5> typename apply_actor< Eval, tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, null_type, null_type, null_type, null_type> > ::type
# 129 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
actor< Eval> ::operator()(T0 &_0, T1 &_1, T2 &_2, T3 &_3, T4 &_4, T5 &_5) const
# 130 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
{
# 131 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
return eval_type::eval(::thrust::tie(_0, _1, _2, _3, _4, _5));
# 132 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
}
# 134 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class Eval>
# 135 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6> typename apply_actor< Eval, tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &, null_type, null_type, null_type> > ::type
# 141 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
actor< Eval> ::operator()(T0 &_0, T1 &_1, T2 &_2, T3 &_3, T4 &_4, T5 &_5, T6 &_6) const
# 142 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
{
# 143 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
return eval_type::eval(::thrust::tie(_0, _1, _2, _3, _4, _5, _6));
# 144 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
}
# 146 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class Eval>
# 147 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7> typename apply_actor< Eval, tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &, T7 &, null_type, null_type> > ::type
# 153 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
actor< Eval> ::operator()(T0 &_0, T1 &_1, T2 &_2, T3 &_3, T4 &_4, T5 &_5, T6 &_6, T7 &_7) const
# 154 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
{
# 155 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
return eval_type::eval(::thrust::tie(_0, _1, _2, _3, _4, _5, _6, _7));
# 156 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
}
# 158 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class Eval>
# 159 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8> typename apply_actor< Eval, tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &, T7 &, T8 &, null_type> > ::type
# 165 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
actor< Eval> ::operator()(T0 &_0, T1 &_1, T2 &_2, T3 &_3, T4 &_4, T5 &_5, T6 &_6, T7 &_7, T8 &_8) const
# 166 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
{
# 167 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
return eval_type::eval(::thrust::tie(_0, _1, _2, _3, _4, _5, _6, _7, _8));
# 168 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
}
# 170 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class Eval>
# 171 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class T0, class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9> typename apply_actor< Eval, tuple< T0 &, T1 &, T2 &, T3 &, T4 &, T5 &, T6 &, T7 &, T8 &, T9 &> > ::type
# 177 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
actor< Eval> ::operator()(T0 &_0, T1 &_1, T2 &_2, T3 &_3, T4 &_4, T5 &_5, T6 &_6, T7 &_7, T8 &_8, T9 &_9) const
# 178 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
{
# 179 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
return eval_type::eval(::thrust::tie(_0, _1, _2, _3, _4, _5, _6, _7, _8, _9));
# 180 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
}
# 182 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class Eval>
# 183 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
template< class T> typename assign_result< Eval, T> ::type
# 186 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
actor< Eval> ::operator=(const T &_1) const
# 187 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
{
# 188 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
return do_assign(*this, _1);
# 189 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
}
# 191 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
}
# 192 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
}
# 193 "/usr/local/cuda/include/thrust/detail/functional/actor.inl"
}
# 31 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
namespace functional {
# 38 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
template< unsigned i, class Env>
# 39 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
struct argument_helper {
# 41 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
typedef typename tuple_element< i, Env> ::type type;
# 42 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
};
# 44 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
template< unsigned i>
# 45 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
struct argument_helper< i, null_type> {
# 47 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
typedef null_type type;
# 48 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
};
# 51 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
template< unsigned i>
# 52 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
class argument {
# 56 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
public:
# 55 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
template< class Env>
# 56 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
struct result : public argument_helper< i, Env> {
# 59 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
};
# 62 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
argument() { }
# 64 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
template< class Env> typename result< Env> ::type
# 66 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
eval(const Env &e) const
# 67 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
{
# 68 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
return thrust::get< i> (e);
# 69 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
}
# 70 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
};
# 72 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
}
# 73 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
}
# 74 "/usr/local/cuda/include/thrust/detail/functional/argument.h"
}
# 23 "/usr/local/cuda/include/thrust/detail/functional/placeholder.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/detail/functional/placeholder.h"
namespace detail {
# 27 "/usr/local/cuda/include/thrust/detail/functional/placeholder.h"
namespace functional {
# 30 "/usr/local/cuda/include/thrust/detail/functional/placeholder.h"
template< unsigned i>
# 31 "/usr/local/cuda/include/thrust/detail/functional/placeholder.h"
struct placeholder {
# 33 "/usr/local/cuda/include/thrust/detail/functional/placeholder.h"
typedef actor< argument< i> > type;
# 34 "/usr/local/cuda/include/thrust/detail/functional/placeholder.h"
};
# 36 "/usr/local/cuda/include/thrust/detail/functional/placeholder.h"
}
# 37 "/usr/local/cuda/include/thrust/detail/functional/placeholder.h"
}
# 38 "/usr/local/cuda/include/thrust/detail/functional/placeholder.h"
}
# 28 "/usr/local/cuda/include/thrust/functional.h"
namespace thrust {
# 34 "/usr/local/cuda/include/thrust/functional.h"
template< class Operation> struct unary_traits;
# 36 "/usr/local/cuda/include/thrust/functional.h"
template< class Operation> struct binary_traits;
# 68 "/usr/local/cuda/include/thrust/functional.h"
template< class Argument, class
# 69 "/usr/local/cuda/include/thrust/functional.h"
Result>
# 70 "/usr/local/cuda/include/thrust/functional.h"
struct unary_function {
# 75 "/usr/local/cuda/include/thrust/functional.h"
typedef Argument argument_type;
# 80 "/usr/local/cuda/include/thrust/functional.h"
typedef Result result_type;
# 81 "/usr/local/cuda/include/thrust/functional.h"
};
# 108 "/usr/local/cuda/include/thrust/functional.h"
template< class Argument1, class
# 109 "/usr/local/cuda/include/thrust/functional.h"
Argument2, class
# 110 "/usr/local/cuda/include/thrust/functional.h"
Result>
# 111 "/usr/local/cuda/include/thrust/functional.h"
struct binary_function {
# 116 "/usr/local/cuda/include/thrust/functional.h"
typedef Argument1 first_argument_type;
# 121 "/usr/local/cuda/include/thrust/functional.h"
typedef Argument2 second_argument_type;
# 126 "/usr/local/cuda/include/thrust/functional.h"
typedef Result result_type;
# 127 "/usr/local/cuda/include/thrust/functional.h"
};
# 175 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 176 "/usr/local/cuda/include/thrust/functional.h"
struct plus {
# 181 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 186 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 191 "/usr/local/cuda/include/thrust/functional.h"
typedef T result_type;
# 195 "/usr/local/cuda/include/thrust/functional.h"
T operator()(const T &lhs, const T &rhs) const { return lhs + rhs; }
# 196 "/usr/local/cuda/include/thrust/functional.h"
};
# 231 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 232 "/usr/local/cuda/include/thrust/functional.h"
struct minus {
# 237 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 242 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 247 "/usr/local/cuda/include/thrust/functional.h"
typedef T result_type;
# 251 "/usr/local/cuda/include/thrust/functional.h"
T operator()(const T &lhs, const T &rhs) const { return lhs - rhs; }
# 252 "/usr/local/cuda/include/thrust/functional.h"
};
# 287 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 288 "/usr/local/cuda/include/thrust/functional.h"
struct multiplies {
# 293 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 298 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 303 "/usr/local/cuda/include/thrust/functional.h"
typedef T result_type;
# 307 "/usr/local/cuda/include/thrust/functional.h"
T operator()(const T &lhs, const T &rhs) const { return lhs * rhs; }
# 308 "/usr/local/cuda/include/thrust/functional.h"
};
# 343 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 344 "/usr/local/cuda/include/thrust/functional.h"
struct divides {
# 349 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 354 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 359 "/usr/local/cuda/include/thrust/functional.h"
typedef T result_type;
# 363 "/usr/local/cuda/include/thrust/functional.h"
T operator()(const T &lhs, const T &rhs) const { return lhs / rhs; }
# 364 "/usr/local/cuda/include/thrust/functional.h"
};
# 399 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 400 "/usr/local/cuda/include/thrust/functional.h"
struct modulus {
# 405 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 410 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 415 "/usr/local/cuda/include/thrust/functional.h"
typedef T result_type;
# 419 "/usr/local/cuda/include/thrust/functional.h"
T operator()(const T &lhs, const T &rhs) const { return lhs % rhs; }
# 420 "/usr/local/cuda/include/thrust/functional.h"
};
# 452 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 453 "/usr/local/cuda/include/thrust/functional.h"
struct negate {
# 458 "/usr/local/cuda/include/thrust/functional.h"
typedef T argument_type;
# 463 "/usr/local/cuda/include/thrust/functional.h"
typedef T result_type;
# 467 "/usr/local/cuda/include/thrust/functional.h"
T operator()(const T &x) const { return -x; }
# 468 "/usr/local/cuda/include/thrust/functional.h"
};
# 489 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 490 "/usr/local/cuda/include/thrust/functional.h"
struct equal_to {
# 495 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 500 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 505 "/usr/local/cuda/include/thrust/functional.h"
typedef bool result_type;
# 509 "/usr/local/cuda/include/thrust/functional.h"
bool operator()(const T &lhs, const T &rhs) const { return lhs == rhs; }
# 510 "/usr/local/cuda/include/thrust/functional.h"
};
# 523 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 524 "/usr/local/cuda/include/thrust/functional.h"
struct not_equal_to {
# 529 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 534 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 539 "/usr/local/cuda/include/thrust/functional.h"
typedef bool result_type;
# 543 "/usr/local/cuda/include/thrust/functional.h"
bool operator()(const T &lhs, const T &rhs) const { return lhs != rhs; }
# 544 "/usr/local/cuda/include/thrust/functional.h"
};
# 557 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 558 "/usr/local/cuda/include/thrust/functional.h"
struct greater {
# 563 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 568 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 573 "/usr/local/cuda/include/thrust/functional.h"
typedef bool result_type;
# 577 "/usr/local/cuda/include/thrust/functional.h"
bool operator()(const T &lhs, const T &rhs) const { return lhs > rhs; }
# 578 "/usr/local/cuda/include/thrust/functional.h"
};
# 591 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 592 "/usr/local/cuda/include/thrust/functional.h"
struct less {
# 597 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 602 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 607 "/usr/local/cuda/include/thrust/functional.h"
typedef bool result_type;
# 611 "/usr/local/cuda/include/thrust/functional.h"
bool operator()(const T &lhs, const T &rhs) const { return lhs < rhs; }
# 612 "/usr/local/cuda/include/thrust/functional.h"
};
# 625 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 626 "/usr/local/cuda/include/thrust/functional.h"
struct greater_equal {
# 631 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 636 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 641 "/usr/local/cuda/include/thrust/functional.h"
typedef bool result_type;
# 645 "/usr/local/cuda/include/thrust/functional.h"
bool operator()(const T &lhs, const T &rhs) const { return lhs >= rhs; }
# 646 "/usr/local/cuda/include/thrust/functional.h"
};
# 659 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 660 "/usr/local/cuda/include/thrust/functional.h"
struct less_equal {
# 665 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 670 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 675 "/usr/local/cuda/include/thrust/functional.h"
typedef bool result_type;
# 679 "/usr/local/cuda/include/thrust/functional.h"
bool operator()(const T &lhs, const T &rhs) const { return lhs <= rhs; }
# 680 "/usr/local/cuda/include/thrust/functional.h"
};
# 702 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 703 "/usr/local/cuda/include/thrust/functional.h"
struct logical_and {
# 708 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 713 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 718 "/usr/local/cuda/include/thrust/functional.h"
typedef bool result_type;
# 722 "/usr/local/cuda/include/thrust/functional.h"
bool operator()(const T &lhs, const T &rhs) const { return lhs && rhs; }
# 723 "/usr/local/cuda/include/thrust/functional.h"
};
# 736 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 737 "/usr/local/cuda/include/thrust/functional.h"
struct logical_or {
# 742 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 747 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 752 "/usr/local/cuda/include/thrust/functional.h"
typedef bool result_type;
# 756 "/usr/local/cuda/include/thrust/functional.h"
bool operator()(const T &lhs, const T &rhs) const { return lhs || rhs; }
# 757 "/usr/local/cuda/include/thrust/functional.h"
};
# 784 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 785 "/usr/local/cuda/include/thrust/functional.h"
struct logical_not {
# 790 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 795 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 800 "/usr/local/cuda/include/thrust/functional.h"
typedef bool result_type;
# 804 "/usr/local/cuda/include/thrust/functional.h"
bool operator()(const T &x) const { return !x; }
# 805 "/usr/local/cuda/include/thrust/functional.h"
};
# 847 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 848 "/usr/local/cuda/include/thrust/functional.h"
struct bit_and {
# 853 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 858 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 863 "/usr/local/cuda/include/thrust/functional.h"
typedef T result_type;
# 867 "/usr/local/cuda/include/thrust/functional.h"
T operator()(const T &lhs, const T &rhs) const { return lhs & rhs; }
# 868 "/usr/local/cuda/include/thrust/functional.h"
};
# 902 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 903 "/usr/local/cuda/include/thrust/functional.h"
struct bit_or {
# 908 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 913 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 918 "/usr/local/cuda/include/thrust/functional.h"
typedef T result_type;
# 922 "/usr/local/cuda/include/thrust/functional.h"
T operator()(const T &lhs, const T &rhs) const { return lhs | rhs; }
# 923 "/usr/local/cuda/include/thrust/functional.h"
};
# 957 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 958 "/usr/local/cuda/include/thrust/functional.h"
struct bit_xor {
# 963 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 968 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 973 "/usr/local/cuda/include/thrust/functional.h"
typedef T result_type;
# 977 "/usr/local/cuda/include/thrust/functional.h"
T operator()(const T &lhs, const T &rhs) const { return lhs ^ rhs; }
# 978 "/usr/local/cuda/include/thrust/functional.h"
};
# 1008 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 1009 "/usr/local/cuda/include/thrust/functional.h"
struct identity {
# 1014 "/usr/local/cuda/include/thrust/functional.h"
typedef T argument_type;
# 1019 "/usr/local/cuda/include/thrust/functional.h"
typedef T result_type;
# 1023 "/usr/local/cuda/include/thrust/functional.h"
const T &operator()(const T &x) const { return x; }
# 1024 "/usr/local/cuda/include/thrust/functional.h"
};
# 1050 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 1051 "/usr/local/cuda/include/thrust/functional.h"
struct maximum {
# 1056 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 1061 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 1066 "/usr/local/cuda/include/thrust/functional.h"
typedef T result_type;
# 1070 "/usr/local/cuda/include/thrust/functional.h"
T operator()(const T &lhs, const T &rhs) const { return (lhs < rhs) ? rhs : lhs; }
# 1071 "/usr/local/cuda/include/thrust/functional.h"
};
# 1097 "/usr/local/cuda/include/thrust/functional.h"
template< class T>
# 1098 "/usr/local/cuda/include/thrust/functional.h"
struct minimum {
# 1103 "/usr/local/cuda/include/thrust/functional.h"
typedef T first_argument_type;
# 1108 "/usr/local/cuda/include/thrust/functional.h"
typedef T second_argument_type;
# 1113 "/usr/local/cuda/include/thrust/functional.h"
typedef T result_type;
# 1117 "/usr/local/cuda/include/thrust/functional.h"
T operator()(const T &lhs, const T &rhs) const { return (lhs < rhs) ? lhs : rhs; }
# 1118 "/usr/local/cuda/include/thrust/functional.h"
};
# 1138 "/usr/local/cuda/include/thrust/functional.h"
template< class T1, class T2>
# 1139 "/usr/local/cuda/include/thrust/functional.h"
struct project1st {
# 1144 "/usr/local/cuda/include/thrust/functional.h"
typedef T1 first_argument_type;
# 1149 "/usr/local/cuda/include/thrust/functional.h"
typedef T2 second_argument_type;
# 1154 "/usr/local/cuda/include/thrust/functional.h"
typedef T1 result_type;
# 1158 "/usr/local/cuda/include/thrust/functional.h"
const T1 &operator()(const T1 &lhs, const T2 &rhs) const { return lhs; }
# 1159 "/usr/local/cuda/include/thrust/functional.h"
};
# 1179 "/usr/local/cuda/include/thrust/functional.h"
template< class T1, class T2>
# 1180 "/usr/local/cuda/include/thrust/functional.h"
struct project2nd {
# 1185 "/usr/local/cuda/include/thrust/functional.h"
typedef T1 first_argument_type;
# 1190 "/usr/local/cuda/include/thrust/functional.h"
typedef T2 second_argument_type;
# 1195 "/usr/local/cuda/include/thrust/functional.h"
typedef T2 result_type;
# 1199 "/usr/local/cuda/include/thrust/functional.h"
const T2 &operator()(const T1 &lhs, const T2 &rhs) const { return rhs; }
# 1200 "/usr/local/cuda/include/thrust/functional.h"
};
# 1223 "/usr/local/cuda/include/thrust/functional.h"
template< class Predicate>
# 1224 "/usr/local/cuda/include/thrust/functional.h"
struct unary_negate : public unary_function< typename Predicate::argument_type, bool> {
# 1231 "/usr/local/cuda/include/thrust/functional.h"
explicit unary_negate(Predicate p) : pred(p) { }
# 1236 "/usr/local/cuda/include/thrust/functional.h"
bool operator()(const typename Predicate::argument_type &x) { return !(pred)(x); }
# 1240 "/usr/local/cuda/include/thrust/functional.h"
Predicate pred;
# 1243 "/usr/local/cuda/include/thrust/functional.h"
};
# 1261 "/usr/local/cuda/include/thrust/functional.h"
template< class Predicate> unary_negate< Predicate> not1(const Predicate & pred);
# 1275 "/usr/local/cuda/include/thrust/functional.h"
template< class Predicate>
# 1276 "/usr/local/cuda/include/thrust/functional.h"
struct binary_negate : public binary_function< typename Predicate::first_argument_type, typename Predicate::second_argument_type, bool> {
# 1285 "/usr/local/cuda/include/thrust/functional.h"
explicit binary_negate(Predicate p) : pred(p) { }
# 1290 "/usr/local/cuda/include/thrust/functional.h"
bool operator()(const typename Predicate::first_argument_type &x, const typename Predicate::second_argument_type &y)
# 1291 "/usr/local/cuda/include/thrust/functional.h"
{
# 1292 "/usr/local/cuda/include/thrust/functional.h"
return !(pred)(x, y);
# 1293 "/usr/local/cuda/include/thrust/functional.h"
}
# 1297 "/usr/local/cuda/include/thrust/functional.h"
Predicate pred;
# 1300 "/usr/local/cuda/include/thrust/functional.h"
};
# 1318 "/usr/local/cuda/include/thrust/functional.h"
template< class BinaryPredicate> binary_negate< BinaryPredicate> not2(const BinaryPredicate & pred);
# 1374 "/usr/local/cuda/include/thrust/functional.h"
namespace placeholders {
# 1383 "/usr/local/cuda/include/thrust/functional.h"
static const detail::functional::placeholder< 0U> ::type _1;
# 1392 "/usr/local/cuda/include/thrust/functional.h"
static const detail::functional::placeholder< 1U> ::type _2;
# 1401 "/usr/local/cuda/include/thrust/functional.h"
static const detail::functional::placeholder< 2U> ::type _3;
# 1410 "/usr/local/cuda/include/thrust/functional.h"
static const detail::functional::placeholder< 3U> ::type _4;
# 1419 "/usr/local/cuda/include/thrust/functional.h"
static const detail::functional::placeholder< 4U> ::type _5;
# 1428 "/usr/local/cuda/include/thrust/functional.h"
static const detail::functional::placeholder< 5U> ::type _6;
# 1437 "/usr/local/cuda/include/thrust/functional.h"
static const detail::functional::placeholder< 6U> ::type _7;
# 1446 "/usr/local/cuda/include/thrust/functional.h"
static const detail::functional::placeholder< 7U> ::type _8;
# 1455 "/usr/local/cuda/include/thrust/functional.h"
static const detail::functional::placeholder< 8U> ::type _9;
# 1464 "/usr/local/cuda/include/thrust/functional.h"
static const detail::functional::placeholder< 9U> ::type _10;
# 1468 "/usr/local/cuda/include/thrust/functional.h"
}
# 1475 "/usr/local/cuda/include/thrust/functional.h"
}
# 19 "/usr/local/cuda/include/thrust/detail/functional.inl"
namespace thrust {
# 22 "/usr/local/cuda/include/thrust/detail/functional.inl"
namespace detail {
# 25 "/usr/local/cuda/include/thrust/detail/functional.inl"
template< class Operation> struct unary_traits_imp;
# 28 "/usr/local/cuda/include/thrust/detail/functional.inl"
template< class Operation>
# 29 "/usr/local/cuda/include/thrust/detail/functional.inl"
struct unary_traits_imp< Operation *> {
# 31 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Operation function_type;
# 32 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef const function_type &param_type;
# 33 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef typename Operation::result_type result_type;
# 34 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef typename Operation::argument_type argument_type;
# 35 "/usr/local/cuda/include/thrust/detail/functional.inl"
};
# 37 "/usr/local/cuda/include/thrust/detail/functional.inl"
template< class Result, class Argument>
# 38 "/usr/local/cuda/include/thrust/detail/functional.inl"
struct unary_traits_imp< Result (*)(Argument)> {
# 40 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Result (*function_type)(Argument);
# 41 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Result (*param_type)(Argument);
# 42 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Result result_type;
# 43 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Argument argument_type;
# 44 "/usr/local/cuda/include/thrust/detail/functional.inl"
};
# 46 "/usr/local/cuda/include/thrust/detail/functional.inl"
template< class Operation> struct binary_traits_imp;
# 49 "/usr/local/cuda/include/thrust/detail/functional.inl"
template< class Operation>
# 50 "/usr/local/cuda/include/thrust/detail/functional.inl"
struct binary_traits_imp< Operation *> {
# 52 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Operation function_type;
# 53 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef const function_type &param_type;
# 54 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef typename Operation::result_type result_type;
# 55 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef typename Operation::first_argument_type first_argument_type;
# 56 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef typename Operation::second_argument_type second_argument_type;
# 57 "/usr/local/cuda/include/thrust/detail/functional.inl"
};
# 59 "/usr/local/cuda/include/thrust/detail/functional.inl"
template< class Result, class Argument1, class Argument2>
# 60 "/usr/local/cuda/include/thrust/detail/functional.inl"
struct binary_traits_imp< Result (*)(Argument1, Argument2)> {
# 62 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Result (*function_type)(Argument1, Argument2);
# 63 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Result (*param_type)(Argument1, Argument2);
# 64 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Result result_type;
# 65 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Argument1 first_argument_type;
# 66 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Argument2 second_argument_type;
# 67 "/usr/local/cuda/include/thrust/detail/functional.inl"
};
# 69 "/usr/local/cuda/include/thrust/detail/functional.inl"
}
# 71 "/usr/local/cuda/include/thrust/detail/functional.inl"
template< class Operation>
# 72 "/usr/local/cuda/include/thrust/detail/functional.inl"
struct unary_traits {
# 74 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef typename detail::unary_traits_imp< Operation *> ::function_type function_type;
# 75 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef typename detail::unary_traits_imp< Operation *> ::param_type param_type;
# 76 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef typename detail::unary_traits_imp< Operation *> ::result_type result_type;
# 77 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef typename detail::unary_traits_imp< Operation *> ::argument_type argument_type;
# 78 "/usr/local/cuda/include/thrust/detail/functional.inl"
};
# 80 "/usr/local/cuda/include/thrust/detail/functional.inl"
template< class Result, class Argument>
# 81 "/usr/local/cuda/include/thrust/detail/functional.inl"
struct unary_traits< Result (*)(Argument)> {
# 83 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Result (*function_type)(Argument);
# 84 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Result (*param_type)(Argument);
# 85 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Result result_type;
# 86 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Argument argument_type;
# 87 "/usr/local/cuda/include/thrust/detail/functional.inl"
};
# 89 "/usr/local/cuda/include/thrust/detail/functional.inl"
template< class Operation>
# 90 "/usr/local/cuda/include/thrust/detail/functional.inl"
struct binary_traits {
# 92 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef typename detail::binary_traits_imp< Operation *> ::function_type function_type;
# 93 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef typename detail::binary_traits_imp< Operation *> ::param_type param_type;
# 94 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef typename detail::binary_traits_imp< Operation *> ::result_type result_type;
# 95 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef typename detail::binary_traits_imp< Operation *> ::first_argument_type first_argument_type;
# 96 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef typename detail::binary_traits_imp< Operation *> ::second_argument_type second_argument_type;
# 97 "/usr/local/cuda/include/thrust/detail/functional.inl"
};
# 99 "/usr/local/cuda/include/thrust/detail/functional.inl"
template< class Result, class Argument1, class Argument2>
# 100 "/usr/local/cuda/include/thrust/detail/functional.inl"
struct binary_traits< Result (*)(Argument1, Argument2)> {
# 102 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Result (*function_type)(Argument1, Argument2);
# 103 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Result (*param_type)(Argument1, Argument2);
# 104 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Result result_type;
# 105 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Argument1 first_argument_type;
# 106 "/usr/local/cuda/include/thrust/detail/functional.inl"
typedef Argument2 second_argument_type;
# 107 "/usr/local/cuda/include/thrust/detail/functional.inl"
};
# 109 "/usr/local/cuda/include/thrust/detail/functional.inl"
template< class Predicate> unary_negate< Predicate>
# 110 "/usr/local/cuda/include/thrust/detail/functional.inl"
not1(const Predicate &pred)
# 111 "/usr/local/cuda/include/thrust/detail/functional.inl"
{
# 112 "/usr/local/cuda/include/thrust/detail/functional.inl"
return ((unary_negate< Predicate> )(pred));
# 113 "/usr/local/cuda/include/thrust/detail/functional.inl"
}
# 115 "/usr/local/cuda/include/thrust/detail/functional.inl"
template< class BinaryPredicate> binary_negate< BinaryPredicate>
# 116 "/usr/local/cuda/include/thrust/detail/functional.inl"
not2(const BinaryPredicate &pred)
# 117 "/usr/local/cuda/include/thrust/detail/functional.inl"
{
# 118 "/usr/local/cuda/include/thrust/detail/functional.inl"
return ((binary_negate< BinaryPredicate> )(pred));
# 119 "/usr/local/cuda/include/thrust/detail/functional.inl"
}
# 121 "/usr/local/cuda/include/thrust/detail/functional.inl"
}
# 25 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
namespace thrust {
# 27 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
namespace functional {
# 32 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class Eval> actor< composite< unary_operator< negate> , actor< Eval> > >
# 41 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator-(const actor< Eval> &_1)
# 42 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 43 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(unary_operator< negate> (), _1);
# 44 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 47 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T>
# 48 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
struct unary_plus : public unary_function< T, T> {
# 51 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
T operator()(const T &x) const { return +x; }
# 52 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
};
# 54 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class Eval> actor< composite< unary_operator< unary_plus> , actor< Eval> > >
# 62 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator+(const actor< Eval> &_1)
# 63 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 64 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(unary_operator< unary_plus> (), _1);
# 65 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 67 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T1, class T2> actor< composite< binary_operator< plus> , actor< T1> , typename as_actor< T2> ::type> >
# 76 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator+(const actor< T1> &_1, const T2 &_2)
# 77 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 78 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(binary_operator< plus> (), make_actor(_1), make_actor(_2));
# 81 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 83 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T1, class T2> actor< composite< binary_operator< plus> , typename as_actor< T1> ::type, actor< T2> > >
# 92 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator+(const T1 &_1, const actor< T2> &_2)
# 93 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 94 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(binary_operator< plus> (), make_actor(_1), make_actor(_2));
# 97 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 99 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T1, class T2> actor< composite< binary_operator< plus> , actor< T1> , actor< T2> > >
# 108 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator+(const actor< T1> &_1, const actor< T2> &_2)
# 109 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 110 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(binary_operator< plus> (), make_actor(_1), make_actor(_2));
# 113 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 115 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T1, class T2> actor< composite< binary_operator< minus> , typename as_actor< T1> ::type, actor< T2> > >
# 124 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator-(const T1 &_1, const actor< T2> &_2)
# 125 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 126 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(binary_operator< minus> (), make_actor(_1), make_actor(_2));
# 129 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 131 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T1, class T2> actor< composite< binary_operator< minus> , actor< T1> , typename as_actor< T2> ::type> >
# 140 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator-(const actor< T1> &_1, const T2 &_2)
# 141 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 142 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(binary_operator< minus> (), make_actor(_1), make_actor(_2));
# 145 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 147 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T1, class T2> actor< composite< binary_operator< minus> , actor< T1> , actor< T2> > >
# 156 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator-(const actor< T1> &_1, const actor< T2> &_2)
# 157 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 158 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(binary_operator< minus> (), make_actor(_1), make_actor(_2));
# 161 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 163 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T1, class T2> actor< composite< binary_operator< multiplies> , typename as_actor< T1> ::type, actor< T2> > >
# 172 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator*(const T1 &_1, const actor< T2> &_2)
# 173 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 174 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(binary_operator< multiplies> (), make_actor(_1), make_actor(_2));
# 177 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 179 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T1, class T2> actor< composite< binary_operator< multiplies> , actor< T1> , typename as_actor< T2> ::type> >
# 188 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator*(const actor< T1> &_1, const T2 &_2)
# 189 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 190 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(binary_operator< multiplies> (), make_actor(_1), make_actor(_2));
# 193 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 195 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T1, class T2> actor< composite< binary_operator< multiplies> , actor< T1> , actor< T2> > >
# 204 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator*(const actor< T1> &_1, const actor< T2> &_2)
# 205 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 206 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(binary_operator< multiplies> (), make_actor(_1), make_actor(_2));
# 209 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 211 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T1, class T2> actor< composite< binary_operator< divides> , actor< T1> , typename as_actor< T2> ::type> >
# 220 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator/(const actor< T1> &_1, const T2 &_2)
# 221 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 222 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(binary_operator< divides> (), make_actor(_1), make_actor(_2));
# 225 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 227 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T1, class T2> actor< composite< binary_operator< divides> , typename as_actor< T1> ::type, actor< T2> > >
# 236 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator/(const T1 &_1, const actor< T2> &_2)
# 237 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 238 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(binary_operator< divides> (), make_actor(_1), make_actor(_2));
# 241 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 243 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T1, class T2> actor< composite< binary_operator< divides> , actor< T1> , actor< T2> > >
# 252 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator/(const actor< T1> &_1, const actor< T2> &_2)
# 253 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 254 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(binary_operator< divides> (), make_actor(_1), make_actor(_2));
# 257 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 259 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T1, class T2> actor< composite< binary_operator< modulus> , actor< T1> , typename as_actor< T2> ::type> >
# 268 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator%(const actor< T1> &_1, const T2 &_2)
# 269 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 270 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(binary_operator< modulus> (), make_actor(_1), make_actor(_2));
# 273 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 275 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T1, class T2> actor< composite< binary_operator< modulus> , typename as_actor< T1> ::type, actor< T2> > >
# 284 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator%(const T1 &_1, const actor< T2> &_2)
# 285 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 286 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(binary_operator< modulus> (), make_actor(_1), make_actor(_2));
# 289 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 291 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T1, class T2> actor< composite< binary_operator< modulus> , actor< T1> , actor< T2> > >
# 300 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator%(const actor< T1> &_1, const actor< T2> &_2)
# 301 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 302 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(binary_operator< modulus> (), make_actor(_1), make_actor(_2));
# 305 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 308 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T>
# 309 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
struct prefix_increment : public unary_function< T &, T &> {
# 312 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
T &operator()(T &x) const { return ++x; }
# 313 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
};
# 315 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class Eval> actor< composite< unary_operator< prefix_increment> , actor< Eval> > >
# 323 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator++(const actor< Eval> &_1)
# 324 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 325 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(unary_operator< prefix_increment> (), _1);
# 326 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 329 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T>
# 330 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
struct suffix_increment : public unary_function< T &, T> {
# 333 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
T operator()(T &x) const { return x++; }
# 334 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
};
# 336 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class Eval> actor< composite< unary_operator< suffix_increment> , actor< Eval> > >
# 344 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator++(const actor< Eval> &_1, int)
# 345 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 346 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(unary_operator< suffix_increment> (), _1);
# 347 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 350 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T>
# 351 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
struct prefix_decrement : public unary_function< T &, T &> {
# 354 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
T &operator()(T &x) const { return --x; }
# 355 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
};
# 357 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class Eval> actor< composite< unary_operator< prefix_decrement> , actor< Eval> > >
# 365 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator--(const actor< Eval> &_1)
# 366 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 367 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(unary_operator< prefix_decrement> (), _1);
# 368 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 371 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class T>
# 372 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
struct suffix_decrement : public unary_function< T &, T> {
# 375 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
T operator()(T &x) const { return x--; }
# 376 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
};
# 378 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
template< class Eval> actor< composite< unary_operator< suffix_decrement> , actor< Eval> > >
# 386 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
operator--(const actor< Eval> &_1, int)
# 387 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
{
# 388 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
return compose(unary_operator< suffix_decrement> (), _1);
# 389 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 391 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 392 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 393 "/usr/local/cuda/include/thrust/detail/functional/operators/arithmetic_operators.h"
}
# 25 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
namespace thrust {
# 27 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
namespace functional {
# 32 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
template< class T1, class T2> actor< composite< binary_operator< thrust::equal_to> , actor< T1> , typename as_actor< T2> ::type> >
# 41 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
operator==(const actor< T1> &_1, const T2 &_2)
# 42 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
{
# 43 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
return compose(binary_operator< thrust::equal_to> (), make_actor(_1), make_actor(_2));
# 46 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 48 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
template< class T1, class T2> actor< composite< binary_operator< thrust::equal_to> , typename as_actor< T1> ::type, actor< T2> > >
# 57 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
operator==(const T1 &_1, const actor< T2> &_2)
# 58 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
{
# 59 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
return compose(binary_operator< thrust::equal_to> (), make_actor(_1), make_actor(_2));
# 62 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 64 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
template< class T1, class T2> actor< composite< binary_operator< thrust::equal_to> , actor< T1> , actor< T2> > >
# 73 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
operator==(const actor< T1> &_1, const actor< T2> &_2)
# 74 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
{
# 75 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
return compose(binary_operator< thrust::equal_to> (), make_actor(_1), make_actor(_2));
# 78 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 80 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
template< class T1, class T2> actor< composite< binary_operator< not_equal_to> , actor< T1> , typename as_actor< T2> ::type> >
# 89 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
operator!=(const actor< T1> &_1, const T2 &_2)
# 90 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
{
# 91 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
return compose(binary_operator< not_equal_to> (), make_actor(_1), make_actor(_2));
# 94 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 96 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
template< class T1, class T2> actor< composite< binary_operator< not_equal_to> , typename as_actor< T1> ::type, actor< T2> > >
# 105 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
operator!=(const T1 &_1, const actor< T2> &_2)
# 106 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
{
# 107 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
return compose(binary_operator< not_equal_to> (), make_actor(_1), make_actor(_2));
# 110 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 112 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
template< class T1, class T2> actor< composite< binary_operator< not_equal_to> , actor< T1> , actor< T2> > >
# 121 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
operator!=(const actor< T1> &_1, const actor< T2> &_2)
# 122 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
{
# 123 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
return compose(binary_operator< not_equal_to> (), make_actor(_1), make_actor(_2));
# 126 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 128 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
template< class T1, class T2> actor< composite< binary_operator< greater> , actor< T1> , typename as_actor< T2> ::type> >
# 137 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
operator>(const actor< T1> &_1, const T2 &_2)
# 138 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
{
# 139 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
return compose(binary_operator< greater> (), make_actor(_1), make_actor(_2));
# 142 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 144 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
template< class T1, class T2> actor< composite< binary_operator< greater> , typename as_actor< T1> ::type, actor< T2> > >
# 153 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
operator>(const T1 &_1, const actor< T2> &_2)
# 154 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
{
# 155 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
return compose(binary_operator< greater> (), make_actor(_1), make_actor(_2));
# 158 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 160 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
template< class T1, class T2> actor< composite< binary_operator< greater> , actor< T1> , actor< T2> > >
# 169 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
operator>(const actor< T1> &_1, const actor< T2> &_2)
# 170 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
{
# 171 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
return compose(binary_operator< greater> (), make_actor(_1), make_actor(_2));
# 174 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 176 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
template< class T1, class T2> actor< composite< binary_operator< less> , actor< T1> , typename as_actor< T2> ::type> >
# 185 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
operator<(const actor< T1> &_1, const T2 &_2)
# 186 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
{
# 187 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
return compose(binary_operator< less> (), make_actor(_1), make_actor(_2));
# 190 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 192 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
template< class T1, class T2> actor< composite< binary_operator< less> , typename as_actor< T1> ::type, actor< T2> > >
# 201 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
operator<(const T1 &_1, const actor< T2> &_2)
# 202 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
{
# 203 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
return compose(binary_operator< less> (), make_actor(_1), make_actor(_2));
# 206 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 208 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
template< class T1, class T2> actor< composite< binary_operator< less> , actor< T1> , actor< T2> > >
# 217 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
operator<(const actor< T1> &_1, const actor< T2> &_2)
# 218 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
{
# 219 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
return compose(binary_operator< less> (), make_actor(_1), make_actor(_2));
# 222 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 224 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
template< class T1, class T2> actor< composite< binary_operator< greater_equal> , actor< T1> , typename as_actor< T2> ::type> >
# 233 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
operator>=(const actor< T1> &_1, const T2 &_2)
# 234 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
{
# 235 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
return compose(binary_operator< greater_equal> (), make_actor(_1), make_actor(_2));
# 238 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 240 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
template< class T1, class T2> actor< composite< binary_operator< greater_equal> , typename as_actor< T1> ::type, actor< T2> > >
# 249 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
operator>=(const T1 &_1, const actor< T2> &_2)
# 250 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
{
# 251 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
return compose(binary_operator< greater_equal> (), make_actor(_1), make_actor(_2));
# 254 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 256 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
template< class T1, class T2> actor< composite< binary_operator< greater_equal> , actor< T1> , actor< T2> > >
# 265 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
operator>=(const actor< T1> &_1, const actor< T2> &_2)
# 266 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
{
# 267 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
return compose(binary_operator< greater_equal> (), make_actor(_1), make_actor(_2));
# 270 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 272 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
template< class T1, class T2> actor< composite< binary_operator< less_equal> , actor< T1> , typename as_actor< T2> ::type> >
# 281 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
operator<=(const actor< T1> &_1, const T2 &_2)
# 282 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
{
# 283 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
return compose(binary_operator< less_equal> (), make_actor(_1), make_actor(_2));
# 286 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 288 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
template< class T1, class T2> actor< composite< binary_operator< less_equal> , typename as_actor< T1> ::type, actor< T2> > >
# 297 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
operator<=(const T1 &_1, const actor< T2> &_2)
# 298 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
{
# 299 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
return compose(binary_operator< less_equal> (), make_actor(_1), make_actor(_2));
# 302 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 304 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
template< class T1, class T2> actor< composite< binary_operator< less_equal> , actor< T1> , actor< T2> > >
# 313 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
operator<=(const actor< T1> &_1, const actor< T2> &_2)
# 314 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
{
# 315 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
return compose(binary_operator< less_equal> (), make_actor(_1), make_actor(_2));
# 318 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 320 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 321 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 322 "/usr/local/cuda/include/thrust/detail/functional/operators/relational_operators.h"
}
# 25 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
namespace thrust {
# 27 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
namespace functional {
# 32 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
template< class T1, class T2> actor< composite< binary_operator< logical_and> , actor< T1> , typename as_actor< T2> ::type> >
# 41 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
operator&&(const actor< T1> &_1, const T2 &_2)
# 42 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
{
# 43 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
return compose(binary_operator< logical_and> (), make_actor(_1), make_actor(_2));
# 46 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
}
# 48 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
template< class T1, class T2> actor< composite< binary_operator< logical_and> , typename as_actor< T1> ::type, actor< T2> > >
# 57 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
operator&&(const T1 &_1, const actor< T2> &_2)
# 58 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
{
# 59 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
return compose(binary_operator< logical_and> (), make_actor(_1), make_actor(_2));
# 62 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
}
# 64 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
template< class T1, class T2> actor< composite< binary_operator< logical_and> , actor< T1> , actor< T2> > >
# 73 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
operator&&(const actor< T1> &_1, const actor< T2> &_2)
# 74 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
{
# 75 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
return compose(binary_operator< logical_and> (), make_actor(_1), make_actor(_2));
# 78 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
}
# 80 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
template< class T1, class T2> actor< composite< binary_operator< logical_or> , actor< T1> , typename as_actor< T2> ::type> >
# 89 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
operator||(const actor< T1> &_1, const T2 &_2)
# 90 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
{
# 91 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
return compose(binary_operator< logical_or> (), make_actor(_1), make_actor(_2));
# 94 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
}
# 96 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
template< class T1, class T2> actor< composite< binary_operator< logical_or> , typename as_actor< T1> ::type, actor< T2> > >
# 105 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
operator||(const T1 &_1, const actor< T2> &_2)
# 106 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
{
# 107 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
return compose(binary_operator< logical_or> (), make_actor(_1), make_actor(_2));
# 110 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
}
# 112 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
template< class T1, class T2> actor< composite< binary_operator< logical_or> , actor< T1> , actor< T2> > >
# 121 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
operator||(const actor< T1> &_1, const actor< T2> &_2)
# 122 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
{
# 123 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
return compose(binary_operator< logical_or> (), make_actor(_1), make_actor(_2));
# 126 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
}
# 128 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
template< class Eval> actor< composite< unary_operator< logical_not> , actor< Eval> > >
# 136 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
operator!(const actor< Eval> &_1)
# 137 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
{
# 138 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
return compose(unary_operator< logical_not> (), _1);
# 139 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
}
# 141 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
}
# 142 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
}
# 143 "/usr/local/cuda/include/thrust/detail/functional/operators/logical_operators.h"
}
# 25 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
namespace thrust {
# 27 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
namespace functional {
# 32 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_and> , actor< T1> , typename as_actor< T2> ::type> >
# 41 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
operator&(const actor< T1> &_1, const T2 &_2)
# 42 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
{
# 43 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
return compose(binary_operator< bit_and> (), make_actor(_1), make_actor(_2));
# 46 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 48 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_and> , typename as_actor< T1> ::type, actor< T2> > >
# 57 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
operator&(const T1 &_1, const actor< T2> &_2)
# 58 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
{
# 59 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
return compose(binary_operator< bit_and> (), make_actor(_1), make_actor(_2));
# 62 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 64 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_and> , actor< T1> , actor< T2> > >
# 73 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
operator&(const actor< T1> &_1, const actor< T2> &_2)
# 74 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
{
# 75 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
return compose(binary_operator< bit_and> (), make_actor(_1), make_actor(_2));
# 78 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 80 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_or> , actor< T1> , typename as_actor< T2> ::type> >
# 89 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
operator|(const actor< T1> &_1, const T2 &_2)
# 90 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
{
# 91 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
return compose(binary_operator< bit_or> (), make_actor(_1), make_actor(_2));
# 94 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 96 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_or> , typename as_actor< T1> ::type, actor< T2> > >
# 105 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
operator|(const T1 &_1, const actor< T2> &_2)
# 106 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
{
# 107 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
return compose(binary_operator< bit_or> (), make_actor(_1), make_actor(_2));
# 110 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 112 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_or> , actor< T1> , actor< T2> > >
# 121 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
operator|(const actor< T1> &_1, const actor< T2> &_2)
# 122 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
{
# 123 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
return compose(binary_operator< bit_or> (), make_actor(_1), make_actor(_2));
# 126 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 128 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_xor> , actor< T1> , typename as_actor< T2> ::type> >
# 137 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
operator^(const actor< T1> &_1, const T2 &_2)
# 138 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
{
# 139 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
return compose(binary_operator< bit_xor> (), make_actor(_1), make_actor(_2));
# 142 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 144 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_xor> , typename as_actor< T1> ::type, actor< T2> > >
# 153 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
operator^(const T1 &_1, const actor< T2> &_2)
# 154 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
{
# 155 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
return compose(binary_operator< bit_xor> (), make_actor(_1), make_actor(_2));
# 158 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 160 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_xor> , actor< T1> , actor< T2> > >
# 169 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
operator^(const actor< T1> &_1, const actor< T2> &_2)
# 170 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
{
# 171 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
return compose(binary_operator< bit_xor> (), make_actor(_1), make_actor(_2));
# 174 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 177 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class T>
# 178 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
struct bit_not : public unary_function< T, T> {
# 181 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
T operator()(const T &x) const { return ~x; }
# 182 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
};
# 184 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class Eval> actor< composite< unary_operator< bit_not> , actor< Eval> > >
# 193 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
operator~(const actor< Eval> &_1)
# 194 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
{
# 195 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
return compose(unary_operator< bit_not> (), _1);
# 196 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 199 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class T>
# 200 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
struct bit_lshift : public binary_function< T, T, T> {
# 203 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
T operator()(const T &lhs, const T &rhs) const { return lhs << rhs; }
# 204 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
};
# 206 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_lshift> , actor< T1> , typename as_actor< T2> ::type> >
# 215 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
operator<<(const actor< T1> &_1, const T2 &_2)
# 216 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
{
# 217 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
return compose(binary_operator< bit_lshift> (), make_actor(_1), make_actor(_2));
# 220 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 222 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_lshift> , typename as_actor< T1> ::type, actor< T2> > >
# 231 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
operator<<(const T1 &_1, const actor< T2> &_2)
# 232 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
{
# 233 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
return compose(binary_operator< bit_lshift> (), make_actor(_1), make_actor(_2));
# 236 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 238 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_lshift> , actor< T1> , actor< T2> > >
# 247 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
operator<<(const actor< T1> &_1, const actor< T2> &_2)
# 248 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
{
# 249 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
return compose(binary_operator< bit_lshift> (), make_actor(_1), make_actor(_2));
# 252 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 255 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class T>
# 256 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
struct bit_rshift : public binary_function< T, T, T> {
# 259 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
T operator()(const T &lhs, const T &rhs) const { return lhs >> rhs; }
# 260 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
};
# 262 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_rshift> , actor< T1> , typename as_actor< T2> ::type> >
# 271 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
operator>>(const actor< T1> &_1, const T2 &_2)
# 272 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
{
# 273 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
return compose(binary_operator< bit_rshift> (), make_actor(_1), make_actor(_2));
# 276 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 278 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_rshift> , typename as_actor< T1> ::type, actor< T2> > >
# 287 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
operator>>(const T1 &_1, const actor< T2> &_2)
# 288 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
{
# 289 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
return compose(binary_operator< bit_rshift> (), make_actor(_1), make_actor(_2));
# 292 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 294 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_rshift> , actor< T1> , actor< T2> > >
# 303 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
operator>>(const actor< T1> &_1, const actor< T2> &_2)
# 304 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
{
# 305 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
return compose(binary_operator< bit_rshift> (), make_actor(_1), make_actor(_2));
# 308 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 310 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 311 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 312 "/usr/local/cuda/include/thrust/detail/functional/operators/bitwise_operators.h"
}
# 24 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
namespace detail {
# 28 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
namespace functional {
# 31 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T>
# 32 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
struct plus_equal : public binary_function< T &, T, T &> {
# 35 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
T &operator()(T &lhs, const T &rhs) const { return lhs += rhs; }
# 36 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
};
# 38 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< plus_equal> , actor< T1> , typename as_actor< T2> ::type> >
# 47 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator+=(const actor< T1> &_1, const T2 &_2)
# 48 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 49 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< plus_equal> (), make_actor(_1), make_actor(_2));
# 52 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 54 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< plus_equal> , actor< T1> , actor< T2> > >
# 63 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator+=(const actor< T1> &_1, const actor< T2> &_2)
# 64 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 65 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< plus_equal> (), make_actor(_1), make_actor(_2));
# 68 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 70 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T>
# 71 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
struct minus_equal : public binary_function< T &, T, T &> {
# 74 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
T &operator()(T &lhs, const T &rhs) const { return lhs -= rhs; }
# 75 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
};
# 77 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< minus_equal> , actor< T1> , typename as_actor< T2> ::type> >
# 86 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator-=(const actor< T1> &_1, const T2 &_2)
# 87 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 88 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< minus_equal> (), make_actor(_1), make_actor(_2));
# 91 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 93 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< minus_equal> , actor< T1> , actor< T2> > >
# 102 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator-=(const actor< T1> &_1, const actor< T2> &_2)
# 103 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 104 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< minus_equal> (), make_actor(_1), make_actor(_2));
# 107 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 109 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T>
# 110 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
struct multiplies_equal : public binary_function< T &, T, T &> {
# 113 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
T &operator()(T &lhs, const T &rhs) const { return lhs *= rhs; }
# 114 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
};
# 116 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< multiplies_equal> , actor< T1> , typename as_actor< T2> ::type> >
# 125 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator*=(const actor< T1> &_1, const T2 &_2)
# 126 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 127 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< multiplies_equal> (), make_actor(_1), make_actor(_2));
# 130 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 132 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< multiplies_equal> , actor< T1> , actor< T2> > >
# 141 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator*=(const actor< T1> &_1, const actor< T2> &_2)
# 142 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 143 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< multiplies_equal> (), make_actor(_1), make_actor(_2));
# 146 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 148 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T>
# 149 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
struct divides_equal : public binary_function< T &, T, T &> {
# 152 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
T &operator()(T &lhs, const T &rhs) const { return lhs /= rhs; }
# 153 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
};
# 155 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< divides_equal> , actor< T1> , typename as_actor< T2> ::type> >
# 164 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator/=(const actor< T1> &_1, const T2 &_2)
# 165 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 166 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< divides_equal> (), make_actor(_1), make_actor(_2));
# 169 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 171 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< divides_equal> , actor< T1> , actor< T2> > >
# 180 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator/=(const actor< T1> &_1, const actor< T2> &_2)
# 181 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 182 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< divides_equal> (), make_actor(_1), make_actor(_2));
# 185 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 187 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T>
# 188 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
struct modulus_equal : public binary_function< T &, T, T &> {
# 191 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
T &operator()(T &lhs, const T &rhs) const { return lhs %= rhs; }
# 192 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
};
# 194 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< modulus_equal> , actor< T1> , typename as_actor< T2> ::type> >
# 203 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator%=(const actor< T1> &_1, const T2 &_2)
# 204 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 205 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< modulus_equal> (), make_actor(_1), make_actor(_2));
# 208 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 210 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< modulus_equal> , actor< T1> , actor< T2> > >
# 219 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator%=(const actor< T1> &_1, const actor< T2> &_2)
# 220 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 221 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< modulus_equal> (), make_actor(_1), make_actor(_2));
# 224 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 226 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T>
# 227 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
struct bit_and_equal : public binary_function< T &, T, T &> {
# 230 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
T &operator()(T &lhs, const T &rhs) const { return lhs &= rhs; }
# 231 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
};
# 233 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_and_equal> , actor< T1> , typename as_actor< T2> ::type> >
# 242 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator&=(const actor< T1> &_1, const T2 &_2)
# 243 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 244 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< bit_and_equal> (), make_actor(_1), make_actor(_2));
# 247 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 249 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_and_equal> , actor< T1> , actor< T2> > >
# 258 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator&=(const actor< T1> &_1, const actor< T2> &_2)
# 259 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 260 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< bit_and_equal> (), make_actor(_1), make_actor(_2));
# 263 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 265 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T>
# 266 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
struct bit_or_equal : public binary_function< T &, T, T &> {
# 269 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
T &operator()(T &lhs, const T &rhs) const { return lhs |= rhs; }
# 270 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
};
# 272 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_or_equal> , actor< T1> , typename as_actor< T2> ::type> >
# 281 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator|=(const actor< T1> &_1, const T2 &_2)
# 282 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 283 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< bit_or_equal> (), make_actor(_1), make_actor(_2));
# 286 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 288 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_or_equal> , actor< T1> , actor< T2> > >
# 297 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator|=(const actor< T1> &_1, const actor< T2> &_2)
# 298 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 299 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< bit_or_equal> (), make_actor(_1), make_actor(_2));
# 302 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 304 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T>
# 305 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
struct bit_xor_equal : public binary_function< T &, T, T &> {
# 308 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
T &operator()(T &lhs, const T &rhs) const { return lhs ^= rhs; }
# 309 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
};
# 311 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_xor_equal> , actor< T1> , typename as_actor< T2> ::type> >
# 320 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator^=(const actor< T1> &_1, const T2 &_2)
# 321 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 322 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< bit_xor_equal> (), make_actor(_1), make_actor(_2));
# 325 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 327 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_xor_equal> , actor< T1> , actor< T2> > >
# 336 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator^=(const actor< T1> &_1, const actor< T2> &_2)
# 337 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 338 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< bit_xor_equal> (), make_actor(_1), make_actor(_2));
# 341 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 343 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T>
# 344 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
struct bit_lshift_equal : public binary_function< T &, T, T &> {
# 347 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
T &operator()(T &lhs, const T &rhs) const { return lhs <<= rhs; }
# 348 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
};
# 350 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_lshift_equal> , actor< T1> , typename as_actor< T2> ::type> >
# 359 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator<<=(const actor< T1> &_1, const T2 &_2)
# 360 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 361 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< bit_lshift_equal> (), make_actor(_1), make_actor(_2));
# 364 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 366 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_lshift_equal> , actor< T1> , actor< T2> > >
# 375 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator<<=(const actor< T1> &_1, const actor< T2> &_2)
# 376 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 377 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< bit_lshift_equal> (), make_actor(_1), make_actor(_2));
# 380 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 382 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T>
# 383 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
struct bit_rshift_equal : public binary_function< T &, T, T &> {
# 386 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
T &operator()(T &lhs, const T &rhs) const { return lhs >>= rhs; }
# 387 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
};
# 389 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_rshift_equal> , actor< T1> , typename as_actor< T2> ::type> >
# 398 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator>>=(const actor< T1> &_1, const T2 &_2)
# 399 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 400 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< bit_rshift_equal> (), make_actor(_1), make_actor(_2));
# 403 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 405 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
template< class T1, class T2> actor< composite< binary_operator< bit_rshift_equal> , actor< T1> , actor< T2> > >
# 414 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
operator>>=(const actor< T1> &_1, const actor< T2> &_2)
# 415 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
{
# 416 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
return compose(binary_operator< bit_rshift_equal> (), make_actor(_1), make_actor(_2));
# 419 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 421 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 422 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 423 "/usr/local/cuda/include/thrust/detail/functional/operators/compound_assignment_operators.h"
}
# 71 "/usr/include/c++/5/cstring" 3

# 71 "/usr/include/c++/5/cstring" 3
namespace std __attribute((__visibility__("default"))) {
# 75 "/usr/include/c++/5/cstring" 3
using ::memchr;
# 76 "/usr/include/c++/5/cstring" 3
using ::memcmp;
# 77 "/usr/include/c++/5/cstring" 3
using ::memcpy;
# 78 "/usr/include/c++/5/cstring" 3
using ::memmove;
# 79 "/usr/include/c++/5/cstring" 3
using ::memset;
# 80 "/usr/include/c++/5/cstring" 3
using ::strcat;
# 81 "/usr/include/c++/5/cstring" 3
using ::strcmp;
# 82 "/usr/include/c++/5/cstring" 3
using ::strcoll;
# 83 "/usr/include/c++/5/cstring" 3
using ::strcpy;
# 84 "/usr/include/c++/5/cstring" 3
using ::strcspn;
# 85 "/usr/include/c++/5/cstring" 3
using ::strerror;
# 86 "/usr/include/c++/5/cstring" 3
using ::strlen;
# 87 "/usr/include/c++/5/cstring" 3
using ::strncat;
# 88 "/usr/include/c++/5/cstring" 3
using ::strncmp;
# 89 "/usr/include/c++/5/cstring" 3
using ::strncpy;
# 90 "/usr/include/c++/5/cstring" 3
using ::strspn;
# 91 "/usr/include/c++/5/cstring" 3
using ::strtok;
# 92 "/usr/include/c++/5/cstring" 3
using ::strxfrm;
# 93 "/usr/include/c++/5/cstring" 3
using ::strchr;
# 94 "/usr/include/c++/5/cstring" 3
using ::strpbrk;
# 95 "/usr/include/c++/5/cstring" 3
using ::strrchr;
# 96 "/usr/include/c++/5/cstring" 3
using ::strstr;
# 121 "/usr/include/c++/5/cstring" 3
}
# 25 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"

# 25 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
namespace thrust {
# 28 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
namespace system {
# 32 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
inline error_category::~error_category()
# 33 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
{
# 34 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
;
# 35 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
}
# 39 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
inline error_condition error_category::default_error_condition(int ev) const
# 40 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
{
# 41 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
return error_condition(ev, *this);
# 42 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
}
# 46 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
inline bool error_category::equivalent(int code, const error_condition &condition) const
# 47 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
{
# 48 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
return ((this->default_error_condition(code)) == condition);
# 49 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
}
# 53 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
inline bool error_category::equivalent(const error_code &code, int condition) const
# 54 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
{
# 55 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
bool result = this->operator==(code.category()) && (code.value() == condition);
# 56 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
return result;
# 57 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
}
# 61 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
inline bool error_category::operator==(const error_category &rhs) const
# 62 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
{
# 63 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
return this == (&rhs);
# 64 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
}
# 68 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
inline bool error_category::operator!=(const error_category &rhs) const
# 69 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
{
# 70 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
return !this->operator==(rhs);
# 71 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
}
# 75 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
inline bool error_category::operator<(const error_category &rhs) const
# 76 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
{
# 77 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
return less< const error_category *> ()(this, &rhs);
# 78 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
}
# 81 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
namespace detail {
# 85 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
class generic_error_category : public error_category {
# 89 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
public: generic_error_category() { }
# 91 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
virtual const char *name() const
# 92 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
{
# 93 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
return "generic";
# 94 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
}
# 96 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
virtual std::__cxx11::string message(int ev) const
# 97 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
{
# 98 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
static const std::__cxx11::string unknown_err("Unknown error");
# 102 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
const char *c_str = std::strerror(ev);
# 103 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
return ((c_str) ? ((std::__cxx11::string)(c_str)) : unknown_err);
# 104 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
}
# 105 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
};
# 108 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
class system_error_category : public error_category {
# 112 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
public: system_error_category() { }
# 114 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
virtual const char *name() const
# 115 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
{
# 116 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
return "system";
# 117 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
}
# 119 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
virtual std::__cxx11::string message(int ev) const
# 120 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
{
# 121 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
return generic_category().message(ev);
# 122 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
}
# 124 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
virtual error_condition default_error_condition(int ev) const
# 125 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
{
# 126 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
using namespace errc;
# 128 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
switch (ev)
# 129 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
{
# 130 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eafnosupport: return make_error_condition(address_family_not_supported);
# 131 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eaddrinuse: return make_error_condition(address_in_use);
# 132 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eaddrnotavail: return make_error_condition(address_not_available);
# 133 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eisconn: return make_error_condition(already_connected);
# 134 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case e2big: return make_error_condition(argument_list_too_long);
# 135 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case edom: return make_error_condition(argument_out_of_domain);
# 136 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case efault: return make_error_condition(bad_address);
# 137 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case ebadf: return make_error_condition(bad_file_descriptor);
# 138 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case ebadmsg: return make_error_condition(bad_message);
# 139 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case epipe: return make_error_condition(broken_pipe);
# 140 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case econnaborted: return make_error_condition(connection_aborted);
# 141 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case ealready: return make_error_condition(connection_already_in_progress);
# 142 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case econnrefused: return make_error_condition(connection_refused);
# 143 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case econnreset: return make_error_condition(connection_reset);
# 144 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case exdev: return make_error_condition(cross_device_link);
# 145 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case edestaddrreq: return make_error_condition(destination_address_required);
# 146 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case ebusy: return make_error_condition(device_or_resource_busy);
# 147 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enotempty: return make_error_condition(directory_not_empty);
# 148 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enoexec: return make_error_condition(executable_format_error);
# 149 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eexist: return make_error_condition(file_exists);
# 150 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case efbig: return make_error_condition(file_too_large);
# 151 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enametoolong: return make_error_condition(filename_too_long);
# 152 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enosys: return make_error_condition(function_not_supported);
# 153 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case ehostunreach: return make_error_condition(host_unreachable);
# 154 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eidrm: return make_error_condition(identifier_removed);
# 155 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eilseq: return make_error_condition(illegal_byte_sequence);
# 156 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enotty: return make_error_condition(inappropriate_io_control_operation);
# 157 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eintr: return make_error_condition(interrupted);
# 158 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case einval: return make_error_condition(invalid_argument);
# 159 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case espipe: return make_error_condition(invalid_seek);
# 160 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eio: return make_error_condition(io_error);
# 161 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eisdir: return make_error_condition(is_a_directory);
# 162 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case emsgsize: return make_error_condition(message_size);
# 163 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enetdown: return make_error_condition(network_down);
# 164 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enetreset: return make_error_condition(network_reset);
# 165 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enetunreach: return make_error_condition(network_unreachable);
# 166 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enobufs: return make_error_condition(no_buffer_space);
# 167 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case echild: return make_error_condition(no_child_process);
# 168 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enolink: return make_error_condition(no_link);
# 169 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enolck: return make_error_condition(no_lock_available);
# 170 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enodata: return make_error_condition(no_message_available);
# 171 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enomsg: return make_error_condition(no_message);
# 172 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enoprotoopt: return make_error_condition(no_protocol_option);
# 173 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enospc: return make_error_condition(no_space_on_device);
# 174 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enosr: return make_error_condition(no_stream_resources);
# 175 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enxio: return make_error_condition(no_such_device_or_address);
# 176 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enodev: return make_error_condition(no_such_device);
# 177 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enoent: return make_error_condition(no_such_file_or_directory);
# 178 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case esrch: return make_error_condition(no_such_process);
# 179 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enotdir: return make_error_condition(not_a_directory);
# 180 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enotsock: return make_error_condition(not_a_socket);
# 181 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enostr: return make_error_condition(not_a_stream);
# 182 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enotconn: return make_error_condition(not_connected);
# 183 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enomem: return make_error_condition(not_enough_memory);
# 184 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enotsup: return make_error_condition(not_supported);
# 185 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case ecanceled: return make_error_condition(operation_canceled);
# 186 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case einprogress: return make_error_condition(operation_in_progress);
# 187 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eperm: return make_error_condition(operation_not_permitted);
# 188 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eopnotsupp: return make_error_condition(operation_not_supported);
# 189 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case ewouldblock: return make_error_condition(operation_would_block);
# 190 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eownerdead: return make_error_condition(owner_dead);
# 191 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eacces: return make_error_condition(permission_denied);
# 192 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eproto: return make_error_condition(protocol_error);
# 193 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eprotonosupport: return make_error_condition(protocol_not_supported);
# 194 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case erofs: return make_error_condition(read_only_file_system);
# 195 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case edeadlk: return make_error_condition(resource_deadlock_would_occur);
# 196 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eagain: return make_error_condition(resource_unavailable_try_again);
# 197 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case erange: return make_error_condition(result_out_of_range);
# 198 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enotrecoverable: return make_error_condition(state_not_recoverable);
# 199 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case etime: return make_error_condition(stream_timeout);
# 200 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case etxtbsy: return make_error_condition(text_file_busy);
# 201 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case etimedout: return make_error_condition(timed_out);
# 202 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case enfile: return make_error_condition(too_many_files_open_in_system);
# 203 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case emfile: return make_error_condition(too_many_files_open);
# 204 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case emlink: return make_error_condition(too_many_links);
# 205 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eloop: return make_error_condition(too_many_symbolic_link_levels);
# 206 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eoverflow: return make_error_condition(value_too_large);
# 207 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
case eprototype: return make_error_condition(wrong_protocol_type);
# 208 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
default: return error_condition(ev, system_category());
# 209 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
}
# 210 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
}
# 211 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
};
# 214 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
}
# 217 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
inline const error_category &generic_category()
# 218 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
{
# 219 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
static const detail::generic_error_category result;
# 220 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
return result;
# 221 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
}
# 224 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
inline const error_category &system_category()
# 225 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
{
# 226 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
static const detail::system_error_category result;
# 227 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
return result;
# 228 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
}
# 231 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
}
# 233 "/usr/local/cuda/include/thrust/system/detail/error_category.inl"
}
# 22 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
namespace system {
# 29 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline error_code::error_code() : m_val(0), m_cat(&system_category())
# 31 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 32 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
;
# 33 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 37 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline error_code::error_code(int val, const error_category &cat) : m_val(val), m_cat(&cat)
# 39 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 40 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
;
# 41 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 44 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
template< class ErrorCodeEnum>
# 46 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
error_code::error_code(ErrorCodeEnum e, typename thrust::detail::enable_if< is_error_code_enum< ErrorCodeEnum> ::value> ::type *)
# 52 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 53 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
(*this) = make_error_code(e);
# 54 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 58 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline void error_code::assign(int val, const error_category &cat)
# 59 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 60 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
(m_val) = val;
# 61 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
(m_cat) = (&cat);
# 62 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 65 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
template< class ErrorCodeEnum> typename thrust::detail::enable_if< is_error_code_enum< ErrorCodeEnum> ::value, error_code> ::type &
# 73 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
error_code::operator=(ErrorCodeEnum e)
# 74 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 75 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
(*this) = make_error_code(e);
# 76 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
return *this;
# 77 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 81 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline void error_code::clear()
# 82 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 83 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
(m_val) = 0;
# 84 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
(m_cat) = (&system_category());
# 85 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 89 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline int error_code::value() const
# 90 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 91 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
return m_val;
# 92 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 96 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline const error_category &error_code::category() const
# 97 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 98 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
return *(m_cat);
# 99 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 103 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline error_condition error_code::default_error_condition() const
# 104 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 105 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
return this->category().default_error_condition(this->value());
# 106 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 110 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline std::__cxx11::string error_code::message() const
# 111 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 112 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
return this->category().message(this->value());
# 113 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 117 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline error_code::operator bool() const
# 118 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 119 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
return this->value() != 0;
# 120 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 123 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline error_code make_error_code(errc::errc_t e)
# 124 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 125 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
return error_code(static_cast< int>(e), generic_category());
# 126 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 129 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline bool operator<(const error_code &lhs, const error_code &rhs)
# 130 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 131 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
bool result = lhs.category().operator<(rhs.category());
# 132 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
result = (result || lhs.category().operator==(rhs.category()));
# 133 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
result = (result || (lhs.value() < rhs.value()));
# 134 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
return result;
# 135 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 138 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
template< class charT, class traits> std::basic_ostream< charT, traits> &
# 140 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
operator<<(std::basic_ostream< charT, traits> &os, const error_code &ec)
# 141 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 142 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
return ((os << ec.category().name()) << ':') << ec.value();
# 143 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 146 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline bool operator==(const error_code &lhs, const error_code &rhs)
# 147 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 148 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
return lhs.category().operator==(rhs.category()) && (lhs.value() == rhs.value());
# 149 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 152 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline bool operator==(const error_code &lhs, const error_condition &rhs)
# 153 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 154 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
return lhs.category().equivalent(lhs.value(), rhs) || rhs.category().equivalent(lhs, rhs.value());
# 155 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 158 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline bool operator==(const error_condition &lhs, const error_code &rhs)
# 159 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 160 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
return rhs.category().equivalent(lhs.value(), lhs) || lhs.category().equivalent(rhs, lhs.value());
# 161 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 164 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline bool operator==(const error_condition &lhs, const error_condition &rhs)
# 165 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 166 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
return lhs.category().operator==(rhs.category()) && (lhs.value() == rhs.value());
# 167 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 170 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline bool operator!=(const error_code &lhs, const error_code &rhs)
# 171 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 172 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
return !((lhs == rhs));
# 173 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 176 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline bool operator!=(const error_code &lhs, const error_condition &rhs)
# 177 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 178 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
return !((lhs == rhs));
# 179 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 182 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline bool operator!=(const error_condition &lhs, const error_code &rhs)
# 183 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 184 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
return !((lhs == rhs));
# 185 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 188 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
inline bool operator!=(const error_condition &lhs, const error_condition &rhs)
# 189 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
{
# 190 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
return !((lhs == rhs));
# 191 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 194 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 196 "/usr/local/cuda/include/thrust/system/detail/error_code.inl"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
namespace system {
# 30 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
inline error_condition::error_condition() : m_val(0), m_cat(&generic_category())
# 32 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
{
# 33 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
;
# 34 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
}
# 38 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
inline error_condition::error_condition(int val, const error_category &cat) : m_val(val), m_cat(&cat)
# 40 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
{
# 41 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
;
# 42 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
}
# 45 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
template< class ErrorConditionEnum>
# 47 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
error_condition::error_condition(ErrorConditionEnum e, typename thrust::detail::enable_if< is_error_condition_enum< ErrorConditionEnum> ::value> ::type *)
# 53 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
{
# 54 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
(*this) = make_error_condition(e);
# 55 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
}
# 59 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
inline void error_condition::assign(int val, const error_category &cat)
# 60 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
{
# 61 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
(m_val) = val;
# 62 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
(m_cat) = (&cat);
# 63 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
}
# 66 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
template< class ErrorConditionEnum> typename thrust::detail::enable_if< is_error_condition_enum< ErrorConditionEnum> ::value, error_condition> ::type &
# 74 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
error_condition::operator=(ErrorConditionEnum e)
# 75 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
{
# 76 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
(*this) = make_error_condition(e);
# 77 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
return *this;
# 78 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
}
# 82 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
inline void error_condition::clear()
# 83 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
{
# 84 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
(m_val) = 0;
# 85 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
(m_cat) = (&generic_category());
# 86 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
}
# 90 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
inline int error_condition::value() const
# 91 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
{
# 92 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
return m_val;
# 93 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
}
# 97 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
inline const error_category &error_condition::category() const
# 98 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
{
# 99 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
return *(m_cat);
# 100 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
}
# 104 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
inline std::__cxx11::string error_condition::message() const
# 105 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
{
# 106 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
return this->category().message(this->value());
# 107 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
}
# 111 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
inline error_condition::operator bool() const
# 112 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
{
# 113 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
return this->value() != 0;
# 114 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
}
# 117 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
inline error_condition make_error_condition(errc::errc_t e)
# 118 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
{
# 119 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
return error_condition(static_cast< int>(e), generic_category());
# 120 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
}
# 123 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
inline bool operator<(const error_condition &lhs, const error_condition &
# 124 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
rhs)
# 125 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
{
# 126 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
return lhs.category().operator<(rhs.category()) || (lhs.category().operator==(rhs.category()) && (lhs.value() < rhs.value()));
# 127 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
}
# 130 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
}
# 132 "/usr/local/cuda/include/thrust/system/detail/error_condition.inl"
}
# 31 "/usr/local/cuda/include/thrust/system/system_error.h"
namespace thrust {
# 34 "/usr/local/cuda/include/thrust/system/system_error.h"
namespace system {
# 89 "/usr/local/cuda/include/thrust/system/system_error.h"
class system_error : public std::runtime_error {
# 101 "/usr/local/cuda/include/thrust/system/system_error.h"
public: inline system_error(error_code ec, const std::__cxx11::string & what_arg);
# 109 "/usr/local/cuda/include/thrust/system/system_error.h"
inline system_error(error_code ec, const char * what_arg);
# 115 "/usr/local/cuda/include/thrust/system/system_error.h"
inline system_error(error_code ec);
# 124 "/usr/local/cuda/include/thrust/system/system_error.h"
inline system_error(int ev, const error_category & ecat, const std::__cxx11::string & what_arg);
# 133 "/usr/local/cuda/include/thrust/system/system_error.h"
inline system_error(int ev, const error_category & ecat, const char * what_arg);
# 140 "/usr/local/cuda/include/thrust/system/system_error.h"
inline system_error(int ev, const error_category & ecat);
# 144 "/usr/local/cuda/include/thrust/system/system_error.h"
virtual ~system_error() throw() { }
# 150 "/usr/local/cuda/include/thrust/system/system_error.h"
inline const error_code &code() const throw();
# 156 "/usr/local/cuda/include/thrust/system/system_error.h"
inline virtual const char *what() const throw();
# 161 "/usr/local/cuda/include/thrust/system/system_error.h"
private: error_code m_error_code;
# 162 "/usr/local/cuda/include/thrust/system/system_error.h"
mutable std::__cxx11::string m_what;
# 166 "/usr/local/cuda/include/thrust/system/system_error.h"
};
# 168 "/usr/local/cuda/include/thrust/system/system_error.h"
}
# 174 "/usr/local/cuda/include/thrust/system/system_error.h"
using system::system_error;
# 176 "/usr/local/cuda/include/thrust/system/system_error.h"
}
# 22 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
namespace system {
# 30 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
inline system_error::system_error(error_code ec, const std::__cxx11::string &what_arg) : std::runtime_error(what_arg), m_error_code(ec)
# 32 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
{
# 34 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
}
# 38 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
inline system_error::system_error(error_code ec, const char *what_arg) : std::runtime_error(what_arg), m_error_code(ec)
# 40 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
{
# 41 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
;
# 42 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
}
# 46 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
inline system_error::system_error(error_code ec) : std::runtime_error(""), m_error_code(ec)
# 48 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
{
# 49 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
;
# 50 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
}
# 54 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
inline system_error::system_error(int ev, const error_category &ecat, const std::__cxx11::string &what_arg) : std::runtime_error(what_arg), m_error_code(ev, ecat)
# 56 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
{
# 57 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
;
# 58 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
}
# 62 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
inline system_error::system_error(int ev, const error_category &ecat, const char *what_arg) : std::runtime_error(what_arg), m_error_code(ev, ecat)
# 64 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
{
# 65 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
;
# 66 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
}
# 70 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
inline system_error::system_error(int ev, const error_category &ecat) : std::runtime_error(""), m_error_code(ev, ecat)
# 72 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
{
# 73 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
;
# 74 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
}
# 78 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
inline const error_code &system_error::code() const throw()
# 79 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
{
# 80 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
return m_error_code;
# 81 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
}
# 85 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
inline const char *system_error::what() const throw()
# 86 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
{
# 87 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
if ((m_what).empty())
# 88 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
{
# 89 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
try
# 90 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
{
# 91 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
((m_what) = (this->std::runtime_error::what()));
# 92 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
if ((m_error_code))
# 93 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
{
# 94 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
if (!(m_what).empty()) { ((m_what) += (": ")); }
# 95 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
((m_what) += ((m_error_code).message()));
# 96 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
}
# 97 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
}
# 98 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
catch (...)
# 99 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
{
# 100 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
return this->std::runtime_error::what();
# 101 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
}
# 102 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
}
# 104 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
return (m_what).c_str();
# 105 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
}
# 108 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
}
# 110 "/usr/local/cuda/include/thrust/system/detail/system_error.inl"
}
# 29 "/usr/local/cuda/include/thrust/system/cuda/error.h"
namespace thrust {
# 32 "/usr/local/cuda/include/thrust/system/cuda/error.h"
namespace system {
# 35 "/usr/local/cuda/include/thrust/system/cuda/error.h"
namespace cuda {
# 47 "/usr/local/cuda/include/thrust/system/cuda/error.h"
namespace errc {
# 52 "/usr/local/cuda/include/thrust/system/cuda/error.h"
enum errc_t {
# 56 "/usr/local/cuda/include/thrust/system/cuda/error.h"
success,
# 57 "/usr/local/cuda/include/thrust/system/cuda/error.h"
missing_configuration,
# 58 "/usr/local/cuda/include/thrust/system/cuda/error.h"
memory_allocation,
# 59 "/usr/local/cuda/include/thrust/system/cuda/error.h"
initialization_error,
# 60 "/usr/local/cuda/include/thrust/system/cuda/error.h"
launch_failure,
# 61 "/usr/local/cuda/include/thrust/system/cuda/error.h"
prior_launch_failure,
# 62 "/usr/local/cuda/include/thrust/system/cuda/error.h"
launch_timeout,
# 63 "/usr/local/cuda/include/thrust/system/cuda/error.h"
launch_out_of_resources,
# 64 "/usr/local/cuda/include/thrust/system/cuda/error.h"
invalid_device_function,
# 65 "/usr/local/cuda/include/thrust/system/cuda/error.h"
invalid_configuration,
# 66 "/usr/local/cuda/include/thrust/system/cuda/error.h"
invalid_device,
# 67 "/usr/local/cuda/include/thrust/system/cuda/error.h"
invalid_value,
# 68 "/usr/local/cuda/include/thrust/system/cuda/error.h"
invalid_pitch_value,
# 69 "/usr/local/cuda/include/thrust/system/cuda/error.h"
invalid_symbol,
# 70 "/usr/local/cuda/include/thrust/system/cuda/error.h"
map_buffer_object_failed,
# 71 "/usr/local/cuda/include/thrust/system/cuda/error.h"
unmap_buffer_object_failed,
# 72 "/usr/local/cuda/include/thrust/system/cuda/error.h"
invalid_host_pointer,
# 73 "/usr/local/cuda/include/thrust/system/cuda/error.h"
invalid_device_pointer,
# 74 "/usr/local/cuda/include/thrust/system/cuda/error.h"
invalid_texture,
# 75 "/usr/local/cuda/include/thrust/system/cuda/error.h"
invalid_texture_binding,
# 76 "/usr/local/cuda/include/thrust/system/cuda/error.h"
invalid_channel_descriptor,
# 77 "/usr/local/cuda/include/thrust/system/cuda/error.h"
invalid_memcpy_direction,
# 78 "/usr/local/cuda/include/thrust/system/cuda/error.h"
address_of_constant_error,
# 79 "/usr/local/cuda/include/thrust/system/cuda/error.h"
texture_fetch_failed,
# 80 "/usr/local/cuda/include/thrust/system/cuda/error.h"
texture_not_bound,
# 81 "/usr/local/cuda/include/thrust/system/cuda/error.h"
synchronization_error,
# 82 "/usr/local/cuda/include/thrust/system/cuda/error.h"
invalid_filter_setting,
# 83 "/usr/local/cuda/include/thrust/system/cuda/error.h"
invalid_norm_setting,
# 84 "/usr/local/cuda/include/thrust/system/cuda/error.h"
mixed_device_execution,
# 85 "/usr/local/cuda/include/thrust/system/cuda/error.h"
cuda_runtime_unloading,
# 86 "/usr/local/cuda/include/thrust/system/cuda/error.h"
unknown,
# 87 "/usr/local/cuda/include/thrust/system/cuda/error.h"
not_yet_implemented,
# 88 "/usr/local/cuda/include/thrust/system/cuda/error.h"
memory_value_too_large,
# 89 "/usr/local/cuda/include/thrust/system/cuda/error.h"
invalid_resource_handle,
# 90 "/usr/local/cuda/include/thrust/system/cuda/error.h"
not_ready,
# 91 "/usr/local/cuda/include/thrust/system/cuda/error.h"
insufficient_driver,
# 92 "/usr/local/cuda/include/thrust/system/cuda/error.h"
set_on_active_process_error,
# 93 "/usr/local/cuda/include/thrust/system/cuda/error.h"
no_device = 38,
# 94 "/usr/local/cuda/include/thrust/system/cuda/error.h"
ecc_uncorrectable,
# 97 "/usr/local/cuda/include/thrust/system/cuda/error.h"
shared_object_symbol_not_found,
# 98 "/usr/local/cuda/include/thrust/system/cuda/error.h"
shared_object_init_failed,
# 99 "/usr/local/cuda/include/thrust/system/cuda/error.h"
unsupported_limit,
# 100 "/usr/local/cuda/include/thrust/system/cuda/error.h"
duplicate_variable_name,
# 101 "/usr/local/cuda/include/thrust/system/cuda/error.h"
duplicate_texture_name,
# 102 "/usr/local/cuda/include/thrust/system/cuda/error.h"
duplicate_surface_name,
# 103 "/usr/local/cuda/include/thrust/system/cuda/error.h"
devices_unavailable,
# 104 "/usr/local/cuda/include/thrust/system/cuda/error.h"
invalid_kernel_image,
# 105 "/usr/local/cuda/include/thrust/system/cuda/error.h"
no_kernel_image_for_device,
# 106 "/usr/local/cuda/include/thrust/system/cuda/error.h"
incompatible_driver_context,
# 107 "/usr/local/cuda/include/thrust/system/cuda/error.h"
peer_access_already_enabled,
# 108 "/usr/local/cuda/include/thrust/system/cuda/error.h"
peer_access_not_enabled,
# 109 "/usr/local/cuda/include/thrust/system/cuda/error.h"
device_already_in_use = 54,
# 110 "/usr/local/cuda/include/thrust/system/cuda/error.h"
profiler_disabled,
# 111 "/usr/local/cuda/include/thrust/system/cuda/error.h"
assert_triggered = 59,
# 112 "/usr/local/cuda/include/thrust/system/cuda/error.h"
too_many_peers,
# 113 "/usr/local/cuda/include/thrust/system/cuda/error.h"
host_memory_already_registered,
# 114 "/usr/local/cuda/include/thrust/system/cuda/error.h"
host_memory_not_registered,
# 115 "/usr/local/cuda/include/thrust/system/cuda/error.h"
operating_system_error,
# 119 "/usr/local/cuda/include/thrust/system/cuda/error.h"
peer_access_unsupported,
# 120 "/usr/local/cuda/include/thrust/system/cuda/error.h"
launch_max_depth_exceeded,
# 121 "/usr/local/cuda/include/thrust/system/cuda/error.h"
launch_file_scoped_texture_used,
# 122 "/usr/local/cuda/include/thrust/system/cuda/error.h"
launch_file_scoped_surface_used,
# 123 "/usr/local/cuda/include/thrust/system/cuda/error.h"
sync_depth_exceeded,
# 124 "/usr/local/cuda/include/thrust/system/cuda/error.h"
attempted_operation_not_permitted = 70,
# 125 "/usr/local/cuda/include/thrust/system/cuda/error.h"
attempted_operation_not_supported,
# 128 "/usr/local/cuda/include/thrust/system/cuda/error.h"
startup_failure = 127
# 129 "/usr/local/cuda/include/thrust/system/cuda/error.h"
};
# 132 "/usr/local/cuda/include/thrust/system/cuda/error.h"
}
# 134 "/usr/local/cuda/include/thrust/system/cuda/error.h"
}
# 146 "/usr/local/cuda/include/thrust/system/cuda/error.h"
inline const error_category &cuda_category();
# 153 "/usr/local/cuda/include/thrust/system/cuda/error.h"
template<> struct is_error_code_enum< cuda::errc::errc_t> : public thrust::detail::true_type { };
# 159 "/usr/local/cuda/include/thrust/system/cuda/error.h"
inline error_code make_error_code(cuda::errc::errc_t e);
# 165 "/usr/local/cuda/include/thrust/system/cuda/error.h"
inline error_condition make_error_condition(cuda::errc::errc_t e);
# 171 "/usr/local/cuda/include/thrust/system/cuda/error.h"
}
# 173 "/usr/local/cuda/include/thrust/system/cuda/error.h"
namespace cuda {
# 177 "/usr/local/cuda/include/thrust/system/cuda/error.h"
namespace errc = system::cuda::errc;
# 179 "/usr/local/cuda/include/thrust/system/cuda/error.h"
}
# 181 "/usr/local/cuda/include/thrust/system/cuda/error.h"
using system::cuda_category;
# 183 "/usr/local/cuda/include/thrust/system/cuda/error.h"
}
# 23 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
namespace system {
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
inline error_code make_error_code(cuda::errc::errc_t e)
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
{
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
return error_code(static_cast< int>(e), cuda_category());
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
}
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
inline error_condition make_error_condition(cuda::errc::errc_t e)
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
{
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
return error_condition(static_cast< int>(e), cuda_category());
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
}
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
namespace cuda {
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
namespace detail {
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
class cuda_error_category : public error_category {
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
public: cuda_error_category() { }
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
virtual const char *name() const
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
{
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
return "cuda";
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
}
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
virtual std::__cxx11::string message(int ev) const
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
{
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
static const std::__cxx11::string unknown_err("Unknown error");
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
const char *c_str = ::cudaGetErrorString(static_cast< cudaError_t>(ev));
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
return ((c_str) ? ((std::__cxx11::string)(c_str)) : unknown_err);
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
}
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
virtual error_condition default_error_condition(int ev) const
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
{
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
using namespace errc;
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
if (ev < (::cudaErrorApiFailureBase))
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
{
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
return make_error_condition(static_cast< errc::errc_t>(ev));
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
}
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
return system_category().default_error_condition(ev);
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
}
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
};
# 80 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
}
# 82 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
}
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
inline const error_category &cuda_category()
# 86 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
{
# 87 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
static const cuda::detail::cuda_error_category result;
# 88 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
return result;
# 89 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
}
# 92 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
}
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/error.inl"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
namespace detail {
# 31 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
class bad_alloc : public std::bad_alloc {
# 35 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
public: bad_alloc(const std::__cxx11::string &w) : std::bad_alloc(), m_what()
# 37 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
{
# 38 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
((m_what) = (this->std::bad_alloc::what()));
# 39 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
((m_what) += (": "));
# 40 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
((m_what) += w);
# 41 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
}
# 43 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
virtual ~bad_alloc() throw() { }
# 45 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
virtual const char *what() const throw()
# 46 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
{
# 47 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
return (m_what).c_str();
# 48 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
}
# 51 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
private: std::__cxx11::string m_what;
# 52 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
};
# 54 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
}
# 55 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
}
# 56 "/usr/local/cuda/include/thrust/system/detail/bad_alloc.h"
}
# 83 "/usr/local/cuda/include/thrust/version.h"
namespace thrust {
# 86 "/usr/local/cuda/include/thrust/version.h"
}
# 29 "/usr/include/stdio.h" 3

# 29 "/usr/include/stdio.h" 3
extern "C" {
# 25 "/usr/include/_G_config.h" 3
typedef
# 22 "/usr/include/_G_config.h" 3
struct {
# 23 "/usr/include/_G_config.h" 3
__off_t __pos;
# 24 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 25 "/usr/include/_G_config.h" 3
} _G_fpos_t;
# 30 "/usr/include/_G_config.h" 3
typedef
# 27 "/usr/include/_G_config.h" 3
struct {
# 28 "/usr/include/_G_config.h" 3
__off64_t __pos;
# 29 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 30 "/usr/include/_G_config.h" 3
} _G_fpos64_t;
# 144 "/usr/include/libio.h" 3
struct _IO_jump_t; struct _IO_FILE;
# 150 "/usr/include/libio.h" 3
typedef void _IO_lock_t;
# 156 "/usr/include/libio.h" 3
struct _IO_marker {
# 157 "/usr/include/libio.h" 3
_IO_marker *_next;
# 158 "/usr/include/libio.h" 3
_IO_FILE *_sbuf;
# 162 "/usr/include/libio.h" 3
int _pos;
# 173 "/usr/include/libio.h" 3
};
# 176 "/usr/include/libio.h" 3
enum __codecvt_result {
# 178 "/usr/include/libio.h" 3
__codecvt_ok,
# 179 "/usr/include/libio.h" 3
__codecvt_partial,
# 180 "/usr/include/libio.h" 3
__codecvt_error,
# 181 "/usr/include/libio.h" 3
__codecvt_noconv
# 182 "/usr/include/libio.h" 3
};
# 241 "/usr/include/libio.h" 3
struct _IO_FILE {
# 242 "/usr/include/libio.h" 3
int _flags;
# 247 "/usr/include/libio.h" 3
char *_IO_read_ptr;
# 248 "/usr/include/libio.h" 3
char *_IO_read_end;
# 249 "/usr/include/libio.h" 3
char *_IO_read_base;
# 250 "/usr/include/libio.h" 3
char *_IO_write_base;
# 251 "/usr/include/libio.h" 3
char *_IO_write_ptr;
# 252 "/usr/include/libio.h" 3
char *_IO_write_end;
# 253 "/usr/include/libio.h" 3
char *_IO_buf_base;
# 254 "/usr/include/libio.h" 3
char *_IO_buf_end;
# 256 "/usr/include/libio.h" 3
char *_IO_save_base;
# 257 "/usr/include/libio.h" 3
char *_IO_backup_base;
# 258 "/usr/include/libio.h" 3
char *_IO_save_end;
# 260 "/usr/include/libio.h" 3
_IO_marker *_markers;
# 262 "/usr/include/libio.h" 3
_IO_FILE *_chain;
# 264 "/usr/include/libio.h" 3
int _fileno;
# 268 "/usr/include/libio.h" 3
int _flags2;
# 270 "/usr/include/libio.h" 3
__off_t _old_offset;
# 274 "/usr/include/libio.h" 3
unsigned short _cur_column;
# 275 "/usr/include/libio.h" 3
signed char _vtable_offset;
# 276 "/usr/include/libio.h" 3
char _shortbuf[1];
# 280 "/usr/include/libio.h" 3
_IO_lock_t *_lock;
# 289 "/usr/include/libio.h" 3
__off64_t _offset;
# 297 "/usr/include/libio.h" 3
void *__pad1;
# 298 "/usr/include/libio.h" 3
void *__pad2;
# 299 "/usr/include/libio.h" 3
void *__pad3;
# 300 "/usr/include/libio.h" 3
void *__pad4;
# 302 "/usr/include/libio.h" 3
size_t __pad5;
# 303 "/usr/include/libio.h" 3
int _mode;
# 305 "/usr/include/libio.h" 3
char _unused2[(((15) * sizeof(int)) - ((4) * sizeof(void *))) - sizeof(size_t)];
# 307 "/usr/include/libio.h" 3
};
# 313 "/usr/include/libio.h" 3
struct _IO_FILE_plus;
# 315 "/usr/include/libio.h" 3
extern _IO_FILE_plus _IO_2_1_stdin_;
# 316 "/usr/include/libio.h" 3
extern _IO_FILE_plus _IO_2_1_stdout_;
# 317 "/usr/include/libio.h" 3
extern _IO_FILE_plus _IO_2_1_stderr_;
# 333 "/usr/include/libio.h" 3
typedef __ssize_t __io_read_fn(void * __cookie, char * __buf, size_t __nbytes);
# 341 "/usr/include/libio.h" 3
typedef __ssize_t __io_write_fn(void * __cookie, const char * __buf, size_t __n);
# 350 "/usr/include/libio.h" 3
typedef int __io_seek_fn(void * __cookie, __off64_t * __pos, int __w);
# 353 "/usr/include/libio.h" 3
typedef int __io_close_fn(void * __cookie);
# 358 "/usr/include/libio.h" 3
typedef __io_read_fn cookie_read_function_t;
# 359 "/usr/include/libio.h" 3
typedef __io_write_fn cookie_write_function_t;
# 360 "/usr/include/libio.h" 3
typedef __io_seek_fn cookie_seek_function_t;
# 361 "/usr/include/libio.h" 3
typedef __io_close_fn cookie_close_function_t;
# 370 "/usr/include/libio.h" 3
typedef
# 365 "/usr/include/libio.h" 3
struct {
# 366 "/usr/include/libio.h" 3
__io_read_fn *read;
# 367 "/usr/include/libio.h" 3
__io_write_fn *write;
# 368 "/usr/include/libio.h" 3
__io_seek_fn *seek;
# 369 "/usr/include/libio.h" 3
__io_close_fn *close;
# 370 "/usr/include/libio.h" 3
} _IO_cookie_io_functions_t;
# 371 "/usr/include/libio.h" 3
typedef _IO_cookie_io_functions_t cookie_io_functions_t;
# 373 "/usr/include/libio.h" 3
struct _IO_cookie_file;
# 376 "/usr/include/libio.h" 3
extern void _IO_cookie_init(_IO_cookie_file * __cfile, int __read_write, void * __cookie, _IO_cookie_io_functions_t __fns);
# 382 "/usr/include/libio.h" 3
extern "C" {
# 385 "/usr/include/libio.h" 3
extern int __underflow(_IO_FILE *);
# 386 "/usr/include/libio.h" 3
extern int __uflow(_IO_FILE *);
# 387 "/usr/include/libio.h" 3
extern int __overflow(_IO_FILE *, int);
# 429 "/usr/include/libio.h" 3
extern int _IO_getc(_IO_FILE * __fp);
# 430 "/usr/include/libio.h" 3
extern int _IO_putc(int __c, _IO_FILE * __fp);
# 431 "/usr/include/libio.h" 3
extern int _IO_feof(_IO_FILE * __fp) throw();
# 432 "/usr/include/libio.h" 3
extern int _IO_ferror(_IO_FILE * __fp) throw();
# 434 "/usr/include/libio.h" 3
extern int _IO_peekc_locked(_IO_FILE * __fp);
# 440 "/usr/include/libio.h" 3
extern void _IO_flockfile(_IO_FILE *) throw();
# 441 "/usr/include/libio.h" 3
extern void _IO_funlockfile(_IO_FILE *) throw();
# 442 "/usr/include/libio.h" 3
extern int _IO_ftrylockfile(_IO_FILE *) throw();
# 459 "/usr/include/libio.h" 3
extern int _IO_vfscanf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list, int *__restrict__);
# 461 "/usr/include/libio.h" 3
extern int _IO_vfprintf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list);
# 463 "/usr/include/libio.h" 3
extern __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
# 464 "/usr/include/libio.h" 3
extern size_t _IO_sgetn(_IO_FILE *, void *, size_t);
# 466 "/usr/include/libio.h" 3
extern __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
# 467 "/usr/include/libio.h" 3
extern __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
# 469 "/usr/include/libio.h" 3
extern void _IO_free_backup_area(_IO_FILE *) throw();
# 521 "/usr/include/libio.h" 3
}
# 79 "/usr/include/stdio.h" 3
typedef __gnuc_va_list va_list;
# 110 "/usr/include/stdio.h" 3
typedef _G_fpos_t fpos_t;
# 116 "/usr/include/stdio.h" 3
typedef _G_fpos64_t fpos64_t;
# 168 "/usr/include/stdio.h" 3
extern _IO_FILE *stdin;
# 169 "/usr/include/stdio.h" 3
extern _IO_FILE *stdout;
# 170 "/usr/include/stdio.h" 3
extern _IO_FILE *stderr;
# 178 "/usr/include/stdio.h" 3
extern int remove(const char * __filename) throw();
# 180 "/usr/include/stdio.h" 3
extern int rename(const char * __old, const char * __new) throw();
# 185 "/usr/include/stdio.h" 3
extern int renameat(int __oldfd, const char * __old, int __newfd, const char * __new) throw();
# 195 "/usr/include/stdio.h" 3
extern FILE *tmpfile() __attribute((__warn_unused_result__));
# 205 "/usr/include/stdio.h" 3
extern FILE *tmpfile64() __attribute((__warn_unused_result__));
# 209 "/usr/include/stdio.h" 3
extern char *tmpnam(char * __s) throw() __attribute((__warn_unused_result__));
# 215 "/usr/include/stdio.h" 3
extern char *tmpnam_r(char * __s) throw() __attribute((__warn_unused_result__));
# 227 "/usr/include/stdio.h" 3
extern char *tempnam(const char * __dir, const char * __pfx) throw()
# 228 "/usr/include/stdio.h" 3
 __attribute((__malloc__)) __attribute((__warn_unused_result__));
# 237 "/usr/include/stdio.h" 3
extern int fclose(FILE * __stream);
# 242 "/usr/include/stdio.h" 3
extern int fflush(FILE * __stream);
# 252 "/usr/include/stdio.h" 3
extern int fflush_unlocked(FILE * __stream);
# 262 "/usr/include/stdio.h" 3
extern int fcloseall();
# 272 "/usr/include/stdio.h" 3
extern FILE *fopen(const char *__restrict__ __filename, const char *__restrict__ __modes)
# 273 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 278 "/usr/include/stdio.h" 3
extern FILE *freopen(const char *__restrict__ __filename, const char *__restrict__ __modes, FILE *__restrict__ __stream)
# 280 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 297 "/usr/include/stdio.h" 3
extern FILE *fopen64(const char *__restrict__ __filename, const char *__restrict__ __modes)
# 298 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 299 "/usr/include/stdio.h" 3
extern FILE *freopen64(const char *__restrict__ __filename, const char *__restrict__ __modes, FILE *__restrict__ __stream)
# 301 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 306 "/usr/include/stdio.h" 3
extern FILE *fdopen(int __fd, const char * __modes) throw() __attribute((__warn_unused_result__));
# 312 "/usr/include/stdio.h" 3
extern FILE *fopencookie(void *__restrict__ __magic_cookie, const char *__restrict__ __modes, _IO_cookie_io_functions_t __io_funcs) throw()
# 314 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 319 "/usr/include/stdio.h" 3
extern FILE *fmemopen(void * __s, size_t __len, const char * __modes) throw()
# 320 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 325 "/usr/include/stdio.h" 3
extern FILE *open_memstream(char ** __bufloc, size_t * __sizeloc) throw() __attribute((__warn_unused_result__));
# 332 "/usr/include/stdio.h" 3
extern void setbuf(FILE *__restrict__ __stream, char *__restrict__ __buf) throw();
# 336 "/usr/include/stdio.h" 3
extern int setvbuf(FILE *__restrict__ __stream, char *__restrict__ __buf, int __modes, size_t __n) throw();
# 343 "/usr/include/stdio.h" 3
extern void setbuffer(FILE *__restrict__ __stream, char *__restrict__ __buf, size_t __size) throw();
# 347 "/usr/include/stdio.h" 3
extern void setlinebuf(FILE * __stream) throw();
# 356 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int fprintf(FILE *__restrict__ __stream, const char *__restrict__ __format, ...);
# 362 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int printf(const char *__restrict__ __format, ...);
# 364 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int sprintf(char *__restrict__ __s, const char *__restrict__ __format, ...) throw();
# 371 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int vfprintf(FILE *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg);
# 377 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int vprintf(const char *__restrict__ __format, __gnuc_va_list __arg);
# 379 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int vsprintf(char *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg) throw();
# 386 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int snprintf(char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format, ...) throw()
# 388 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 4)));
# 390 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int vsnprintf(char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format, __gnuc_va_list __arg) throw()
# 392 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 0)));
# 399 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int vasprintf(char **__restrict__ __ptr, const char *__restrict__ __f, __gnuc_va_list __arg) throw()
# 401 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0))) __attribute((__warn_unused_result__));
# 402 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int __asprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, ...) throw()
# 404 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3))) __attribute((__warn_unused_result__));
# 405 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int asprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, ...) throw()
# 407 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3))) __attribute((__warn_unused_result__));
# 412 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int vdprintf(int __fd, const char *__restrict__ __fmt, __gnuc_va_list __arg)
# 414 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 415 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int dprintf(int __fd, const char *__restrict__ __fmt, ...)
# 416 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 425 "/usr/include/stdio.h" 3
extern int fscanf(FILE *__restrict__ __stream, const char *__restrict__ __format, ...)
# 426 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 431 "/usr/include/stdio.h" 3
extern int scanf(const char *__restrict__ __format, ...) __attribute((__warn_unused_result__));
# 433 "/usr/include/stdio.h" 3
extern int sscanf(const char *__restrict__ __s, const char *__restrict__ __format, ...) throw();
# 471 "/usr/include/stdio.h" 3
extern int vfscanf(FILE *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg)
# 473 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0))) __attribute((__warn_unused_result__));
# 479 "/usr/include/stdio.h" 3
extern int vscanf(const char *__restrict__ __format, __gnuc_va_list __arg)
# 480 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 1, 0))) __attribute((__warn_unused_result__));
# 483 "/usr/include/stdio.h" 3
extern int vsscanf(const char *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg) throw()
# 485 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0)));
# 531 "/usr/include/stdio.h" 3
extern int fgetc(FILE * __stream);
# 532 "/usr/include/stdio.h" 3
extern int getc(FILE * __stream);
# 538 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int getchar();
# 550 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int getc_unlocked(FILE * __stream);
# 551 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int getchar_unlocked();
# 561 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int fgetc_unlocked(FILE * __stream);
# 573 "/usr/include/stdio.h" 3
extern int fputc(int __c, FILE * __stream);
# 574 "/usr/include/stdio.h" 3
extern int putc(int __c, FILE * __stream);
# 580 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int putchar(int __c);
# 594 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int fputc_unlocked(int __c, FILE * __stream);
# 602 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int putc_unlocked(int __c, FILE * __stream);
# 603 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int putchar_unlocked(int __c);
# 610 "/usr/include/stdio.h" 3
extern int getw(FILE * __stream);
# 613 "/usr/include/stdio.h" 3
extern int putw(int __w, FILE * __stream);
# 622 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline char *fgets(char *__restrict__ __s, int __n, FILE *__restrict__ __stream)
# 623 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 638 "/usr/include/stdio.h" 3
extern char *gets(char * __s) __attribute((__warn_unused_result__)) __attribute((__deprecated__));
# 649 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline char *fgets_unlocked(char *__restrict__ __s, int __n, FILE *__restrict__ __stream)
# 650 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 665 "/usr/include/stdio.h" 3
extern __ssize_t __getdelim(char **__restrict__ __lineptr, size_t *__restrict__ __n, int __delimiter, FILE *__restrict__ __stream)
# 667 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 668 "/usr/include/stdio.h" 3
extern __ssize_t getdelim(char **__restrict__ __lineptr, size_t *__restrict__ __n, int __delimiter, FILE *__restrict__ __stream)
# 670 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 678 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline __ssize_t getline(char **__restrict__ __lineptr, size_t *__restrict__ __n, FILE *__restrict__ __stream)
# 680 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 689 "/usr/include/stdio.h" 3
extern int fputs(const char *__restrict__ __s, FILE *__restrict__ __stream);
# 695 "/usr/include/stdio.h" 3
extern int puts(const char * __s);
# 702 "/usr/include/stdio.h" 3
extern int ungetc(int __c, FILE * __stream);
# 709 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline size_t fread(void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__ __stream)
# 710 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 715 "/usr/include/stdio.h" 3
extern size_t fwrite(const void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__ __s);
# 726 "/usr/include/stdio.h" 3
extern int fputs_unlocked(const char *__restrict__ __s, FILE *__restrict__ __stream);
# 737 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline size_t fread_unlocked(void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__ __stream)
# 738 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 739 "/usr/include/stdio.h" 3
extern size_t fwrite_unlocked(const void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__ __stream);
# 749 "/usr/include/stdio.h" 3
extern int fseek(FILE * __stream, long __off, int __whence);
# 754 "/usr/include/stdio.h" 3
extern long ftell(FILE * __stream) __attribute((__warn_unused_result__));
# 759 "/usr/include/stdio.h" 3
extern void rewind(FILE * __stream);
# 773 "/usr/include/stdio.h" 3
extern int fseeko(FILE * __stream, __off_t __off, int __whence);
# 778 "/usr/include/stdio.h" 3
extern __off_t ftello(FILE * __stream) __attribute((__warn_unused_result__));
# 798 "/usr/include/stdio.h" 3
extern int fgetpos(FILE *__restrict__ __stream, fpos_t *__restrict__ __pos);
# 803 "/usr/include/stdio.h" 3
extern int fsetpos(FILE * __stream, const fpos_t * __pos);
# 818 "/usr/include/stdio.h" 3
extern int fseeko64(FILE * __stream, __off64_t __off, int __whence);
# 819 "/usr/include/stdio.h" 3
extern __off64_t ftello64(FILE * __stream) __attribute((__warn_unused_result__));
# 820 "/usr/include/stdio.h" 3
extern int fgetpos64(FILE *__restrict__ __stream, fpos64_t *__restrict__ __pos);
# 821 "/usr/include/stdio.h" 3
extern int fsetpos64(FILE * __stream, const fpos64_t * __pos);
# 826 "/usr/include/stdio.h" 3
extern void clearerr(FILE * __stream) throw();
# 828 "/usr/include/stdio.h" 3
extern int feof(FILE * __stream) throw() __attribute((__warn_unused_result__));
# 830 "/usr/include/stdio.h" 3
extern int ferror(FILE * __stream) throw() __attribute((__warn_unused_result__));
# 835 "/usr/include/stdio.h" 3
extern void clearerr_unlocked(FILE * __stream) throw();
# 836 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int feof_unlocked(FILE * __stream) throw() __attribute((__warn_unused_result__));
# 837 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int ferror_unlocked(FILE * __stream) throw() __attribute((__warn_unused_result__));
# 846 "/usr/include/stdio.h" 3
extern void perror(const char * __s);
# 26 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern int sys_nerr;
# 27 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern const char *const sys_errlist[];
# 30 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern int _sys_nerr;
# 31 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern const char *const _sys_errlist[];
# 858 "/usr/include/stdio.h" 3
extern int fileno(FILE * __stream) throw() __attribute((__warn_unused_result__));
# 863 "/usr/include/stdio.h" 3
extern int fileno_unlocked(FILE * __stream) throw() __attribute((__warn_unused_result__));
# 872 "/usr/include/stdio.h" 3
extern FILE *popen(const char * __command, const char * __modes) __attribute((__warn_unused_result__));
# 878 "/usr/include/stdio.h" 3
extern int pclose(FILE * __stream);
# 884 "/usr/include/stdio.h" 3
extern char *ctermid(char * __s) throw();
# 890 "/usr/include/stdio.h" 3
extern char *cuserid(char * __s);
# 895 "/usr/include/stdio.h" 3
struct obstack;
# 898 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int obstack_printf(obstack *__restrict__ __obstack, const char *__restrict__ __format, ...) throw()
# 900 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 901 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int obstack_vprintf(obstack *__restrict__ __obstack, const char *__restrict__ __format, __gnuc_va_list __args) throw()
# 904 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 912 "/usr/include/stdio.h" 3
extern void flockfile(FILE * __stream) throw();
# 916 "/usr/include/stdio.h" 3
extern int ftrylockfile(FILE * __stream) throw() __attribute((__warn_unused_result__));
# 919 "/usr/include/stdio.h" 3
extern void funlockfile(FILE * __stream) throw();
# 43 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 44 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
getchar()
# 45 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 46 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return _IO_getc(stdin);
# 47 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 52 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 53 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
fgetc_unlocked(FILE *__fp)
# 54 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 55 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((__fp->_IO_read_ptr) >= (__fp->_IO_read_end), 0)) ? __uflow(__fp) : (*((unsigned char *)((__fp->_IO_read_ptr)++)));
# 56 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 62 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 63 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
getc_unlocked(FILE *__fp)
# 64 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 65 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((__fp->_IO_read_ptr) >= (__fp->_IO_read_end), 0)) ? __uflow(__fp) : (*((unsigned char *)((__fp->_IO_read_ptr)++)));
# 66 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 69 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 70 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
getchar_unlocked()
# 71 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 72 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((stdin->_IO_read_ptr) >= (stdin->_IO_read_end), 0)) ? __uflow(stdin) : (*((unsigned char *)((stdin->_IO_read_ptr)++)));
# 73 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 78 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 79 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
putchar(int __c)
# 80 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 81 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return _IO_putc(__c, stdout);
# 82 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 87 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 88 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
fputc_unlocked(int __c, FILE *__stream)
# 89 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 90 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((__stream->_IO_write_ptr) >= (__stream->_IO_write_end), 0)) ? __overflow(__stream, (unsigned char)__c) : ((unsigned char)((*((__stream->_IO_write_ptr)++)) = __c));
# 91 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 97 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 98 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
putc_unlocked(int __c, FILE *__stream)
# 99 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 100 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((__stream->_IO_write_ptr) >= (__stream->_IO_write_end), 0)) ? __overflow(__stream, (unsigned char)__c) : ((unsigned char)((*((__stream->_IO_write_ptr)++)) = __c));
# 101 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 104 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 105 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
putchar_unlocked(int __c)
# 106 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 107 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((stdout->_IO_write_ptr) >= (stdout->_IO_write_end), 0)) ? __overflow(stdout, (unsigned char)__c) : ((unsigned char)((*((stdout->_IO_write_ptr)++)) = __c));
# 108 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 114 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline __ssize_t
# 115 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
getline(char **__lineptr, size_t *__n, FILE *__stream)
# 116 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 117 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return __getdelim(__lineptr, __n, '\n', __stream);
# 118 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 124 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 125 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
 __attribute((__leaf__)) feof_unlocked(FILE *__stream) throw()
# 126 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 127 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return ((__stream->_flags) & 16) != 0;
# 128 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 131 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 132 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
 __attribute((__leaf__)) ferror_unlocked(FILE *__stream) throw()
# 133 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 134 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return ((__stream->_flags) & 32) != 0;
# 135 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 23 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __sprintf_chk(char *__restrict__ __s, int __flag, size_t __slen, const char *__restrict__ __format, ...) throw();
# 25 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __vsprintf_chk(char *__restrict__ __s, int __flag, size_t __slen, const char *__restrict__ __format, __gnuc_va_list __ap) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 31 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__leaf__)) sprintf(char *__restrict__ __s, const char *__restrict__ __fmt, ...) throw()
# 32 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 33 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __builtin___sprintf_chk(__s, 2 - 1, __builtin_object_size(__s, 2 > 1), __fmt, __builtin_va_arg_pack());
# 35 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 42 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 43 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__leaf__)) vsprintf(char *__restrict__ __s, const char *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 45 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 46 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __builtin___vsprintf_chk(__s, 2 - 1, __builtin_object_size(__s, 2 > 1), __fmt, __ap);
# 48 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 52 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __snprintf_chk(char *__restrict__ __s, size_t __n, int __flag, size_t __slen, const char *__restrict__ __format, ...) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __vsnprintf_chk(char *__restrict__ __s, size_t __n, int __flag, size_t __slen, const char *__restrict__ __format, __gnuc_va_list __ap) throw();
# 60 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 61 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__leaf__)) snprintf(char *__restrict__ __s, size_t __n, const char *__restrict__ __fmt, ...) throw()
# 63 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 64 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __builtin___snprintf_chk(__s, __n, 2 - 1, __builtin_object_size(__s, 2 > 1), __fmt, __builtin_va_arg_pack());
# 66 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 73 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 74 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__leaf__)) vsnprintf(char *__restrict__ __s, size_t __n, const char *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 76 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 77 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __builtin___vsnprintf_chk(__s, __n, 2 - 1, __builtin_object_size(__s, 2 > 1), __fmt, __ap);
# 79 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 85 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __fprintf_chk(FILE *__restrict__ __stream, int __flag, const char *__restrict__ __format, ...);
# 87 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __printf_chk(int __flag, const char *__restrict__ __format, ...);
# 88 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __vfprintf_chk(FILE *__restrict__ __stream, int __flag, const char *__restrict__ __format, __gnuc_va_list __ap);
# 90 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __vprintf_chk(int __flag, const char *__restrict__ __format, __gnuc_va_list __ap);
# 94 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 95 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fprintf(FILE *__restrict__ __stream, const char *__restrict__ __fmt, ...)
# 96 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 97 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fprintf_chk(__stream, 2 - 1, __fmt, __builtin_va_arg_pack());
# 99 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 101 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 102 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
printf(const char *__restrict__ __fmt, ...)
# 103 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 104 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __printf_chk(2 - 1, __fmt, __builtin_va_arg_pack());
# 105 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 113 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 114 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
vprintf(const char *__restrict__ __fmt, __gnuc_va_list __ap)
# 115 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 117 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __vfprintf_chk(stdout, 2 - 1, __fmt, __ap);
# 121 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 123 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 124 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
vfprintf(FILE *__restrict__ __stream, const char *__restrict__
# 125 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__fmt, __gnuc_va_list __ap)
# 126 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 127 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __vfprintf_chk(__stream, 2 - 1, __fmt, __ap);
# 128 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 131 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __dprintf_chk(int __fd, int __flag, const char *__restrict__ __fmt, ...)
# 132 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 4)));
# 133 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __vdprintf_chk(int __fd, int __flag, const char *__restrict__ __fmt, __gnuc_va_list __arg)
# 135 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 0)));
# 138 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 139 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
dprintf(int __fd, const char *__restrict__ __fmt, ...)
# 140 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 141 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __dprintf_chk(__fd, 2 - 1, __fmt, __builtin_va_arg_pack());
# 143 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 149 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 150 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
vdprintf(int __fd, const char *__restrict__ __fmt, __gnuc_va_list __ap)
# 151 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 152 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __vdprintf_chk(__fd, 2 - 1, __fmt, __ap);
# 153 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 158 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __asprintf_chk(char **__restrict__ __ptr, int __flag, const char *__restrict__ __fmt, ...) throw()
# 160 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 4))) __attribute((__warn_unused_result__));
# 161 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __vasprintf_chk(char **__restrict__ __ptr, int __flag, const char *__restrict__ __fmt, __gnuc_va_list __arg) throw()
# 163 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 0))) __attribute((__warn_unused_result__));
# 164 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __obstack_printf_chk(obstack *__restrict__ __obstack, int __flag, const char *__restrict__ __format, ...) throw()
# 167 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 4)));
# 168 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __obstack_vprintf_chk(obstack *__restrict__ __obstack, int __flag, const char *__restrict__ __format, __gnuc_va_list __args) throw()
# 172 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 0)));
# 175 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 176 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__leaf__)) asprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, ...) throw()
# 177 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 178 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __asprintf_chk(__ptr, 2 - 1, __fmt, __builtin_va_arg_pack());
# 180 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 182 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 183 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__leaf__)) __asprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, ...) throw()
# 185 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 186 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __asprintf_chk(__ptr, 2 - 1, __fmt, __builtin_va_arg_pack());
# 188 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 190 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 191 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__leaf__)) obstack_printf(obstack *__restrict__ __obstack, const char *__restrict__ __fmt, ...) throw()
# 193 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 194 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __obstack_printf_chk(__obstack, 2 - 1, __fmt, __builtin_va_arg_pack());
# 196 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 206 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 207 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__leaf__)) vasprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 209 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 210 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __vasprintf_chk(__ptr, 2 - 1, __fmt, __ap);
# 211 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 213 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 214 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__leaf__)) obstack_vprintf(obstack *__restrict__ __obstack, const char *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 216 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 217 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __obstack_vprintf_chk(__obstack, 2 - 1, __fmt, __ap);
# 219 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 241 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern char *__fgets_chk(char *__restrict__ __s, size_t __size, int __n, FILE *__restrict__ __stream)
# 242 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 243 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern char *__fgets_alias(char *__restrict__ __s, int __n, FILE *__restrict__ __stream) __asm__("fgets")
# 245 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 246 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern char *__fgets_chk_warn(char *__restrict__ __s, size_t __size, int __n, FILE *__restrict__ __stream) __asm__("__fgets_chk")
# 249 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fgets called with bigger size than length of destination buffer")));
# 252 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline char *
# 253 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fgets(char *__restrict__ __s, int __n, FILE *__restrict__ __stream)
# 254 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 255 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__builtin_object_size(__s, 2 > 1) != ((size_t)(-1)))
# 256 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 257 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((!(0)) || (__n <= 0)) {
# 258 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_chk(__s, __builtin_object_size(__s, 2 > 1), __n, __stream); }
# 260 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (((size_t)__n) > __builtin_object_size(__s, 2 > 1)) {
# 261 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_chk_warn(__s, __builtin_object_size(__s, 2 > 1), __n, __stream); }
# 262 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 263 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_alias(__s, __n, __stream);
# 264 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 266 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern size_t __fread_chk(void *__restrict__ __ptr, size_t __ptrlen, size_t __size, size_t __n, FILE *__restrict__ __stream)
# 268 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 269 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern size_t __fread_alias(void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__ __stream) __asm__("fread")
# 272 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 273 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern size_t __fread_chk_warn(void *__restrict__ __ptr, size_t __ptrlen, size_t __size, size_t __n, FILE *__restrict__ __stream) __asm__("__fread_chk")
# 278 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fread called with bigger size * nmemb than length of destination buffer")));
# 281 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline size_t
# 282 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fread(void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__
# 283 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__stream)
# 284 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 285 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__builtin_object_size(__ptr, 0) != ((size_t)(-1)))
# 286 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 287 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (((!(0)) || (!(0))) || ((__size | __n) >= (((size_t)1) << (((8) * sizeof(size_t)) / (2))))) {
# 290 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_chk(__ptr, __builtin_object_size(__ptr, 0), __size, __n, __stream); }
# 292 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((__size * __n) > __builtin_object_size(__ptr, 0)) {
# 293 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_chk_warn(__ptr, __builtin_object_size(__ptr, 0), __size, __n, __stream); }
# 294 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 295 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_alias(__ptr, __size, __n, __stream);
# 296 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 299 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern char *__fgets_unlocked_chk(char *__restrict__ __s, size_t __size, int __n, FILE *__restrict__ __stream)
# 300 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 301 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern char *__fgets_unlocked_alias(char *__restrict__ __s, int __n, FILE *__restrict__ __stream) __asm__("fgets_unlocked")
# 303 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 304 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern char *__fgets_unlocked_chk_warn(char *__restrict__ __s, size_t __size, int __n, FILE *__restrict__ __stream) __asm__("__fgets_unlocked_chk")
# 307 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fgets_unlocked called with bigger size than length of destination buffer")));
# 310 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline char *
# 311 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fgets_unlocked(char *__restrict__ __s, int __n, FILE *__restrict__ __stream)
# 312 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 313 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__builtin_object_size(__s, 2 > 1) != ((size_t)(-1)))
# 314 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 315 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((!(0)) || (__n <= 0)) {
# 316 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_unlocked_chk(__s, __builtin_object_size(__s, 2 > 1), __n, __stream); }
# 318 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (((size_t)__n) > __builtin_object_size(__s, 2 > 1)) {
# 319 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_unlocked_chk_warn(__s, __builtin_object_size(__s, 2 > 1), __n, __stream); }
# 320 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 321 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_unlocked_alias(__s, __n, __stream);
# 322 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 327 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern size_t __fread_unlocked_chk(void *__restrict__ __ptr, size_t __ptrlen, size_t __size, size_t __n, FILE *__restrict__ __stream)
# 329 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 330 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern size_t __fread_unlocked_alias(void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__ __stream) __asm__("fread_unlocked")
# 333 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 334 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern size_t __fread_unlocked_chk_warn(void *__restrict__ __ptr, size_t __ptrlen, size_t __size, size_t __n, FILE *__restrict__ __stream) __asm__("__fread_unlocked_chk")
# 339 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fread_unlocked called with bigger size * nmemb than length of destination buffer")));
# 342 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline size_t
# 343 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fread_unlocked(void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__
# 344 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__stream)
# 345 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 346 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__builtin_object_size(__ptr, 0) != ((size_t)(-1)))
# 347 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 348 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (((!(0)) || (!(0))) || ((__size | __n) >= (((size_t)1) << (((8) * sizeof(size_t)) / (2))))) {
# 351 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_unlocked_chk(__ptr, __builtin_object_size(__ptr, 0), __size, __n, __stream); }
# 354 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((__size * __n) > __builtin_object_size(__ptr, 0)) {
# 355 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_unlocked_chk_warn(__ptr, __builtin_object_size(__ptr, 0), __size, __n, __stream); }
# 357 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 360 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((0) && (0) && ((__size | __n) < (((size_t)1) << (((8) * sizeof(size_t)) / (2)))) && ((__size * __n) <= (8)))
# 364 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 365 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
size_t __cnt = __size * __n;
# 366 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
char *__cptr = (char *)__ptr;
# 367 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__cnt == (0)) {
# 368 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return 0; }
# 370 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
for (; __cnt > (0); --__cnt)
# 371 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 372 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
int __c = (__builtin_expect((__stream->_IO_read_ptr) >= (__stream->_IO_read_end), 0)) ? __uflow(__stream) : (*((unsigned char *)((__stream->_IO_read_ptr)++)));
# 373 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__c == (-1)) {
# 374 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
break; }
# 375 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
(*(__cptr++)) = __c;
# 376 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 377 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return (__cptr - ((char *)__ptr)) / __size;
# 378 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 380 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_unlocked_alias(__ptr, __size, __n, __stream);
# 381 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 942 "/usr/include/stdio.h" 3
}
# 96 "/usr/include/c++/5/cstdio" 3
namespace std {
# 98 "/usr/include/c++/5/cstdio" 3
using ::FILE;
# 99 "/usr/include/c++/5/cstdio" 3
using ::fpos_t;
# 101 "/usr/include/c++/5/cstdio" 3
using ::clearerr;
# 102 "/usr/include/c++/5/cstdio" 3
using ::fclose;
# 103 "/usr/include/c++/5/cstdio" 3
using ::feof;
# 104 "/usr/include/c++/5/cstdio" 3
using ::ferror;
# 105 "/usr/include/c++/5/cstdio" 3
using ::fflush;
# 106 "/usr/include/c++/5/cstdio" 3
using ::fgetc;
# 107 "/usr/include/c++/5/cstdio" 3
using ::fgetpos;
# 108 "/usr/include/c++/5/cstdio" 3
using ::fgets;
# 109 "/usr/include/c++/5/cstdio" 3
using ::fopen;
# 110 "/usr/include/c++/5/cstdio" 3
using ::fprintf;
# 111 "/usr/include/c++/5/cstdio" 3
using ::fputc;
# 112 "/usr/include/c++/5/cstdio" 3
using ::fputs;
# 113 "/usr/include/c++/5/cstdio" 3
using ::fread;
# 114 "/usr/include/c++/5/cstdio" 3
using ::freopen;
# 115 "/usr/include/c++/5/cstdio" 3
using ::fscanf;
# 116 "/usr/include/c++/5/cstdio" 3
using ::fseek;
# 117 "/usr/include/c++/5/cstdio" 3
using ::fsetpos;
# 118 "/usr/include/c++/5/cstdio" 3
using ::ftell;
# 119 "/usr/include/c++/5/cstdio" 3
using ::fwrite;
# 120 "/usr/include/c++/5/cstdio" 3
using ::getc;
# 121 "/usr/include/c++/5/cstdio" 3
using ::getchar;
# 124 "/usr/include/c++/5/cstdio" 3
using ::gets;
# 126 "/usr/include/c++/5/cstdio" 3
using ::perror;
# 127 "/usr/include/c++/5/cstdio" 3
using ::printf;
# 128 "/usr/include/c++/5/cstdio" 3
using ::putc;
# 129 "/usr/include/c++/5/cstdio" 3
using ::putchar;
# 130 "/usr/include/c++/5/cstdio" 3
using ::puts;
# 131 "/usr/include/c++/5/cstdio" 3
using ::remove;
# 132 "/usr/include/c++/5/cstdio" 3
using ::rename;
# 133 "/usr/include/c++/5/cstdio" 3
using ::rewind;
# 134 "/usr/include/c++/5/cstdio" 3
using ::scanf;
# 135 "/usr/include/c++/5/cstdio" 3
using ::setbuf;
# 136 "/usr/include/c++/5/cstdio" 3
using ::setvbuf;
# 137 "/usr/include/c++/5/cstdio" 3
using ::sprintf;
# 138 "/usr/include/c++/5/cstdio" 3
using ::sscanf;
# 139 "/usr/include/c++/5/cstdio" 3
using ::tmpfile;
# 141 "/usr/include/c++/5/cstdio" 3
using ::tmpnam;
# 143 "/usr/include/c++/5/cstdio" 3
using ::ungetc;
# 144 "/usr/include/c++/5/cstdio" 3
using ::vfprintf;
# 145 "/usr/include/c++/5/cstdio" 3
using ::vprintf;
# 146 "/usr/include/c++/5/cstdio" 3
using ::vsprintf;
# 147 "/usr/include/c++/5/cstdio" 3
}
# 157 "/usr/include/c++/5/cstdio" 3
namespace __gnu_cxx {
# 175 "/usr/include/c++/5/cstdio" 3
using ::snprintf;
# 176 "/usr/include/c++/5/cstdio" 3
using ::vfscanf;
# 177 "/usr/include/c++/5/cstdio" 3
using ::vscanf;
# 178 "/usr/include/c++/5/cstdio" 3
using ::vsnprintf;
# 179 "/usr/include/c++/5/cstdio" 3
using ::vsscanf;
# 181 "/usr/include/c++/5/cstdio" 3
}
# 183 "/usr/include/c++/5/cstdio" 3
namespace std {
# 185 "/usr/include/c++/5/cstdio" 3
using __gnu_cxx::snprintf;
# 186 "/usr/include/c++/5/cstdio" 3
using __gnu_cxx::vfscanf;
# 187 "/usr/include/c++/5/cstdio" 3
using __gnu_cxx::vscanf;
# 188 "/usr/include/c++/5/cstdio" 3
using __gnu_cxx::vsnprintf;
# 189 "/usr/include/c++/5/cstdio" 3
using __gnu_cxx::vsscanf;
# 190 "/usr/include/c++/5/cstdio" 3
}
# 23 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"

# 23 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
namespace bulk_ {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
namespace detail {
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
inline void terminate()
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
{
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
std::terminate();
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
}
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
inline void terminate_with_message(const char *message)
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
{
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
std::printf("%s\n", message);
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
bulk_::detail::terminate();
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
}
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
inline void terminate_on_error(cudaError_t e, const char *message)
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
{
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
if (e)
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
{
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
printf("Error after: %s: %s\n", message, cudaGetErrorString(e));
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
bulk_::detail::terminate();
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
}
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
}
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
}
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
}
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/terminate.hpp"
}}}}
# 25 "/usr/local/cuda/include/thrust/system_error.h"
namespace thrust {
# 40 "/usr/local/cuda/include/thrust/system_error.h"
namespace system {
# 42 "/usr/local/cuda/include/thrust/system_error.h"
}
# 47 "/usr/local/cuda/include/thrust/system_error.h"
}
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/throw_on_error.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/throw_on_error.hpp"
namespace bulk_ {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/throw_on_error.hpp"
namespace detail {
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/throw_on_error.hpp"
inline void throw_on_error(cudaError_t e, const char *message)
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/throw_on_error.hpp"
{
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/throw_on_error.hpp"
if (e)
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/throw_on_error.hpp"
{
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/throw_on_error.hpp"
throw system_error(e, thrust::cuda_category(), message);
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/throw_on_error.hpp"
}
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/throw_on_error.hpp"
}
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/throw_on_error.hpp"
}
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/throw_on_error.hpp"
}
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/throw_on_error.hpp"
}}}}
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
namespace bulk_ {
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
struct future_core_access;
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
}
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
template< class T> class future;
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
template<> class future< void> {
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
public: ~future()
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
{
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
if (this->valid())
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
{
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
cudaError_t e = cudaEventDestroy(m_event);
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
if (e)
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
{
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
printf("CUDA error after cudaEventDestroy in future dtor: %s", cudaGetErrorString(e));
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
}
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
if (m_owns_stream)
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
{
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
e = cudaStreamDestroy(m_stream);
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
if (e)
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
{
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
printf("CUDA error after cudaStreamDestroy in future dtor: %s", cudaGetErrorString(e));
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
}
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
}
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
}
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
}
# 80 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
void wait() const
# 81 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
{
# 88 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
bulk_::detail::throw_on_error(cudaEventSynchronize(m_event), "cudaEventSynchronize in future::wait");
# 98 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
}
# 101 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
bool valid() const
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
{
# 103 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
return (m_event) != (0);
# 104 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
}
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
future() : m_stream((0)), m_event((0)), m_owns_stream(false)
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
{ }
# 114 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
future(const bulk_::future< void> &other) : m_stream((0)), m_event((0)), m_owns_stream(false)
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
{
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
thrust::swap(m_stream, (const_cast< bulk_::future< void> &>(other)).m_stream);
# 118 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
thrust::swap(m_event, (const_cast< bulk_::future< void> &>(other)).m_event);
# 119 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
thrust::swap(m_owns_stream, (const_cast< bulk_::future< void> &>(other)).m_owns_stream);
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
}
# 125 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
bulk_::future< void> &operator=(const bulk_::future< void> &other)
# 126 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
{
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
thrust::swap(m_stream, (const_cast< bulk_::future< void> &>(other)).m_stream);
# 128 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
thrust::swap(m_event, (const_cast< bulk_::future< void> &>(other)).m_event);
# 129 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
thrust::swap(m_owns_stream, (const_cast< bulk_::future< void> &>(other)).m_owns_stream);
# 130 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
return *this;
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
}
# 134 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
friend struct detail::future_core_access;
# 137 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
private: future(cudaStream_t s, bool owns_stream) : m_stream(s), m_owns_stream(owns_stream)
# 139 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
{
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
bulk_::detail::throw_on_error(cudaEventCreateWithFlags(&(m_event), create_flags), "cudaEventCreateWithFlags in future ctor");
# 142 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
bulk_::detail::throw_on_error(cudaEventRecord(m_event, m_stream), "cudaEventRecord in future ctor");
# 144 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
}
# 148 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
static const int create_flags = 2;
# 150 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
cudaStream_t m_stream;
# 151 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
cudaEvent_t m_event;
# 152 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
bool m_owns_stream;
# 153 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
};
# 156 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
namespace detail {
# 160 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
struct future_core_access {
# 163 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
static future< void> create(cudaStream_t s, bool owns_stream)
# 164 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
{
# 165 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
return future< void> (s, owns_stream);
# 166 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
}
# 169 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
static cudaEvent_t event(const future< void> &f)
# 170 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
{
# 171 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
return f.m_event;
# 172 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
}
# 173 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
};
# 176 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
}
# 179 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
}
# 180 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/future.hpp"
}}}}
# 21 "/usr/local/cuda/include/thrust/detail/minmax.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/detail/minmax.h"
template< class T, class BinaryPredicate> T
# 27 "/usr/local/cuda/include/thrust/detail/minmax.h"
min(const T &lhs, const T &rhs, BinaryPredicate comp)
# 28 "/usr/local/cuda/include/thrust/detail/minmax.h"
{
# 29 "/usr/local/cuda/include/thrust/detail/minmax.h"
return (comp(rhs, lhs)) ? rhs : lhs;
# 30 "/usr/local/cuda/include/thrust/detail/minmax.h"
}
# 32 "/usr/local/cuda/include/thrust/detail/minmax.h"
template< class T> T
# 34 "/usr/local/cuda/include/thrust/detail/minmax.h"
min(const T &lhs, const T &rhs)
# 35 "/usr/local/cuda/include/thrust/detail/minmax.h"
{
# 36 "/usr/local/cuda/include/thrust/detail/minmax.h"
return (rhs < lhs) ? rhs : lhs;
# 37 "/usr/local/cuda/include/thrust/detail/minmax.h"
}
# 39 "/usr/local/cuda/include/thrust/detail/minmax.h"
template< class T, class BinaryPredicate> T
# 41 "/usr/local/cuda/include/thrust/detail/minmax.h"
max(const T &lhs, const T &rhs, BinaryPredicate comp)
# 42 "/usr/local/cuda/include/thrust/detail/minmax.h"
{
# 43 "/usr/local/cuda/include/thrust/detail/minmax.h"
return (comp(lhs, rhs)) ? rhs : lhs;
# 44 "/usr/local/cuda/include/thrust/detail/minmax.h"
}
# 46 "/usr/local/cuda/include/thrust/detail/minmax.h"
template< class T> T
# 48 "/usr/local/cuda/include/thrust/detail/minmax.h"
max(const T &lhs, const T &rhs)
# 49 "/usr/local/cuda/include/thrust/detail/minmax.h"
{
# 50 "/usr/local/cuda/include/thrust/detail/minmax.h"
return (lhs < rhs) ? rhs : lhs;
# 51 "/usr/local/cuda/include/thrust/detail/minmax.h"
}
# 54 "/usr/local/cuda/include/thrust/detail/minmax.h"
}
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
namespace bulk_ {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
struct device_properties_t {
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
int major;
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
int maxGridSize[3];
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
int maxThreadsPerBlock;
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
int maxThreadsPerMultiProcessor;
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
int minor;
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
int multiProcessorCount;
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
int regsPerBlock;
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
size_t sharedMemPerBlock;
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
int warpSize;
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
};
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
struct function_attributes_t {
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
size_t constSizeBytes;
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
size_t localSizeBytes;
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
int maxThreadsPerBlock;
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
int numRegs;
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
int ptxVersion;
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
size_t sharedSizeBytes;
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
};
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
inline std::size_t block_size_with_maximum_potential_occupancy(const function_attributes_t & attributes, const device_properties_t & properties);
# 89 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
template< class UnaryFunction> inline std::size_t block_size_with_maximum_potential_occupancy(const function_attributes_t & attributes, const device_properties_t & properties, UnaryFunction block_size_to_dynamic_smem_size);
# 104 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
inline size_t proportional_smem_allocation(const device_properties_t & properties, const function_attributes_t & attributes, size_t blocks_per_processor);
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
template< class UnaryFunction> inline size_t max_blocksize_subject_to_smem_usage(const device_properties_t & properties, const function_attributes_t & attributes, UnaryFunction blocksize_to_dynamic_smem_usage);
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
namespace cuda_launch_config_detail {
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
using std::size_t;
# 122 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
namespace util {
# 126 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
template< class T> inline T
# 128 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
min_(const T &lhs, const T &rhs)
# 129 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 130 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
return (rhs < lhs) ? rhs : lhs;
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 134 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
template< class T>
# 135 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
struct zero_function {
# 138 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
T operator()(T)
# 139 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 140 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
return 0;
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 142 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
};
# 146 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
template< class L, class R> inline L
# 147 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
divide_ri(const L x, const R y)
# 148 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 149 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
return (x + (y - 1)) / y;
# 150 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 153 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
template< class L, class R> inline L
# 154 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
divide_rz(const L x, const R y)
# 155 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 156 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
return x / y;
# 157 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 160 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
template< class L, class R> inline L
# 161 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
round_i(const L x, const R y) { return y * divide_ri(x, y); }
# 164 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
template< class L, class R> inline L
# 165 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
round_z(const L x, const R y) { return y * divide_rz(x, y); }
# 167 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 173 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
inline std::size_t smem_allocation_unit(const device_properties_t &properties)
# 174 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 175 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
switch (properties.major)
# 176 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 177 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
case 1: return 512;
# 178 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
case 2: return 128;
# 179 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
case 3: return 256;
# 180 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
default: return 256;
# 181 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 182 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 187 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
inline int reg_allocation_unit(const device_properties_t &properties, const std::size_t regsPerThread)
# 188 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 189 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
switch (properties.major)
# 190 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 191 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
case 1: return ((properties.minor) <= 1) ? 256 : 512;
# 192 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
case 2: switch (regsPerThread)
# 193 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 194 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
case 21:
# 195 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
case 22:
# 196 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
case 29:
# 197 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
case 30:
# 198 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
case 37:
# 199 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
case 38:
# 200 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
case 45:
# 201 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
case 46:
# 202 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
return 128;
# 203 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
default:
# 204 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
return 64;
# 205 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 206 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
case 3: return 256;
# 207 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
default: return 256;
# 208 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 209 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 214 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
inline std::size_t warp_allocation_multiple(const device_properties_t &properties)
# 215 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 216 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
return ((properties.major) <= 1) ? 2 : 1;
# 217 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 221 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
inline std::size_t num_sides_per_multiprocessor(const device_properties_t &properties)
# 222 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 223 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
switch (properties.major)
# 224 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 225 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
case 1: return 1;
# 226 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
case 2: return 2;
# 227 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
case 3: return 4;
# 228 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
default: return 4;
# 229 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 230 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 234 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
inline std::size_t max_blocks_per_multiprocessor(const device_properties_t &properties)
# 235 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 236 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
return ((properties.major) <= 2) ? 8 : 16;
# 237 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 241 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
inline std::size_t max_active_blocks_per_multiprocessor(const device_properties_t &properties, const function_attributes_t &
# 242 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
attributes, std::size_t
# 243 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
CTA_SIZE, std::size_t
# 244 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
dynamic_smem_bytes)
# 245 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 252 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
const std::size_t maxThreadsPerSM = properties.maxThreadsPerMultiProcessor;
# 253 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
const std::size_t maxBlocksPerSM = max_blocks_per_multiprocessor(properties);
# 256 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
const std::size_t ctaLimitThreads = (CTA_SIZE <= ((std::size_t)(properties.maxThreadsPerBlock))) ? maxThreadsPerSM / CTA_SIZE : (0);
# 257 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
const std::size_t ctaLimitBlocks = maxBlocksPerSM;
# 262 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
const std::size_t smemAllocationUnit = smem_allocation_unit(properties);
# 263 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
const std::size_t smemBytes = (attributes.sharedSizeBytes) + dynamic_smem_bytes;
# 264 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
const std::size_t smemPerCTA = util::round_i(smemBytes, smemAllocationUnit);
# 267 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
const std::size_t ctaLimitSMem = (smemPerCTA > (0)) ? (properties.sharedMemPerBlock) / smemPerCTA : maxBlocksPerSM;
# 272 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
const int regAllocationUnit = reg_allocation_unit(properties, attributes.numRegs);
# 273 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
const std::size_t warpAllocationMultiple = warp_allocation_multiple(properties);
# 274 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
const std::size_t numWarps = util::round_i(util::divide_ri(CTA_SIZE, properties.warpSize), warpAllocationMultiple);
# 277 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
std::size_t ctaLimitRegs;
# 278 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
if ((properties.major) <= 1)
# 279 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 282 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
const std::size_t regsPerCTA = util::round_i(((attributes.numRegs) * (properties.warpSize)) * numWarps, regAllocationUnit);
# 283 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
ctaLimitRegs = ((regsPerCTA > (0)) ? (properties.regsPerBlock) / regsPerCTA : maxBlocksPerSM);
# 284 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
} else
# 286 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 289 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
const std::size_t regsPerWarp = util::round_i((attributes.numRegs) * (properties.warpSize), regAllocationUnit);
# 290 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
const std::size_t numSides = num_sides_per_multiprocessor(properties);
# 291 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
const std::size_t numRegsPerSide = (properties.regsPerBlock) / numSides;
# 292 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
ctaLimitRegs = ((regsPerWarp > (0)) ? ((numRegsPerSide / regsPerWarp) * numSides) / numWarps : maxBlocksPerSM);
# 293 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 298 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
return util::min_(ctaLimitRegs, util::min_(ctaLimitSMem, util::min_(ctaLimitThreads, ctaLimitBlocks)));
# 299 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 302 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 305 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
template< class UnaryFunction> inline std::size_t
# 307 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
block_size_with_maximum_potential_occupancy(const function_attributes_t &attributes, const device_properties_t &
# 308 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
properties, UnaryFunction
# 309 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
block_size_to_dynamic_smem_size)
# 310 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 311 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
size_t max_occupancy = properties.maxThreadsPerMultiProcessor;
# 312 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
size_t largest_blocksize = cuda_launch_config_detail::util::min_(properties.maxThreadsPerBlock, attributes.maxThreadsPerBlock);
# 313 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
size_t granularity = properties.warpSize;
# 314 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
size_t max_blocksize = (0);
# 315 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
size_t highest_occupancy = (0);
# 317 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
for (size_t blocksize = largest_blocksize; blocksize != (0); blocksize -= granularity)
# 318 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 319 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
size_t occupancy = blocksize * cuda_launch_config_detail::max_active_blocks_per_multiprocessor(properties, attributes, blocksize, block_size_to_dynamic_smem_size(blocksize));
# 321 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
if (occupancy > highest_occupancy)
# 322 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 323 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
max_blocksize = blocksize;
# 324 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
highest_occupancy = occupancy;
# 325 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 328 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
if (highest_occupancy == max_occupancy) {
# 329 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
break; }
# 330 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 332 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
return max_blocksize;
# 333 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 337 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
inline std::size_t block_size_with_maximum_potential_occupancy(const function_attributes_t &attributes, const device_properties_t &
# 338 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
properties)
# 339 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 340 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
return block_size_with_maximum_potential_occupancy(attributes, properties, cuda_launch_config_detail::util::zero_function< unsigned long> ());
# 341 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 345 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
inline size_t proportional_smem_allocation(const device_properties_t &properties, const function_attributes_t &
# 346 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
attributes, size_t
# 347 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
blocks_per_processor)
# 348 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 349 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
size_t smem_per_processor = properties.sharedMemPerBlock;
# 350 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
size_t smem_allocation_unit = cuda_launch_config_detail::smem_allocation_unit(properties);
# 352 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
size_t total_smem_per_block = cuda_launch_config_detail::util::round_z(smem_per_processor / blocks_per_processor, smem_allocation_unit);
# 353 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
size_t static_smem_per_block = attributes.sharedSizeBytes;
# 355 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
return total_smem_per_block - static_smem_per_block;
# 356 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 359 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
template< class UnaryFunction> inline size_t
# 361 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
max_blocksize_subject_to_smem_usage(const device_properties_t &properties, const function_attributes_t &
# 362 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
attributes, UnaryFunction
# 363 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
blocksize_to_dynamic_smem_usage)
# 364 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 365 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
size_t largest_blocksize = (thrust::min)(properties.maxThreadsPerBlock, attributes.maxThreadsPerBlock);
# 366 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
size_t granularity = properties.warpSize;
# 368 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
for (int blocksize = largest_blocksize; blocksize > 0; blocksize -= granularity)
# 369 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 370 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
size_t total_smem_usage = blocksize_to_dynamic_smem_usage(blocksize) + (attributes.sharedSizeBytes);
# 372 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
if (total_smem_usage <= (properties.sharedMemPerBlock))
# 373 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
{
# 374 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
return blocksize;
# 375 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 376 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 378 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
return 0;
# 379 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 382 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 383 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}
# 384 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launch_config.hpp"
}}}}
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.hpp"
namespace bulk_ {
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.hpp"
namespace detail {
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.hpp"
inline int current_device();
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.hpp"
inline device_properties_t device_properties(int device_id);
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.hpp"
inline device_properties_t device_properties();
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.hpp"
template< class KernelFunction> inline function_attributes_t function_attributes(KernelFunction kernel);
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.hpp"
inline size_t compute_capability(const device_properties_t & properties);
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.hpp"
inline size_t compute_capability();
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.hpp"
}
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.hpp"
}
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.hpp"
}}}}
# 22 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
namespace detail {
# 28 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
namespace util {
# 32 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
template< class L, class R> inline L
# 33 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
divide_ri(const L x, const R y)
# 34 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
{
# 35 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
return (x + (y - 1)) / y;
# 36 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
}
# 39 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
template< class L, class R> inline L
# 40 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
divide_rz(const L x, const R y)
# 41 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
{
# 42 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
return x / y;
# 43 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
}
# 46 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
template< class L, class R> inline L
# 47 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
round_i(const L x, const R y) { return y * divide_ri(x, y); }
# 50 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
template< class L, class R> inline L
# 51 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
round_z(const L x, const R y) { return y * divide_rz(x, y); }
# 53 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
}
# 55 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
}
# 57 "/usr/local/cuda/include/thrust/detail/util/blocking.h"
}
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
namespace bulk_ {
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
inline device_properties_t device_properties_uncached(int device_id)
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
{
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
device_properties_t prop = {0, {0, 0, 0}, 0, 0, 0, 0, 0, (0), 0};
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
cudaError_t error = cudaErrorNoDevice;
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
error = cudaDeviceGetAttribute(&(prop.major), cudaDevAttrComputeCapabilityMajor, device_id);
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
error = cudaDeviceGetAttribute(&((prop.maxGridSize)[0]), cudaDevAttrMaxGridDimX, device_id);
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
error = cudaDeviceGetAttribute(&((prop.maxGridSize)[1]), cudaDevAttrMaxGridDimY, device_id);
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
error = cudaDeviceGetAttribute(&((prop.maxGridSize)[2]), cudaDevAttrMaxGridDimZ, device_id);
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
error = cudaDeviceGetAttribute(&(prop.maxThreadsPerBlock), cudaDevAttrMaxThreadsPerBlock, device_id);
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
error = cudaDeviceGetAttribute(&(prop.maxThreadsPerMultiProcessor), cudaDevAttrMaxThreadsPerMultiProcessor, device_id);
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
error = cudaDeviceGetAttribute(&(prop.minor), cudaDevAttrComputeCapabilityMinor, device_id);
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
error = cudaDeviceGetAttribute(&(prop.multiProcessorCount), cudaDevAttrMultiProcessorCount, device_id);
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
error = cudaDeviceGetAttribute(&(prop.regsPerBlock), cudaDevAttrMaxRegistersPerBlock, device_id);
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
int temp;
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
error = cudaDeviceGetAttribute(&temp, cudaDevAttrMaxSharedMemoryPerBlock, device_id);
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
(prop.sharedMemPerBlock) = temp;
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
error = cudaDeviceGetAttribute(&(prop.warpSize), cudaDevAttrWarpSize, device_id);
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
throw_on_error(error, "cudaDeviceGetProperty in get_device_properties");
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
return prop;
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
}
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
inline device_properties_t device_properties_cached(int device_id)
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
{
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
static const int max_num_devices = 16;
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
static bool properties_exist[max_num_devices] = {(0)};
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
static device_properties_t device_properties[max_num_devices] = {};
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
if (device_id >= max_num_devices)
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
{
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
return device_properties_uncached(device_id);
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
}
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
if (!((properties_exist)[device_id]))
# 80 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
{
# 81 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
((device_properties)[device_id]) = device_properties_uncached(device_id);
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
__sync_synchronize();
# 87 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
((properties_exist)[device_id]) = true;
# 88 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
}
# 90 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
return (device_properties)[device_id];
# 91 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
}
# 95 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
inline device_properties_t device_properties(int device_id)
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
{
# 98 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
return device_properties_cached(device_id);
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
}
# 106 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
inline int current_device()
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
{
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
int result = (-1);
# 111 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
bulk_::detail::throw_on_error(cudaGetDevice(&result), "current_device(): after cudaGetDevice");
# 114 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
if (result < 0)
# 115 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
{
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
bulk_::detail::throw_on_error(cudaErrorNoDevice, "current_device(): after cudaGetDevice");
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
}
# 119 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
return result;
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
}
# 124 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
inline device_properties_t device_properties()
# 125 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
{
# 126 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
return device_properties(current_device());
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
}
# 130 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
template< class KernelFunction> inline function_attributes_t
# 132 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
function_attributes(KernelFunction kernel)
# 133 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
{
# 135 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
typedef void (*fun_ptr_type)(void);
# 137 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
fun_ptr_type fun_ptr = reinterpret_cast< fun_ptr_type>(kernel);
# 139 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
cudaFuncAttributes attributes;
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
bulk_::detail::throw_on_error(cudaFuncGetAttributes(&attributes, fun_ptr), "function_attributes(): after cudaFuncGetAttributes");
# 144 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
function_attributes_t result = {attributes.constSizeBytes, attributes.localSizeBytes, attributes.maxThreadsPerBlock, attributes.numRegs, attributes.ptxVersion, attributes.sharedSizeBytes};
# 153 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
return result;
# 157 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
}
# 160 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
inline size_t compute_capability(const device_properties_t &properties)
# 161 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
{
# 162 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
return (10 * (properties.major)) + (properties.minor);
# 163 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
}
# 167 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
inline size_t compute_capability()
# 168 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
{
# 169 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
return compute_capability(device_properties());
# 170 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
}
# 173 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
}
# 174 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
}
# 175 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/runtime_introspection.inl"
}}}}
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
namespace bulk_ {
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
static const int invalid_index = 2147483647;
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< std::size_t grainsize_ = 1UL>
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
class agent {
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
public: typedef int size_type;
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
static const size_type static_grainsize = (grainsize_);
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
agent(size_type i = invalid_index) : m_index(i)
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{ }
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
size_type index() const
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return m_index;
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 82 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
size_type grainsize() const
# 83 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return static_grainsize;
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 88 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
private: const size_type m_index;
# 89 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
};
# 92 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
static const int use_default = 2147483647;
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
static const int dynamic_group_size = 0;
# 97 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
namespace detail {
# 99 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
namespace group_detail {
# 103 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< class ExecutionAgent, std::size_t size_>
# 104 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
class group_base {
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
public: typedef ExecutionAgent agent_type;
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef int size_type;
# 111 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
static const size_type static_size = (size_);
# 114 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
group_base(agent_type exec = agent_type(), size_type i = invalid_index) : this_exec(exec), m_index(i)
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{ }
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
size_type index() const
# 121 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 122 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return m_index;
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 126 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
size_type size() const
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 128 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return static_size;
# 129 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 132 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
size_type global_index() const
# 133 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{int volatile ___ = 1;
# 135 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
::exit(___);}
# 137 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
agent_type this_exec;
# 140 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
private: const size_type m_index;
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
};
# 144 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< class ExecutionAgent>
# 145 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
class group_base< ExecutionAgent, dynamic_group_size> {
# 148 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
public: typedef ExecutionAgent agent_type;
# 150 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef int size_type;
# 153 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
group_base(size_type sz, agent_type exec = agent_type(), size_type i = invalid_index) : this_exec(exec), m_size(sz), m_index(i)
# 157 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{ }
# 160 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
size_type index() const
# 161 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 162 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return m_index;
# 163 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 166 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
size_type size() const
# 167 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 168 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return m_size;
# 169 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 172 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
size_type global_index() const
# 173 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 174 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return (index() * size()) + ((this_exec).index());
# 175 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 177 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
agent_type this_exec;
# 180 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
private: const size_type m_size;
# 181 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
const size_type m_index;
# 182 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
};
# 185 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 186 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 190 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< class ExecutionAgent = agent<> , std::size_t
# 191 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
size_ = 0UL>
# 192 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
class parallel_group : public detail::group_detail::group_base< ExecutionAgent, size_> {
# 199 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef ::thrust::system::cuda::detail::bulk_::detail::group_detail::group_base< ExecutionAgent, size_> super_t;
# 202 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
public: typedef typename ::thrust::system::cuda::detail::bulk_::detail::group_detail::group_base< ExecutionAgent, size_> ::agent_type agent_type;
# 204 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::detail::group_detail::group_base< ExecutionAgent, size_> ::size_type size_type;
# 208 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
parallel_group(agent_type exec = agent_type(), size_type i = invalid_index) : super_t(exec, i)
# 210 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{ }
# 211 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
};
# 214 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< class ExecutionAgent>
# 215 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
class parallel_group< ExecutionAgent, dynamic_group_size> : public detail::group_detail::group_base< ExecutionAgent, 0UL> {
# 222 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef ::thrust::system::cuda::detail::bulk_::detail::group_detail::group_base< ExecutionAgent, 0UL> super_t;
# 225 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
public: typedef typename ::thrust::system::cuda::detail::bulk_::detail::group_detail::group_base< ExecutionAgent, 0UL> ::agent_type agent_type;
# 227 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::detail::group_detail::group_base< ExecutionAgent, 0UL> ::size_type size_type;
# 231 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
parallel_group(size_type size, agent_type exec = agent_type(), size_type i = invalid_index) : super_t(size, exec, i)
# 233 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{ }
# 234 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
};
# 239 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
inline parallel_group<> par(size_t size)
# 240 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 241 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef parallel_group<> ::size_type size_type;
# 242 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return ((parallel_group<> )(static_cast< size_type>(size)));
# 243 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 247 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< class ExecutionAgent> parallel_group< ExecutionAgent>
# 249 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
par(ExecutionAgent exec, size_t size)
# 250 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 251 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef typename parallel_group< ExecutionAgent> ::size_type size_type;
# 252 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return parallel_group< ExecutionAgent> (static_cast< size_type>(size), exec);
# 253 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 256 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< class ExecutionAgent>
# 257 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
class async_launch {
# 261 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
public: async_launch(ExecutionAgent exec, cudaStream_t s, cudaEvent_t be = 0) : stream_valid(true), e(exec), s(s), be(be)
# 263 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{ }
# 266 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
async_launch(ExecutionAgent exec, cudaEvent_t be) : stream_valid(false), e(exec), s((0)), be(be)
# 268 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{ }
# 271 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
ExecutionAgent exec() const
# 272 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 273 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return e;
# 274 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 277 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
cudaStream_t stream() const
# 278 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 279 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return s;
# 280 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 283 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
cudaEvent_t before_event() const
# 284 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 285 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return be;
# 286 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 289 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
bool is_stream_valid() const
# 290 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 291 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return stream_valid;
# 292 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 295 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
private: bool stream_valid;
# 296 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
ExecutionAgent e;
# 297 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
cudaStream_t s;
# 298 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
cudaEvent_t be;
# 299 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
};
# 303 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
inline async_launch< parallel_group<> > par(cudaStream_t s, size_t num_threads)
# 304 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 305 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef parallel_group<> ::size_type size_type;
# 306 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return async_launch< parallel_group<> > (((parallel_group<> )(static_cast< size_type>(num_threads))), s);
# 307 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 310 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< class ExecutionAgent> inline async_launch< parallel_group< ExecutionAgent> >
# 312 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
par(cudaStream_t s, ExecutionAgent exec, size_t num_groups)
# 313 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 314 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return async_launch< parallel_group< ExecutionAgent> > (bulk_::par(exec, num_groups), s);
# 315 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 318 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
inline async_launch< parallel_group<> > par(future< void> &before, size_t num_threads)
# 319 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 320 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
cudaEvent_t before_event = bulk_::detail::future_core_access::event(before);
# 322 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef parallel_group<> ::size_type size_type;
# 323 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return async_launch< parallel_group<> > (((parallel_group<> )(static_cast< size_type>(num_threads))), before_event);
# 324 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 328 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< class ExecutionAgent = agent<> , std::size_t
# 329 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
size_ = 0UL>
# 330 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
class concurrent_group : public parallel_group< ExecutionAgent, size_> {
# 337 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef ::thrust::system::cuda::detail::bulk_::parallel_group< ExecutionAgent, size_> super_t;
# 340 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
public: typedef typename ::thrust::system::cuda::detail::bulk_::parallel_group< ExecutionAgent, size_> ::agent_type agent_type;
# 341 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::parallel_group< ExecutionAgent, size_> ::size_type size_type;
# 345 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
concurrent_group(size_type heap_size = use_default, agent_type
# 346 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
exec = agent_type(), size_type
# 347 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
i = invalid_index) : super_t(exec, i), m_heap_size(heap_size)
# 350 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{ }
# 353 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
void wait() const
# 354 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{int volatile ___ = 1;
# 359 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
::exit(___);}
# 362 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
size_type heap_size() const
# 363 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 364 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return m_heap_size;
# 365 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 369 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
static size_type hardware_concurrency()
# 370 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 372 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return static_cast< size_type>(bulk_::detail::device_properties().multiProcessorCount);
# 376 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 379 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
private: size_type m_heap_size;
# 380 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
};
# 383 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< class ExecutionAgent>
# 384 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
class concurrent_group< ExecutionAgent, dynamic_group_size> : public parallel_group< ExecutionAgent, 0UL> {
# 391 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef ::thrust::system::cuda::detail::bulk_::parallel_group< ExecutionAgent, 0UL> super_t;
# 394 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
public: typedef typename ::thrust::system::cuda::detail::bulk_::parallel_group< ExecutionAgent, 0UL> ::agent_type agent_type;
# 396 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::parallel_group< ExecutionAgent, 0UL> ::size_type size_type;
# 400 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
concurrent_group(size_type size, size_type
# 401 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
heap_size = use_default, agent_type
# 402 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
exec = agent_type(), size_type
# 403 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
i = invalid_index) : super_t(size, exec, i), m_heap_size(heap_size)
# 406 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{ }
# 409 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
void wait()
# 410 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{int volatile ___ = 1;
# 415 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
::exit(___);}
# 418 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
size_type heap_size() const
# 419 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 420 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return m_heap_size;
# 421 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 425 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
static size_type hardware_concurrency()
# 426 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 428 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return static_cast< size_type>(bulk_::detail::device_properties().multiProcessorCount);
# 432 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 435 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
private: size_type m_heap_size;
# 436 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
};
# 441 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
inline concurrent_group<> con(size_t size, size_t heap_size = use_default)
# 442 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 443 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef concurrent_group<> ::size_type size_type;
# 444 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return concurrent_group<> (static_cast< size_type>(size), static_cast< size_type>(heap_size));
# 445 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 449 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< class ExecutionAgent> concurrent_group< ExecutionAgent>
# 451 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
con(ExecutionAgent exec, size_t size, size_t heap_size = use_default)
# 452 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 453 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef typename concurrent_group< ExecutionAgent> ::size_type size_type;
# 454 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return concurrent_group< ExecutionAgent> (static_cast< size_type>(size), static_cast< size_type>(heap_size), exec);
# 455 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 459 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< std::size_t groupsize, std::size_t grainsize> concurrent_group< agent< grainsize> , groupsize>
# 462 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
con(size_t heap_size)
# 463 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 464 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef typename concurrent_group< agent< grainsize> , groupsize> ::size_type size_type;
# 465 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return ((concurrent_group< agent< grainsize> , groupsize> )(static_cast< size_type>(heap_size)));
# 466 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 470 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< std::size_t bound_, class ExecutionAgent>
# 471 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
class bounded : public ExecutionAgent {
# 475 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
public: typedef typename ExecutionAgent::size_type size_type;
# 477 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
static const size_type static_bound = (bound_);
# 480 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
size_type bound() const
# 481 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 482 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return static_bound;
# 483 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 487 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
ExecutionAgent &unbound()
# 488 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 489 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return *this;
# 490 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 494 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
const ExecutionAgent &unbound() const
# 495 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 496 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return *this;
# 497 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 502 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
private: bounded();
# 504 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
bounded(const bounded &);
# 505 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
};
# 508 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< std::size_t bound_, class ExecutionAgent> bounded< bound_, ExecutionAgent> &
# 510 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
bound(ExecutionAgent &exec)
# 511 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 512 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return static_cast< bounded< bound_, ExecutionAgent> &>(exec);
# 513 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 516 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< std::size_t bound_, class ExecutionAgent> const bounded< bound_, ExecutionAgent> &
# 518 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
bound(const ExecutionAgent &exec)
# 519 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 520 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return static_cast< const bounded< bound_, ExecutionAgent> &>(exec);
# 521 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 524 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
namespace detail {
# 528 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< unsigned depth, class ExecutionAgent>
# 529 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
struct agent_at_depth {
# 533 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef typename detail::agent_at_depth< depth - (1), ExecutionAgent> ::type parent_agent_type;
# 535 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef typename detail::agent_at_depth< depth - (1), ExecutionAgent> ::type::agent_type type;
# 536 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
};
# 539 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< class ExecutionAgent>
# 540 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
struct agent_at_depth< 0, ExecutionAgent> {
# 542 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef ExecutionAgent type;
# 543 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
};
# 546 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< class Cursor, class ExecutionGroup>
# 547 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
struct cursor_result {
# 549 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
typedef typename agent_at_depth< Cursor::depth, ExecutionGroup> ::type &type;
# 550 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
};
# 553 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< unsigned d> struct cursor;
# 556 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< unsigned d>
# 557 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
struct cursor {
# 559 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
static const unsigned depth = d;
# 561 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
cursor() { }
# 563 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
detail::cursor< depth + (1)> this_exec;
# 565 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< class ExecutionGroup> static typename cursor_result< cursor, ExecutionGroup> ::type
# 568 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
get(ExecutionGroup &root)
# 569 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 570 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return cursor< depth - (1)> ::get((root.this_exec));
# 571 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 572 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
};
# 575 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template<> struct cursor< 3U> {
# 577 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
static const unsigned depth = (3);
# 579 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
cursor() { }
# 581 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< class ExecutionGroup> static typename cursor_result< detail::cursor< 3U> , ExecutionGroup> ::type
# 584 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
get(ExecutionGroup &root)
# 585 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 586 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return detail::cursor< 2U> ::get((root.this_exec));
# 587 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 588 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
};
# 591 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template<> struct cursor< 0U> {
# 593 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
static const unsigned depth = (0);
# 595 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
cursor() { }
# 597 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
detail::cursor< 1U> this_exec;
# 600 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< class ExecutionAgent> static ExecutionAgent &
# 602 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
get(ExecutionAgent &root)
# 603 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 604 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return root;
# 605 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 606 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
};
# 609 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< class T> struct is_cursor : public thrust::detail::false_type { };
# 612 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< unsigned d>
# 613 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
struct is_cursor< cursor< d> > : public thrust::detail::true_type {
# 615 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
};
# 618 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 624 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
static const detail::cursor< 0U> root;
# 630 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
inline parallel_group< concurrent_group<> > grid(size_t num_groups = use_default, size_t group_size = use_default, size_t heap_size = use_default)
# 631 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 632 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return par(con(group_size, heap_size), num_groups);
# 633 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 642 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
inline async_launch< parallel_group< concurrent_group<> > > grid(size_t num_groups, size_t group_size, size_t heap_size, cudaStream_t stream)
# 643 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 644 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return par(stream, con(group_size, heap_size), num_groups);
# 645 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 648 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< std::size_t groupsize, std::size_t grainsize> parallel_group< concurrent_group< agent< grainsize> , groupsize> >
# 656 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
grid(size_t num_groups, size_t heap_size = use_default)
# 657 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 658 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return par(con< groupsize, grainsize> (heap_size), num_groups);
# 659 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 662 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
template< std::size_t groupsize, std::size_t grainsize> async_launch< parallel_group< concurrent_group< agent< grainsize> , groupsize> > >
# 672 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
grid(size_t num_groups, size_t heap_size, cudaStream_t stream)
# 673 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
{
# 674 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
return par(stream, con< groupsize, grainsize> (heap_size), num_groups);
# 675 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 678 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}
# 679 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/execution_policy.hpp"
}}}}
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/choose_sizes.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/choose_sizes.hpp"
namespace bulk_ {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/choose_sizes.hpp"
template< class Function> pair< int, int> choose_sizes(parallel_group< concurrent_group<> > g, Function f);
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/choose_sizes.hpp"
template< class Function, class Arg1> pair< int, int> choose_sizes(parallel_group< concurrent_group<> > g, Function f, Arg1 arg1);
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/choose_sizes.hpp"
template< class Function, class Arg1, class Arg2> pair< int, int> choose_sizes(parallel_group< concurrent_group<> > g, Function f, Arg1 arg1, Arg2 arg2);
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/choose_sizes.hpp"
template< class Function, class Arg1, class Arg2, class Arg3> pair< int, int> choose_sizes(parallel_group< concurrent_group<> > g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3);
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/choose_sizes.hpp"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4> pair< int, int> choose_sizes(parallel_group< concurrent_group<> > g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4);
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/choose_sizes.hpp"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5> pair< int, int> choose_sizes(parallel_group< concurrent_group<> > g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5);
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/choose_sizes.hpp"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6> pair< int, int> choose_sizes(parallel_group< concurrent_group<> > g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6);
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/choose_sizes.hpp"
}
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/choose_sizes.hpp"
}}}}
# 22 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 23 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
namespace bulk_ {
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
template< class Function> void
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
apply_from_tuple(Function f, const tuple< null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> &)
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
{
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
f();
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
}
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
template< class Function, class Arg1> void
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
apply_from_tuple(Function f, const tuple< Arg1, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> &args)
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
{
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
f(thrust::get< 0> (args));
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
}
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
template< class Function, class Arg1, class Arg2> void
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
apply_from_tuple(Function f, const tuple< Arg1, Arg2, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> &args)
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
{
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
f(thrust::get< 0> (args), thrust::get< 1> (args));
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
}
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
template< class Function, class Arg1, class Arg2, class Arg3> void
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
apply_from_tuple(Function f, const tuple< Arg1, Arg2, Arg3, null_type, null_type, null_type, null_type, null_type, null_type, null_type> &args)
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
{
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
f(thrust::get< 0> (args), thrust::get< 1> (args), thrust::get< 2> (args));
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
}
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4> void
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
apply_from_tuple(Function f, const tuple< Arg1, Arg2, Arg3, Arg4, null_type, null_type, null_type, null_type, null_type, null_type> &args)
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
{
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
f(thrust::get< 0> (args), thrust::get< 1> (args), thrust::get< 2> (args), thrust::get< 3> (args));
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
}
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5> void
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
apply_from_tuple(Function f, const tuple< Arg1, Arg2, Arg3, Arg4, Arg5, null_type, null_type, null_type, null_type, null_type> &args)
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
{
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
f(thrust::get< 0> (args), thrust::get< 1> (args), thrust::get< 2> (args), thrust::get< 3> (args), thrust::get< 4> (args));
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
}
# 87 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6> void
# 89 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
apply_from_tuple(Function f, const tuple< Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, null_type, null_type, null_type, null_type> &args)
# 90 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
{
# 91 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
f(thrust::get< 0> (args), thrust::get< 1> (args), thrust::get< 2> (args), thrust::get< 3> (args), thrust::get< 4> (args), thrust::get< 5> (args));
# 97 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
}
# 100 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7> void
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
apply_from_tuple(Function f, const tuple< Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, null_type, null_type, null_type> &args)
# 103 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
{
# 104 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
f(thrust::get< 0> (args), thrust::get< 1> (args), thrust::get< 2> (args), thrust::get< 3> (args), thrust::get< 4> (args), thrust::get< 5> (args), thrust::get< 6> (args));
# 111 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
}
# 114 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7, class Arg8> void
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
apply_from_tuple(Function f, const tuple< Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, null_type, null_type> &args)
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
{
# 118 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
f(thrust::get< 0> (args), thrust::get< 1> (args), thrust::get< 2> (args), thrust::get< 3> (args), thrust::get< 4> (args), thrust::get< 5> (args), thrust::get< 6> (args), thrust::get< 7> (args));
# 126 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
}
# 129 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7, class Arg8, class Arg9> void
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
apply_from_tuple(Function f, const tuple< Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, null_type> &args)
# 132 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
{
# 133 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
f(thrust::get< 0> (args), thrust::get< 1> (args), thrust::get< 2> (args), thrust::get< 3> (args), thrust::get< 4> (args), thrust::get< 5> (args), thrust::get< 6> (args), thrust::get< 7> (args), thrust::get< 8> (args));
# 142 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
}
# 145 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7, class Arg8, class Arg9, class Arg10> void
# 147 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
apply_from_tuple(Function f, const tuple< Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10> &args)
# 148 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
{
# 149 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
f(thrust::get< 0> (args), thrust::get< 1> (args), thrust::get< 2> (args), thrust::get< 3> (args), thrust::get< 4> (args), thrust::get< 5> (args), thrust::get< 6> (args), thrust::get< 7> (args), thrust::get< 8> (args), thrust::get< 9> (args));
# 159 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
}
# 162 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
}
# 163 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
}
# 164 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/apply_from_tuple.hpp"
}}}}
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
namespace bulk_ {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
namespace detail {
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
template< class Function, class Tuple>
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
class closure {
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
public: typedef Function function_type;
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
typedef Tuple arguments_type;
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
closure(function_type f, const arguments_type &args) : f(f), args(args)
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
{ }
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
void operator()()
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
{
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
apply_from_tuple(f, args);
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
}
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
function_type function() const
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
{
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
return f;
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
}
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
arguments_type arguments() const
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
{
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
return args;
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
}
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
private: function_type f;
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
arguments_type args;
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
};
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
template< class Function, class Arguments> const closure< Function, Arguments> &
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
make_closure(const closure< Function, Arguments> &c)
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
{
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
return c;
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
}
# 82 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
template< class Function> closure< Function, tuple< null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> >
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
make_closure(Function f)
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
{
# 86 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
return closure< Function, tuple< null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > (f, tuple< null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> ());
# 87 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
}
# 90 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
template< class Function, class Arg1> closure< Function, tuple< Arg1, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> >
# 92 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
make_closure(Function f, const Arg1 &a1)
# 93 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
{
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
return closure< Function, tuple< Arg1, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > (f, thrust::make_tuple(a1));
# 95 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
}
# 98 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
template< class Function, class Arg1, class Arg2> closure< Function, tuple< Arg1, Arg2, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> >
# 104 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
make_closure(Function f, const Arg1 &a1, const Arg2 &a2)
# 105 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
{
# 106 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
return closure< Function, tuple< Arg1, Arg2, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > (f, thrust::make_tuple(a1, a2));
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
}
# 110 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
template< class Function, class Arg1, class Arg2, class Arg3> closure< Function, tuple< Arg1, Arg2, Arg3, null_type, null_type, null_type, null_type, null_type, null_type, null_type> >
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
make_closure(Function f, const Arg1 &a1, const Arg2 &a2, const Arg3 &a3)
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
{
# 118 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
return closure< Function, tuple< Arg1, Arg2, Arg3, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > (f, thrust::make_tuple(a1, a2, a3));
# 119 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
}
# 122 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4> closure< Function, tuple< Arg1, Arg2, Arg3, Arg4, null_type, null_type, null_type, null_type, null_type, null_type> >
# 128 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
make_closure(Function f, const Arg1 &a1, const Arg2 &a2, const Arg3 &a3, const Arg4 &a4)
# 129 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
{
# 130 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
return closure< Function, tuple< Arg1, Arg2, Arg3, Arg4, null_type, null_type, null_type, null_type, null_type, null_type> > (f, thrust::make_tuple(a1, a2, a3, a4));
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
}
# 134 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5> closure< Function, tuple< Arg1, Arg2, Arg3, Arg4, Arg5, null_type, null_type, null_type, null_type, null_type> >
# 140 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
make_closure(Function f, const Arg1 &a1, const Arg2 &a2, const Arg3 &a3, const Arg4 &a4, const Arg5 &a5)
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
{
# 142 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
return closure< Function, tuple< Arg1, Arg2, Arg3, Arg4, Arg5, null_type, null_type, null_type, null_type, null_type> > (f, thrust::make_tuple(a1, a2, a3, a4, a5));
# 143 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
}
# 146 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6> closure< Function, tuple< Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, null_type, null_type, null_type, null_type> >
# 152 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
make_closure(Function f, const Arg1 &a1, const Arg2 &a2, const Arg3 &a3, const Arg4 &a4, const Arg5 &a5, const Arg6 &a6)
# 153 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
{
# 154 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
return closure< Function, tuple< Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, null_type, null_type, null_type, null_type> > (f, thrust::make_tuple(a1, a2, a3, a4, a5, a6));
# 155 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
}
# 158 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7> closure< Function, tuple< Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, null_type, null_type, null_type> >
# 164 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
make_closure(Function f, const Arg1 &a1, const Arg2 &a2, const Arg3 &a3, const Arg4 &a4, const Arg5 &a5, const Arg6 &a6, const Arg7 &a7)
# 165 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
{
# 166 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
return closure< Function, tuple< Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, null_type, null_type, null_type> > (f, thrust::make_tuple(a1, a2, a3, a4, a5, a6, a7));
# 167 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
}
# 170 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7, class Arg8> closure< Function, tuple< Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, null_type, null_type> >
# 176 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
make_closure(Function f, const Arg1 &a1, const Arg2 &a2, const Arg3 &a3, const Arg4 &a4, const Arg5 &a5, const Arg6 &a6, const Arg7 &a7, const Arg8 &a8)
# 177 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
{
# 178 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
return closure< Function, tuple< Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, null_type, null_type> > (f, thrust::make_tuple(a1, a2, a3, a4, a5, a6, a7, a8));
# 179 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
}
# 182 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7, class Arg8, class Arg9> closure< Function, tuple< Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, null_type> >
# 188 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
make_closure(Function f, const Arg1 &a1, const Arg2 &a2, const Arg3 &a3, const Arg4 &a4, const Arg5 &a5, const Arg6 &a6, const Arg7 &a7, const Arg8 &a8, const Arg9 &a9)
# 189 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
{
# 190 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
return closure< Function, tuple< Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, null_type> > (f, thrust::make_tuple(a1, a2, a3, a4, a5, a6, a7, a8, a9));
# 191 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
}
# 194 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7, class Arg8, class Arg9, class Arg10> closure< Function, tuple< Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10> >
# 200 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
make_closure(Function f, const Arg1 &a1, const Arg2 &a2, const Arg3 &a3, const Arg4 &a4, const Arg5 &a5, const Arg6 &a6, const Arg7 &a7, const Arg8 &a8, const Arg9 &a9, const Arg10 &a10)
# 201 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
{
# 202 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
return closure< Function, tuple< Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10> > (f, thrust::make_tuple(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10));
# 203 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
}
# 206 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
}
# 207 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
}
# 208 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/closure.hpp"
}}}}
# 21 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 22 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
namespace bulk_ {
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
namespace detail {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
namespace alignment_of_detail {
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
template< class T> class alignment_of_impl;
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
template< class T, std::size_t size_diff>
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
struct helper {
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
static const std::size_t value = size_diff;
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
};
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
template< class T>
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
class helper< T, 0> {
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
public: static const std::size_t value = (alignment_of_impl< T> ::value);
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
};
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
template< class T>
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
class alignment_of_impl {
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
struct big { T x; char c; };
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
public: static const std::size_t value = (helper< big, sizeof(big) - sizeof(T)> ::value);
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
};
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
}
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
template< class T>
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
struct alignment_of : public alignment_of_detail::alignment_of_impl< T> {
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
};
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
template< std::size_t Align> struct aligned_type;
# 190 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
template< std::size_t Align> struct aligned_type {
# 192 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
struct __attribute((aligned(Align))) type { };
# 193 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
};
# 203 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
template< std::size_t Len, std::size_t Align>
# 204 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
struct aligned_storage {
# 206 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
union type {
# 208 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
unsigned char data[Len];
# 210 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
typename aligned_type< Align> ::type align;
# 211 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
};
# 212 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
};
# 215 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
}
# 216 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
}
# 217 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/alignment.hpp"
}}}}
# 21 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/pointer_traits.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 22 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/pointer_traits.hpp"
namespace bulk_ {
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/pointer_traits.hpp"
namespace detail {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/pointer_traits.hpp"
__attribute__((unused)) inline unsigned __isShared(const void *ptr)
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/pointer_traits.hpp"
{int volatile ___ = 1;(void)ptr;
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/pointer_traits.hpp"
::exit(___);}
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/pointer_traits.hpp"
__attribute__((unused)) inline bool is_shared(const void *ptr)
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/pointer_traits.hpp"
{int volatile ___ = 1;(void)ptr;
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/pointer_traits.hpp"
::exit(___);}
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/pointer_traits.hpp"
__attribute__((unused)) inline bool is_global(const void *ptr)
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/pointer_traits.hpp"
{int volatile ___ = 1;(void)ptr;
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/pointer_traits.hpp"
::exit(___);}
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/pointer_traits.hpp"
}
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/pointer_traits.hpp"
}
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/pointer_traits.hpp"
}}}}
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
namespace bulk_ {
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
template< class T>
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
class uninitialized {
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
typename detail::aligned_storage< sizeof(T), detail::alignment_of< T> ::value> ::type storage;
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) const T *
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
ptr() const
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
const void *result = (((storage).data));
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return reinterpret_cast< const T *>(result);
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) T *
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
ptr()
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
void *result = (((storage).data));
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return reinterpret_cast< T *>(result);
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
public:
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) uninitialized &
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
operator=(const T &other)
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
T &self = *this;
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
self = other;
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return *this;
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) T &
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
get()
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return *this->ptr();
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) const T &
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
get() const
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return *this->ptr();
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline))
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
operator T &()
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return this->get();
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 81 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline))
# 82 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
operator const T &() const
# 83 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return this->get();
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 88 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) void
# 89 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
construct()
# 90 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 91 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
::new (this->ptr()) (T)();
# 92 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 95 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
template< class Arg>
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) void
# 97 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
construct(const Arg &a)
# 98 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 99 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
::new (this->ptr()) (T)(a);
# 100 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 103 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
template< class Arg1, class Arg2>
# 104 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) void
# 105 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
construct(const Arg1 &a1, const Arg2 &a2)
# 106 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
::new (this->ptr()) (T)(a1, a2);
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 111 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
template< class Arg1, class Arg2, class Arg3>
# 112 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) void
# 113 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
construct(const Arg1 &a1, const Arg2 &a2, const Arg3 &a3)
# 114 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 115 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
::new (this->ptr()) (T)(a1, a2, a3);
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 119 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
template< class Arg1, class Arg2, class Arg3, class Arg4>
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) void
# 121 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
construct(const Arg1 &a1, const Arg2 &a2, const Arg3 &a3, const Arg4 &a4)
# 122 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
::new (this->ptr()) (T)(a1, a2, a3, a4);
# 124 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
template< class Arg1, class Arg2, class Arg3, class Arg4, class Arg5>
# 128 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) void
# 129 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
construct(const Arg1 &a1, const Arg2 &a2, const Arg3 &a3, const Arg4 &a4, const Arg5 &a5)
# 130 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
::new (this->ptr()) (T)(a1, a2, a3, a4, a5);
# 132 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 135 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
template< class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6>
# 136 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) void
# 137 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
construct(const Arg1 &a1, const Arg2 &a2, const Arg3 &a3, const Arg4 &a4, const Arg5 &a5, const Arg6 &a6)
# 138 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 139 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
::new (this->ptr()) (T)(a1, a2, a3, a4, a5, a6);
# 140 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 143 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
template< class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7>
# 144 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) void
# 145 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
construct(const Arg1 &a1, const Arg2 &a2, const Arg3 &a3, const Arg4 &a4, const Arg5 &a5, const Arg6 &a6, const Arg7 &a7)
# 146 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 147 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
::new (this->ptr()) (T)(a1, a2, a3, a4, a5, a6, a7);
# 148 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 151 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
template< class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7, class Arg8>
# 152 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) void
# 153 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
construct(const Arg1 &a1, const Arg2 &a2, const Arg3 &a3, const Arg4 &a4, const Arg5 &a5, const Arg6 &a6, const Arg7 &a7, const Arg8 &a8)
# 154 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 155 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
::new (this->ptr()) (T)(a1, a2, a3, a4, a5, a6, a7, a8);
# 156 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 159 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
template< class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7, class Arg8, class Arg9>
# 160 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) void
# 161 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
construct(const Arg1 &a1, const Arg2 &a2, const Arg3 &a3, const Arg4 &a4, const Arg5 &a5, const Arg6 &a6, const Arg7 &a7, const Arg8 &a8, const Arg9 &a9)
# 162 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 163 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
::new (this->ptr()) (T)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
# 164 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 167 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
template< class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7, class Arg8, class Arg9, class Arg10>
# 168 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) void
# 169 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
construct(const Arg1 &a1, const Arg2 &a2, const Arg3 &a3, const Arg4 &a4, const Arg5 &a5, const Arg6 &a6, const Arg7 &a7, const Arg8 &a8, const Arg9 &a9, const Arg10 &a10)
# 170 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 171 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
::new (this->ptr()) (T)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
# 172 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 175 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) void
# 176 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
destroy()
# 177 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 178 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
T &self = *this;
# 179 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
(self.~T());
# 180 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 181 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
};
# 184 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
template< class T, std::size_t N>
# 185 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
class uninitialized_array {
# 188 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
public: typedef T value_type;
# 189 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
typedef T &reference;
# 190 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
typedef const T &const_reference;
# 191 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
typedef T *pointer;
# 192 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
typedef const T *const_pointer;
# 193 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
typedef pointer iterator;
# 194 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
typedef const_pointer const_iterator;
# 195 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
typedef std::size_t size_type;
# 197 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) iterator
# 198 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
begin()
# 199 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 200 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return this->data();
# 201 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 203 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) const_iterator
# 204 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
begin() const
# 205 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 206 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return this->data();
# 207 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 209 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) iterator
# 210 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
end()
# 211 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 212 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return this->begin() + size();
# 213 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 215 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) const_iterator
# 216 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
end() const
# 217 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 218 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return this->begin() + size();
# 219 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 221 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) const_iterator
# 222 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
cbegin() const
# 223 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 224 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return this->begin();
# 225 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 227 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) const_iterator
# 228 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
cend() const
# 229 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 230 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return this->end();
# 231 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 233 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) size_type
# 234 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
size() const
# 235 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 236 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return N;
# 237 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 239 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) bool
# 240 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
empty() const
# 241 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 242 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return false;
# 243 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 245 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) T *
# 246 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
data()
# 247 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 248 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return ((impl).get());
# 249 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 251 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) const T *
# 252 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
data() const
# 253 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 254 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return ((impl).get());
# 255 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 258 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) reference
# 259 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
operator[](size_type n)
# 260 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 261 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return this->data()[n];
# 262 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 264 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) const_reference
# 265 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
operator[](size_type n) const
# 266 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 267 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return this->data()[n];
# 268 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 270 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) reference
# 271 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
front()
# 272 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 273 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return *this->data();
# 274 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 276 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) const_reference
# 277 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
front() const
# 278 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 279 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return *this->data();
# 280 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 282 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) reference
# 283 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
back()
# 284 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 285 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return this->data()[size() - ((size_type)1)];
# 286 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 288 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
__attribute((always_inline)) const_reference
# 289 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
back() const
# 290 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
{
# 291 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
return this->data()[size() - ((size_type)1)];
# 292 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 295 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
private: uninitialized< T [N]> impl;
# 296 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
};
# 299 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}
# 300 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/uninitialized.hpp"
}}}}
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
namespace bulk_ {
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
__attribute__((unused)) inline bool is_on_chip(void *ptr)
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)ptr;
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
template< class T> __attribute__((unused)) inline T *
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
on_chip_cast(T *ptr)
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)ptr;
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
namespace detail {
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
__attribute__((unused)) extern int s_data_segment_begin[];
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
class os {
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
public: os(size_t max_data_segment_size) : m_program_break(s_data_segment_begin), m_max_data_segment_size(max_data_segment_size)
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int *volatile ___ = 0;(void)max_data_segment_size;
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::free(___);}
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
int brk(void *end_data_segment)
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)end_data_segment;
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
void *sbrk(size_t increment)
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)increment;
# 88 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 91 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
void *program_break() const
# 92 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 97 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
void *data_segment_begin() const
# 98 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;
# 100 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 104 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
private: size_t data_segment_size()
# 105 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 110 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
void *m_program_break;
# 113 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
size_t m_max_data_segment_size;
# 114 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
};
# 118 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
class singleton_unsafe_on_chip_allocator {
# 121 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
public: singleton_unsafe_on_chip_allocator(size_t max_data_segment_size) : m_os(max_data_segment_size)
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int *volatile ___ = 0;(void)max_data_segment_size;::free(___);}
# 125 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
void *allocate(size_t size)
# 126 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)size;
# 154 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 157 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
void deallocate(void *ptr)
# 158 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)ptr;
# 184 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 189 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
private: class block : public aligned_type< 16UL> ::type {
# 192 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
public: size_t size() const
# 193 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;
# 195 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 197 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
void set_size(size_t sz)
# 198 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)sz;
# 200 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 202 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
block *prev() const
# 203 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;
# 205 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 207 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
void set_prev(block *p)
# 208 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)p;
# 210 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 213 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
void *byte_at(size_t index) const
# 214 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)index;
# 216 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 218 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
block *next() const
# 219 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;
# 221 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 223 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
bool is_free() const
# 224 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;
# 226 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 228 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
void set_is_free(bool f)
# 229 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)f;
# 231 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 233 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
void *data() const
# 234 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;
# 236 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 242 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
private: bool m_is_free:1;
# 243 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
size_t m_size:((8) * sizeof(size_t)) - (1);
# 244 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
block *m_prev;
# 245 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
};
# 248 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
os m_os;
# 250 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
block *heap_begin() const
# 251 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;
# 253 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 256 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
block *heap_end() const
# 257 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;
# 259 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 262 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
void split_block(block *b, size_t size)
# 263 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)b;(void)size;
# 283 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 286 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
bool fuse_block(block *b)
# 287 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)b;
# 302 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 305 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
static block *get_block(void *data)
# 306 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)data;
# 310 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 313 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
static block *find_first_free_insertion_point(block *first, block *last, size_t size)
# 314 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)first;(void)last;(void)size;
# 324 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 327 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
block *extend_heap(block *prev, size_t size)
# 328 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)prev;(void)size;
# 344 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 347 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
static size_t align8(size_t size)
# 348 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)size;
# 350 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 351 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
};
# 354 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
class singleton_on_chip_allocator {
# 359 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
public: singleton_on_chip_allocator(size_t max_data_segment_size) : m_mutex(), m_alloc(max_data_segment_size)
# 362 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{ }
# 366 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
void *unsafe_allocate(size_t size)
# 367 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)size;
# 369 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 373 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
void *allocate(size_t size)
# 374 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)size;
# 384 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 388 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
void unsafe_deallocate(void *ptr)
# 389 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)ptr;
# 391 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 395 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
void deallocate(void *ptr)
# 396 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)ptr;
# 402 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 406 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
private: class mutex {
# 410 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
public: mutex() : m_in_use((0))
# 412 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int *volatile ___ = 0;::free(___);}
# 416 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
bool try_lock()
# 417 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;
# 423 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 427 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
void lock()
# 428 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;
# 434 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 438 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
void unlock()
# 439 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;
# 441 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 445 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
private: unsigned m_in_use;
# 446 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
};
# 449 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
mutex m_mutex;
# 450 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
singleton_unsafe_on_chip_allocator m_alloc;
# 451 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
};
# 456 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
namespace _GLOBAL__N__17_test_norm_cpp1_ii_d366c12b { }; using namespace ::thrust::system::cuda::detail::bulk_::detail::_GLOBAL__N__17_test_norm_cpp1_ii_d366c12b; namespace _GLOBAL__N__17_test_norm_cpp1_ii_d366c12b {
# 458 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
__attribute__((unused)) static uninitialized< singleton_on_chip_allocator> s_on_chip_allocator;
# 460 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
}
# 463 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
__attribute__((unused)) inline void init_on_chip_malloc(size_t max_data_segment_size)
# 464 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)max_data_segment_size;
# 466 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 469 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
__attribute__((unused)) inline void *on_chip_malloc(size_t size)
# 470 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)size;
# 473 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 476 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
__attribute__((unused)) inline void on_chip_free(void *ptr)
# 477 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)ptr;
# 479 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 482 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
__attribute__((unused)) inline void *unsafe_on_chip_malloc(size_t size)
# 483 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)size;
# 486 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 489 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
__attribute__((unused)) inline void unsafe_on_chip_free(void *ptr)
# 490 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)ptr;
# 492 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 495 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
}
# 498 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
__attribute__((unused)) inline void *shmalloc(size_t num_bytes)
# 499 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)num_bytes;
# 511 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 514 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
__attribute__((unused)) inline void *unsafe_shmalloc(size_t num_bytes)
# 515 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)num_bytes;
# 527 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 530 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
__attribute__((unused)) inline void shfree(void *ptr)
# 531 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)ptr;
# 544 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 547 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
__attribute__((unused)) inline void unsafe_shfree(void *ptr)
# 548 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)ptr;
# 561 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 564 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
template< class ConcurrentGroup> __attribute__((unused)) inline void *
# 566 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
malloc(ConcurrentGroup &g, size_t num_bytes)
# 567 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)g;(void)num_bytes;
# 582 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 585 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
template< class ConcurrentGroup> __attribute__((unused)) inline void
# 587 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
free(ConcurrentGroup &g, void *ptr)
# 588 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
{int volatile ___ = 1;(void)g;(void)ptr;
# 595 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
::exit(___);}
# 598 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
}
# 599 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/malloc.hpp"
}}}}
# 22 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 23 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
namespace bulk_ {
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class Tuple,
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class > class UnaryMetaFunction, unsigned
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
sz = tuple_size< Tuple> ::value> struct tuple_meta_transform;
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class Tuple,
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class > class UnaryMetaFunction>
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 0> {
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
typedef tuple< null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> type;
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
};
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class Tuple,
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class > class UnaryMetaFunction>
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 1> {
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> type;
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
};
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class Tuple,
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class > class UnaryMetaFunction>
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 2> {
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 1, Tuple> ::type> ::type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> type;
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
};
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class Tuple,
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class > class UnaryMetaFunction>
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 3> {
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 1, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 2, Tuple> ::type> ::type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> type;
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
};
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class Tuple,
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class > class UnaryMetaFunction>
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 4> {
# 80 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 1, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 2, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 3, Tuple> ::type> ::type, null_type, null_type, null_type, null_type, null_type, null_type> type;
# 81 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
};
# 83 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class Tuple,
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class > class UnaryMetaFunction>
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 5> {
# 93 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 1, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 2, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 3, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 4, Tuple> ::type> ::type, null_type, null_type, null_type, null_type, null_type> type;
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
};
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class Tuple,
# 97 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class > class UnaryMetaFunction>
# 98 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 6> {
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 1, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 2, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 3, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 4, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 5, Tuple> ::type> ::type, null_type, null_type, null_type, null_type> type;
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
};
# 110 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class Tuple,
# 111 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class > class UnaryMetaFunction>
# 112 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 7> {
# 122 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 1, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 2, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 3, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 4, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 5, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 6, Tuple> ::type> ::type, null_type, null_type, null_type> type;
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
};
# 125 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class Tuple,
# 126 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class > class UnaryMetaFunction>
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 8> {
# 138 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 1, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 2, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 3, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 4, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 5, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 6, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 7, Tuple> ::type> ::type, null_type, null_type> type;
# 139 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
};
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class Tuple,
# 142 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class > class UnaryMetaFunction>
# 143 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 9> {
# 155 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 1, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 2, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 3, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 4, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 5, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 6, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 7, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 8, Tuple> ::type> ::type, null_type> type;
# 156 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
};
# 158 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class Tuple,
# 159 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
template< class > class UnaryMetaFunction>
# 160 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 10> {
# 173 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 1, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 2, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 3, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 4, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 5, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 6, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 7, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 8, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 9, Tuple> ::type> ::type> type;
# 174 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
};
# 177 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
}
# 178 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
}
# 179 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_meta_transform.hpp"
}}}}
# 23 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
namespace bulk_ {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class Tuple,
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class > class UnaryMetaFunction, class
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
UnaryFunction, unsigned
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
sz = tuple_size< Tuple> ::value> struct tuple_transform_functor;
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class Tuple,
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class > class UnaryMetaFunction, class
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
UnaryFunction>
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 0> {
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return tuple< null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> ();
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return tuple< null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> ();
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
};
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class Tuple,
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class > class UnaryMetaFunction, class
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
UnaryFunction>
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 1> {
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return (XfrmTuple)f(thrust::get< 0> (t));
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return (XfrmTuple)f(thrust::get< 0> (t));
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
};
# 82 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class Tuple,
# 83 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class > class UnaryMetaFunction, class
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
UnaryFunction>
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 2> {
# 89 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 90 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 91 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 93 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)));
# 95 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 99 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 100 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 101 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 103 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)));
# 105 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 106 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
};
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class Tuple,
# 110 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class > class UnaryMetaFunction, class
# 111 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
UnaryFunction>
# 112 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 3> {
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 118 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)));
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 128 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 129 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)));
# 134 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 135 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
};
# 138 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class Tuple,
# 139 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class > class UnaryMetaFunction, class
# 140 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
UnaryFunction>
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 4> {
# 145 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 146 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 147 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 149 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)));
# 153 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 157 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 158 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 159 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 161 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)));
# 165 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 166 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
};
# 169 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class Tuple,
# 170 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class > class UnaryMetaFunction, class
# 171 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
UnaryFunction>
# 172 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 5> {
# 176 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 177 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 178 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 180 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)));
# 185 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 189 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 190 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 191 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 193 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)));
# 198 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 199 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
};
# 202 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class Tuple,
# 203 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class > class UnaryMetaFunction, class
# 204 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
UnaryFunction>
# 205 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 6> {
# 209 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 210 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 211 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 213 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)));
# 219 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 223 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 224 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 225 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 227 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)));
# 233 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 234 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
};
# 237 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class Tuple,
# 238 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class > class UnaryMetaFunction, class
# 239 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
UnaryFunction>
# 240 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 7> {
# 244 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 245 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 246 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 248 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)), f(thrust::get< 6> (t)));
# 255 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 259 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 260 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 261 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 263 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)), f(thrust::get< 6> (t)));
# 270 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 271 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
};
# 274 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class Tuple,
# 275 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class > class UnaryMetaFunction, class
# 276 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
UnaryFunction>
# 277 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 8> {
# 281 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 282 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 283 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 285 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)), f(thrust::get< 6> (t)), f(thrust::get< 7> (t)));
# 293 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 297 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 298 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 299 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 301 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)), f(thrust::get< 6> (t)), f(thrust::get< 7> (t)));
# 309 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 310 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
};
# 313 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class Tuple,
# 314 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class > class UnaryMetaFunction, class
# 315 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
UnaryFunction>
# 316 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 9> {
# 320 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 321 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 322 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 324 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)), f(thrust::get< 6> (t)), f(thrust::get< 7> (t)), f(thrust::get< 8> (t)));
# 333 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 337 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 338 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 339 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 341 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)), f(thrust::get< 6> (t)), f(thrust::get< 7> (t)), f(thrust::get< 8> (t)));
# 350 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 351 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
};
# 354 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class Tuple,
# 355 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< class > class UnaryMetaFunction, class
# 356 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
UnaryFunction>
# 357 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 10> {
# 361 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 362 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 363 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 365 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)), f(thrust::get< 6> (t)), f(thrust::get< 7> (t)), f(thrust::get< 8> (t)), f(thrust::get< 9> (t)));
# 375 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 379 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 380 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 381 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 383 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)), f(thrust::get< 6> (t)), f(thrust::get< 7> (t)), f(thrust::get< 8> (t)), f(thrust::get< 9> (t)));
# 393 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 394 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
};
# 397 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< template< class > class UnaryMetaFunction, class
# 398 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
Tuple, class
# 399 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
UnaryFunction> typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type
# 401 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
tuple_host_transform(const Tuple &t, UnaryFunction f)
# 402 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 403 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction> ::do_it_on_the_host(t, f);
# 404 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 406 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
template< template< class > class UnaryMetaFunction, class
# 407 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
Tuple, class
# 408 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
UnaryFunction> typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type
# 411 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
tuple_host_device_transform(const Tuple &t, UnaryFunction f)
# 412 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
{
# 413 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
return tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction> ::do_it_on_the_host_or_device(t, f);
# 414 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 416 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 417 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}
# 418 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tuple_transform.hpp"
}}}}
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
namespace bulk_ {
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
template< class ExecutionGroup, class Closure>
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
class task_base {
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
public: typedef ExecutionGroup group_type;
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
typedef Closure closure_type;
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
task_base(group_type g, closure_type c) : c(c), g(g)
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
{ }
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
protected: static void substitute_placeholders_and_execute(group_type &g, closure_type &c)
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
{
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
substituted_arguments_type new_args = (substitute_placeholders)(g, (c.arguments()));
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
closure< typename Closure::function_type, typename tuple_meta_transform< typename Closure::arguments_type, substitutor_result> ::type> new_c((c.function()), new_args);
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
new_c();
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
}
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
closure_type c;
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
group_type g;
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
private:
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
template< class T>
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
struct substitutor_result : public thrust::detail::eval_if< is_cursor< T> ::value, cursor_result< T, ExecutionGroup> , thrust::detail::identity_< T> > {
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
};
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
typedef typename tuple_meta_transform< typename Closure::arguments_type, substitutor_result> ::type substituted_arguments_type;
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
struct substitutor {
# 81 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
group_type &g;
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
substitutor(group_type &g) : g(g)
# 86 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
{int *volatile ___ = 0;(void)g;::free(___);}
# 88 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
template< unsigned depth> typename cursor_result< cursor< depth> , ExecutionGroup> ::type
# 91 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
operator()(cursor< depth> c) const
# 92 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
{int volatile ___ = 1;(void)c;
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
::exit(___);}
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
template< class T> T &
# 98 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
operator()(T &x) const
# 99 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
{int volatile ___ = 1;(void)x;
# 101 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
::exit(___);}
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
};
# 105 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
static substituted_arguments_type substitute_placeholders(group_type &g, typename Closure::arguments_type args)
# 106 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
{
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
return detail::tuple_host_device_transform< substitutor_result> (args, (substitutor)g);
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
}
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
};
# 112 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
template< std::size_t blocksize, std::size_t grainsize>
# 113 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
struct cuda_block {
# 115 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
typedef concurrent_group< agent< grainsize> , blocksize> type;
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
};
# 119 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
template< std::size_t gridsize, std::size_t blocksize, std::size_t grainsize>
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
struct cuda_grid {
# 124 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
typedef parallel_group< typename cuda_block< blocksize, grainsize> ::type> type;
# 125 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
};
# 128 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
template< class Group, class Closure> class cuda_task;
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
template< class Grid>
# 132 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
struct grid_maker {
# 135 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
static Grid make(typename Grid::size_type size, typename Grid::agent_type
# 136 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
block, typename Grid::size_type
# 137 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
index)
# 138 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
{
# 139 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
return Grid(block, index);
# 140 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
}
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
};
# 144 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
template< class Block>
# 145 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
struct grid_maker< parallel_group< Block, dynamic_group_size> > {
# 148 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
static parallel_group< Block, 0UL> make(typename parallel_group< Block, 0UL> ::size_type size, Block
# 149 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
block, typename parallel_group< Block, 0UL> ::size_type
# 150 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
index)
# 151 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
{
# 152 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
return parallel_group< Block, 0UL> (size, block, index);
# 153 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
}
# 154 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
};
# 157 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
template< class Block>
# 158 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
struct block_maker {
# 161 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
static Block make(typename Block::size_type size, typename Block::size_type
# 162 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
heap_size, typename Block::agent_type
# 163 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
thread, typename Block::size_type
# 164 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
index)
# 165 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
{
# 166 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
return Block(heap_size, thread, index);
# 167 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
}
# 168 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
};
# 170 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
template< class Thread>
# 171 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
struct block_maker< concurrent_group< Thread, dynamic_group_size> > {
# 174 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
static concurrent_group< Thread, 0UL> make(typename concurrent_group< Thread, 0UL> ::size_type size, typename concurrent_group< Thread, 0UL> ::size_type
# 175 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
heap_size, Thread
# 176 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
thread, typename concurrent_group< Thread, 0UL> ::size_type
# 177 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
index)
# 178 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
{
# 179 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
return concurrent_group< Thread, 0UL> (size, heap_size, thread, index);
# 180 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
}
# 181 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
};
# 184 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
template< class Grid> Grid
# 186 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
make_grid(typename Grid::size_type size, typename Grid::agent_type block, typename Grid::size_type index = invalid_index)
# 187 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
{
# 188 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
return grid_maker< Grid> ::make(size, block, index);
# 189 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
}
# 192 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
template< class Block> Block
# 194 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
make_block(typename Block::size_type size, typename Block::size_type heap_size, typename Block::agent_type thread = typename Block::agent_type(), typename Block::size_type index = invalid_index)
# 195 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
{
# 196 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
return block_maker< Block> ::make(size, heap_size, thread, index);
# 197 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
}
# 201 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
template< std::size_t gridsize, std::size_t blocksize, std::size_t grainsize, class Closure>
# 202 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
class cuda_task< parallel_group< concurrent_group< agent< grainsize> , blocksize> , gridsize> , Closure> : public task_base< typename cuda_grid< gridsize, blocksize, grainsize> ::type, Closure> {
# 214 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
typedef ::thrust::system::cuda::detail::bulk_::detail::task_base< typename cuda_grid< gridsize, blocksize, grainsize> ::type, Closure> super_t;
# 217 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
public: typedef typename ::thrust::system::cuda::detail::bulk_::detail::task_base< typename cuda_grid< gridsize, blocksize, grainsize> ::type, Closure> ::group_type grid_type;
# 218 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::detail::task_base< typename cuda_grid< gridsize, blocksize, grainsize> ::type, Closure> ::group_type::agent_type block_type;
# 219 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::detail::task_base< typename cuda_grid< gridsize, blocksize, grainsize> ::type, Closure> ::group_type::agent_type::agent_type thread_type;
# 220 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::detail::task_base< typename cuda_grid< gridsize, blocksize, grainsize> ::type, Closure> ::closure_type closure_type;
# 221 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::detail::task_base< typename cuda_grid< gridsize, blocksize, grainsize> ::type, Closure> ::group_type::size_type size_type;
# 224 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
private: size_type block_offset;
# 229 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
public: cuda_task(grid_type g, closure_type c, size_type offset) : super_t(g, c), block_offset(offset)
# 232 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
{ }
# 235 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
void operator()()
# 236 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
{int volatile ___ = 1;
# 263 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
::exit(___);}
# 264 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
};
# 268 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
template< std::size_t blocksize, std::size_t grainsize, class Closure>
# 269 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
class cuda_task< concurrent_group< agent< grainsize> , blocksize> , Closure> : public task_base< typename cuda_block< blocksize, grainsize> ::type, Closure> {
# 278 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
typedef ::thrust::system::cuda::detail::bulk_::detail::task_base< typename cuda_block< blocksize, grainsize> ::type, Closure> super_t;
# 281 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
public: typedef typename ::thrust::system::cuda::detail::bulk_::detail::task_base< typename cuda_block< blocksize, grainsize> ::type, Closure> ::group_type block_type;
# 282 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::detail::task_base< typename cuda_block< blocksize, grainsize> ::type, Closure> ::group_type::agent_type thread_type;
# 283 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::detail::task_base< typename cuda_block< blocksize, grainsize> ::type, Closure> ::closure_type closure_type;
# 284 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::detail::task_base< typename cuda_block< blocksize, grainsize> ::type, Closure> ::group_type::size_type size_type;
# 288 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
cuda_task(block_type b, closure_type c) : super_t(b, c)
# 290 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
{ }
# 293 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
void operator()()
# 294 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
{int volatile ___ = 1;
# 317 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
::exit(___);}
# 318 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
};
# 322 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
template< std::size_t groupsize, std::size_t grainsize, class Closure>
# 323 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
class cuda_task< parallel_group< agent< grainsize> , groupsize> , Closure> : public task_base< parallel_group< agent< grainsize> , groupsize> , Closure> {
# 327 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
typedef ::thrust::system::cuda::detail::bulk_::detail::task_base< parallel_group< agent< grainsize> , groupsize> , Closure> super_t;
# 330 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
public: typedef typename ::thrust::system::cuda::detail::bulk_::detail::task_base< parallel_group< agent< grainsize> , groupsize> , Closure> ::closure_type closure_type;
# 331 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::detail::task_base< parallel_group< agent< grainsize> , groupsize> , Closure> ::group_type group_type;
# 334 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
cuda_task(group_type g, closure_type c) : super_t(g, c)
# 336 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
{ }
# 339 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
void operator()()
# 340 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
{int volatile ___ = 1;
# 361 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
::exit(___);}
# 362 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
};
# 365 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
}
# 366 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
}
# 367 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_task.hpp"
}}}}
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
namespace bulk_ {
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
template< class T>
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
class parameter_ptr {
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
public: typedef T element_type;
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
explicit parameter_ptr(element_type *ptr) : m_ptr(ptr)
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
{ }
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
parameter_ptr(const parameter_ptr &other_)
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
{
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
parameter_ptr &other = const_cast< parameter_ptr &>(other_);
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
thrust::swap(m_ptr, other.m_ptr);
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
}
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
~parameter_ptr()
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
{
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
if (m_ptr)
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
{
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
detail::terminate_on_error(cudaFree(m_ptr), "in parameter_ptr dtor");
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
}
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
}
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
parameter_ptr &operator=(const parameter_ptr &other_)
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
{
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
parameter_ptr &other = const_cast< parameter_ptr &>(other_);
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
thrust::swap(m_ptr, other.m_ptr);
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
return *this;
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
}
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
T *get() const
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
{
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
return m_ptr;
# 80 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
}
# 83 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
private: T *m_ptr;
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
};
# 87 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
template< class T> parameter_ptr< T>
# 89 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
make_parameter(const T &x)
# 90 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
{
# 91 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
T *raw_ptr = (0);
# 95 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
detail::throw_on_error(cudaMalloc(&raw_ptr, sizeof(T)), "make_parameter(): after cudaMalloc");
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
detail::throw_on_error(cudaMemcpy(raw_ptr, &x, sizeof(T), cudaMemcpyHostToDevice), "make_parameter(): after cudaMemcpy");
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
return ((parameter_ptr< T> )(raw_ptr));
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
}
# 112 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
}
# 113 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
}
# 114 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/parameter_ptr.hpp"
}}}}
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
namespace bulk_ {
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
namespace detail {
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
template< unsigned block_size, class Function, bool by_value = sizeof(Function) <= (4096)> struct triple_chevron_launcher_base;
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
template< unsigned block_size, class Function> static void
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
__wrapper__device_stub_launch_by_value(Function &f) {exit(1);}
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
template< unsigned block_size, class Function> void
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
launch_by_value(Function f)
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
{__wrapper__device_stub_launch_by_value<block_size,Function>(f);
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
return;}
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
template< unsigned block_size, class Function>
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
struct triple_chevron_launcher_base< block_size, Function, true> {
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
typedef void (*global_function_pointer_t)(Function);
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
static global_function_pointer_t global_function_pointer()
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
{
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
return &launch_by_value< block_size, Function> ;
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
}
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
};
# 82 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
template< unsigned block_size, class Function> static void
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
__wrapper__device_stub_launch_by_pointer(const Function *&f) {exit(1);}
# 82 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
template< unsigned block_size, class Function> void
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
launch_by_pointer(const Function *f)
# 86 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
{__wrapper__device_stub_launch_by_pointer<block_size,Function>(f);
# 90 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
return;}
# 93 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
template< unsigned block_size, class Function>
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
struct triple_chevron_launcher_base< block_size, Function, false> {
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
typedef void (*global_function_pointer_t)(const Function *);
# 99 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
static global_function_pointer_t global_function_pointer()
# 100 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
{
# 101 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
return &launch_by_pointer< block_size, Function> ;
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
}
# 103 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
};
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
template< unsigned block_size_, class Function, bool by_value = sizeof(Function) <= (4096)>
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
class triple_chevron_launcher : protected triple_chevron_launcher_base< block_size_, Function> {
# 112 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
typedef triple_chevron_launcher_base< block_size_, Function> super_t;
# 115 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
public: typedef Function task_type;
# 118 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
void launch(unsigned num_blocks, unsigned block_size, ::size_t num_dynamic_smem_bytes, ::cudaStream_t stream, task_type task)
# 119 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
{
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
struct workaround {
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
static void supported_path(unsigned num_blocks, unsigned block_size, ::size_t num_dynamic_smem_bytes, ::cudaStream_t stream, task_type task)
# 124 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
{
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
cudaConfigureCall(((::dim3)(num_blocks)), ((::dim3)(block_size)), num_dynamic_smem_bytes, stream);
# 128 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
cudaSetupArgument(task, 0);
# 129 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
::thrust::system::cuda::detail::bulk_::detail::throw_on_error(cudaLaunch(super_t::global_function_pointer()), "after cudaLaunch in triple_chevron_launcher::launch()");
# 137 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
}
# 140 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
static void unsupported_path(unsigned, unsigned, ::size_t, ::cudaStream_t, task_type)
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
{
# 142 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
bulk_::detail::terminate_with_message("triple_chevron_launcher::launch(): CUDA kernel launch requires CUDART.");
# 143 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
}
# 144 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
};
# 147 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
(workaround::supported_path)(num_blocks, block_size, num_dynamic_smem_bytes, stream, task);
# 151 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
}
# 152 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
};
# 159 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
template< unsigned block_size_, class Function>
# 160 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
class triple_chevron_launcher< block_size_, Function, false> : protected triple_chevron_launcher_base< block_size_, Function> {
# 163 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
typedef triple_chevron_launcher_base< block_size_, Function> super_t;
# 166 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
public: typedef Function task_type;
# 169 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
void launch(unsigned num_blocks, unsigned block_size, ::size_t num_dynamic_smem_bytes, ::cudaStream_t stream, task_type task)
# 170 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
{
# 171 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
struct workaround {
# 174 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
static void supported_path(unsigned num_blocks, unsigned block_size, ::size_t num_dynamic_smem_bytes, ::cudaStream_t stream, task_type task)
# 175 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
{
# 176 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
parameter_ptr< Function> parm = ::thrust::system::cuda::detail::bulk_::detail::make_parameter< task_type> (task);
# 180 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
cudaConfigureCall(((::dim3)(num_blocks)), ((::dim3)(block_size)), num_dynamic_smem_bytes, stream);
# 181 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
cudaSetupArgument(static_cast< const task_type *>((parm.get())), 0);
# 182 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
::thrust::system::cuda::detail::bulk_::detail::throw_on_error(cudaLaunch(super_t::global_function_pointer()), "after cudaLaunch in triple_chevron_launcher::launch()");
# 191 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
}
# 194 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
static void unsupported_path(unsigned, unsigned, ::size_t, ::cudaStream_t, task_type)
# 195 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
{
# 196 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
bulk_::detail::terminate_with_message("triple_chevron_launcher::launch(): CUDA kernel launch requires CUDART.");
# 197 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
}
# 198 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
};
# 201 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
(workaround::supported_path)(num_blocks, block_size, num_dynamic_smem_bytes, stream, task);
# 205 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
}
# 206 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
};
# 209 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
}
# 210 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
}
# 211 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/triple_chevron_launcher.hpp"
}}}}
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/synchronize.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/synchronize.hpp"
namespace bulk_ {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/synchronize.hpp"
namespace detail {
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/synchronize.hpp"
inline void synchronize(const char *message = "")
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/synchronize.hpp"
{
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/synchronize.hpp"
bulk_::detail::throw_on_error(cudaDeviceSynchronize(), message);
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/synchronize.hpp"
}
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/synchronize.hpp"
inline void synchronize_if_enabled(const char *message = "")
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/synchronize.hpp"
{
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/synchronize.hpp"
(void)message;
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/synchronize.hpp"
}
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/synchronize.hpp"
}
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/synchronize.hpp"
}
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/synchronize.hpp"
}}}}
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
namespace bulk_ {
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
namespace detail {
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
template< unsigned block_size_, class ExecutionGroup, class Closure>
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
struct cuda_launcher_base : public triple_chevron_launcher< block_size_, cuda_task< ExecutionGroup, Closure> > {
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
typedef ::thrust::system::cuda::detail::bulk_::detail::triple_chevron_launcher< block_size_, cuda_task< ExecutionGroup, Closure> > super_t;
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::detail::triple_chevron_launcher< block_size_, cuda_task< ExecutionGroup, Closure> > ::task_type task_type;
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
typedef typename ExecutionGroup::size_type size_type;
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
cuda_launcher_base() : m_device_properties(bulk_::detail::device_properties())
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{ }
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
void launch(size_type num_blocks, size_type block_size, size_type num_dynamic_smem_bytes, ::cudaStream_t stream, task_type task)
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
if (num_blocks > 0)
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
super_t::launch(num_blocks, block_size, num_dynamic_smem_bytes, stream, task);
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
bulk_::detail::synchronize_if_enabled("bulk_kernel_by_value");
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 80 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
static size_type max_active_blocks_per_multiprocessor(const ::thrust::system::cuda::detail::bulk_::detail::device_properties_t &props, const ::thrust::system::cuda::detail::bulk_::detail::function_attributes_t &
# 81 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
attr, size_type
# 82 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
num_threads_per_block, size_type
# 83 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
num_smem_bytes_per_block)
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
return static_cast< size_type>(::thrust::system::cuda::detail::bulk_::detail::cuda_launch_config_detail::max_active_blocks_per_multiprocessor(props, attr, num_threads_per_block, num_smem_bytes_per_block));
# 86 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 93 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
static pair< typename ExecutionGroup::size_type, typename ExecutionGroup::size_type> dynamic_smem_occupancy_limit(const ::thrust::system::cuda::detail::bulk_::detail::device_properties_t &props, const ::thrust::system::cuda::detail::bulk_::detail::function_attributes_t &attr, size_type num_threads_per_block, size_type num_smem_bytes_per_block)
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type occupancy = (max_active_blocks_per_multiprocessor)(props, attr, num_threads_per_block, num_smem_bytes_per_block);
# 99 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
if (occupancy < 1) { return thrust::make_pair(0, 0); }
# 101 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
return ::thrust::make_pair(static_cast< size_type>(::thrust::system::cuda::detail::bulk_::detail::proportional_smem_allocation(props, attr, occupancy)), occupancy);
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 106 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type choose_heap_size(const ::thrust::system::cuda::detail::bulk_::detail::device_properties_t &props, size_type group_size, size_type requested_size)
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
::thrust::system::cuda::detail::bulk_::detail::function_attributes_t attr = ::thrust::system::cuda::detail::bulk_::detail::function_attributes(super_t::global_function_pointer());
# 112 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
if (((attr.ptxVersion) < 20) || (requested_size == 0))
# 113 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 114 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
return 0;
# 115 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 118 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type result = (0), occupancy = (0);
# 119 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
::thrust::tie(result, occupancy) = (dynamic_smem_occupancy_limit)(props, attr, group_size, 0);
# 124 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
if ((requested_size != use_default) && (requested_size > result) && (occupancy > 1))
# 125 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
requested_size += 48;
# 130 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
if (requested_size > result)
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 133 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type next_level_result = (0), next_level_occupancy = (0);
# 134 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
::thrust::tie(next_level_result, next_level_occupancy) = (dynamic_smem_occupancy_limit)(props, attr, group_size, requested_size);
# 138 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
if (next_level_occupancy > 0) { result = next_level_result; }
# 139 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 140 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 142 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
return result;
# 143 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 147 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type choose_group_size(size_type requested_size)
# 148 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 149 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type result = requested_size;
# 151 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
if (result == use_default)
# 152 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 153 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
::thrust::system::cuda::detail::bulk_::detail::function_attributes_t attr = ::thrust::system::cuda::detail::bulk_::detail::function_attributes(super_t::global_function_pointer());
# 155 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
return static_cast< size_type>(::thrust::system::cuda::detail::bulk_::detail::block_size_with_maximum_potential_occupancy(attr, device_properties()));
# 156 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 158 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
return result;
# 159 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 163 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type choose_subscription(size_type block_size)
# 164 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 166 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
return (block_size > 0) ? (device_properties().maxThreadsPerMultiProcessor) / block_size : 0;
# 167 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 171 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type choose_num_groups(size_type requested_num_groups, size_type group_size)
# 172 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 173 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type result = requested_num_groups;
# 175 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
if (result == use_default)
# 176 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 179 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type subscription = choose_subscription(group_size);
# 181 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
result = ::thrust::min< size_type> (subscription * (device_properties().multiProcessorCount), max_physical_grid_size());
# 182 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 184 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
return result;
# 185 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 189 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type max_physical_grid_size()
# 190 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 192 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
int actual_limit = (device_properties().maxGridSize)[0];
# 195 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
int ptx_version = ((::thrust::system::cuda::detail::bulk_::detail::function_attributes(super_t::global_function_pointer()).ptxVersion));
# 197 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
int ptx_limit = 0;
# 200 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
if (ptx_version < 30)
# 201 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 202 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
ptx_limit = 65535;
# 203 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
} else
# 205 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 206 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
ptx_limit = ((1U << 31) - (1));
# 207 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 209 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
return ::thrust::min< size_type> (actual_limit, ptx_limit);
# 210 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 214 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
const ::thrust::system::cuda::detail::bulk_::detail::device_properties_t &device_properties() const
# 215 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 216 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
return m_device_properties;
# 217 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 220 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
::thrust::system::cuda::detail::bulk_::detail::device_properties_t m_device_properties;
# 221 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
};
# 224 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
template< class ExecutionGroup, class Closure> struct cuda_launcher;
# 227 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
template< std::size_t gridsize, std::size_t blocksize, std::size_t grainsize, class Closure>
# 228 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
struct cuda_launcher< parallel_group< concurrent_group< agent< grainsize> , blocksize> , gridsize> , Closure> : public cuda_launcher_base< blocksize, typename cuda_grid< gridsize, blocksize, grainsize> ::type, Closure> {
# 240 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
typedef ::thrust::system::cuda::detail::bulk_::detail::cuda_launcher_base< blocksize, typename cuda_grid< gridsize, blocksize, grainsize> ::type, Closure> super_t;
# 241 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::detail::cuda_launcher_base< blocksize, typename cuda_grid< gridsize, blocksize, grainsize> ::type, Closure> ::size_type size_type;
# 243 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
typedef typename cuda_grid< gridsize, blocksize, grainsize> ::type grid_type;
# 244 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
typedef typename cuda_grid< gridsize, blocksize, grainsize> ::type::agent_type block_type;
# 245 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
typedef typename cuda_grid< gridsize, blocksize, grainsize> ::type::agent_type::agent_type thread_type;
# 247 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::detail::cuda_launcher_base< blocksize, typename cuda_grid< gridsize, blocksize, grainsize> ::type, Closure> ::task_type task_type;
# 251 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
void launch(grid_type request, Closure c, ::cudaStream_t stream)
# 252 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 253 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
grid_type g = configure(request);
# 255 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type num_blocks = (g.size());
# 256 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type block_size = ((g.this_exec).size());
# 258 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
if ((num_blocks > 0) && (block_size > 0))
# 259 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 260 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type heap_size = ((g.this_exec).heap_size());
# 262 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type max_physical_grid_size = super_t::max_physical_grid_size();
# 267 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
if (block_size > 0)
# 268 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 269 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type num_remaining_physical_blocks = num_blocks;
# 270 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
for (size_type block_offset = (0); block_offset < num_blocks; block_offset += max_physical_grid_size)
# 273 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 274 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
task_type task(g, c, block_offset);
# 276 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type num_physical_blocks = ::thrust::min< size_type> (num_remaining_physical_blocks, max_physical_grid_size);
# 278 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
super_t::launch(num_physical_blocks, block_size, heap_size, stream, task);
# 280 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
num_remaining_physical_blocks -= num_physical_blocks;
# 281 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 282 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 283 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 284 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 287 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
grid_type configure(grid_type g)
# 288 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 289 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type block_size = super_t::choose_group_size(((g.this_exec).size()));
# 290 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type heap_size = super_t::choose_heap_size(device_properties(), block_size, ((g.this_exec).heap_size()));
# 291 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type num_blocks = (g.size());
# 293 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
return make_grid< grid_type> (num_blocks, make_block< block_type> (block_size, heap_size));
# 294 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 298 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
pair< typename ::thrust::system::cuda::detail::bulk_::detail::cuda_launcher_base< blocksize, typename cuda_grid< gridsize, blocksize, grainsize> ::type, Closure> ::size_type, typename ::thrust::system::cuda::detail::bulk_::detail::cuda_launcher_base< blocksize, typename cuda_grid< gridsize, blocksize, grainsize> ::type, Closure> ::size_type> choose_sizes(size_type requested_num_groups, size_type requested_group_size)
# 299 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 302 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type group_size = (blocksize);
# 303 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
if (group_size == 0)
# 304 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 305 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
group_size = super_t::choose_group_size(requested_group_size);
# 306 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 310 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type num_groups = (gridsize);
# 311 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
if (num_groups == 0)
# 312 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 313 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
num_groups = super_t::choose_num_groups(requested_num_groups, group_size);
# 314 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 316 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
return ::thrust::make_pair(num_groups, group_size);
# 317 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 318 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
};
# 321 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
template< std::size_t blocksize, std::size_t grainsize, class Closure>
# 322 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
struct cuda_launcher< concurrent_group< agent< grainsize> , blocksize> , Closure> : public cuda_launcher_base< blocksize, concurrent_group< agent< grainsize> , blocksize> , Closure> {
# 331 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
typedef ::thrust::system::cuda::detail::bulk_::detail::cuda_launcher_base< blocksize, concurrent_group< agent< grainsize> , blocksize> , Closure> super_t;
# 332 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::detail::cuda_launcher_base< blocksize, concurrent_group< agent< grainsize> , blocksize> , Closure> ::size_type size_type;
# 333 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::detail::cuda_launcher_base< blocksize, concurrent_group< agent< grainsize> , blocksize> , Closure> ::task_type task_type;
# 335 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
typedef concurrent_group< agent< grainsize> , blocksize> block_type;
# 338 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
void launch(block_type request, Closure c, ::cudaStream_t stream)
# 339 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 340 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
block_type b = configure(request);
# 342 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type block_size = (b.size());
# 343 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type heap_size = (b.heap_size());
# 345 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
if (block_size > 0)
# 346 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 347 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
task_type task(b, c);
# 348 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
super_t::launch(1, block_size, heap_size, stream, task);
# 349 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 350 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 353 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
block_type configure(block_type b)
# 354 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 355 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type block_size = super_t::choose_group_size((b.size()));
# 356 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type heap_size = super_t::choose_heap_size(device_properties(), block_size, (b.heap_size()));
# 357 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
return make_block< block_type> (block_size, heap_size);
# 358 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 359 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
};
# 362 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
template< std::size_t groupsize, std::size_t grainsize, class Closure>
# 363 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
struct cuda_launcher< parallel_group< agent< grainsize> , groupsize> , Closure> : public cuda_launcher_base< 0U, parallel_group< agent< grainsize> , groupsize> , Closure> {
# 372 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
typedef ::thrust::system::cuda::detail::bulk_::detail::cuda_launcher_base< 0U, parallel_group< agent< grainsize> , groupsize> , Closure> super_t;
# 373 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::detail::cuda_launcher_base< 0U, parallel_group< agent< grainsize> , groupsize> , Closure> ::size_type size_type;
# 374 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
typedef typename ::thrust::system::cuda::detail::bulk_::detail::cuda_launcher_base< 0U, parallel_group< agent< grainsize> , groupsize> , Closure> ::task_type task_type;
# 376 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
typedef parallel_group< agent< grainsize> , groupsize> group_type;
# 379 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
void launch(group_type g, Closure c, ::cudaStream_t stream)
# 380 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 381 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type num_blocks, block_size;
# 382 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
::thrust::tie(num_blocks, block_size) = configure(g);
# 384 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
if ((num_blocks > 0) && (block_size > 0))
# 385 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 386 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
task_type task(g, c);
# 388 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
super_t::launch(num_blocks, block_size, 0, stream, task);
# 389 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 390 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 393 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
tuple< typename ::thrust::system::cuda::detail::bulk_::detail::cuda_launcher_base< 0U, parallel_group< agent< grainsize> , groupsize> , Closure> ::size_type, typename ::thrust::system::cuda::detail::bulk_::detail::cuda_launcher_base< 0U, parallel_group< agent< grainsize> , groupsize> , Closure> ::size_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type, ::thrust::null_type> configure(group_type g)
# 394 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
{
# 395 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type block_size = ::thrust::min< size_type> ((g.size()), super_t::choose_group_size(use_default));
# 398 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type max_blocks = super_t::choose_num_groups(bulk_::use_default, block_size);
# 401 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
size_type num_blocks = (block_size > 0) ? (((g.size()) + block_size) - 1) / block_size : 0;
# 404 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
num_blocks = ::thrust::min< size_type> (num_blocks, max_blocks);
# 406 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
return ::thrust::make_tuple(num_blocks, block_size);
# 407 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 408 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
};
# 411 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 412 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}
# 413 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/cuda_launcher/cuda_launcher.hpp"
}}}}
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
namespace bulk_ {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
namespace detail {
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
template< class Closure> pair< int, int>
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
choose_sizes(parallel_group< concurrent_group<> > g, Closure)
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
{
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
cuda_launcher< parallel_group< concurrent_group<> > , Closure> launcher;
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
return (launcher.choose_sizes(g.size(), (g.this_exec).size()));
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
}
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
}
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
template< class Function> pair< int, int>
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
choose_sizes(parallel_group< concurrent_group<> > g, Function f)
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
{
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
return detail::choose_sizes(g, detail::make_closure(f));
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
}
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
template< class Function, class Arg1> pair< int, int>
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
choose_sizes(parallel_group< concurrent_group<> > g, Function f, Arg1 arg1)
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
{
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
return detail::choose_sizes(g, detail::make_closure(f, arg1));
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
}
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
template< class Function, class Arg1, class Arg2> pair< int, int>
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
choose_sizes(parallel_group< concurrent_group<> > g, Function f, Arg1 arg1, Arg2 arg2)
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
{
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
return detail::choose_sizes(g, detail::make_closure(f, arg1, arg2));
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
}
# 80 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
template< class Function, class Arg1, class Arg2, class Arg3> pair< int, int>
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
choose_sizes(parallel_group< concurrent_group<> > g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3)
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
{
# 86 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
return detail::choose_sizes(g, detail::make_closure(f, arg1, arg2, arg3));
# 87 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
}
# 90 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4> pair< int, int>
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
choose_sizes(parallel_group< concurrent_group<> > g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4)
# 95 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
{
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
return detail::choose_sizes(g, detail::make_closure(f, arg1, arg2, arg3, arg4));
# 97 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
}
# 100 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5> pair< int, int>
# 104 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
choose_sizes(parallel_group< concurrent_group<> > g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5)
# 105 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
{
# 106 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
return detail::choose_sizes(g, detail::make_closure(f, arg1, arg2, arg3, arg4, arg5));
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
}
# 110 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
template< class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6> pair< int, int>
# 114 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
choose_sizes(parallel_group< concurrent_group<> > g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6)
# 115 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
{
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
return detail::choose_sizes(g, detail::make_closure(f, arg1, arg2, arg3, arg4, arg5, arg6));
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
}
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
}
# 121 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/choose_sizes.inl"
}}}}
# 23 "/usr/local/cuda/include/thrust/detail/cstdint.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/detail/cstdint.h"
namespace detail {
# 50 "/usr/local/cuda/include/thrust/detail/cstdint.h"
typedef ::int8_t int8_t;
# 51 "/usr/local/cuda/include/thrust/detail/cstdint.h"
typedef ::int16_t int16_t;
# 52 "/usr/local/cuda/include/thrust/detail/cstdint.h"
typedef ::int32_t int32_t;
# 53 "/usr/local/cuda/include/thrust/detail/cstdint.h"
typedef ::int64_t int64_t;
# 54 "/usr/local/cuda/include/thrust/detail/cstdint.h"
typedef ::uint8_t uint8_t;
# 55 "/usr/local/cuda/include/thrust/detail/cstdint.h"
typedef ::uint16_t uint16_t;
# 56 "/usr/local/cuda/include/thrust/detail/cstdint.h"
typedef ::uint32_t uint32_t;
# 57 "/usr/local/cuda/include/thrust/detail/cstdint.h"
typedef ::uint64_t uint64_t;
# 63 "/usr/local/cuda/include/thrust/detail/cstdint.h"
template< int word_size = 8> struct divine_intptr_t;
# 64 "/usr/local/cuda/include/thrust/detail/cstdint.h"
template< int word_size = 8> struct divine_uintptr_t;
# 67 "/usr/local/cuda/include/thrust/detail/cstdint.h"
template<> struct divine_intptr_t< 4> { typedef int32_t type; };
# 68 "/usr/local/cuda/include/thrust/detail/cstdint.h"
template<> struct divine_uintptr_t< 4> { typedef uint32_t type; };
# 71 "/usr/local/cuda/include/thrust/detail/cstdint.h"
template<> struct divine_intptr_t<> { typedef int64_t type; };
# 72 "/usr/local/cuda/include/thrust/detail/cstdint.h"
template<> struct divine_uintptr_t<> { typedef uint64_t type; };
# 74 "/usr/local/cuda/include/thrust/detail/cstdint.h"
typedef divine_intptr_t<> ::type intptr_t;
# 75 "/usr/local/cuda/include/thrust/detail/cstdint.h"
typedef divine_uintptr_t<> ::type uintptr_t;
# 77 "/usr/local/cuda/include/thrust/detail/cstdint.h"
}
# 78 "/usr/local/cuda/include/thrust/detail/cstdint.h"
}
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/async.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/async.hpp"
namespace bulk_ {
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/async.hpp"
template< class ExecutionGroup, class Function> future< void> async(ExecutionGroup g, Function f);
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/async.hpp"
template< class ExecutionGroup, class Function, class Arg1> future< void> async(ExecutionGroup g, Function f, Arg1 arg1);
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/async.hpp"
template< class ExecutionGroup, class Function, class Arg1, class Arg2> future< void> async(ExecutionGroup g, Function f, Arg1 arg1, Arg2 arg2);
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/async.hpp"
template< class ExecutionGroup, class Function, class Arg1, class Arg2, class Arg3> future< void> async(ExecutionGroup g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3);
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/async.hpp"
template< class ExecutionGroup, class Function, class Arg1, class Arg2, class Arg3, class Arg4> future< void> async(ExecutionGroup g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4);
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/async.hpp"
template< class ExecutionGroup, class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5> future< void> async(ExecutionGroup g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5);
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/async.hpp"
template< class ExecutionGroup, class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6> future< void> async(ExecutionGroup g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6);
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/async.hpp"
template< class ExecutionGroup, class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7> future< void> async(ExecutionGroup g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7);
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/async.hpp"
template< class ExecutionGroup, class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7, class Arg8> future< void> async(ExecutionGroup g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8);
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/async.hpp"
template< class ExecutionGroup, class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7, class Arg8, class Arg9> future< void> async(ExecutionGroup g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9);
# 81 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/async.hpp"
template< class ExecutionGroup, class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7, class Arg8, class Arg9, class Arg10> future< void> async(ExecutionGroup g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10);
# 86 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/async.hpp"
}
# 87 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/async.hpp"
}}}}
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
namespace bulk_ {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
namespace detail {
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
template< class ExecutionGroup, class Closure> future< void>
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
async_in_stream(ExecutionGroup g, Closure c, cudaStream_t s, cudaEvent_t before_event)
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
{
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
if (before_event != (0))
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
{
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
bulk_::detail::throw_on_error(cudaStreamWaitEvent(s, before_event, 0), "cudaStreamWaitEvent in async_in_stream");
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
cuda_launcher< ExecutionGroup, Closure> launcher;
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
(launcher.launch(g, c, s));
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
return future_core_access::create(s, false);
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
template< class ExecutionGroup, class Closure> future< void>
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
async(ExecutionGroup g, Closure c, cudaEvent_t before_event)
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
{
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
cudaStream_t s;
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
bulk_::detail::throw_on_error(cudaStreamCreate(&s), "cudaStreamCreate in bulk::detail::async");
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
if (before_event != (0))
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
{
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
bulk_::detail::throw_on_error(cudaStreamWaitEvent(s, before_event, 0), "cudaStreamWaitEvent in bulk::detail::async");
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
cuda_launcher< ExecutionGroup, Closure> launcher;
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
(launcher.launch(g, c, s));
# 80 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
return future_core_access::create(s, true);
# 81 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
template< class ExecutionGroup, class Closure> future< void>
# 86 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
async(ExecutionGroup g, Closure c)
# 87 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
{
# 88 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
return detail::async_in_stream(g, c, 0, 0);
# 89 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 92 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
template< class ExecutionGroup, class Closure> future< void>
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
async(async_launch< ExecutionGroup> launch, Closure c)
# 95 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
{
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
return ((launch.is_stream_valid())) ? detail::async_in_stream((launch.exec()), c, (launch.stream()), (launch.before_event())) : detail::async((launch.exec()), c, (launch.before_event()));
# 99 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 105 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
template< class ExecutionGroup, class Function> future< void>
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
async(ExecutionGroup g, Function f)
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
{
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
return detail::async(g, detail::make_closure(f));
# 110 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 113 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
template< class ExecutionGroup, class Function, class Arg1> future< void>
# 115 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
async(ExecutionGroup g, Function f, Arg1 arg1)
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
{
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
return detail::async(g, detail::make_closure(f, arg1));
# 118 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 121 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
template< class ExecutionGroup, class Function, class Arg1, class Arg2> future< void>
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
async(ExecutionGroup g, Function f, Arg1 arg1, Arg2 arg2)
# 124 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
{
# 125 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
return detail::async(g, detail::make_closure(f, arg1, arg2));
# 126 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 129 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
template< class ExecutionGroup, class Function, class Arg1, class Arg2, class Arg3> future< void>
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
async(ExecutionGroup g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3)
# 132 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
{
# 133 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
return detail::async(g, detail::make_closure(f, arg1, arg2, arg3));
# 134 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 137 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
template< class ExecutionGroup, class Function, class Arg1, class Arg2, class Arg3, class Arg4> future< void>
# 139 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
async(ExecutionGroup g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4)
# 140 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
{
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
return detail::async(g, detail::make_closure(f, arg1, arg2, arg3, arg4));
# 142 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 145 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
template< class ExecutionGroup, class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5> future< void>
# 147 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
async(ExecutionGroup g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5)
# 148 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
{
# 149 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
return detail::async(g, detail::make_closure(f, arg1, arg2, arg3, arg4, arg5));
# 150 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 153 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
template< class ExecutionGroup, class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6> future< void>
# 155 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
async(ExecutionGroup g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6)
# 156 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
{
# 157 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
return detail::async(g, detail::make_closure(f, arg1, arg2, arg3, arg4, arg5, arg6));
# 158 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 161 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
template< class ExecutionGroup, class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7> future< void>
# 163 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
async(ExecutionGroup g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7)
# 164 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
{
# 165 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
return detail::async(g, detail::make_closure(f, arg1, arg2, arg3, arg4, arg5, arg6, arg7));
# 166 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 169 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
template< class ExecutionGroup, class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7, class Arg8> future< void>
# 171 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
async(ExecutionGroup g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8)
# 172 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
{
# 173 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
return detail::async(g, detail::make_closure(f, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8));
# 174 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 177 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
template< class ExecutionGroup, class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7, class Arg8, class Arg9> future< void>
# 179 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
async(ExecutionGroup g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9)
# 180 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
{
# 181 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
return detail::async(g, detail::make_closure(f, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9));
# 182 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 185 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
template< class ExecutionGroup, class Function, class Arg1, class Arg2, class Arg3, class Arg4, class Arg5, class Arg6, class Arg7, class Arg8, class Arg9, class Arg10> future< void>
# 187 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
async(ExecutionGroup g, Function f, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10)
# 188 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
{
# 189 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
return detail::async(g, detail::make_closure(f, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10));
# 190 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 193 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}
# 194 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/async.inl"
}}}}
# 24 "/usr/local/cuda/include/thrust/iterator/detail/is_trivial_iterator.h"
namespace __gnu_cxx {
# 27 "/usr/local/cuda/include/thrust/iterator/detail/is_trivial_iterator.h"
template< class Iterator, class Container> class __normal_iterator;
# 29 "/usr/local/cuda/include/thrust/iterator/detail/is_trivial_iterator.h"
}
# 42 "/usr/local/cuda/include/thrust/iterator/detail/is_trivial_iterator.h"
namespace thrust {
# 44 "/usr/local/cuda/include/thrust/iterator/detail/is_trivial_iterator.h"
namespace detail {
# 48 "/usr/local/cuda/include/thrust/iterator/detail/is_trivial_iterator.h"
template< class T>
# 49 "/usr/local/cuda/include/thrust/iterator/detail/is_trivial_iterator.h"
struct is_gnu_normal_iterator : public false_type {
# 51 "/usr/local/cuda/include/thrust/iterator/detail/is_trivial_iterator.h"
};
# 55 "/usr/local/cuda/include/thrust/iterator/detail/is_trivial_iterator.h"
template< class Iterator, class Container>
# 56 "/usr/local/cuda/include/thrust/iterator/detail/is_trivial_iterator.h"
struct is_gnu_normal_iterator< __gnu_cxx::__normal_iterator< Iterator, Container> > : public true_type {
# 58 "/usr/local/cuda/include/thrust/iterator/detail/is_trivial_iterator.h"
};
# 79 "/usr/local/cuda/include/thrust/iterator/detail/is_trivial_iterator.h"
template< class T>
# 80 "/usr/local/cuda/include/thrust/iterator/detail/is_trivial_iterator.h"
struct is_trivial_iterator : public integral_constant< bool, (is_pointer< T> ::value | is_thrust_pointer< T> ::value) | is_gnu_normal_iterator< T> ::value> {
# 92 "/usr/local/cuda/include/thrust/iterator/detail/is_trivial_iterator.h"
};
# 94 "/usr/local/cuda/include/thrust/iterator/detail/is_trivial_iterator.h"
}
# 95 "/usr/local/cuda/include/thrust/iterator/detail/is_trivial_iterator.h"
}
# 22 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/is_contiguous_iterator.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 23 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/is_contiguous_iterator.hpp"
namespace bulk_ {
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/is_contiguous_iterator.hpp"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/is_contiguous_iterator.hpp"
template< class T>
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/is_contiguous_iterator.hpp"
struct is_contiguous_iterator : public thrust::detail::is_trivial_iterator< T> {
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/is_contiguous_iterator.hpp"
};
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/is_contiguous_iterator.hpp"
}
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/is_contiguous_iterator.hpp"
}
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/is_contiguous_iterator.hpp"
}}}}
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
namespace bulk_ {
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
template< std::size_t bound, std::size_t
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
grainsize, class
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
RandomAccessIterator1, class
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
Size, class
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
RandomAccessIterator2>
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
__attribute((always_inline)) __attribute__((unused)) inline RandomAccessIterator2
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
copy_n(const bounded< bound, agent< grainsize> > &b, RandomAccessIterator1
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
first, Size
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
n, RandomAccessIterator2
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
result)
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
{int volatile ___ = 1;(void)b;(void)first;(void)n;(void)result;
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
::exit(___);}
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
namespace detail {
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
template< class ConcurrentGroup, class
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
RandomAccessIterator1, class
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
Size, class
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
RandomAccessIterator2>
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
__attribute((always_inline)) __attribute__((unused)) inline RandomAccessIterator2
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
simple_copy_n(ConcurrentGroup &g, RandomAccessIterator1 first, Size n, RandomAccessIterator2 result)
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)n;(void)result;
# 89 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
::exit(___);}
# 92 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
template< std::size_t size, std::size_t
# 93 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
grainsize, class
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
RandomAccessIterator1, class
# 95 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
Size, class
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
RandomAccessIterator2>
# 97 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
__attribute((always_inline)) __attribute__((unused)) inline typename thrust::detail::enable_if< ((size * grainsize) > (0)), RandomAccessIterator2> ::type
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
simple_copy_n(concurrent_group< agent< grainsize> , size> &
# 105 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
g, RandomAccessIterator1
# 106 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
first, Size n, RandomAccessIterator2
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
result)
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)n;(void)result;
# 166 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
::exit(___);}
# 169 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
template< std::size_t size, std::size_t
# 170 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
grainsize, class
# 171 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
RandomAccessIterator1, class
# 172 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
Size, class
# 173 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
RandomAccessIterator2>
# 174 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
__attribute((always_inline)) __attribute__((unused)) inline RandomAccessIterator2
# 175 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
copy_n(concurrent_group< agent< grainsize> , size> &
# 178 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
g, RandomAccessIterator1
# 179 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
first, Size
# 180 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
n, RandomAccessIterator2
# 181 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
result)
# 182 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)n;(void)result;
# 184 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
::exit(___);}
# 187 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
}
# 190 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
template< std::size_t groupsize, class
# 191 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
Executor, class
# 192 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
RandomAccessIterator1, class
# 193 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
Size, class
# 194 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
RandomAccessIterator2>
# 195 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
__attribute((always_inline)) __attribute__((unused)) inline RandomAccessIterator2
# 197 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
copy_n(concurrent_group< Executor, groupsize> &g, RandomAccessIterator1 first, Size n, RandomAccessIterator2 result)
# 198 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)n;(void)result;
# 200 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
::exit(___);}
# 203 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
template< std::size_t bound, std::size_t groupsize, std::size_t grainsize, class RandomAccessIterator1, class Size, class RandomAccessIterator2> __attribute__((unused)) typename thrust::detail::enable_if< bound <= (groupsize * grainsize), RandomAccessIterator2> ::type
# 209 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
copy_n(bounded< bound, concurrent_group< agent< grainsize> , groupsize> > &
# 215 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
g, RandomAccessIterator1
# 216 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
first, Size
# 217 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
n, RandomAccessIterator2
# 218 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
result)
# 219 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)n;(void)result;
# 276 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
::exit(___);}
# 279 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
}
# 280 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/copy.hpp"
}}}}
# 23 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
namespace bulk_ {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
template< class Iterator, class
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
Size = typename iterator_difference< Iterator> ::type>
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
class strided_iterator : public iterator_adaptor< strided_iterator< Iterator> , Iterator> {
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
typedef ::thrust::iterator_adaptor< ::thrust::system::cuda::detail::bulk_::strided_iterator< Iterator> , Iterator> super_t;
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
public: typedef Size stride_type;
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
strided_iterator() : super_t(), m_stride(1)
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
{ }
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
strided_iterator(const strided_iterator &other) : super_t(other), m_stride(other.m_stride)
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
{ }
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
strided_iterator(const Iterator &base, stride_type stride) : super_t(base), m_stride(stride)
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
{ }
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
stride_type stride() const
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
{
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
return m_stride;
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
}
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
friend class ::thrust::iterator_core_access;
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
private: void increment()
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
{
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
super_t::base_reference() += stride();
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
}
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
void decrement()
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
{
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
super_t::base_reference() -= stride();
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
}
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
void advance(typename ::thrust::iterator_adaptor< ::thrust::system::cuda::detail::bulk_::strided_iterator< Iterator> , Iterator> ::difference_type n)
# 80 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
{
# 81 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
super_t::base_reference() += (n * stride());
# 82 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
}
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
template< class OtherIterator> typename ::thrust::iterator_adaptor< ::thrust::system::cuda::detail::bulk_::strided_iterator< Iterator> , Iterator> ::difference_type
# 86 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
distance_to(const ::thrust::system::cuda::detail::bulk_::strided_iterator< OtherIterator> &other) const
# 87 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
{
# 88 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
if ((other.base()) >= (this->base()))
# 89 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
{
# 90 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
return (((other.base()) - (this->base())) + (stride() - 1)) / stride();
# 91 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
}
# 93 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
return (((other.base()) - (this->base())) - (stride() - 1)) / stride();
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
}
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
stride_type m_stride;
# 97 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
};
# 100 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
template< class Iterator, class Size> strided_iterator< Iterator, Size>
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
make_strided_iterator(Iterator iter, Size stride)
# 103 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
{
# 104 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
return strided_iterator< Iterator, Size> (iter, stride);
# 105 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
}
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
}
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/iterator/strided_iterator.hpp"
}}}}
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
namespace bulk_ {
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
template< std::size_t bound, std::size_t
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
grainsize, class
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
RandomAccessIterator, class
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
T, class
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
BinaryFunction>
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
__attribute((always_inline)) __attribute__((unused)) inline T
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
reduce(const bounded< bound, agent< grainsize> > &exec, RandomAccessIterator
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
first, RandomAccessIterator
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
last, T
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
init, BinaryFunction
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
binary_op)
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
{int volatile ___ = 1;(void)exec;(void)first;(void)last;(void)init;(void)binary_op;
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
::exit(___);}
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
namespace detail {
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
namespace reduce_detail {
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
template< class ConcurrentGroup, class RandomAccessIterator, class Size, class T, class BinaryFunction> __attribute__((unused)) T
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
destructive_reduce_n(ConcurrentGroup &g, RandomAccessIterator first, Size n, T init, BinaryFunction binary_op)
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)n;(void)init;(void)binary_op;
# 103 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
::exit(___);}
# 106 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
}
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
}
# 110 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
template< std::size_t groupsize, std::size_t grainsize, class RandomAccessIterator, class T, class BinaryFunction> __attribute__((unused)) T
# 112 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
reduce(concurrent_group< agent< grainsize> , groupsize> &g, RandomAccessIterator
# 113 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
first, RandomAccessIterator
# 114 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
last, T
# 115 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
init, BinaryFunction
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
binary_op)
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)last;(void)init;(void)binary_op;
# 219 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
::exit(___);}
# 222 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
template< class RandomAccessIterator, class T, class BinaryFunction> __attribute__((unused)) T
# 224 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
reduce(concurrent_group<> &g, RandomAccessIterator
# 225 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
first, RandomAccessIterator
# 226 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
last, T
# 227 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
init, BinaryFunction
# 228 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
binary_op)
# 229 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)last;(void)init;(void)binary_op;
# 264 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
::exit(___);}
# 267 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
}
# 268 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce.hpp"
}}}}
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
namespace bulk_ {
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
template< std::size_t bound, std::size_t
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
grainsize, class
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
RandomAccessIterator, class
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
T, class
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
BinaryFunction>
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
__attribute((always_inline)) __attribute__((unused)) inline T
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
accumulate(const bounded< bound, agent< grainsize> > &exec, RandomAccessIterator
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
first, RandomAccessIterator
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
last, T
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
init, BinaryFunction
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
binary_op)
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
{int volatile ___ = 1;(void)exec;(void)first;(void)last;(void)init;(void)binary_op;
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
::exit(___);}
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
namespace detail {
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
namespace accumulate_detail {
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
template< class ConcurrentGroup, class RandomAccessIterator, class Size, class T, class BinaryFunction> __attribute__((unused)) T
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
destructive_accumulate_n(ConcurrentGroup &g, RandomAccessIterator first, Size n, T init, BinaryFunction binary_op)
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)n;(void)init;(void)binary_op;
# 103 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
::exit(___);}
# 106 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
template< std::size_t groupsize, std::size_t grainsize, class RandomAccessIterator, class T>
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
struct buffer {
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
typedef typename iterator_value< RandomAccessIterator> ::type value_type;
# 112 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
union {
# 113 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
uninitialized_array< typename iterator_value< RandomAccessIterator> ::type, groupsize * grainsize> inputs;
# 114 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
uninitialized_array< T, groupsize> sums;
# 115 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
};
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
};
# 119 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
template< std::size_t groupsize, std::size_t grainsize, class RandomAccessIterator, class T, class BinaryFunction> __attribute__((unused)) T
# 121 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
accumulate(concurrent_group< agent< grainsize> , groupsize> &g, RandomAccessIterator
# 122 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
first, RandomAccessIterator
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
last, T
# 124 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
init, BinaryFunction
# 125 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
binary_op)
# 126 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)last;(void)init;(void)binary_op;
# 193 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
::exit(___);}
# 194 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
}
# 195 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
}
# 198 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
template< std::size_t groupsize, std::size_t grainsize, class RandomAccessIterator, class T, class BinaryFunction> __attribute__((unused)) T
# 200 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
accumulate(concurrent_group< agent< grainsize> , groupsize> &g, RandomAccessIterator
# 201 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
first, RandomAccessIterator
# 202 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
last, T
# 203 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
init, BinaryFunction
# 204 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
binary_op)
# 205 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)last;(void)init;(void)binary_op;
# 217 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
::exit(___);}
# 220 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
}
# 221 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/accumulate.hpp"
}}}}
# 21 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
namespace thrust {
# 23 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
namespace detail {
# 28 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
struct any_assign {
# 30 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
any_assign()
# 31 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
{ }
# 33 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
template< class T>
# 34 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
any_assign(T)
# 35 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
{ }
# 37 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
template< class T> any_assign &
# 39 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
operator=(T)
# 40 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
{
# 41 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
if (0)
# 42 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
{
# 44 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
int *x = (0);
# 45 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
(*x) = 13;
# 46 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
}
# 48 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
return *this;
# 49 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
}
# 50 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
};
# 53 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
}
# 54 "/usr/local/cuda/include/thrust/iterator/detail/any_assign.h"
}
# 25 "/usr/local/cuda/include/thrust/detail/type_traits/iterator/is_output_iterator.h"
namespace thrust {
# 28 "/usr/local/cuda/include/thrust/detail/type_traits/iterator/is_output_iterator.h"
namespace detail {
# 32 "/usr/local/cuda/include/thrust/detail/type_traits/iterator/is_output_iterator.h"
template< class T>
# 33 "/usr/local/cuda/include/thrust/detail/type_traits/iterator/is_output_iterator.h"
struct is_void_like : public or_< is_void< T> , is_same< T, any_assign> > {
# 38 "/usr/local/cuda/include/thrust/detail/type_traits/iterator/is_output_iterator.h"
};
# 41 "/usr/local/cuda/include/thrust/detail/type_traits/iterator/is_output_iterator.h"
template< class T>
# 42 "/usr/local/cuda/include/thrust/detail/type_traits/iterator/is_output_iterator.h"
struct lazy_is_void_like : public is_void_like< typename T::type> {
# 44 "/usr/local/cuda/include/thrust/detail/type_traits/iterator/is_output_iterator.h"
};
# 53 "/usr/local/cuda/include/thrust/detail/type_traits/iterator/is_output_iterator.h"
template< class T>
# 54 "/usr/local/cuda/include/thrust/detail/type_traits/iterator/is_output_iterator.h"
struct is_output_iterator : public eval_if< is_metafunction_defined< iterator_value< T> > ::value, lazy_is_void_like< iterator_value< T> > , integral_constant< bool, true> > ::type {
# 61 "/usr/local/cuda/include/thrust/detail/type_traits/iterator/is_output_iterator.h"
};
# 63 "/usr/local/cuda/include/thrust/detail/type_traits/iterator/is_output_iterator.h"
}
# 65 "/usr/local/cuda/include/thrust/detail/type_traits/iterator/is_output_iterator.h"
}
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
namespace bulk_ {
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
template< std::size_t bound, std::size_t grainsize, class RandomAccessIterator1, class RandomAccessIterator2, class T, class BinaryFunction>
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
__attribute((always_inline)) __attribute__((unused)) inline RandomAccessIterator2
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
inclusive_scan(const bounded< bound, agent< grainsize> > &exec, RandomAccessIterator1
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
first, RandomAccessIterator1
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
last, RandomAccessIterator2
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
result, T
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
init, BinaryFunction
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
binary_op)
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
{int volatile ___ = 1;(void)exec;(void)first;(void)last;(void)result;(void)init;(void)binary_op;
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
::exit(___);}
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
template< std::size_t bound, std::size_t grainsize, class RandomAccessIterator1, class RandomAccessIterator2, class T, class BinaryFunction>
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
__attribute((always_inline)) __attribute__((unused)) inline RandomAccessIterator2
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
exclusive_scan(const bounded< bound, agent< grainsize> > &exec, RandomAccessIterator1
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
first, RandomAccessIterator1
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
last, RandomAccessIterator2
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
result, T
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
init, BinaryFunction
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
binary_op)
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
{int volatile ___ = 1;(void)exec;(void)first;(void)last;(void)result;(void)init;(void)binary_op;
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
::exit(___);}
# 81 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
namespace detail {
# 83 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
namespace scan_detail {
# 87 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
template< class InputIterator, class OutputIterator, class BinaryFunction>
# 88 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
struct scan_intermediate : public thrust::detail::eval_if< thrust::detail::has_result_type< BinaryFunction> ::value, thrust::detail::result_type< BinaryFunction> , thrust::detail::eval_if< thrust::detail::is_output_iterator< OutputIterator> ::value, iterator_value< InputIterator> , iterator_value< OutputIterator> > > {
# 98 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
};
# 101 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
template< class ConcurrentGroup, class RandomAccessIterator, class T, class BinaryFunction> __attribute__((unused)) T
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
inplace_exclusive_scan(ConcurrentGroup &g, RandomAccessIterator first, T init, BinaryFunction binary_op)
# 103 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)init;(void)binary_op;
# 149 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
::exit(___);}
# 152 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
template< class ConcurrentGroup, class RandomAccessIterator, class Size, class T, class BinaryFunction> __attribute__((unused)) T
# 153 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
small_inplace_exclusive_scan(ConcurrentGroup &g, RandomAccessIterator first, Size n, T init, BinaryFunction binary_op)
# 154 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)n;(void)init;(void)binary_op;
# 209 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
::exit(___);}
# 213 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
template< class ConcurrentGroup, class RandomAccessIterator, class Size, class T, class BinaryFunction> __attribute__((unused)) T
# 214 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
bounded_inplace_exclusive_scan(ConcurrentGroup &g, RandomAccessIterator first, Size n, T init, BinaryFunction binary_op)
# 215 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)n;(void)init;(void)binary_op;
# 219 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
::exit(___);}
# 222 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
template< bool inclusive, std::size_t
# 223 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
bound, std::size_t groupsize, std::size_t grainsize, class
# 224 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
RandomAccessIterator1, class
# 225 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
RandomAccessIterator2, class
# 226 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
T, class
# 227 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
BinaryFunction> __attribute__((unused)) T
# 235 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
scan(bounded< bound, concurrent_group< agent< grainsize> , groupsize> > &
# 238 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
g, RandomAccessIterator1
# 239 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
first, RandomAccessIterator1 last, RandomAccessIterator2
# 240 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
result, T
# 241 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
carry_in, BinaryFunction
# 242 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
binary_op)
# 243 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)last;(void)result;(void)carry_in;(void)binary_op;
# 313 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
::exit(___);}
# 316 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
template< std::size_t groupsize, std::size_t grainsize, class RandomAccessIterator1, class RandomAccessIterator2, class BinaryFunction>
# 317 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
struct scan_buffer {
# 319 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
typedef typename iterator_value< RandomAccessIterator1> ::type input_type;
# 325 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
typedef typename scan_intermediate< RandomAccessIterator1, RandomAccessIterator2, BinaryFunction> ::type intermediate_type;
# 328 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
union {
# 329 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
uninitialized_array< typename iterator_value< RandomAccessIterator1> ::type, groupsize * grainsize> inputs;
# 330 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
uninitialized_array< typename scan_intermediate< RandomAccessIterator1, RandomAccessIterator2, BinaryFunction> ::type, groupsize * grainsize> results;
# 331 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
};
# 332 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
};
# 335 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
template< bool inclusive, std::size_t groupsize, std::size_t grainsize, class RandomAccessIterator1, class RandomAccessIterator2, class T, class BinaryFunction> __attribute__((unused)) void
# 336 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
scan_with_buffer(concurrent_group< agent< grainsize> , groupsize> &g, RandomAccessIterator1
# 337 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
first, RandomAccessIterator1 last, RandomAccessIterator2
# 338 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
result, T
# 339 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
carry_in, BinaryFunction
# 340 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
binary_op, scan_buffer< groupsize, grainsize, RandomAccessIterator1, RandomAccessIterator2, BinaryFunction> &
# 341 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
buffer)
# 342 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)last;(void)result;(void)carry_in;(void)binary_op;(void)buffer;
# 386 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
::exit(___);}
# 389 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
}
# 390 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
}
# 393 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
template< std::size_t bound, std::size_t
# 394 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
groupsize, std::size_t
# 395 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
grainsize, class
# 396 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
RandomAccessIterator1, class
# 397 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
RandomAccessIterator2, class
# 398 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
T, class
# 399 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
BinaryFunction> __attribute__((unused)) typename thrust::detail::enable_if< bound <= (groupsize * grainsize), RandomAccessIterator2> ::type
# 405 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
inclusive_scan(bounded< bound, concurrent_group< agent< grainsize> , groupsize> > &
# 408 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
g, RandomAccessIterator1
# 409 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
first, RandomAccessIterator1 last, RandomAccessIterator2
# 410 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
result, T
# 411 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
carry_in, BinaryFunction
# 412 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
binary_op)
# 413 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)last;(void)result;(void)carry_in;(void)binary_op;
# 416 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
::exit(___);}
# 419 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
template< std::size_t bound, std::size_t
# 420 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
groupsize, std::size_t
# 421 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
grainsize, class
# 422 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
RandomAccessIterator1, class
# 423 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
RandomAccessIterator2, class
# 424 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
BinaryFunction> __attribute__((unused)) typename thrust::detail::enable_if< bound <= (groupsize * grainsize), RandomAccessIterator2> ::type
# 430 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
inclusive_scan(bounded< bound, concurrent_group< agent< grainsize> , groupsize> > &
# 433 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
g, RandomAccessIterator1
# 434 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
first, RandomAccessIterator1 last, RandomAccessIterator2
# 435 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
result, BinaryFunction
# 436 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
binary_op)
# 437 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)last;(void)result;(void)binary_op;
# 454 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
::exit(___);}
# 457 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
template< std::size_t groupsize, std::size_t
# 458 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
grainsize, class
# 459 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
RandomAccessIterator1, class
# 460 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
RandomAccessIterator2, class
# 461 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
T, class
# 462 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
BinaryFunction> __attribute__((unused)) void
# 463 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
inclusive_scan(concurrent_group< agent< grainsize> , groupsize> &g, RandomAccessIterator1
# 464 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
first, RandomAccessIterator1 last, RandomAccessIterator2
# 465 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
result, T
# 466 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
init, BinaryFunction
# 467 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
binary_op)
# 468 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)last;(void)result;(void)init;(void)binary_op;
# 488 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
::exit(___);}
# 491 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
template< std::size_t size, std::size_t
# 492 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
grainsize, class
# 493 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
RandomAccessIterator1, class
# 494 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
RandomAccessIterator2, class
# 495 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
BinaryFunction> __attribute__((unused)) RandomAccessIterator2
# 498 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
inclusive_scan(concurrent_group< agent< grainsize> , size> &this_group, RandomAccessIterator1
# 499 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
first, RandomAccessIterator1
# 500 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
last, RandomAccessIterator2
# 501 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
result, BinaryFunction
# 502 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
binary_op)
# 503 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
{int volatile ___ = 1;(void)this_group;(void)first;(void)last;(void)result;(void)binary_op;
# 528 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
::exit(___);}
# 531 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
template< std::size_t bound, std::size_t groupsize, std::size_t grainsize, class
# 532 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
RandomAccessIterator1, class
# 533 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
RandomAccessIterator2, class
# 534 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
T, class
# 535 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
BinaryFunction> __attribute__((unused)) typename thrust::detail::enable_if< bound <= (groupsize * grainsize), RandomAccessIterator2> ::type
# 541 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
exclusive_scan(bounded< bound, concurrent_group< agent< grainsize> , groupsize> > &
# 544 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
g, RandomAccessIterator1
# 545 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
first, RandomAccessIterator1 last, RandomAccessIterator2
# 546 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
result, T
# 547 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
carry_in, BinaryFunction
# 548 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
binary_op)
# 549 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)last;(void)result;(void)carry_in;(void)binary_op;
# 552 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
::exit(___);}
# 555 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
template< std::size_t groupsize, std::size_t
# 556 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
grainsize, class
# 557 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
RandomAccessIterator1, class
# 558 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
RandomAccessIterator2, class
# 559 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
T, class
# 560 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
BinaryFunction> __attribute__((unused)) typename thrust::detail::enable_if< (groupsize > (0)), RandomAccessIterator2> ::type
# 566 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
exclusive_scan(concurrent_group< agent< grainsize> , groupsize> &g, RandomAccessIterator1
# 567 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
first, RandomAccessIterator1 last, RandomAccessIterator2
# 568 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
result, T
# 569 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
init, BinaryFunction
# 570 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
binary_op)
# 571 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)last;(void)result;(void)init;(void)binary_op;
# 593 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
::exit(___);}
# 596 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
}
# 597 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scan.hpp"
}}}}
# 24 "/usr/local/cuda/include/thrust/iterator/detail/permutation_iterator_base.h"
namespace thrust {
# 27 "/usr/local/cuda/include/thrust/iterator/detail/permutation_iterator_base.h"
template< class , class > class permutation_iterator;
# 30 "/usr/local/cuda/include/thrust/iterator/detail/permutation_iterator_base.h"
namespace detail {
# 33 "/usr/local/cuda/include/thrust/iterator/detail/permutation_iterator_base.h"
template< class ElementIterator, class
# 34 "/usr/local/cuda/include/thrust/iterator/detail/permutation_iterator_base.h"
IndexIterator>
# 35 "/usr/local/cuda/include/thrust/iterator/detail/permutation_iterator_base.h"
struct permutation_iterator_base {
# 37 "/usr/local/cuda/include/thrust/iterator/detail/permutation_iterator_base.h"
typedef typename iterator_system< ElementIterator> ::type System1;
# 38 "/usr/local/cuda/include/thrust/iterator/detail/permutation_iterator_base.h"
typedef typename iterator_system< IndexIterator> ::type System2;
# 47 "/usr/local/cuda/include/thrust/iterator/detail/permutation_iterator_base.h"
typedef iterator_adaptor< permutation_iterator< ElementIterator, IndexIterator> , IndexIterator, typename iterator_value< ElementIterator> ::type, typename minimum_system< typename iterator_system< ElementIterator> ::type, typename iterator_system< IndexIterator> ::type> ::type, use_default, typename iterator_reference< ElementIterator> ::type> type;
# 48 "/usr/local/cuda/include/thrust/iterator/detail/permutation_iterator_base.h"
};
# 50 "/usr/local/cuda/include/thrust/iterator/detail/permutation_iterator_base.h"
}
# 52 "/usr/local/cuda/include/thrust/iterator/detail/permutation_iterator_base.h"
}
# 40 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
namespace thrust {
# 118 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
template< class ElementIterator, class
# 119 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
IndexIterator>
# 120 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
class permutation_iterator : public detail::permutation_iterator_base< ElementIterator, IndexIterator> ::type {
# 129 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
typedef typename ::thrust::detail::permutation_iterator_base< ElementIterator, IndexIterator> ::type super_t;
# 131 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
friend class iterator_core_access;
# 140 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
public: permutation_iterator() : m_element_iterator()
# 141 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
{ }
# 151 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
explicit permutation_iterator(ElementIterator x, IndexIterator y) : super_t(y), m_element_iterator(x)
# 152 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
{ }
# 157 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
template< class OtherElementIterator, class OtherIndexIterator>
# 159 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
permutation_iterator(const ::thrust::permutation_iterator< OtherElementIterator, OtherIndexIterator> &r, typename ::thrust::detail::enable_if_convertible< OtherElementIterator, ElementIterator> ::type * = 0, typename ::thrust::detail::enable_if_convertible< OtherIndexIterator, IndexIterator> ::type * = 0) : super_t((r.base())), m_element_iterator((r.m_element_iterator))
# 165 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
{ }
# 172 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
private: typename ::thrust::detail::permutation_iterator_base< ElementIterator, IndexIterator> ::type::reference dereference() const
# 173 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
{
# 174 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
return *((m_element_iterator) + (*(this->base())));
# 175 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
}
# 178 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
template< class , class > friend class permutation_iterator;
# 180 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
ElementIterator m_element_iterator;
# 183 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
};
# 196 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
template< class ElementIterator, class IndexIterator> permutation_iterator< ElementIterator, IndexIterator>
# 198 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
make_permutation_iterator(ElementIterator e, IndexIterator i)
# 199 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
{
# 200 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
return permutation_iterator< ElementIterator, IndexIterator> (e, i);
# 201 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
}
# 209 "/usr/local/cuda/include/thrust/iterator/permutation_iterator.h"
}
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
namespace bulk_ {
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
template< std::size_t bound, std::size_t
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
grainsize, class
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
RandomAccessIterator1, class
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
RandomAccessIterator2, class
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
RandomAccessIterator3>
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
__attribute((always_inline)) __attribute__((unused)) inline RandomAccessIterator3
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
gather(const bounded< bound, agent< grainsize> > &, RandomAccessIterator1
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
map_first, RandomAccessIterator1
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
map_last, RandomAccessIterator2
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
input_first, RandomAccessIterator3
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
result)
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
{int volatile ___ = 1;(void)map_first;(void)map_last;(void)input_first;(void)result;
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
::exit(___);}
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
template< class ExecutionGroup, class RandomAccessIterator1, class RandomAccessIterator2, class RandomAccessIterator3>
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
__attribute((always_inline)) __attribute__((unused)) inline RandomAccessIterator3
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
gather(ExecutionGroup &g, RandomAccessIterator1
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
map_first, RandomAccessIterator1
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
map_last, RandomAccessIterator2
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
input_first, RandomAccessIterator3
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
result)
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
{int volatile ___ = 1;(void)g;(void)map_first;(void)map_last;(void)input_first;(void)result;
# 81 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
::exit(___);}
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
}
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/gather.hpp"
}}}}
# 158 "/usr/include/c++/5/limits" 3

# 158 "/usr/include/c++/5/limits" 3
namespace std __attribute((__visibility__("default"))) {
# 167 "/usr/include/c++/5/limits" 3
enum float_round_style {
# 169 "/usr/include/c++/5/limits" 3
round_indeterminate = (-1),
# 170 "/usr/include/c++/5/limits" 3
round_toward_zero = 0,
# 171 "/usr/include/c++/5/limits" 3
round_to_nearest,
# 172 "/usr/include/c++/5/limits" 3
round_toward_infinity,
# 173 "/usr/include/c++/5/limits" 3
round_toward_neg_infinity
# 174 "/usr/include/c++/5/limits" 3
};
# 182 "/usr/include/c++/5/limits" 3
enum float_denorm_style {
# 185 "/usr/include/c++/5/limits" 3
denorm_indeterminate = (-1),
# 187 "/usr/include/c++/5/limits" 3
denorm_absent = 0,
# 189 "/usr/include/c++/5/limits" 3
denorm_present
# 190 "/usr/include/c++/5/limits" 3
};
# 202 "/usr/include/c++/5/limits" 3
struct __numeric_limits_base {
# 206 "/usr/include/c++/5/limits" 3
static const bool is_specialized = false;
# 211 "/usr/include/c++/5/limits" 3
static const int digits = 0;
# 214 "/usr/include/c++/5/limits" 3
static const int digits10 = 0;
# 223 "/usr/include/c++/5/limits" 3
static const bool is_signed = false;
# 226 "/usr/include/c++/5/limits" 3
static const bool is_integer = false;
# 231 "/usr/include/c++/5/limits" 3
static const bool is_exact = false;
# 235 "/usr/include/c++/5/limits" 3
static const int radix = 0;
# 239 "/usr/include/c++/5/limits" 3
static const int min_exponent = 0;
# 243 "/usr/include/c++/5/limits" 3
static const int min_exponent10 = 0;
# 248 "/usr/include/c++/5/limits" 3
static const int max_exponent = 0;
# 252 "/usr/include/c++/5/limits" 3
static const int max_exponent10 = 0;
# 255 "/usr/include/c++/5/limits" 3
static const bool has_infinity = false;
# 259 "/usr/include/c++/5/limits" 3
static const bool has_quiet_NaN = false;
# 263 "/usr/include/c++/5/limits" 3
static const bool has_signaling_NaN = false;
# 266 "/usr/include/c++/5/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 270 "/usr/include/c++/5/limits" 3
static const bool has_denorm_loss = false;
# 274 "/usr/include/c++/5/limits" 3
static const bool is_iec559 = false;
# 279 "/usr/include/c++/5/limits" 3
static const bool is_bounded = false;
# 288 "/usr/include/c++/5/limits" 3
static const bool is_modulo = false;
# 291 "/usr/include/c++/5/limits" 3
static const bool traps = false;
# 294 "/usr/include/c++/5/limits" 3
static const bool tinyness_before = false;
# 299 "/usr/include/c++/5/limits" 3
static const float_round_style round_style = round_toward_zero;
# 301 "/usr/include/c++/5/limits" 3
};
# 314 "/usr/include/c++/5/limits" 3
template< class _Tp>
# 315 "/usr/include/c++/5/limits" 3
struct numeric_limits : public __numeric_limits_base {
# 320 "/usr/include/c++/5/limits" 3
static _Tp min() throw() { return _Tp(); }
# 324 "/usr/include/c++/5/limits" 3
static _Tp max() throw() { return _Tp(); }
# 336 "/usr/include/c++/5/limits" 3
static _Tp epsilon() throw() { return _Tp(); }
# 340 "/usr/include/c++/5/limits" 3
static _Tp round_error() throw() { return _Tp(); }
# 344 "/usr/include/c++/5/limits" 3
static _Tp infinity() throw() { return _Tp(); }
# 349 "/usr/include/c++/5/limits" 3
static _Tp quiet_NaN() throw() { return _Tp(); }
# 354 "/usr/include/c++/5/limits" 3
static _Tp signaling_NaN() throw() { return _Tp(); }
# 360 "/usr/include/c++/5/limits" 3
static _Tp denorm_min() throw() { return _Tp(); }
# 361 "/usr/include/c++/5/limits" 3
};
# 382 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< bool> {
# 384 "/usr/include/c++/5/limits" 3
static const bool is_specialized = true;
# 387 "/usr/include/c++/5/limits" 3
static bool min() throw() { return false; }
# 390 "/usr/include/c++/5/limits" 3
static bool max() throw() { return true; }
# 396 "/usr/include/c++/5/limits" 3
static const int digits = 1;
# 397 "/usr/include/c++/5/limits" 3
static const int digits10 = 0;
# 401 "/usr/include/c++/5/limits" 3
static const bool is_signed = false;
# 402 "/usr/include/c++/5/limits" 3
static const bool is_integer = true;
# 403 "/usr/include/c++/5/limits" 3
static const bool is_exact = true;
# 404 "/usr/include/c++/5/limits" 3
static const int radix = 2;
# 407 "/usr/include/c++/5/limits" 3
static bool epsilon() throw() { return false; }
# 410 "/usr/include/c++/5/limits" 3
static bool round_error() throw() { return false; }
# 412 "/usr/include/c++/5/limits" 3
static const int min_exponent = 0;
# 413 "/usr/include/c++/5/limits" 3
static const int min_exponent10 = 0;
# 414 "/usr/include/c++/5/limits" 3
static const int max_exponent = 0;
# 415 "/usr/include/c++/5/limits" 3
static const int max_exponent10 = 0;
# 417 "/usr/include/c++/5/limits" 3
static const bool has_infinity = false;
# 418 "/usr/include/c++/5/limits" 3
static const bool has_quiet_NaN = false;
# 419 "/usr/include/c++/5/limits" 3
static const bool has_signaling_NaN = false;
# 420 "/usr/include/c++/5/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 422 "/usr/include/c++/5/limits" 3
static const bool has_denorm_loss = false;
# 425 "/usr/include/c++/5/limits" 3
static bool infinity() throw() { return false; }
# 428 "/usr/include/c++/5/limits" 3
static bool quiet_NaN() throw() { return false; }
# 431 "/usr/include/c++/5/limits" 3
static bool signaling_NaN() throw() { return false; }
# 434 "/usr/include/c++/5/limits" 3
static bool denorm_min() throw() { return false; }
# 436 "/usr/include/c++/5/limits" 3
static const bool is_iec559 = false;
# 437 "/usr/include/c++/5/limits" 3
static const bool is_bounded = true;
# 438 "/usr/include/c++/5/limits" 3
static const bool is_modulo = false;
# 443 "/usr/include/c++/5/limits" 3
static const bool traps = true;
# 444 "/usr/include/c++/5/limits" 3
static const bool tinyness_before = false;
# 445 "/usr/include/c++/5/limits" 3
static const float_round_style round_style = round_toward_zero;
# 447 "/usr/include/c++/5/limits" 3
};
# 451 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< char> {
# 453 "/usr/include/c++/5/limits" 3
static const bool is_specialized = true;
# 456 "/usr/include/c++/5/limits" 3
static char min() throw() { return (((char)(-1)) < 0) ? (-((((char)(-1)) < 0) ? (((((char)1) << (((sizeof(char) * (8)) - (((char)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((char)0)))) - 1 : ((char)0); }
# 459 "/usr/include/c++/5/limits" 3
static char max() throw() { return (((char)(-1)) < 0) ? (((((char)1) << (((sizeof(char) * (8)) - (((char)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((char)0)); }
# 466 "/usr/include/c++/5/limits" 3
static const int digits = ((sizeof(char) * (8)) - (((char)(-1)) < 0));
# 467 "/usr/include/c++/5/limits" 3
static const int digits10 = ((((sizeof(char) * (8)) - (((char)(-1)) < 0)) * (643L)) / (2136));
# 471 "/usr/include/c++/5/limits" 3
static const bool is_signed = (((char)(-1)) < 0);
# 472 "/usr/include/c++/5/limits" 3
static const bool is_integer = true;
# 473 "/usr/include/c++/5/limits" 3
static const bool is_exact = true;
# 474 "/usr/include/c++/5/limits" 3
static const int radix = 2;
# 477 "/usr/include/c++/5/limits" 3
static char epsilon() throw() { return 0; }
# 480 "/usr/include/c++/5/limits" 3
static char round_error() throw() { return 0; }
# 482 "/usr/include/c++/5/limits" 3
static const int min_exponent = 0;
# 483 "/usr/include/c++/5/limits" 3
static const int min_exponent10 = 0;
# 484 "/usr/include/c++/5/limits" 3
static const int max_exponent = 0;
# 485 "/usr/include/c++/5/limits" 3
static const int max_exponent10 = 0;
# 487 "/usr/include/c++/5/limits" 3
static const bool has_infinity = false;
# 488 "/usr/include/c++/5/limits" 3
static const bool has_quiet_NaN = false;
# 489 "/usr/include/c++/5/limits" 3
static const bool has_signaling_NaN = false;
# 490 "/usr/include/c++/5/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 492 "/usr/include/c++/5/limits" 3
static const bool has_denorm_loss = false;
# 495 "/usr/include/c++/5/limits" 3
static char infinity() throw() { return ((char)0); }
# 498 "/usr/include/c++/5/limits" 3
static char quiet_NaN() throw() { return ((char)0); }
# 501 "/usr/include/c++/5/limits" 3
static char signaling_NaN() throw() { return ((char)0); }
# 504 "/usr/include/c++/5/limits" 3
static char denorm_min() throw() { return static_cast< char>(0); }
# 506 "/usr/include/c++/5/limits" 3
static const bool is_iec559 = false;
# 507 "/usr/include/c++/5/limits" 3
static const bool is_bounded = true;
# 508 "/usr/include/c++/5/limits" 3
static const bool is_modulo = (!is_signed);
# 510 "/usr/include/c++/5/limits" 3
static const bool traps = true;
# 511 "/usr/include/c++/5/limits" 3
static const bool tinyness_before = false;
# 512 "/usr/include/c++/5/limits" 3
static const float_round_style round_style = round_toward_zero;
# 514 "/usr/include/c++/5/limits" 3
};
# 518 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< signed char> {
# 520 "/usr/include/c++/5/limits" 3
static const bool is_specialized = true;
# 523 "/usr/include/c++/5/limits" 3
static signed char min() throw() { return (-127) - 1; }
# 526 "/usr/include/c++/5/limits" 3
static signed char max() throw() { return 127; }
# 533 "/usr/include/c++/5/limits" 3
static const int digits = ((sizeof(signed char) * (8)) - (((signed char)(-1)) < 0));
# 534 "/usr/include/c++/5/limits" 3
static const int digits10 = ((((sizeof(signed char) * (8)) - (((signed char)(-1)) < 0)) * (643L)) / (2136));
# 539 "/usr/include/c++/5/limits" 3
static const bool is_signed = true;
# 540 "/usr/include/c++/5/limits" 3
static const bool is_integer = true;
# 541 "/usr/include/c++/5/limits" 3
static const bool is_exact = true;
# 542 "/usr/include/c++/5/limits" 3
static const int radix = 2;
# 545 "/usr/include/c++/5/limits" 3
static signed char epsilon() throw() { return 0; }
# 548 "/usr/include/c++/5/limits" 3
static signed char round_error() throw() { return 0; }
# 550 "/usr/include/c++/5/limits" 3
static const int min_exponent = 0;
# 551 "/usr/include/c++/5/limits" 3
static const int min_exponent10 = 0;
# 552 "/usr/include/c++/5/limits" 3
static const int max_exponent = 0;
# 553 "/usr/include/c++/5/limits" 3
static const int max_exponent10 = 0;
# 555 "/usr/include/c++/5/limits" 3
static const bool has_infinity = false;
# 556 "/usr/include/c++/5/limits" 3
static const bool has_quiet_NaN = false;
# 557 "/usr/include/c++/5/limits" 3
static const bool has_signaling_NaN = false;
# 558 "/usr/include/c++/5/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 560 "/usr/include/c++/5/limits" 3
static const bool has_denorm_loss = false;
# 563 "/usr/include/c++/5/limits" 3
static signed char infinity() throw() { return static_cast< signed char>(0); }
# 566 "/usr/include/c++/5/limits" 3
static signed char quiet_NaN() throw() { return static_cast< signed char>(0); }
# 569 "/usr/include/c++/5/limits" 3
static signed char signaling_NaN() throw()
# 570 "/usr/include/c++/5/limits" 3
{ return static_cast< signed char>(0); }
# 573 "/usr/include/c++/5/limits" 3
static signed char denorm_min() throw()
# 574 "/usr/include/c++/5/limits" 3
{ return static_cast< signed char>(0); }
# 576 "/usr/include/c++/5/limits" 3
static const bool is_iec559 = false;
# 577 "/usr/include/c++/5/limits" 3
static const bool is_bounded = true;
# 578 "/usr/include/c++/5/limits" 3
static const bool is_modulo = false;
# 580 "/usr/include/c++/5/limits" 3
static const bool traps = true;
# 581 "/usr/include/c++/5/limits" 3
static const bool tinyness_before = false;
# 582 "/usr/include/c++/5/limits" 3
static const float_round_style round_style = round_toward_zero;
# 584 "/usr/include/c++/5/limits" 3
};
# 588 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< unsigned char> {
# 590 "/usr/include/c++/5/limits" 3
static const bool is_specialized = true;
# 593 "/usr/include/c++/5/limits" 3
static unsigned char min() throw() { return 0; }
# 596 "/usr/include/c++/5/limits" 3
static unsigned char max() throw() { return ((127) * 2U) + (1); }
# 603 "/usr/include/c++/5/limits" 3
static const int digits = ((sizeof(unsigned char) * (8)) - (((unsigned char)(-1)) < 0));
# 605 "/usr/include/c++/5/limits" 3
static const int digits10 = ((((sizeof(unsigned char) * (8)) - (((unsigned char)(-1)) < 0)) * (643L)) / (2136));
# 610 "/usr/include/c++/5/limits" 3
static const bool is_signed = false;
# 611 "/usr/include/c++/5/limits" 3
static const bool is_integer = true;
# 612 "/usr/include/c++/5/limits" 3
static const bool is_exact = true;
# 613 "/usr/include/c++/5/limits" 3
static const int radix = 2;
# 616 "/usr/include/c++/5/limits" 3
static unsigned char epsilon() throw() { return 0; }
# 619 "/usr/include/c++/5/limits" 3
static unsigned char round_error() throw() { return 0; }
# 621 "/usr/include/c++/5/limits" 3
static const int min_exponent = 0;
# 622 "/usr/include/c++/5/limits" 3
static const int min_exponent10 = 0;
# 623 "/usr/include/c++/5/limits" 3
static const int max_exponent = 0;
# 624 "/usr/include/c++/5/limits" 3
static const int max_exponent10 = 0;
# 626 "/usr/include/c++/5/limits" 3
static const bool has_infinity = false;
# 627 "/usr/include/c++/5/limits" 3
static const bool has_quiet_NaN = false;
# 628 "/usr/include/c++/5/limits" 3
static const bool has_signaling_NaN = false;
# 629 "/usr/include/c++/5/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 631 "/usr/include/c++/5/limits" 3
static const bool has_denorm_loss = false;
# 634 "/usr/include/c++/5/limits" 3
static unsigned char infinity() throw()
# 635 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned char>(0); }
# 638 "/usr/include/c++/5/limits" 3
static unsigned char quiet_NaN() throw()
# 639 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned char>(0); }
# 642 "/usr/include/c++/5/limits" 3
static unsigned char signaling_NaN() throw()
# 643 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned char>(0); }
# 646 "/usr/include/c++/5/limits" 3
static unsigned char denorm_min() throw()
# 647 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned char>(0); }
# 649 "/usr/include/c++/5/limits" 3
static const bool is_iec559 = false;
# 650 "/usr/include/c++/5/limits" 3
static const bool is_bounded = true;
# 651 "/usr/include/c++/5/limits" 3
static const bool is_modulo = true;
# 653 "/usr/include/c++/5/limits" 3
static const bool traps = true;
# 654 "/usr/include/c++/5/limits" 3
static const bool tinyness_before = false;
# 655 "/usr/include/c++/5/limits" 3
static const float_round_style round_style = round_toward_zero;
# 657 "/usr/include/c++/5/limits" 3
};
# 661 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< wchar_t> {
# 663 "/usr/include/c++/5/limits" 3
static const bool is_specialized = true;
# 666 "/usr/include/c++/5/limits" 3
static wchar_t min() throw() { return (((wchar_t)(-1)) < 0) ? (-((((wchar_t)(-1)) < 0) ? (((((wchar_t)1) << (((sizeof(wchar_t) * (8)) - (((wchar_t)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((wchar_t)0)))) - 1 : ((wchar_t)0); }
# 669 "/usr/include/c++/5/limits" 3
static wchar_t max() throw() { return (((wchar_t)(-1)) < 0) ? (((((wchar_t)1) << (((sizeof(wchar_t) * (8)) - (((wchar_t)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((wchar_t)0)); }
# 676 "/usr/include/c++/5/limits" 3
static const int digits = ((sizeof(wchar_t) * (8)) - (((wchar_t)(-1)) < 0));
# 677 "/usr/include/c++/5/limits" 3
static const int digits10 = ((((sizeof(wchar_t) * (8)) - (((wchar_t)(-1)) < 0)) * (643L)) / (2136));
# 682 "/usr/include/c++/5/limits" 3
static const bool is_signed = (((wchar_t)(-1)) < 0);
# 683 "/usr/include/c++/5/limits" 3
static const bool is_integer = true;
# 684 "/usr/include/c++/5/limits" 3
static const bool is_exact = true;
# 685 "/usr/include/c++/5/limits" 3
static const int radix = 2;
# 688 "/usr/include/c++/5/limits" 3
static wchar_t epsilon() throw() { return 0; }
# 691 "/usr/include/c++/5/limits" 3
static wchar_t round_error() throw() { return 0; }
# 693 "/usr/include/c++/5/limits" 3
static const int min_exponent = 0;
# 694 "/usr/include/c++/5/limits" 3
static const int min_exponent10 = 0;
# 695 "/usr/include/c++/5/limits" 3
static const int max_exponent = 0;
# 696 "/usr/include/c++/5/limits" 3
static const int max_exponent10 = 0;
# 698 "/usr/include/c++/5/limits" 3
static const bool has_infinity = false;
# 699 "/usr/include/c++/5/limits" 3
static const bool has_quiet_NaN = false;
# 700 "/usr/include/c++/5/limits" 3
static const bool has_signaling_NaN = false;
# 701 "/usr/include/c++/5/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 703 "/usr/include/c++/5/limits" 3
static const bool has_denorm_loss = false;
# 706 "/usr/include/c++/5/limits" 3
static wchar_t infinity() throw() { return ((wchar_t)0); }
# 709 "/usr/include/c++/5/limits" 3
static wchar_t quiet_NaN() throw() { return ((wchar_t)0); }
# 712 "/usr/include/c++/5/limits" 3
static wchar_t signaling_NaN() throw() { return ((wchar_t)0); }
# 715 "/usr/include/c++/5/limits" 3
static wchar_t denorm_min() throw() { return ((wchar_t)0); }
# 717 "/usr/include/c++/5/limits" 3
static const bool is_iec559 = false;
# 718 "/usr/include/c++/5/limits" 3
static const bool is_bounded = true;
# 719 "/usr/include/c++/5/limits" 3
static const bool is_modulo = (!is_signed);
# 721 "/usr/include/c++/5/limits" 3
static const bool traps = true;
# 722 "/usr/include/c++/5/limits" 3
static const bool tinyness_before = false;
# 723 "/usr/include/c++/5/limits" 3
static const float_round_style round_style = round_toward_zero;
# 725 "/usr/include/c++/5/limits" 3
};
# 853 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< short> {
# 855 "/usr/include/c++/5/limits" 3
static const bool is_specialized = true;
# 858 "/usr/include/c++/5/limits" 3
static short min() throw() { return (-32767) - 1; }
# 861 "/usr/include/c++/5/limits" 3
static short max() throw() { return 32767; }
# 868 "/usr/include/c++/5/limits" 3
static const int digits = ((sizeof(short) * (8)) - (((short)(-1)) < 0));
# 869 "/usr/include/c++/5/limits" 3
static const int digits10 = ((((sizeof(short) * (8)) - (((short)(-1)) < 0)) * (643L)) / (2136));
# 873 "/usr/include/c++/5/limits" 3
static const bool is_signed = true;
# 874 "/usr/include/c++/5/limits" 3
static const bool is_integer = true;
# 875 "/usr/include/c++/5/limits" 3
static const bool is_exact = true;
# 876 "/usr/include/c++/5/limits" 3
static const int radix = 2;
# 879 "/usr/include/c++/5/limits" 3
static short epsilon() throw() { return 0; }
# 882 "/usr/include/c++/5/limits" 3
static short round_error() throw() { return 0; }
# 884 "/usr/include/c++/5/limits" 3
static const int min_exponent = 0;
# 885 "/usr/include/c++/5/limits" 3
static const int min_exponent10 = 0;
# 886 "/usr/include/c++/5/limits" 3
static const int max_exponent = 0;
# 887 "/usr/include/c++/5/limits" 3
static const int max_exponent10 = 0;
# 889 "/usr/include/c++/5/limits" 3
static const bool has_infinity = false;
# 890 "/usr/include/c++/5/limits" 3
static const bool has_quiet_NaN = false;
# 891 "/usr/include/c++/5/limits" 3
static const bool has_signaling_NaN = false;
# 892 "/usr/include/c++/5/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 894 "/usr/include/c++/5/limits" 3
static const bool has_denorm_loss = false;
# 897 "/usr/include/c++/5/limits" 3
static short infinity() throw() { return ((short)0); }
# 900 "/usr/include/c++/5/limits" 3
static short quiet_NaN() throw() { return ((short)0); }
# 903 "/usr/include/c++/5/limits" 3
static short signaling_NaN() throw() { return ((short)0); }
# 906 "/usr/include/c++/5/limits" 3
static short denorm_min() throw() { return ((short)0); }
# 908 "/usr/include/c++/5/limits" 3
static const bool is_iec559 = false;
# 909 "/usr/include/c++/5/limits" 3
static const bool is_bounded = true;
# 910 "/usr/include/c++/5/limits" 3
static const bool is_modulo = false;
# 912 "/usr/include/c++/5/limits" 3
static const bool traps = true;
# 913 "/usr/include/c++/5/limits" 3
static const bool tinyness_before = false;
# 914 "/usr/include/c++/5/limits" 3
static const float_round_style round_style = round_toward_zero;
# 916 "/usr/include/c++/5/limits" 3
};
# 920 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< unsigned short> {
# 922 "/usr/include/c++/5/limits" 3
static const bool is_specialized = true;
# 925 "/usr/include/c++/5/limits" 3
static unsigned short min() throw() { return 0; }
# 928 "/usr/include/c++/5/limits" 3
static unsigned short max() throw() { return ((32767) * 2U) + (1); }
# 935 "/usr/include/c++/5/limits" 3
static const int digits = ((sizeof(unsigned short) * (8)) - (((unsigned short)(-1)) < 0));
# 937 "/usr/include/c++/5/limits" 3
static const int digits10 = ((((sizeof(unsigned short) * (8)) - (((unsigned short)(-1)) < 0)) * (643L)) / (2136));
# 942 "/usr/include/c++/5/limits" 3
static const bool is_signed = false;
# 943 "/usr/include/c++/5/limits" 3
static const bool is_integer = true;
# 944 "/usr/include/c++/5/limits" 3
static const bool is_exact = true;
# 945 "/usr/include/c++/5/limits" 3
static const int radix = 2;
# 948 "/usr/include/c++/5/limits" 3
static unsigned short epsilon() throw() { return 0; }
# 951 "/usr/include/c++/5/limits" 3
static unsigned short round_error() throw() { return 0; }
# 953 "/usr/include/c++/5/limits" 3
static const int min_exponent = 0;
# 954 "/usr/include/c++/5/limits" 3
static const int min_exponent10 = 0;
# 955 "/usr/include/c++/5/limits" 3
static const int max_exponent = 0;
# 956 "/usr/include/c++/5/limits" 3
static const int max_exponent10 = 0;
# 958 "/usr/include/c++/5/limits" 3
static const bool has_infinity = false;
# 959 "/usr/include/c++/5/limits" 3
static const bool has_quiet_NaN = false;
# 960 "/usr/include/c++/5/limits" 3
static const bool has_signaling_NaN = false;
# 961 "/usr/include/c++/5/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 963 "/usr/include/c++/5/limits" 3
static const bool has_denorm_loss = false;
# 966 "/usr/include/c++/5/limits" 3
static unsigned short infinity() throw()
# 967 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned short>(0); }
# 970 "/usr/include/c++/5/limits" 3
static unsigned short quiet_NaN() throw()
# 971 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned short>(0); }
# 974 "/usr/include/c++/5/limits" 3
static unsigned short signaling_NaN() throw()
# 975 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned short>(0); }
# 978 "/usr/include/c++/5/limits" 3
static unsigned short denorm_min() throw()
# 979 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned short>(0); }
# 981 "/usr/include/c++/5/limits" 3
static const bool is_iec559 = false;
# 982 "/usr/include/c++/5/limits" 3
static const bool is_bounded = true;
# 983 "/usr/include/c++/5/limits" 3
static const bool is_modulo = true;
# 985 "/usr/include/c++/5/limits" 3
static const bool traps = true;
# 986 "/usr/include/c++/5/limits" 3
static const bool tinyness_before = false;
# 987 "/usr/include/c++/5/limits" 3
static const float_round_style round_style = round_toward_zero;
# 989 "/usr/include/c++/5/limits" 3
};
# 993 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< int> {
# 995 "/usr/include/c++/5/limits" 3
static const bool is_specialized = true;
# 998 "/usr/include/c++/5/limits" 3
static int min() throw() { return (-2147483647) - 1; }
# 1001 "/usr/include/c++/5/limits" 3
static int max() throw() { return 2147483647; }
# 1008 "/usr/include/c++/5/limits" 3
static const int digits = ((sizeof(int) * (8)) - (((int)(-1)) < 0));
# 1009 "/usr/include/c++/5/limits" 3
static const int digits10 = ((((sizeof(int) * (8)) - (((int)(-1)) < 0)) * (643L)) / (2136));
# 1013 "/usr/include/c++/5/limits" 3
static const bool is_signed = true;
# 1014 "/usr/include/c++/5/limits" 3
static const bool is_integer = true;
# 1015 "/usr/include/c++/5/limits" 3
static const bool is_exact = true;
# 1016 "/usr/include/c++/5/limits" 3
static const int radix = 2;
# 1019 "/usr/include/c++/5/limits" 3
static int epsilon() throw() { return 0; }
# 1022 "/usr/include/c++/5/limits" 3
static int round_error() throw() { return 0; }
# 1024 "/usr/include/c++/5/limits" 3
static const int min_exponent = 0;
# 1025 "/usr/include/c++/5/limits" 3
static const int min_exponent10 = 0;
# 1026 "/usr/include/c++/5/limits" 3
static const int max_exponent = 0;
# 1027 "/usr/include/c++/5/limits" 3
static const int max_exponent10 = 0;
# 1029 "/usr/include/c++/5/limits" 3
static const bool has_infinity = false;
# 1030 "/usr/include/c++/5/limits" 3
static const bool has_quiet_NaN = false;
# 1031 "/usr/include/c++/5/limits" 3
static const bool has_signaling_NaN = false;
# 1032 "/usr/include/c++/5/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 1034 "/usr/include/c++/5/limits" 3
static const bool has_denorm_loss = false;
# 1037 "/usr/include/c++/5/limits" 3
static int infinity() throw() { return static_cast< int>(0); }
# 1040 "/usr/include/c++/5/limits" 3
static int quiet_NaN() throw() { return static_cast< int>(0); }
# 1043 "/usr/include/c++/5/limits" 3
static int signaling_NaN() throw() { return static_cast< int>(0); }
# 1046 "/usr/include/c++/5/limits" 3
static int denorm_min() throw() { return static_cast< int>(0); }
# 1048 "/usr/include/c++/5/limits" 3
static const bool is_iec559 = false;
# 1049 "/usr/include/c++/5/limits" 3
static const bool is_bounded = true;
# 1050 "/usr/include/c++/5/limits" 3
static const bool is_modulo = false;
# 1052 "/usr/include/c++/5/limits" 3
static const bool traps = true;
# 1053 "/usr/include/c++/5/limits" 3
static const bool tinyness_before = false;
# 1054 "/usr/include/c++/5/limits" 3
static const float_round_style round_style = round_toward_zero;
# 1056 "/usr/include/c++/5/limits" 3
};
# 1060 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< unsigned> {
# 1062 "/usr/include/c++/5/limits" 3
static const bool is_specialized = true;
# 1065 "/usr/include/c++/5/limits" 3
static unsigned min() throw() { return 0; }
# 1068 "/usr/include/c++/5/limits" 3
static unsigned max() throw() { return ((2147483647) * 2U) + (1); }
# 1075 "/usr/include/c++/5/limits" 3
static const int digits = ((sizeof(unsigned) * (8)) - (((unsigned)(-1)) < (0)));
# 1077 "/usr/include/c++/5/limits" 3
static const int digits10 = ((((sizeof(unsigned) * (8)) - (((unsigned)(-1)) < (0))) * (643L)) / (2136));
# 1082 "/usr/include/c++/5/limits" 3
static const bool is_signed = false;
# 1083 "/usr/include/c++/5/limits" 3
static const bool is_integer = true;
# 1084 "/usr/include/c++/5/limits" 3
static const bool is_exact = true;
# 1085 "/usr/include/c++/5/limits" 3
static const int radix = 2;
# 1088 "/usr/include/c++/5/limits" 3
static unsigned epsilon() throw() { return 0; }
# 1091 "/usr/include/c++/5/limits" 3
static unsigned round_error() throw() { return 0; }
# 1093 "/usr/include/c++/5/limits" 3
static const int min_exponent = 0;
# 1094 "/usr/include/c++/5/limits" 3
static const int min_exponent10 = 0;
# 1095 "/usr/include/c++/5/limits" 3
static const int max_exponent = 0;
# 1096 "/usr/include/c++/5/limits" 3
static const int max_exponent10 = 0;
# 1098 "/usr/include/c++/5/limits" 3
static const bool has_infinity = false;
# 1099 "/usr/include/c++/5/limits" 3
static const bool has_quiet_NaN = false;
# 1100 "/usr/include/c++/5/limits" 3
static const bool has_signaling_NaN = false;
# 1101 "/usr/include/c++/5/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 1103 "/usr/include/c++/5/limits" 3
static const bool has_denorm_loss = false;
# 1106 "/usr/include/c++/5/limits" 3
static unsigned infinity() throw() { return static_cast< unsigned>(0); }
# 1109 "/usr/include/c++/5/limits" 3
static unsigned quiet_NaN() throw()
# 1110 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned>(0); }
# 1113 "/usr/include/c++/5/limits" 3
static unsigned signaling_NaN() throw()
# 1114 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned>(0); }
# 1117 "/usr/include/c++/5/limits" 3
static unsigned denorm_min() throw()
# 1118 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned>(0); }
# 1120 "/usr/include/c++/5/limits" 3
static const bool is_iec559 = false;
# 1121 "/usr/include/c++/5/limits" 3
static const bool is_bounded = true;
# 1122 "/usr/include/c++/5/limits" 3
static const bool is_modulo = true;
# 1124 "/usr/include/c++/5/limits" 3
static const bool traps = true;
# 1125 "/usr/include/c++/5/limits" 3
static const bool tinyness_before = false;
# 1126 "/usr/include/c++/5/limits" 3
static const float_round_style round_style = round_toward_zero;
# 1128 "/usr/include/c++/5/limits" 3
};
# 1132 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< long> {
# 1134 "/usr/include/c++/5/limits" 3
static const bool is_specialized = true;
# 1137 "/usr/include/c++/5/limits" 3
static long min() throw() { return (-9223372036854775807L) - (1); }
# 1140 "/usr/include/c++/5/limits" 3
static long max() throw() { return 9223372036854775807L; }
# 1147 "/usr/include/c++/5/limits" 3
static const int digits = ((sizeof(long) * (8)) - (((long)(-1)) < (0)));
# 1148 "/usr/include/c++/5/limits" 3
static const int digits10 = ((((sizeof(long) * (8)) - (((long)(-1)) < (0))) * (643L)) / (2136));
# 1152 "/usr/include/c++/5/limits" 3
static const bool is_signed = true;
# 1153 "/usr/include/c++/5/limits" 3
static const bool is_integer = true;
# 1154 "/usr/include/c++/5/limits" 3
static const bool is_exact = true;
# 1155 "/usr/include/c++/5/limits" 3
static const int radix = 2;
# 1158 "/usr/include/c++/5/limits" 3
static long epsilon() throw() { return 0; }
# 1161 "/usr/include/c++/5/limits" 3
static long round_error() throw() { return 0; }
# 1163 "/usr/include/c++/5/limits" 3
static const int min_exponent = 0;
# 1164 "/usr/include/c++/5/limits" 3
static const int min_exponent10 = 0;
# 1165 "/usr/include/c++/5/limits" 3
static const int max_exponent = 0;
# 1166 "/usr/include/c++/5/limits" 3
static const int max_exponent10 = 0;
# 1168 "/usr/include/c++/5/limits" 3
static const bool has_infinity = false;
# 1169 "/usr/include/c++/5/limits" 3
static const bool has_quiet_NaN = false;
# 1170 "/usr/include/c++/5/limits" 3
static const bool has_signaling_NaN = false;
# 1171 "/usr/include/c++/5/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 1173 "/usr/include/c++/5/limits" 3
static const bool has_denorm_loss = false;
# 1176 "/usr/include/c++/5/limits" 3
static long infinity() throw() { return static_cast< long>(0); }
# 1179 "/usr/include/c++/5/limits" 3
static long quiet_NaN() throw() { return static_cast< long>(0); }
# 1182 "/usr/include/c++/5/limits" 3
static long signaling_NaN() throw() { return static_cast< long>(0); }
# 1185 "/usr/include/c++/5/limits" 3
static long denorm_min() throw() { return static_cast< long>(0); }
# 1187 "/usr/include/c++/5/limits" 3
static const bool is_iec559 = false;
# 1188 "/usr/include/c++/5/limits" 3
static const bool is_bounded = true;
# 1189 "/usr/include/c++/5/limits" 3
static const bool is_modulo = false;
# 1191 "/usr/include/c++/5/limits" 3
static const bool traps = true;
# 1192 "/usr/include/c++/5/limits" 3
static const bool tinyness_before = false;
# 1193 "/usr/include/c++/5/limits" 3
static const float_round_style round_style = round_toward_zero;
# 1195 "/usr/include/c++/5/limits" 3
};
# 1199 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< unsigned long> {
# 1201 "/usr/include/c++/5/limits" 3
static const bool is_specialized = true;
# 1204 "/usr/include/c++/5/limits" 3
static unsigned long min() throw() { return 0; }
# 1207 "/usr/include/c++/5/limits" 3
static unsigned long max() throw() { return ((9223372036854775807L) * 2UL) + (1); }
# 1214 "/usr/include/c++/5/limits" 3
static const int digits = ((sizeof(unsigned long) * (8)) - (((unsigned long)(-1)) < (0)));
# 1216 "/usr/include/c++/5/limits" 3
static const int digits10 = ((((sizeof(unsigned long) * (8)) - (((unsigned long)(-1)) < (0))) * (643L)) / (2136));
# 1221 "/usr/include/c++/5/limits" 3
static const bool is_signed = false;
# 1222 "/usr/include/c++/5/limits" 3
static const bool is_integer = true;
# 1223 "/usr/include/c++/5/limits" 3
static const bool is_exact = true;
# 1224 "/usr/include/c++/5/limits" 3
static const int radix = 2;
# 1227 "/usr/include/c++/5/limits" 3
static unsigned long epsilon() throw() { return 0; }
# 1230 "/usr/include/c++/5/limits" 3
static unsigned long round_error() throw() { return 0; }
# 1232 "/usr/include/c++/5/limits" 3
static const int min_exponent = 0;
# 1233 "/usr/include/c++/5/limits" 3
static const int min_exponent10 = 0;
# 1234 "/usr/include/c++/5/limits" 3
static const int max_exponent = 0;
# 1235 "/usr/include/c++/5/limits" 3
static const int max_exponent10 = 0;
# 1237 "/usr/include/c++/5/limits" 3
static const bool has_infinity = false;
# 1238 "/usr/include/c++/5/limits" 3
static const bool has_quiet_NaN = false;
# 1239 "/usr/include/c++/5/limits" 3
static const bool has_signaling_NaN = false;
# 1240 "/usr/include/c++/5/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 1242 "/usr/include/c++/5/limits" 3
static const bool has_denorm_loss = false;
# 1245 "/usr/include/c++/5/limits" 3
static unsigned long infinity() throw()
# 1246 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned long>(0); }
# 1249 "/usr/include/c++/5/limits" 3
static unsigned long quiet_NaN() throw()
# 1250 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned long>(0); }
# 1253 "/usr/include/c++/5/limits" 3
static unsigned long signaling_NaN() throw()
# 1254 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned long>(0); }
# 1257 "/usr/include/c++/5/limits" 3
static unsigned long denorm_min() throw()
# 1258 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned long>(0); }
# 1260 "/usr/include/c++/5/limits" 3
static const bool is_iec559 = false;
# 1261 "/usr/include/c++/5/limits" 3
static const bool is_bounded = true;
# 1262 "/usr/include/c++/5/limits" 3
static const bool is_modulo = true;
# 1264 "/usr/include/c++/5/limits" 3
static const bool traps = true;
# 1265 "/usr/include/c++/5/limits" 3
static const bool tinyness_before = false;
# 1266 "/usr/include/c++/5/limits" 3
static const float_round_style round_style = round_toward_zero;
# 1268 "/usr/include/c++/5/limits" 3
};
# 1272 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< long long> {
# 1274 "/usr/include/c++/5/limits" 3
static const bool is_specialized = true;
# 1277 "/usr/include/c++/5/limits" 3
static long long min() throw() { return (-9223372036854775807LL) - (1); }
# 1280 "/usr/include/c++/5/limits" 3
static long long max() throw() { return 9223372036854775807LL; }
# 1287 "/usr/include/c++/5/limits" 3
static const int digits = ((sizeof(long long) * (8)) - (((long long)(-1)) < (0)));
# 1289 "/usr/include/c++/5/limits" 3
static const int digits10 = ((((sizeof(long long) * (8)) - (((long long)(-1)) < (0))) * (643L)) / (2136));
# 1294 "/usr/include/c++/5/limits" 3
static const bool is_signed = true;
# 1295 "/usr/include/c++/5/limits" 3
static const bool is_integer = true;
# 1296 "/usr/include/c++/5/limits" 3
static const bool is_exact = true;
# 1297 "/usr/include/c++/5/limits" 3
static const int radix = 2;
# 1300 "/usr/include/c++/5/limits" 3
static long long epsilon() throw() { return 0; }
# 1303 "/usr/include/c++/5/limits" 3
static long long round_error() throw() { return 0; }
# 1305 "/usr/include/c++/5/limits" 3
static const int min_exponent = 0;
# 1306 "/usr/include/c++/5/limits" 3
static const int min_exponent10 = 0;
# 1307 "/usr/include/c++/5/limits" 3
static const int max_exponent = 0;
# 1308 "/usr/include/c++/5/limits" 3
static const int max_exponent10 = 0;
# 1310 "/usr/include/c++/5/limits" 3
static const bool has_infinity = false;
# 1311 "/usr/include/c++/5/limits" 3
static const bool has_quiet_NaN = false;
# 1312 "/usr/include/c++/5/limits" 3
static const bool has_signaling_NaN = false;
# 1313 "/usr/include/c++/5/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 1315 "/usr/include/c++/5/limits" 3
static const bool has_denorm_loss = false;
# 1318 "/usr/include/c++/5/limits" 3
static long long infinity() throw() { return static_cast< long long>(0); }
# 1321 "/usr/include/c++/5/limits" 3
static long long quiet_NaN() throw() { return static_cast< long long>(0); }
# 1324 "/usr/include/c++/5/limits" 3
static long long signaling_NaN() throw()
# 1325 "/usr/include/c++/5/limits" 3
{ return static_cast< long long>(0); }
# 1328 "/usr/include/c++/5/limits" 3
static long long denorm_min() throw() { return static_cast< long long>(0); }
# 1330 "/usr/include/c++/5/limits" 3
static const bool is_iec559 = false;
# 1331 "/usr/include/c++/5/limits" 3
static const bool is_bounded = true;
# 1332 "/usr/include/c++/5/limits" 3
static const bool is_modulo = false;
# 1334 "/usr/include/c++/5/limits" 3
static const bool traps = true;
# 1335 "/usr/include/c++/5/limits" 3
static const bool tinyness_before = false;
# 1336 "/usr/include/c++/5/limits" 3
static const float_round_style round_style = round_toward_zero;
# 1338 "/usr/include/c++/5/limits" 3
};
# 1342 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< unsigned long long> {
# 1344 "/usr/include/c++/5/limits" 3
static const bool is_specialized = true;
# 1347 "/usr/include/c++/5/limits" 3
static unsigned long long min() throw() { return 0; }
# 1350 "/usr/include/c++/5/limits" 3
static unsigned long long max() throw() { return ((9223372036854775807LL) * 2ULL) + (1); }
# 1357 "/usr/include/c++/5/limits" 3
static const int digits = ((sizeof(unsigned long long) * (8)) - (((unsigned long long)(-1)) < (0)));
# 1359 "/usr/include/c++/5/limits" 3
static const int digits10 = ((((sizeof(unsigned long long) * (8)) - (((unsigned long long)(-1)) < (0))) * (643L)) / (2136));
# 1364 "/usr/include/c++/5/limits" 3
static const bool is_signed = false;
# 1365 "/usr/include/c++/5/limits" 3
static const bool is_integer = true;
# 1366 "/usr/include/c++/5/limits" 3
static const bool is_exact = true;
# 1367 "/usr/include/c++/5/limits" 3
static const int radix = 2;
# 1370 "/usr/include/c++/5/limits" 3
static unsigned long long epsilon() throw() { return 0; }
# 1373 "/usr/include/c++/5/limits" 3
static unsigned long long round_error() throw() { return 0; }
# 1375 "/usr/include/c++/5/limits" 3
static const int min_exponent = 0;
# 1376 "/usr/include/c++/5/limits" 3
static const int min_exponent10 = 0;
# 1377 "/usr/include/c++/5/limits" 3
static const int max_exponent = 0;
# 1378 "/usr/include/c++/5/limits" 3
static const int max_exponent10 = 0;
# 1380 "/usr/include/c++/5/limits" 3
static const bool has_infinity = false;
# 1381 "/usr/include/c++/5/limits" 3
static const bool has_quiet_NaN = false;
# 1382 "/usr/include/c++/5/limits" 3
static const bool has_signaling_NaN = false;
# 1383 "/usr/include/c++/5/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 1385 "/usr/include/c++/5/limits" 3
static const bool has_denorm_loss = false;
# 1388 "/usr/include/c++/5/limits" 3
static unsigned long long infinity() throw()
# 1389 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned long long>(0); }
# 1392 "/usr/include/c++/5/limits" 3
static unsigned long long quiet_NaN() throw()
# 1393 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned long long>(0); }
# 1396 "/usr/include/c++/5/limits" 3
static unsigned long long signaling_NaN() throw()
# 1397 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned long long>(0); }
# 1400 "/usr/include/c++/5/limits" 3
static unsigned long long denorm_min() throw()
# 1401 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned long long>(0); }
# 1403 "/usr/include/c++/5/limits" 3
static const bool is_iec559 = false;
# 1404 "/usr/include/c++/5/limits" 3
static const bool is_bounded = true;
# 1405 "/usr/include/c++/5/limits" 3
static const bool is_modulo = true;
# 1407 "/usr/include/c++/5/limits" 3
static const bool traps = true;
# 1408 "/usr/include/c++/5/limits" 3
static const bool tinyness_before = false;
# 1409 "/usr/include/c++/5/limits" 3
static const float_round_style round_style = round_toward_zero;
# 1411 "/usr/include/c++/5/limits" 3
};
# 1569 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< __int128_t> { static const bool is_specialized = true; static __int128_t min() throw() { return (((__int128_t)(-1)) < (0)) ? (-((((__int128_t)(-1)) < (0)) ? (((((__int128_t)1) << ((128 - (((__int128_t)(-1)) < (0))) - 1)) - (1)) << 1) + (1) : (~((__int128_t)0)))) - (1) : ((__int128_t)0); } static __int128_t max() throw() { return (((__int128_t)(-1)) < (0)) ? (((((__int128_t)1) << ((128 - (((__int128_t)(-1)) < (0))) - 1)) - (1)) << 1) + (1) : (~((__int128_t)0)); } static const int digits = (128 - 1); static const int digits10 = (((128 - 1) * 643L) / (2136)); static const bool is_signed = true; static const bool is_integer = true; static const bool is_exact = true; static const int radix = 2; static __int128_t epsilon() throw() { return 0; } static __int128_t round_error() throw() { return 0; } static const int min_exponent = 0; static const int min_exponent10 = 0; static const int max_exponent = 0; static const int max_exponent10 = 0; static const bool has_infinity = false; static const bool has_quiet_NaN = false; static const bool has_signaling_NaN = false; static const float_denorm_style has_denorm = denorm_absent; static const bool has_denorm_loss = false; static __int128_t infinity() throw() { return static_cast< __int128_t>(0); } static __int128_t quiet_NaN() throw() { return static_cast< __int128_t>(0); } static __int128_t signaling_NaN() throw() { return static_cast< __int128_t>(0); } static __int128_t denorm_min() throw() { return static_cast< __int128_t>(0); } static const bool is_iec559 = false; static const bool is_bounded = true; static const bool is_modulo = false; static const bool traps = true; static const bool tinyness_before = false; static const float_round_style round_style = round_toward_zero; }; template<> struct numeric_limits< __uint128_t> { static const bool is_specialized = true; static __uint128_t min() throw() { return 0; } static __uint128_t max() throw() { return (((__uint128_t)(-1)) < (0)) ? (((((__uint128_t)1) << ((128 - (((__uint128_t)(-1)) < (0))) - 1)) - (1)) << 1) + (1) : (~((__uint128_t)0)); } static const int digits = 128; static const int digits10 = (((128) * 643L) / (2136)); static const bool is_signed = false; static const bool is_integer = true; static const bool is_exact = true; static const int radix = 2; static __uint128_t epsilon() throw() { return 0; } static __uint128_t round_error() throw() { return 0; } static const int min_exponent = 0; static const int min_exponent10 = 0; static const int max_exponent = 0; static const int max_exponent10 = 0; static const bool has_infinity = false; static const bool has_quiet_NaN = false; static const bool has_signaling_NaN = false; static const float_denorm_style has_denorm = denorm_absent; static const bool has_denorm_loss = false; static __uint128_t infinity() throw() { return static_cast< __uint128_t>(0); } static __uint128_t quiet_NaN() throw() { return static_cast< __uint128_t>(0); } static __uint128_t signaling_NaN() throw() { return static_cast< __uint128_t>(0); } static __uint128_t denorm_min() throw() { return static_cast< __uint128_t>(0); } static const bool is_iec559 = false; static const bool is_bounded = true; static const bool is_modulo = true; static const bool traps = true; static const bool tinyness_before = false; static const float_round_style round_style = round_toward_zero; };
# 1593 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< float> {
# 1595 "/usr/include/c++/5/limits" 3
static const bool is_specialized = true;
# 1598 "/usr/include/c++/5/limits" 3
static float min() throw() { return (1.175494351e-38F); }
# 1601 "/usr/include/c++/5/limits" 3
static float max() throw() { return (3.402823466e+38F); }
# 1608 "/usr/include/c++/5/limits" 3
static const int digits = 24;
# 1609 "/usr/include/c++/5/limits" 3
static const int digits10 = 6;
# 1614 "/usr/include/c++/5/limits" 3
static const bool is_signed = true;
# 1615 "/usr/include/c++/5/limits" 3
static const bool is_integer = false;
# 1616 "/usr/include/c++/5/limits" 3
static const bool is_exact = false;
# 1617 "/usr/include/c++/5/limits" 3
static const int radix = 2;
# 1620 "/usr/include/c++/5/limits" 3
static float epsilon() throw() { return (1.192092896e-07F); }
# 1623 "/usr/include/c++/5/limits" 3
static float round_error() throw() { return (0.5F); }
# 1625 "/usr/include/c++/5/limits" 3
static const int min_exponent = (-125);
# 1626 "/usr/include/c++/5/limits" 3
static const int min_exponent10 = (-37);
# 1627 "/usr/include/c++/5/limits" 3
static const int max_exponent = 128;
# 1628 "/usr/include/c++/5/limits" 3
static const int max_exponent10 = 38;
# 1630 "/usr/include/c++/5/limits" 3
static const bool has_infinity = (1);
# 1631 "/usr/include/c++/5/limits" 3
static const bool has_quiet_NaN = (1);
# 1632 "/usr/include/c++/5/limits" 3
static const bool has_signaling_NaN = has_quiet_NaN;
# 1633 "/usr/include/c++/5/limits" 3
static const float_denorm_style has_denorm = (((bool)1) ? denorm_present : denorm_absent);
# 1635 "/usr/include/c++/5/limits" 3
static const bool has_denorm_loss = false;
# 1639 "/usr/include/c++/5/limits" 3
static float infinity() throw() { return __builtin_huge_valf(); }
# 1642 "/usr/include/c++/5/limits" 3
static float quiet_NaN() throw() { return __builtin_nanf(""); }
# 1645 "/usr/include/c++/5/limits" 3
static float signaling_NaN() throw() { return __builtin_nansf(""); }
# 1648 "/usr/include/c++/5/limits" 3
static float denorm_min() throw() { return (1.401298464e-45F); }
# 1650 "/usr/include/c++/5/limits" 3
static const bool is_iec559 = (has_infinity && has_quiet_NaN && (has_denorm == (denorm_present)));
# 1652 "/usr/include/c++/5/limits" 3
static const bool is_bounded = true;
# 1653 "/usr/include/c++/5/limits" 3
static const bool is_modulo = false;
# 1655 "/usr/include/c++/5/limits" 3
static const bool traps = false;
# 1656 "/usr/include/c++/5/limits" 3
static const bool tinyness_before = false;
# 1658 "/usr/include/c++/5/limits" 3
static const float_round_style round_style = round_to_nearest;
# 1660 "/usr/include/c++/5/limits" 3
};
# 1668 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< double> {
# 1670 "/usr/include/c++/5/limits" 3
static const bool is_specialized = true;
# 1673 "/usr/include/c++/5/limits" 3
static double min() throw() { return (double)(2.225073858507201383e-308L); }
# 1676 "/usr/include/c++/5/limits" 3
static double max() throw() { return (double)(1.797693134862315708e+308L); }
# 1683 "/usr/include/c++/5/limits" 3
static const int digits = 53;
# 1684 "/usr/include/c++/5/limits" 3
static const int digits10 = 15;
# 1689 "/usr/include/c++/5/limits" 3
static const bool is_signed = true;
# 1690 "/usr/include/c++/5/limits" 3
static const bool is_integer = false;
# 1691 "/usr/include/c++/5/limits" 3
static const bool is_exact = false;
# 1692 "/usr/include/c++/5/limits" 3
static const int radix = 2;
# 1695 "/usr/include/c++/5/limits" 3
static double epsilon() throw() { return (double)(2.220446049250313081e-16L); }
# 1698 "/usr/include/c++/5/limits" 3
static double round_error() throw() { return (0.5); }
# 1700 "/usr/include/c++/5/limits" 3
static const int min_exponent = (-1021);
# 1701 "/usr/include/c++/5/limits" 3
static const int min_exponent10 = (-307);
# 1702 "/usr/include/c++/5/limits" 3
static const int max_exponent = 1024;
# 1703 "/usr/include/c++/5/limits" 3
static const int max_exponent10 = 308;
# 1705 "/usr/include/c++/5/limits" 3
static const bool has_infinity = (1);
# 1706 "/usr/include/c++/5/limits" 3
static const bool has_quiet_NaN = (1);
# 1707 "/usr/include/c++/5/limits" 3
static const bool has_signaling_NaN = has_quiet_NaN;
# 1708 "/usr/include/c++/5/limits" 3
static const float_denorm_style has_denorm = (((bool)1) ? denorm_present : denorm_absent);
# 1710 "/usr/include/c++/5/limits" 3
static const bool has_denorm_loss = false;
# 1714 "/usr/include/c++/5/limits" 3
static double infinity() throw() { return __builtin_huge_val(); }
# 1717 "/usr/include/c++/5/limits" 3
static double quiet_NaN() throw() { return __builtin_nan(""); }
# 1720 "/usr/include/c++/5/limits" 3
static double signaling_NaN() throw() { return __builtin_nans(""); }
# 1723 "/usr/include/c++/5/limits" 3
static double denorm_min() throw() { return (double)(4.940656458412465442e-324L); }
# 1725 "/usr/include/c++/5/limits" 3
static const bool is_iec559 = (has_infinity && has_quiet_NaN && (has_denorm == (denorm_present)));
# 1727 "/usr/include/c++/5/limits" 3
static const bool is_bounded = true;
# 1728 "/usr/include/c++/5/limits" 3
static const bool is_modulo = false;
# 1730 "/usr/include/c++/5/limits" 3
static const bool traps = false;
# 1731 "/usr/include/c++/5/limits" 3
static const bool tinyness_before = false;
# 1733 "/usr/include/c++/5/limits" 3
static const float_round_style round_style = round_to_nearest;
# 1735 "/usr/include/c++/5/limits" 3
};
# 1743 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< long double> {
# 1745 "/usr/include/c++/5/limits" 3
static const bool is_specialized = true;
# 1748 "/usr/include/c++/5/limits" 3
static long double min() throw() { return (0.0L); }
# 1751 "/usr/include/c++/5/limits" 3
static long double max() throw() { return ((__builtin_huge_vall())); }
# 1758 "/usr/include/c++/5/limits" 3
static const int digits = 64;
# 1759 "/usr/include/c++/5/limits" 3
static const int digits10 = 18;
# 1764 "/usr/include/c++/5/limits" 3
static const bool is_signed = true;
# 1765 "/usr/include/c++/5/limits" 3
static const bool is_integer = false;
# 1766 "/usr/include/c++/5/limits" 3
static const bool is_exact = false;
# 1767 "/usr/include/c++/5/limits" 3
static const int radix = 2;
# 1770 "/usr/include/c++/5/limits" 3
static long double epsilon() throw() { return (1.084202172485504434e-19L); }
# 1773 "/usr/include/c++/5/limits" 3
static long double round_error() throw() { return (0.5L); }
# 1775 "/usr/include/c++/5/limits" 3
static const int min_exponent = (-16381);
# 1776 "/usr/include/c++/5/limits" 3
static const int min_exponent10 = (-4931);
# 1777 "/usr/include/c++/5/limits" 3
static const int max_exponent = 16384;
# 1778 "/usr/include/c++/5/limits" 3
static const int max_exponent10 = 4932;
# 1780 "/usr/include/c++/5/limits" 3
static const bool has_infinity = (1);
# 1781 "/usr/include/c++/5/limits" 3
static const bool has_quiet_NaN = (1);
# 1782 "/usr/include/c++/5/limits" 3
static const bool has_signaling_NaN = has_quiet_NaN;
# 1783 "/usr/include/c++/5/limits" 3
static const float_denorm_style has_denorm = (((bool)1) ? denorm_present : denorm_absent);
# 1785 "/usr/include/c++/5/limits" 3
static const bool has_denorm_loss = false;
# 1789 "/usr/include/c++/5/limits" 3
static long double infinity() throw() { return __builtin_huge_vall(); }
# 1792 "/usr/include/c++/5/limits" 3
static long double quiet_NaN() throw() { return __builtin_nanl(""); }
# 1795 "/usr/include/c++/5/limits" 3
static long double signaling_NaN() throw() { return __builtin_nansl(""); }
# 1798 "/usr/include/c++/5/limits" 3
static long double denorm_min() throw() { return (0.0L); }
# 1800 "/usr/include/c++/5/limits" 3
static const bool is_iec559 = (has_infinity && has_quiet_NaN && (has_denorm == (denorm_present)));
# 1802 "/usr/include/c++/5/limits" 3
static const bool is_bounded = true;
# 1803 "/usr/include/c++/5/limits" 3
static const bool is_modulo = false;
# 1805 "/usr/include/c++/5/limits" 3
static const bool traps = false;
# 1806 "/usr/include/c++/5/limits" 3
static const bool tinyness_before = false;
# 1808 "/usr/include/c++/5/limits" 3
static const float_round_style round_style = round_to_nearest;
# 1810 "/usr/include/c++/5/limits" 3
};
# 1817 "/usr/include/c++/5/limits" 3
}
# 24 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"

# 24 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
namespace thrust {
# 27 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
namespace detail {
# 31 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
typedef long long intmax_t;
# 33 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
template< class Number>
# 34 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
struct is_signed : public integral_constant< bool, std::numeric_limits< Number> ::is_signed> {
# 36 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
};
# 39 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
template< class T>
# 40 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
struct num_digits : public eval_if< std::numeric_limits< T> ::is_specialized, integral_constant< int, std::numeric_limits< T> ::digits> , integral_constant< int, (sizeof(T) * std::numeric_limits< unsigned char> ::digits) - ((is_signed< T> ::value) ? 1 : 0)> > ::type {
# 52 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
};
# 55 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
template< class Integer>
# 56 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
struct integer_difference {
# 75 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
private:
# 74 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
template< bool x, bool y>
# 75 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
struct and_ {
# 77 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
static const bool value = false;
# 78 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
};
# 80 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
template< bool y>
# 81 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
struct and_< true, y> {
# 83 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
static const bool value = y;
# 84 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
};
# 104 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
public: typedef typename eval_if< and_< std::numeric_limits< Integer> ::is_signed, (!std::numeric_limits< Integer> ::is_bounded) || ((((int)std::numeric_limits< Integer> ::digits) + 1) >= integral_constant< int, 63> ::value)> ::value, identity_< Integer> , eval_if< (((int)std::numeric_limits< Integer> ::digits) + 1) < integral_constant< int, 31> ::value, identity_< signed int> , eval_if< (((int)std::numeric_limits< Integer> ::digits) + 1) < integral_constant< int, 63> ::value, identity_< signed long> , identity_< long long> > > > ::type type;
# 105 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
};
# 108 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
template< class Number>
# 109 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
struct numeric_difference : public eval_if< is_integral< Number> ::value, integer_difference< Number> , identity_< Number> > {
# 115 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
};
# 118 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
template< class Number> typename numeric_difference< Number> ::type
# 121 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
numeric_distance(Number x, Number y)
# 122 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
{
# 123 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
typedef typename numeric_difference< Number> ::type difference_type;
# 124 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
return ((difference_type)y) - ((difference_type)x);
# 125 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
}
# 127 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
}
# 129 "/usr/local/cuda/include/thrust/detail/numeric_traits.h"
}
# 25 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
template< class Incrementable, class System, class Traversal, class Difference> class counting_iterator;
# 32 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
template< class Incrementable, class System, class Traversal, class Difference>
# 36 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
struct counting_iterator_base {
# 43 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
typedef typename eval_if< is_same< System, use_default> ::value, identity_< any_system_tag> , identity_< System> > ::type system;
# 52 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
typedef typename ia_dflt_help< Traversal, eval_if< is_numeric< Incrementable> ::value, identity_< random_access_traversal_tag> , iterator_traversal< Incrementable> > > ::type traversal;
# 67 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
typedef typename ia_dflt_help< Difference, eval_if< is_numeric< Incrementable> ::value, eval_if< is_integral< Incrementable> ::value, numeric_difference< Incrementable> , identity_< signed long> > , iterator_difference< Incrementable> > > ::type difference;
# 81 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
typedef iterator_adaptor< counting_iterator< Incrementable, System, Traversal, Difference> , Incrementable, Incrementable, typename eval_if< is_same< System, use_default> ::value, identity_< any_system_tag> , identity_< System> > ::type, typename ia_dflt_help< Traversal, eval_if< is_numeric< Incrementable> ::value, identity_< random_access_traversal_tag> , iterator_traversal< Incrementable> > > ::type, Incrementable, typename ia_dflt_help< Difference, eval_if< is_numeric< Incrementable> ::value, eval_if< is_integral< Incrementable> ::value, numeric_difference< Incrementable> , identity_< signed long> > , iterator_difference< Incrementable> > > ::type> type;
# 82 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
};
# 85 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
template< class Difference, class Incrementable1, class Incrementable2>
# 86 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
struct iterator_distance {
# 89 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
static Difference distance(Incrementable1 x, Incrementable2 y)
# 90 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
{
# 91 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
return y - x;
# 92 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
}
# 93 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
};
# 96 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
template< class Difference, class Incrementable1, class Incrementable2>
# 97 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
struct number_distance {
# 100 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
static Difference distance(Incrementable1 x, Incrementable2 y)
# 101 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
{
# 102 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
return static_cast< Difference>(numeric_distance(x, y));
# 103 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
}
# 104 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
};
# 107 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
template< class Difference, class Incrementable1, class Incrementable2, class Enable = void>
# 108 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
struct counting_iterator_equal {
# 111 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
static bool equal(Incrementable1 x, Incrementable2 y)
# 112 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
{
# 113 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
return x == y;
# 114 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
}
# 115 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
};
# 119 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
template< class Difference, class Incrementable1, class Incrementable2>
# 120 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
struct counting_iterator_equal< Difference, Incrementable1, Incrementable2, typename enable_if< is_floating_point< Incrementable1> ::value || is_floating_point< Incrementable2> ::value> ::type> {
# 131 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
static bool equal(Incrementable1 x, Incrementable2 y)
# 132 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
{
# 133 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
typedef number_distance< Difference, Incrementable1, Incrementable2> d;
# 134 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
return d::distance(x, y) == 0;
# 135 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
}
# 136 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
};
# 139 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
}
# 140 "/usr/local/cuda/include/thrust/iterator/detail/counting_iterator.inl"
}
# 42 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
namespace thrust {
# 128 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
template< class Incrementable, class
# 129 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
System = use_default, class
# 130 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
Traversal = use_default, class
# 131 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
Difference = use_default>
# 132 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
class counting_iterator : public detail::counting_iterator_base< Incrementable, System, Traversal, Difference> ::type {
# 137 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
typedef typename ::thrust::detail::counting_iterator_base< Incrementable, System, Traversal, Difference> ::type super_t;
# 139 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
friend class iterator_core_access;
# 142 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
public: typedef typename ::thrust::detail::counting_iterator_base< Incrementable, System, Traversal, Difference> ::type::reference reference;
# 143 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
typedef typename ::thrust::detail::counting_iterator_base< Incrementable, System, Traversal, Difference> ::type::difference_type difference_type;
# 152 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
counting_iterator() { }
# 160 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
counting_iterator(const counting_iterator &rhs) : super_t((rhs.base())) { }
# 167 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
template< class OtherSystem>
# 169 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
counting_iterator(const ::thrust::counting_iterator< Incrementable, OtherSystem, Traversal, Difference> &rhs, typename ::thrust::detail::enable_if_convertible< typename iterator_system< ::thrust::counting_iterator< Incrementable, OtherSystem, Traversal, Difference> > ::type, typename iterator_system< typename ::thrust::detail::counting_iterator_base< Incrementable, System, Traversal, Difference> ::type> ::type> ::type * = 0) : super_t((rhs.base()))
# 174 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
{ }
# 183 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
explicit counting_iterator(Incrementable x) : super_t(x) { }
# 189 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
private: reference dereference() const
# 190 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
{
# 191 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
return (this->base_reference());
# 192 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
}
# 195 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
template< class OtherIncrementable, class OtherSystem, class OtherTraversal, class OtherDifference> bool
# 197 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
equal(const ::thrust::counting_iterator< OtherIncrementable, OtherSystem, OtherTraversal, OtherDifference> &y) const
# 198 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
{
# 199 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
typedef ::thrust::detail::counting_iterator_equal< typename ::thrust::detail::counting_iterator_base< Incrementable, System, Traversal, Difference> ::type::difference_type, Incrementable, OtherIncrementable> e;
# 200 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
return e::equal((this->base()), (y.base()));
# 201 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
}
# 203 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
template< class OtherIncrementable> difference_type
# 206 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
distance_to(const ::thrust::counting_iterator< OtherIncrementable, System, Traversal, Difference> &y) const
# 207 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
{
# 213 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
typedef typename ::thrust::detail::eval_if< ::thrust::detail::is_numeric< Incrementable> ::value, ::thrust::detail::identity_< ::thrust::detail::number_distance< typename ::thrust::detail::counting_iterator_base< Incrementable, System, Traversal, Difference> ::type::difference_type, Incrementable, OtherIncrementable> > , ::thrust::detail::identity_< ::thrust::detail::iterator_distance< typename ::thrust::detail::counting_iterator_base< Incrementable, System, Traversal, Difference> ::type::difference_type, Incrementable, OtherIncrementable> > > ::type d;
# 215 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
return d::distance((this->base()), (y.base()));
# 216 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
}
# 220 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
};
# 229 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
template< class Incrementable> inline counting_iterator< Incrementable>
# 231 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
make_counting_iterator(Incrementable x)
# 232 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
{
# 233 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
return ((counting_iterator< Incrementable> )(x));
# 234 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
}
# 242 "/usr/local/cuda/include/thrust/iterator/counting_iterator.h"
}
# 26 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
namespace thrust {
# 28 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
namespace detail {
# 32 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
template< class RandomAccessIterator1, class
# 33 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
RandomAccessIterator2, class
# 34 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
Difference, class
# 35 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
Reference> class join_iterator;
# 39 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
namespace join_iterator_detail {
# 43 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
template< class RandomAccessIterator1, class
# 44 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
RandomAccessIterator2, class
# 45 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
Difference, class
# 46 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
Reference>
# 47 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
struct join_iterator_base {
# 49 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
typedef typename remove_reference< Reference> ::type value_type;
# 51 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
typedef typename iterator_system< RandomAccessIterator1> ::type system1;
# 52 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
typedef typename iterator_system< RandomAccessIterator2> ::type system2;
# 53 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
typedef typename minimum_system< typename iterator_system< RandomAccessIterator1> ::type, typename iterator_system< RandomAccessIterator2> ::type> ::type system;
# 63 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
typedef iterator_adaptor< join_iterator< RandomAccessIterator1, RandomAccessIterator2, Difference, Reference> , counting_iterator< Difference> , typename remove_reference< Reference> ::type, typename minimum_system< typename iterator_system< RandomAccessIterator1> ::type, typename iterator_system< RandomAccessIterator2> ::type> ::type, random_access_traversal_tag, Reference, Difference> type;
# 64 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
};
# 67 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
}
# 70 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
template< class RandomAccessIterator1, class
# 71 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
RandomAccessIterator2, class
# 72 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
Difference = typename iterator_difference< RandomAccessIterator1> ::type, class
# 73 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
Reference = typename iterator_value< RandomAccessIterator1> ::type>
# 74 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
class join_iterator : public join_iterator_detail::join_iterator_base< RandomAccessIterator1, RandomAccessIterator2, Difference, Reference> ::type {
# 78 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
typedef typename ::thrust::detail::join_iterator_detail::join_iterator_base< RandomAccessIterator1, RandomAccessIterator2, Difference, Reference> ::type super_t;
# 79 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
typedef typename ::thrust::detail::join_iterator_detail::join_iterator_base< RandomAccessIterator1, RandomAccessIterator2, Difference, Reference> ::type::difference_type size_type;
# 83 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
public: join_iterator(RandomAccessIterator1 first1, size_type n, RandomAccessIterator2 first2) : super_t(((counting_iterator< typename ::thrust::detail::join_iterator_detail::join_iterator_base< RandomAccessIterator1, RandomAccessIterator2, Difference, Reference> ::type::difference_type> )(0))), m_n1(n), m_iter1(first1), m_iter2(first2 - (m_n1))
# 88 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
{ }
# 92 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
join_iterator(const join_iterator &other) : super_t(other), m_n1(other.m_n1), m_iter1(other.m_iter1), m_iter2(other.m_iter2)
# 97 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
{ }
# 101 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
friend class ::thrust::iterator_core_access;
# 105 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
private: typename ::thrust::detail::join_iterator_detail::join_iterator_base< RandomAccessIterator1, RandomAccessIterator2, Difference, Reference> ::type::reference dereference() const
# 106 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
{
# 107 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
size_type i = *super_t::base();
# 108 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
return (i < (m_n1)) ? (m_iter1)[i] : (static_cast< typename ::thrust::detail::join_iterator_detail::join_iterator_base< RandomAccessIterator1, RandomAccessIterator2, Difference, Reference> ::type::reference>((m_iter2)[i]));
# 109 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
}
# 112 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
size_type m_n1;
# 113 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
RandomAccessIterator1 m_iter1;
# 114 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
RandomAccessIterator2 m_iter2;
# 115 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
};
# 118 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
template< class RandomAccessIterator1, class Size, class RandomAccessIterator2> join_iterator< RandomAccessIterator1, RandomAccessIterator2, Size>
# 120 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
make_join_iterator(RandomAccessIterator1 first1, Size n1, RandomAccessIterator2 first2)
# 121 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
{
# 122 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
return join_iterator< RandomAccessIterator1, RandomAccessIterator2, Size> (first1, n1, first2);
# 123 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
}
# 126 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
}
# 127 "/usr/local/cuda/include/thrust/iterator/detail/join_iterator.h"
}
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
namespace bulk_ {
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
template< class RandomAccessIterator1, class Size, class RandomAccessIterator2, class Compare> __attribute__((unused)) Size
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
merge_path(RandomAccessIterator1 first1, Size n1, RandomAccessIterator2
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
first2, Size n2, Size
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
diag, Compare
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
comp)
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
{int volatile ___ = 1;(void)first1;(void)n1;(void)first2;(void)n2;(void)diag;(void)comp;
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
::exit(___);}
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
template< std::size_t bound, std::size_t
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
grainsize, class
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
InputIterator1, class
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
InputIterator2, class
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
OutputIterator, class
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
Compare> __attribute__((unused)) OutputIterator
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
merge(const bounded< bound, agent< grainsize> > &e, InputIterator1
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
first1, InputIterator1 last1, InputIterator2
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
first2, InputIterator2 last2, OutputIterator
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
result, Compare
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
comp)
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
{int volatile ___ = 1;(void)e;(void)first1;(void)last1;(void)first2;(void)last2;(void)result;(void)comp;
# 170 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
::exit(___);}
# 173 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
template< std::size_t bound, std::size_t grainsize, class
# 174 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
RandomAccessIterator1, class
# 175 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
RandomAccessIterator2, class
# 176 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
RandomAccessIterator3, class
# 177 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
RandomAccessIterator4, class
# 178 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
RandomAccessIterator5, class
# 179 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
RandomAccessIterator6, class
# 180 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
Compare> __attribute__((unused)) pair< RandomAccessIterator5, RandomAccessIterator6>
# 183 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
merge_by_key(const bounded< bound, agent< grainsize> > &, RandomAccessIterator1
# 184 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
keys_first1, RandomAccessIterator1 keys_last1, RandomAccessIterator2
# 185 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
keys_first2, RandomAccessIterator2 keys_last2, RandomAccessIterator3
# 186 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
values_first1, RandomAccessIterator4
# 187 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
values_first2, RandomAccessIterator5
# 188 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
keys_result, RandomAccessIterator6
# 189 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
values_result, Compare
# 190 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
comp)
# 191 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
{int volatile ___ = 1;(void)keys_first1;(void)keys_last1;(void)keys_first2;(void)keys_last2;(void)values_first1;(void)values_first2;(void)keys_result;(void)values_result;(void)comp;
# 305 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
::exit(___);}
# 308 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
template< std::size_t bound, std::size_t groupsize, std::size_t grainsize, class RandomAccessIterator, class Compare> __attribute__((unused)) typename thrust::detail::enable_if< bound <= (groupsize * grainsize)> ::type
# 313 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
inplace_merge(bounded< bound, concurrent_group< agent< grainsize> , groupsize> > &
# 319 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
g, RandomAccessIterator
# 320 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
first, RandomAccessIterator middle, RandomAccessIterator last, Compare
# 321 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
comp)
# 322 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)middle;(void)last;(void)comp;
# 353 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
::exit(___);}
# 356 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
template< std::size_t bound, std::size_t groupsize, std::size_t grainsize, class
# 357 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
RandomAccessIterator1, class
# 358 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
RandomAccessIterator2, class
# 359 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
RandomAccessIterator3, class
# 360 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
Compare> __attribute__((unused)) typename thrust::detail::enable_if< bound <= (groupsize * grainsize), RandomAccessIterator3> ::type
# 366 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
merge(bounded< bound, concurrent_group< agent< grainsize> , groupsize> > &
# 372 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
g, RandomAccessIterator1
# 373 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
first1, RandomAccessIterator1 last1, RandomAccessIterator2
# 374 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
first2, RandomAccessIterator2 last2, RandomAccessIterator3
# 375 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
result, Compare
# 376 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
comp)
# 377 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
{int volatile ___ = 1;(void)g;(void)first1;(void)last1;(void)first2;(void)last2;(void)result;(void)comp;
# 408 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
::exit(___);}
# 411 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
namespace detail {
# 413 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
namespace merge_detail {
# 418 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
template< std::size_t groupsize, std::size_t grainsize, class RandomAccessIterator1, class RandomAccessIterator2, class RandomAccessIterator3, class RandomAccessIterator4, class Compare> __attribute__((unused)) RandomAccessIterator4
# 421 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
bounded_merge_with_buffer(concurrent_group< agent< grainsize> , groupsize> &exec, RandomAccessIterator1
# 422 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
first1, RandomAccessIterator1 last1, RandomAccessIterator2
# 423 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
first2, RandomAccessIterator2 last2, RandomAccessIterator3
# 424 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
buffer, RandomAccessIterator4
# 425 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
result, Compare
# 426 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
comp)
# 427 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
{int volatile ___ = 1;(void)exec;(void)first1;(void)last1;(void)first2;(void)last2;(void)buffer;(void)result;(void)comp;
# 447 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
::exit(___);}
# 450 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
}
# 451 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
}
# 454 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
template< std::size_t groupsize, std::size_t grainsize, class RandomAccessIterator1, class RandomAccessIterator2, class RandomAccessIterator3, class Compare> __attribute__((unused)) RandomAccessIterator3
# 456 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
merge(concurrent_group< agent< grainsize> , groupsize> &exec, RandomAccessIterator1
# 457 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
first1, RandomAccessIterator1 last1, RandomAccessIterator2
# 458 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
first2, RandomAccessIterator2 last2, RandomAccessIterator3
# 459 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
result, Compare
# 460 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
comp)
# 461 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
{int volatile ___ = 1;(void)exec;(void)first1;(void)last1;(void)first2;(void)last2;(void)result;(void)comp;
# 504 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
::exit(___);}
# 507 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
template< std::size_t groupsize, std::size_t grainsize, class
# 508 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
RandomAccessIterator1, class
# 509 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
RandomAccessIterator2, class
# 510 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
RandomAccessIterator3, class
# 511 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
RandomAccessIterator4, class
# 512 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
RandomAccessIterator5, class
# 513 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
RandomAccessIterator6, class
# 514 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
Compare> __attribute__((unused)) pair< RandomAccessIterator5, RandomAccessIterator6>
# 517 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
merge_by_key(bounded< groupsize * grainsize, concurrent_group< agent< grainsize> , groupsize> > &
# 520 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
g, RandomAccessIterator1
# 521 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
keys_first1, RandomAccessIterator1 keys_last1, RandomAccessIterator2
# 522 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
keys_first2, RandomAccessIterator2 keys_last2, RandomAccessIterator3
# 523 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
values_first1, RandomAccessIterator4
# 524 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
values_first2, RandomAccessIterator5
# 525 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
keys_result, RandomAccessIterator6
# 526 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
values_result, Compare
# 527 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
comp)
# 528 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
{int volatile ___ = 1;(void)g;(void)keys_first1;(void)keys_last1;(void)keys_first2;(void)keys_last2;(void)values_first1;(void)values_first2;(void)keys_result;(void)values_result;(void)comp;
# 607 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
::exit(___);}
# 610 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
}
# 611 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/merge.hpp"
}}}}
# 22 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 23 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
namespace bulk_ {
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
template< std::size_t bound, std::size_t
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
grainsize, class
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
RandomAccessIterator1, class
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
RandomAccessIterator2, class
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
RandomAccessIterator3, class
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
RandomAccessIterator4>
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
__attribute((always_inline)) __attribute__((unused)) inline void
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
scatter_if(const bounded< bound, agent< grainsize> > &exec, RandomAccessIterator1
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
first, RandomAccessIterator1
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
last, RandomAccessIterator2
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
map, RandomAccessIterator3
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
stencil, RandomAccessIterator4
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
result)
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
{int volatile ___ = 1;(void)exec;(void)first;(void)last;(void)map;(void)stencil;(void)result;
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
::exit(___);}
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
template< std::size_t bound, std::size_t
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
groupsize, std::size_t
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
grainsize, class
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
RandomAccessIterator1, class
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
RandomAccessIterator2, class
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
RandomAccessIterator3, class
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
RandomAccessIterator4> __attribute__((unused)) typename thrust::detail::enable_if< bound <= (groupsize * grainsize)> ::type
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
scatter_if(bounded< bound, concurrent_group< agent< grainsize> , groupsize> > &
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
g, RandomAccessIterator1
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
first, RandomAccessIterator1
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
last, RandomAccessIterator2
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
map, RandomAccessIterator3
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
stencil, RandomAccessIterator4
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
result)
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)last;(void)map;(void)stencil;(void)result;
# 112 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
::exit(___);}
# 115 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
template< std::size_t groupsize, std::size_t
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
grainsize, class
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
RandomAccessIterator1, class
# 118 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
RandomAccessIterator2, class
# 119 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
RandomAccessIterator3, class
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
RandomAccessIterator4> __attribute__((unused)) void
# 122 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
scatter_if(concurrent_group< agent< grainsize> , groupsize> &g, RandomAccessIterator1
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
first, RandomAccessIterator1
# 124 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
last, RandomAccessIterator2
# 125 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
map, RandomAccessIterator3
# 126 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
stencil, RandomAccessIterator4
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
result)
# 128 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)last;(void)map;(void)stencil;(void)result;
# 197 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
::exit(___);}
# 200 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
}
# 201 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/scatter.hpp"
}}}}
# 22 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 23 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
namespace bulk_ {
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
template< std::size_t grainsize, class
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
RandomAccessIterator1, class
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
RandomAccessIterator2, class
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
T, class
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
BinaryOperation> __attribute__((unused)) RandomAccessIterator2
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
adjacent_difference(agent< grainsize> &exec, RandomAccessIterator1
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
first, RandomAccessIterator1 last, RandomAccessIterator2
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
result, T
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
init, BinaryOperation
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
binary_op)
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
{int volatile ___ = 1;(void)exec;(void)first;(void)last;(void)result;(void)init;(void)binary_op;
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
::exit(___);}
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
template< std::size_t groupsize, std::size_t
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
grainsize_, class
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
RandomAccessIterator1, class
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
RandomAccessIterator2, class
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
T, class
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
BinaryOperation> __attribute__((unused)) RandomAccessIterator2
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
adjacent_difference(concurrent_group< agent< grainsize_> , groupsize> &g, RandomAccessIterator1
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
first, RandomAccessIterator1 last, RandomAccessIterator2
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
result, T
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
init, BinaryOperation
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
binary_op)
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)last;(void)result;(void)init;(void)binary_op;
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
::exit(___);}
# 110 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
template< std::size_t groupsize, std::size_t
# 111 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
grainsize, class
# 112 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
RandomAccessIterator1, class
# 113 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
RandomAccessIterator2, class
# 114 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
BinaryOperation> __attribute__((unused)) RandomAccessIterator2
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
adjacent_difference(concurrent_group< agent< grainsize> , groupsize> &g, RandomAccessIterator1
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
first, RandomAccessIterator1 last, RandomAccessIterator2
# 118 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
result, BinaryOperation
# 119 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
binary_op)
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
{int volatile ___ = 1;(void)g;(void)first;(void)last;(void)result;(void)binary_op;
# 137 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
::exit(___);}
# 140 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
}
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/adjacent_difference.hpp"
}}}}
# 23 "/usr/local/cuda/include/thrust/iterator/detail/transform_iterator.inl"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/iterator/detail/transform_iterator.inl"
template< class UnaryFunction, class Iterator, class Reference, class Value> class transform_iterator;
# 29 "/usr/local/cuda/include/thrust/iterator/detail/transform_iterator.inl"
namespace detail {
# 33 "/usr/local/cuda/include/thrust/iterator/detail/transform_iterator.inl"
template< class UnaryFunc, class Iterator, class Reference, class Value>
# 34 "/usr/local/cuda/include/thrust/iterator/detail/transform_iterator.inl"
struct transform_iterator_base {
# 41 "/usr/local/cuda/include/thrust/iterator/detail/transform_iterator.inl"
private: typedef typename ia_dflt_help< Reference, result_of_adaptable_function< UnaryFunc (typename iterator_value< Iterator> ::type)> > ::type reference;
# 51 "/usr/local/cuda/include/thrust/iterator/detail/transform_iterator.inl"
typedef typename ia_dflt_help< Value, remove_reference< typename ia_dflt_help< Reference, result_of_adaptable_function< UnaryFunc (typename iterator_value< Iterator> ::type)> > ::type> > ::type cv_value_type;
# 66 "/usr/local/cuda/include/thrust/iterator/detail/transform_iterator.inl"
public: typedef iterator_adaptor< transform_iterator< UnaryFunc, Iterator, Reference, Value> , Iterator, typename ia_dflt_help< Value, remove_reference< typename ia_dflt_help< Reference, result_of_adaptable_function< UnaryFunc (typename iterator_value< Iterator> ::type)> > ::type> > ::type, use_default, typename iterator_traits< Iterator> ::iterator_category, typename ia_dflt_help< Reference, result_of_adaptable_function< UnaryFunc (typename iterator_value< Iterator> ::type)> > ::type> type;
# 67 "/usr/local/cuda/include/thrust/iterator/detail/transform_iterator.inl"
};
# 70 "/usr/local/cuda/include/thrust/iterator/detail/transform_iterator.inl"
}
# 71 "/usr/local/cuda/include/thrust/iterator/detail/transform_iterator.inl"
}
# 43 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
namespace thrust {
# 189 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
template< class AdaptableUnaryFunction, class Iterator, class Reference = use_default, class Value = use_default>
# 190 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
class transform_iterator : public detail::transform_iterator_base< AdaptableUnaryFunction, Iterator, Reference, Value> ::type {
# 198 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
public: typedef typename ::thrust::detail::transform_iterator_base< AdaptableUnaryFunction, Iterator, Reference, Value> ::type super_t;
# 200 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
friend class iterator_core_access;
# 208 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
transform_iterator() { }
# 217 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
transform_iterator(const Iterator &x, AdaptableUnaryFunction f) : super_t(x), m_f(f)
# 218 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
{
# 219 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
}
# 227 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
explicit transform_iterator(const Iterator &x) : super_t(x)
# 228 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
{ }
# 235 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
template< class OtherAdaptableUnaryFunction, class
# 236 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
OtherIterator, class
# 237 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
OtherReference, class
# 238 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
OtherValue>
# 240 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
transform_iterator(const ::thrust::transform_iterator< OtherAdaptableUnaryFunction, OtherIterator, OtherReference, OtherValue> &other, typename ::thrust::detail::enable_if_convertible< OtherIterator, Iterator> ::type * = 0, typename ::thrust::detail::enable_if_convertible< OtherAdaptableUnaryFunction, AdaptableUnaryFunction> ::type * = 0) : super_t((other.base())), m_f((other.functor()))
# 243 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
{ }
# 256 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
transform_iterator &operator=(const transform_iterator &other)
# 257 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
{
# 258 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
return do_assign(other, typename ::thrust::detail::is_copy_assignable< AdaptableUnaryFunction> ::type());
# 266 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
}
# 272 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
AdaptableUnaryFunction functor() const
# 273 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
{ return m_f; }
# 279 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
private: transform_iterator &do_assign(const transform_iterator &other, ::thrust::detail::true_type)
# 280 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
{
# 281 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
::thrust::detail::transform_iterator_base< AdaptableUnaryFunction, Iterator, Reference, Value> ::type::operator=(other);
# 284 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
(m_f) = other.functor();
# 286 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
return *this;
# 287 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
}
# 290 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
transform_iterator &do_assign(const transform_iterator &other, ::thrust::detail::false_type)
# 291 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
{
# 292 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
::thrust::detail::transform_iterator_base< AdaptableUnaryFunction, Iterator, Reference, Value> ::type::operator=(other);
# 296 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
return *this;
# 297 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
}
# 301 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
typename ::thrust::detail::transform_iterator_base< AdaptableUnaryFunction, Iterator, Reference, Value> ::type::reference dereference() const
# 302 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
{
# 305 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
typename iterator_value< Iterator> ::type x = *(this->base());
# 306 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
return (m_f)(x);
# 307 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
}
# 311 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
mutable AdaptableUnaryFunction m_f;
# 315 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
};
# 329 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
template< class AdaptableUnaryFunction, class Iterator> inline transform_iterator< AdaptableUnaryFunction, Iterator>
# 332 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
make_transform_iterator(Iterator it, AdaptableUnaryFunction fun)
# 333 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
{
# 334 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
return transform_iterator< AdaptableUnaryFunction, Iterator> (it, fun);
# 335 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
}
# 343 "/usr/local/cuda/include/thrust/iterator/transform_iterator.h"
}
# 21 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
namespace detail {
# 27 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
template< class T1, class
# 28 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
T2 = minimum_type_detail::any_conversion, class
# 29 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
T3 = minimum_type_detail::any_conversion, class
# 30 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
T4 = minimum_type_detail::any_conversion, class
# 31 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
T5 = minimum_type_detail::any_conversion, class
# 32 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
T6 = minimum_type_detail::any_conversion, class
# 33 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
T7 = minimum_type_detail::any_conversion, class
# 34 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
T8 = minimum_type_detail::any_conversion, class
# 35 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
T9 = minimum_type_detail::any_conversion, class
# 36 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
T10 = minimum_type_detail::any_conversion, class
# 37 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
T11 = minimum_type_detail::any_conversion, class
# 38 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
T12 = minimum_type_detail::any_conversion, class
# 39 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
T13 = minimum_type_detail::any_conversion, class
# 40 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
T14 = minimum_type_detail::any_conversion, class
# 41 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
T15 = minimum_type_detail::any_conversion, class
# 42 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
T16 = minimum_type_detail::any_conversion>
# 43 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
struct minimum_category : public minimum_type< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> {
# 46 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
};
# 48 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
}
# 50 "/usr/local/cuda/include/thrust/iterator/detail/minimum_category.h"
}
# 21 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
namespace detail {
# 27 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class Tuple,
# 28 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class > class UnaryMetaFunction, unsigned
# 29 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
sz = tuple_size< Tuple> ::value> struct tuple_meta_transform;
# 32 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class Tuple,
# 33 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class > class UnaryMetaFunction>
# 34 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 0> {
# 36 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
typedef null_type type;
# 37 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
};
# 39 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class Tuple,
# 40 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class > class UnaryMetaFunction>
# 41 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 1> {
# 45 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> type;
# 46 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
};
# 48 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class Tuple,
# 49 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class > class UnaryMetaFunction>
# 50 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 2> {
# 55 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 1, Tuple> ::type> ::type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> type;
# 56 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
};
# 58 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class Tuple,
# 59 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class > class UnaryMetaFunction>
# 60 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 3> {
# 66 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 1, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 2, Tuple> ::type> ::type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> type;
# 67 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
};
# 69 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class Tuple,
# 70 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class > class UnaryMetaFunction>
# 71 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 4> {
# 78 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 1, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 2, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 3, Tuple> ::type> ::type, null_type, null_type, null_type, null_type, null_type, null_type> type;
# 79 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
};
# 81 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class Tuple,
# 82 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class > class UnaryMetaFunction>
# 83 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 5> {
# 91 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 1, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 2, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 3, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 4, Tuple> ::type> ::type, null_type, null_type, null_type, null_type, null_type> type;
# 92 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
};
# 94 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class Tuple,
# 95 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class > class UnaryMetaFunction>
# 96 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 6> {
# 105 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 1, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 2, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 3, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 4, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 5, Tuple> ::type> ::type, null_type, null_type, null_type, null_type> type;
# 106 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
};
# 108 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class Tuple,
# 109 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class > class UnaryMetaFunction>
# 110 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 7> {
# 120 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 1, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 2, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 3, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 4, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 5, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 6, Tuple> ::type> ::type, null_type, null_type, null_type> type;
# 121 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
};
# 123 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class Tuple,
# 124 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class > class UnaryMetaFunction>
# 125 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 8> {
# 136 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 1, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 2, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 3, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 4, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 5, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 6, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 7, Tuple> ::type> ::type, null_type, null_type> type;
# 137 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
};
# 139 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class Tuple,
# 140 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class > class UnaryMetaFunction>
# 141 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 9> {
# 153 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 1, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 2, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 3, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 4, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 5, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 6, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 7, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 8, Tuple> ::type> ::type, null_type> type;
# 154 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
};
# 156 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class Tuple,
# 157 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
template< class > class UnaryMetaFunction>
# 158 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
struct tuple_meta_transform< Tuple, UnaryMetaFunction, 10> {
# 171 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
typedef tuple< typename UnaryMetaFunction< typename tuple_element< 0, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 1, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 2, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 3, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 4, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 5, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 6, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 7, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 8, Tuple> ::type> ::type, typename UnaryMetaFunction< typename tuple_element< 9, Tuple> ::type> ::type> type;
# 172 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
};
# 174 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
}
# 176 "/usr/local/cuda/include/thrust/detail/tuple_meta_transform.h"
}
# 22 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
namespace detail {
# 28 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class Tuple,
# 29 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class > class UnaryMetaFunction, class
# 30 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
UnaryFunction, unsigned
# 31 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
sz = tuple_size< Tuple> ::value> struct tuple_transform_functor;
# 35 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class Tuple,
# 36 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class > class UnaryMetaFunction, class
# 37 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
UnaryFunction>
# 38 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 0> {
# 42 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 43 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 44 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return null_type();
# 45 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 49 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 50 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 51 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return null_type();
# 52 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 53 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
};
# 56 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class Tuple,
# 57 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class > class UnaryMetaFunction, class
# 58 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
UnaryFunction>
# 59 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 1> {
# 63 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 64 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 65 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 67 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return (XfrmTuple)f(thrust::get< 0> (t));
# 68 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 72 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 73 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 74 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 76 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return (XfrmTuple)f(thrust::get< 0> (t));
# 77 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 78 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
};
# 81 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class Tuple,
# 82 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class > class UnaryMetaFunction, class
# 83 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
UnaryFunction>
# 84 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 2> {
# 88 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 89 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 90 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 92 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)));
# 94 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 98 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 99 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 100 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 102 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)));
# 104 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 105 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
};
# 108 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class Tuple,
# 109 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class > class UnaryMetaFunction, class
# 110 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
UnaryFunction>
# 111 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 3> {
# 115 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 116 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 117 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 119 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)));
# 122 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 126 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 127 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 128 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 130 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)));
# 133 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 134 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
};
# 137 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class Tuple,
# 138 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class > class UnaryMetaFunction, class
# 139 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
UnaryFunction>
# 140 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 4> {
# 144 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 145 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 146 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 148 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)));
# 152 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 156 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 157 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 158 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 160 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)));
# 164 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 165 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
};
# 168 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class Tuple,
# 169 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class > class UnaryMetaFunction, class
# 170 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
UnaryFunction>
# 171 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 5> {
# 175 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 176 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 177 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 179 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)));
# 184 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 188 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 189 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 190 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 192 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)));
# 197 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 198 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
};
# 201 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class Tuple,
# 202 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class > class UnaryMetaFunction, class
# 203 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
UnaryFunction>
# 204 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 6> {
# 208 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 209 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 210 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 212 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)));
# 218 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 222 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 223 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 224 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 226 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)));
# 232 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 233 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
};
# 236 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class Tuple,
# 237 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class > class UnaryMetaFunction, class
# 238 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
UnaryFunction>
# 239 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 7> {
# 243 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 244 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 245 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 247 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)), f(thrust::get< 6> (t)));
# 254 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 258 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 259 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 260 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 262 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)), f(thrust::get< 6> (t)));
# 269 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 270 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
};
# 273 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class Tuple,
# 274 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class > class UnaryMetaFunction, class
# 275 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
UnaryFunction>
# 276 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 8> {
# 280 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 281 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 282 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 284 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)), f(thrust::get< 6> (t)), f(thrust::get< 7> (t)));
# 292 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 296 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 297 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 298 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 300 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)), f(thrust::get< 6> (t)), f(thrust::get< 7> (t)));
# 308 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 309 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
};
# 312 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class Tuple,
# 313 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class > class UnaryMetaFunction, class
# 314 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
UnaryFunction>
# 315 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 9> {
# 319 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 320 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 321 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 323 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)), f(thrust::get< 6> (t)), f(thrust::get< 7> (t)), f(thrust::get< 8> (t)));
# 332 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 336 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 337 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 338 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 340 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)), f(thrust::get< 6> (t)), f(thrust::get< 7> (t)), f(thrust::get< 8> (t)));
# 349 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 350 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
};
# 353 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class Tuple,
# 354 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< class > class UnaryMetaFunction, class
# 355 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
UnaryFunction>
# 356 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
struct tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction, 10> {
# 360 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host(const Tuple &t, UnaryFunction f)
# 361 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 362 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 364 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)), f(thrust::get< 6> (t)), f(thrust::get< 7> (t)), f(thrust::get< 8> (t)), f(thrust::get< 9> (t)));
# 374 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 378 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
static typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type do_it_on_the_host_or_device(const Tuple &t, UnaryFunction f)
# 379 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 380 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
typedef typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type XfrmTuple;
# 382 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return XfrmTuple(f(thrust::get< 0> (t)), f(thrust::get< 1> (t)), f(thrust::get< 2> (t)), f(thrust::get< 3> (t)), f(thrust::get< 4> (t)), f(thrust::get< 5> (t)), f(thrust::get< 6> (t)), f(thrust::get< 7> (t)), f(thrust::get< 8> (t)), f(thrust::get< 9> (t)));
# 392 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 393 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
};
# 396 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< template< class > class UnaryMetaFunction, class
# 397 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
Tuple, class
# 398 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
UnaryFunction> typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type
# 400 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
tuple_host_transform(const Tuple &t, UnaryFunction f)
# 401 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 402 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction> ::do_it_on_the_host(t, f);
# 403 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 405 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
template< template< class > class UnaryMetaFunction, class
# 406 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
Tuple, class
# 407 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
UnaryFunction> typename tuple_meta_transform< Tuple, UnaryMetaFunction> ::type
# 410 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
tuple_host_device_transform(const Tuple &t, UnaryFunction f)
# 411 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
{
# 412 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
return tuple_transform_functor< Tuple, UnaryMetaFunction, UnaryFunction> ::do_it_on_the_host_or_device(t, f);
# 413 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 415 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 417 "/usr/local/cuda/include/thrust/detail/tuple_transform.h"
}
# 24 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
namespace detail {
# 30 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
template< class
# 31 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
T0, class T1, class T2, class
# 32 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
T3, class T4, class T5, class
# 33 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
T6, class T7, class T8, class
# 34 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
T9>
# 36 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
class tuple_of_iterator_references : public tuple< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> {
# 40 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
typedef ::thrust::tuple< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> super_t;
# 45 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
public: tuple_of_iterator_references(const super_t &other) : super_t(other)
# 47 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
{ }
# 51 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
template< class U1, class U2> tuple_of_iterator_references &
# 53 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
operator=(const cons< U1, U2> &other)
# 54 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
{
# 55 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
::thrust::tuple< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> ::operator=(other);
# 56 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
return *this;
# 57 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
}
# 61 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
template< class U1, class U2> tuple_of_iterator_references &
# 63 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
operator=(const pair< U1, U2> &other)
# 64 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
{
# 65 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
::thrust::tuple< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> ::operator=(other);
# 66 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
return *this;
# 67 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
}
# 72 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
template< class U0, class U1, class U2, class
# 73 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
U3, class U4, class U5, class
# 74 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
U6, class U7, class U8, class
# 75 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
U9, class
# 76 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
Pointer, class Derived> tuple_of_iterator_references &
# 87 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
operator=(const reference< ::thrust::tuple< U0, U1, U2, U3, U4, U5, U6, U7, U8, U9> , Pointer, Derived> &other)
# 88 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
{
# 89 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
typedef ::thrust::tuple< U0, U1, U2, U3, U4, U5, U6, U7, U8, U9> tuple_type;
# 92 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
tuple_type other_tuple = other;
# 93 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
::thrust::tuple< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> ::operator=(other_tuple);
# 94 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
return *this;
# 95 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
}
# 100 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
tuple_of_iterator_references() { }
# 103 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
tuple_of_iterator_references(typename access_traits< T0> ::parameter_type t0) : super_t(t0, static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()))
# 114 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
{ }
# 117 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
tuple_of_iterator_references(typename access_traits< T0> ::parameter_type t0, typename access_traits< T1> ::parameter_type
# 118 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t1) : super_t(t0, t1, static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()))
# 128 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
{ }
# 131 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
tuple_of_iterator_references(typename access_traits< T0> ::parameter_type t0, typename access_traits< T1> ::parameter_type
# 132 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t1, typename access_traits< T2> ::parameter_type
# 133 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t2) : super_t(t0, t1, t2, static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()))
# 142 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
{ }
# 145 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
tuple_of_iterator_references(typename access_traits< T0> ::parameter_type t0, typename access_traits< T1> ::parameter_type
# 146 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t1, typename access_traits< T2> ::parameter_type
# 147 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t2, typename access_traits< T3> ::parameter_type
# 148 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t3) : super_t(t0, t1, t2, t3, static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()))
# 156 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
{ }
# 159 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
tuple_of_iterator_references(typename access_traits< T0> ::parameter_type t0, typename access_traits< T1> ::parameter_type
# 160 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t1, typename access_traits< T2> ::parameter_type
# 161 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t2, typename access_traits< T3> ::parameter_type
# 162 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t3, typename access_traits< T4> ::parameter_type
# 163 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t4) : super_t(t0, t1, t2, t3, t4, static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()))
# 170 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
{ }
# 173 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
tuple_of_iterator_references(typename access_traits< T0> ::parameter_type t0, typename access_traits< T1> ::parameter_type
# 174 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t1, typename access_traits< T2> ::parameter_type
# 175 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t2, typename access_traits< T3> ::parameter_type
# 176 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t3, typename access_traits< T4> ::parameter_type
# 177 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t4, typename access_traits< T5> ::parameter_type
# 178 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t5) : super_t(t0, t1, t2, t3, t4, t5, static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()))
# 184 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
{ }
# 187 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
tuple_of_iterator_references(typename access_traits< T0> ::parameter_type t0, typename access_traits< T1> ::parameter_type
# 188 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t1, typename access_traits< T2> ::parameter_type
# 189 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t2, typename access_traits< T3> ::parameter_type
# 190 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t3, typename access_traits< T4> ::parameter_type
# 191 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t4, typename access_traits< T5> ::parameter_type
# 192 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t5, typename access_traits< T6> ::parameter_type
# 193 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t6) : super_t(t0, t1, t2, t3, t4, t5, t6, static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()))
# 198 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
{ }
# 201 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
tuple_of_iterator_references(typename access_traits< T0> ::parameter_type t0, typename access_traits< T1> ::parameter_type
# 202 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t1, typename access_traits< T2> ::parameter_type
# 203 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t2, typename access_traits< T3> ::parameter_type
# 204 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t3, typename access_traits< T4> ::parameter_type
# 205 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t4, typename access_traits< T5> ::parameter_type
# 206 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t5, typename access_traits< T6> ::parameter_type
# 207 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t6, typename access_traits< T7> ::parameter_type
# 208 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t7) : super_t(t0, t1, t2, t3, t4, t5, t6, t7, static_cast< const ::thrust::null_type &>(::thrust::null_type()), static_cast< const ::thrust::null_type &>(::thrust::null_type()))
# 212 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
{ }
# 215 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
tuple_of_iterator_references(typename access_traits< T0> ::parameter_type t0, typename access_traits< T1> ::parameter_type
# 216 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t1, typename access_traits< T2> ::parameter_type
# 217 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t2, typename access_traits< T3> ::parameter_type
# 218 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t3, typename access_traits< T4> ::parameter_type
# 219 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t4, typename access_traits< T5> ::parameter_type
# 220 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t5, typename access_traits< T6> ::parameter_type
# 221 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t6, typename access_traits< T7> ::parameter_type
# 222 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t7, typename access_traits< T8> ::parameter_type
# 223 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t8) : super_t(t0, t1, t2, t3, t4, t5, t6, t7, t8, static_cast< const ::thrust::null_type &>(::thrust::null_type()))
# 226 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
{ }
# 229 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
tuple_of_iterator_references(typename access_traits< T0> ::parameter_type t0, typename access_traits< T1> ::parameter_type
# 230 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t1, typename access_traits< T2> ::parameter_type
# 231 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t2, typename access_traits< T3> ::parameter_type
# 232 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t3, typename access_traits< T4> ::parameter_type
# 233 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t4, typename access_traits< T5> ::parameter_type
# 234 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t5, typename access_traits< T6> ::parameter_type
# 235 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t6, typename access_traits< T7> ::parameter_type
# 236 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t7, typename access_traits< T8> ::parameter_type
# 237 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t8, typename access_traits< T9> ::parameter_type
# 238 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
t9) : super_t(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9)
# 240 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
{ }
# 241 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
};
# 244 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
}
# 245 "/usr/local/cuda/include/thrust/iterator/detail/tuple_of_iterator_references.h"
}
# 30 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
namespace thrust {
# 34 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class IteratorTuple> class zip_iterator;
# 36 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
namespace detail {
# 42 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class DiffType>
# 43 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
class advance_iterator {
# 47 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
public: advance_iterator(DiffType step) : m_step(step) { }
# 50 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class Iterator> void
# 52 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
operator()(Iterator &it) const
# 53 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
{ it += (m_step); }
# 56 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
private: DiffType m_step;
# 57 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 60 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct increment_iterator {
# 63 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class Iterator> void
# 65 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
operator()(Iterator &it)
# 66 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
{ ++it; }
# 67 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 70 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct decrement_iterator {
# 73 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class Iterator> void
# 75 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
operator()(Iterator &it)
# 76 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
{ --it; }
# 77 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 80 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct dereference_iterator {
# 82 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class Iterator>
# 83 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct apply {
# 87 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename iterator_traits< Iterator> ::reference type;
# 88 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 92 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class Iterator> typename apply< Iterator> ::type
# 94 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
operator()(const Iterator &it)
# 95 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
{
# 96 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
return *it;
# 97 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
}
# 98 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 103 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
namespace tuple_impl_specific {
# 107 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class UnaryMetaFunctionClass, class Arg>
# 108 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct apply1 : public UnaryMetaFunctionClass::template apply< Arg> {
# 111 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 115 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class UnaryMetaFunctionClass, class Arg1, class Arg2>
# 116 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct apply2 : public UnaryMetaFunctionClass::template apply< Arg1, Arg2> {
# 119 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 126 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class Tuple, class BinaryMetaFun, class StartType> struct tuple_meta_accumulate;
# 129 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class
# 130 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
Tuple, class
# 131 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
BinaryMetaFun, class
# 132 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
StartType>
# 134 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct tuple_meta_accumulate_impl {
# 144 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename apply2< BinaryMetaFun, typename Tuple::head_type, typename tuple_meta_accumulate< typename Tuple::tail_type, BinaryMetaFun, StartType> ::type> ::type type;
# 145 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 148 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class
# 149 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
Tuple, class
# 150 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
BinaryMetaFun, class
# 151 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
StartType>
# 153 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct tuple_meta_accumulate : public eval_if< is_same< Tuple, null_type> ::value, identity_< StartType> , tuple_meta_accumulate_impl< Tuple, BinaryMetaFun, StartType> > {
# 164 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 187 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class Fun> inline Fun
# 189 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
tuple_for_each(null_type, Fun f)
# 190 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
{
# 191 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
return f;
# 192 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
}
# 195 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class Tuple, class Fun> inline Fun
# 197 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
tuple_for_each(Tuple &t, Fun f)
# 198 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
{
# 199 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
f((t.get_head()));
# 200 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
return tuple_for_each((t.get_tail()), f);
# 201 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
}
# 210 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
inline bool tuple_equal(null_type, null_type)
# 211 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
{ return true; }
# 214 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class Tuple1, class Tuple2> bool
# 216 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
tuple_equal(const Tuple1 &t1, const Tuple2 &t2)
# 217 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
{
# 218 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
return ((t1.get_head()) == (t2.get_head())) && tuple_equal((t1.get_tail()), (t2.get_tail()));
# 220 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
}
# 222 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
}
# 228 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class IteratorTuple>
# 229 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct tuple_of_value_types : public tuple_meta_transform< IteratorTuple, iterator_value> {
# 235 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 238 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct minimum_category_lambda {
# 240 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class T1, class T2>
# 241 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct apply : public minimum_category< T1, T2> {
# 242 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 243 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 250 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class IteratorTuple>
# 251 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct minimum_traversal_category_in_iterator_tuple {
# 256 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename tuple_meta_transform< IteratorTuple, iterator_traversal> ::type tuple_of_traversal_tags;
# 262 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename tuple_impl_specific::tuple_meta_accumulate< typename tuple_meta_transform< IteratorTuple, iterator_traversal> ::type, minimum_category_lambda, random_access_traversal_tag> ::type type;
# 263 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 266 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct minimum_system_lambda {
# 268 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class T1, class T2>
# 269 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct apply : public minimum_system< T1, T2> {
# 270 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 271 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 277 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class IteratorTuple>
# 278 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct minimum_system_in_iterator_tuple {
# 283 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename tuple_meta_transform< IteratorTuple, iterator_system> ::type tuple_of_system_tags;
# 289 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename tuple_impl_specific::tuple_meta_accumulate< typename tuple_meta_transform< IteratorTuple, iterator_system> ::type, minimum_system_lambda, any_system_tag> ::type type;
# 290 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 292 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
namespace zip_iterator_base_ns {
# 296 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< int i, class Tuple>
# 297 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct tuple_elements_helper : public eval_if< i < tuple_size< Tuple> ::value, tuple_element< i, Tuple> , identity_< null_type> > {
# 303 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 306 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class Tuple>
# 307 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct tuple_elements {
# 309 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename tuple_elements_helper< 0, Tuple> ::type T0;
# 310 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename tuple_elements_helper< 1, Tuple> ::type T1;
# 311 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename tuple_elements_helper< 2, Tuple> ::type T2;
# 312 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename tuple_elements_helper< 3, Tuple> ::type T3;
# 313 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename tuple_elements_helper< 4, Tuple> ::type T4;
# 314 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename tuple_elements_helper< 5, Tuple> ::type T5;
# 315 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename tuple_elements_helper< 6, Tuple> ::type T6;
# 316 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename tuple_elements_helper< 7, Tuple> ::type T7;
# 317 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename tuple_elements_helper< 8, Tuple> ::type T8;
# 318 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename tuple_elements_helper< 9, Tuple> ::type T9;
# 319 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 322 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class IteratorTuple>
# 323 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct tuple_of_iterator_references {
# 329 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename tuple_meta_transform< IteratorTuple, iterator_reference> ::type tuple_of_references;
# 332 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef tuple_elements< typename tuple_meta_transform< IteratorTuple, iterator_reference> ::type> elements;
# 346 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef detail::tuple_of_iterator_references< typename tuple_elements< typename tuple_meta_transform< IteratorTuple, iterator_reference> ::type> ::T0, typename tuple_elements< typename tuple_meta_transform< IteratorTuple, iterator_reference> ::type> ::T1, typename tuple_elements< typename tuple_meta_transform< IteratorTuple, iterator_reference> ::type> ::T2, typename tuple_elements< typename tuple_meta_transform< IteratorTuple, iterator_reference> ::type> ::T3, typename tuple_elements< typename tuple_meta_transform< IteratorTuple, iterator_reference> ::type> ::T4, typename tuple_elements< typename tuple_meta_transform< IteratorTuple, iterator_reference> ::type> ::T5, typename tuple_elements< typename tuple_meta_transform< IteratorTuple, iterator_reference> ::type> ::T6, typename tuple_elements< typename tuple_meta_transform< IteratorTuple, iterator_reference> ::type> ::T7, typename tuple_elements< typename tuple_meta_transform< IteratorTuple, iterator_reference> ::type> ::T8, typename tuple_elements< typename tuple_meta_transform< IteratorTuple, iterator_reference> ::type> ::T9> type;
# 347 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 350 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
}
# 359 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
template< class IteratorTuple>
# 360 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
struct zip_iterator_base {
# 365 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename zip_iterator_base_ns::tuple_of_iterator_references< IteratorTuple> ::type reference;
# 369 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename tuple_of_value_types< IteratorTuple> ::type value_type;
# 374 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename iterator_traits< typename tuple_element< 0, IteratorTuple> ::type> ::difference_type difference_type;
# 379 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename minimum_system_in_iterator_tuple< IteratorTuple> ::type system;
# 384 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef typename minimum_traversal_category_in_iterator_tuple< IteratorTuple> ::type traversal_category;
# 397 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
typedef iterator_facade< zip_iterator< IteratorTuple> , typename tuple_of_value_types< IteratorTuple> ::type, typename minimum_system_in_iterator_tuple< IteratorTuple> ::type, typename minimum_traversal_category_in_iterator_tuple< IteratorTuple> ::type, typename zip_iterator_base_ns::tuple_of_iterator_references< IteratorTuple> ::type, typename iterator_traits< typename tuple_element< 0, IteratorTuple> ::type> ::difference_type> type;
# 398 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
};
# 400 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
}
# 402 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator_base.h"
}
# 39 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
namespace thrust {
# 139 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
template< class IteratorTuple>
# 140 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
class zip_iterator : public detail::zip_iterator_base< IteratorTuple> ::type {
# 147 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
public: inline zip_iterator();
# 155 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
inline zip_iterator(IteratorTuple iterator_tuple);
# 162 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
template< class OtherIteratorTuple> inline zip_iterator(const ::thrust::zip_iterator< OtherIteratorTuple> & other, typename ::thrust::detail::enable_if_convertible< OtherIteratorTuple, IteratorTuple> ::type * = 0);
# 177 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
inline const IteratorTuple &get_iterator_tuple() const;
# 183 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
private: typedef typename ::thrust::detail::zip_iterator_base< IteratorTuple> ::type super_t;
# 185 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
friend class iterator_core_access;
# 190 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
typename ::thrust::detail::zip_iterator_base< IteratorTuple> ::type::reference dereference() const;
# 195 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
template< class OtherIteratorTuple> inline bool equal(const ::thrust::zip_iterator< OtherIteratorTuple> & other) const;
# 201 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
inline void advance(typename ::thrust::detail::zip_iterator_base< IteratorTuple> ::type::difference_type n);
# 205 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
inline void increment();
# 209 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
inline void decrement();
# 212 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
template< class OtherIteratorTuple> inline typename ::thrust::detail::zip_iterator_base< IteratorTuple> ::type::difference_type distance_to(const ::thrust::zip_iterator< OtherIteratorTuple> & other) const;
# 218 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
IteratorTuple m_iterator_tuple;
# 222 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
};
# 232 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
template< class IteratorTuple> inline zip_iterator< IteratorTuple> make_zip_iterator(IteratorTuple t);
# 242 "/usr/local/cuda/include/thrust/iterator/zip_iterator.h"
}
# 22 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
template< class IteratorTuple> inline
# 29 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
zip_iterator< IteratorTuple> ::zip_iterator()
# 30 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
{
# 31 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
}
# 34 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
template< class IteratorTuple> inline
# 37 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
zip_iterator< IteratorTuple> ::zip_iterator(IteratorTuple iterator_tuple) : m_iterator_tuple(iterator_tuple)
# 39 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
{
# 40 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
}
# 43 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
template< class IteratorTuple>
# 44 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
template< class OtherIteratorTuple> inline
# 47 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
zip_iterator< IteratorTuple> ::zip_iterator(const ::thrust::zip_iterator< OtherIteratorTuple> &other, typename ::thrust::detail::enable_if_convertible< OtherIteratorTuple, IteratorTuple> ::type *) : m_iterator_tuple((other.get_iterator_tuple()))
# 53 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
{
# 54 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
}
# 57 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
template< class IteratorTuple> inline const IteratorTuple &
# 60 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
zip_iterator< IteratorTuple> ::get_iterator_tuple() const
# 61 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
{
# 62 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
return m_iterator_tuple;
# 63 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
}
# 66 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
template< class IteratorTuple> typename detail::zip_iterator_base< IteratorTuple> ::type::reference
# 70 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
zip_iterator< IteratorTuple> ::dereference() const
# 71 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
{
# 72 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
using namespace ::thrust::detail::tuple_impl_specific;
# 74 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
return ::thrust::detail::tuple_host_device_transform< ::thrust::detail::dereference_iterator::template apply> (get_iterator_tuple(), ::thrust::detail::dereference_iterator());
# 75 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
}
# 79 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
template< class IteratorTuple>
# 80 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
template< class OtherIteratorTuple> inline bool
# 83 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
zip_iterator< IteratorTuple> ::equal(const ::thrust::zip_iterator< OtherIteratorTuple> &other) const
# 84 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
{
# 85 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
return get< 0> (get_iterator_tuple()) == get< 0> ((other.get_iterator_tuple()));
# 86 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
}
# 89 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
template< class IteratorTuple> inline void
# 92 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
zip_iterator< IteratorTuple> ::advance(typename ::thrust::detail::zip_iterator_base< IteratorTuple> ::type::difference_type n)
# 93 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
{
# 94 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
using namespace ::thrust::detail::tuple_impl_specific;
# 95 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
tuple_for_each(m_iterator_tuple, ((::thrust::detail::advance_iterator< typename ::thrust::detail::zip_iterator_base< IteratorTuple> ::type::difference_type> )(n)));
# 97 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
}
# 100 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
template< class IteratorTuple> inline void
# 103 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
zip_iterator< IteratorTuple> ::increment()
# 104 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
{
# 105 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
using namespace ::thrust::detail::tuple_impl_specific;
# 106 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
tuple_for_each(m_iterator_tuple, ::thrust::detail::increment_iterator());
# 107 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
}
# 110 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
template< class IteratorTuple> inline void
# 113 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
zip_iterator< IteratorTuple> ::decrement()
# 114 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
{
# 115 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
using namespace ::thrust::detail::tuple_impl_specific;
# 116 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
tuple_for_each(m_iterator_tuple, ::thrust::detail::decrement_iterator());
# 117 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
}
# 121 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
template< class IteratorTuple>
# 122 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
template< class OtherIteratorTuple> inline typename detail::zip_iterator_base< IteratorTuple> ::type::difference_type
# 126 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
zip_iterator< IteratorTuple> ::distance_to(const ::thrust::zip_iterator< OtherIteratorTuple> &other) const
# 127 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
{
# 128 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
return get< 0> ((other.get_iterator_tuple())) - get< 0> (get_iterator_tuple());
# 129 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
}
# 132 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
template< class IteratorTuple> inline zip_iterator< IteratorTuple>
# 134 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
make_zip_iterator(IteratorTuple t)
# 135 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
{
# 136 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
return ((zip_iterator< IteratorTuple> )(t));
# 137 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
}
# 140 "/usr/local/cuda/include/thrust/iterator/detail/zip_iterator.inl"
}
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
namespace bulk_ {
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
namespace detail {
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
template< class RandomAccessIterator, class
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
BinaryPredicate = equal_to< typename iterator_value< RandomAccessIterator> ::type> , class
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
ValueType = bool, class
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
IndexType = typename iterator_difference< RandomAccessIterator> ::type>
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
class head_flags_with_init {
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
typedef typename iterator_value< RandomAccessIterator> ::type init_type;
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
public: struct head_flag_functor {
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
BinaryPredicate binary_pred;
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
init_type init;
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
IndexType n;
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
typedef ValueType result_type;
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
head_flag_functor(init_type init, IndexType n) : binary_pred(), init(init), n(n)
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{ }
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
head_flag_functor(init_type init, IndexType n, BinaryPredicate binary_pred) : binary_pred(binary_pred), init(init), n(n)
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{ }
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
template< class Tuple>
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
__attribute((always_inline)) result_type
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
operator()(const Tuple &t)
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
const IndexType i = thrust::get< 0> (t);
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
if (i == 0)
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
return !(binary_pred)(init, thrust::get< 1> (t));
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
}
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
return !(binary_pred)(thrust::get< 1> (t), thrust::get< 2> (t));
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
}
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
};
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
typedef thrust::counting_iterator< IndexType> counting_iterator;
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
typedef transform_iterator< head_flag_functor, zip_iterator< tuple< thrust::counting_iterator< IndexType> , RandomAccessIterator, RandomAccessIterator, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > > iterator;
# 88 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
head_flags_with_init(RandomAccessIterator first, RandomAccessIterator last, init_type init) : m_begin(thrust::make_transform_iterator(thrust::make_zip_iterator(thrust::make_tuple(((thrust::counting_iterator< IndexType> )(0)), first, first - 1)), head_flag_functor(init, last - first))), m_end((m_begin) + (last - first))
# 92 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{ }
# 95 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
head_flags_with_init(RandomAccessIterator first, RandomAccessIterator last, init_type init, BinaryPredicate binary_pred) : m_begin(thrust::make_transform_iterator(thrust::make_zip_iterator(thrust::make_tuple(((thrust::counting_iterator< IndexType> )(0)), first, first - 1)), head_flag_functor(init, last - first, binary_pred))), m_end((m_begin) + (last - first))
# 99 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{ }
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
iterator begin() const
# 103 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{
# 104 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
return m_begin;
# 105 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
}
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
iterator end() const
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{
# 110 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
return m_end;
# 111 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
}
# 113 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
template< class OtherIndex> typename transform_iterator< head_flag_functor, zip_iterator< tuple< thrust::counting_iterator< IndexType> , RandomAccessIterator, RandomAccessIterator, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > > ::reference
# 115 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
operator[](OtherIndex i)
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
return *(begin() + i);
# 118 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
}
# 121 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
private: iterator m_begin, m_end;
# 122 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
};
# 126 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
template< class RandomAccessIterator, class
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
BinaryPredicate = equal_to< typename iterator_value< RandomAccessIterator> ::type> , class
# 128 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
ValueType = bool, class
# 129 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
IndexType = typename iterator_difference< RandomAccessIterator> ::type>
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
class head_flags_ {
# 136 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
public: struct head_flag_functor {
# 138 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
BinaryPredicate binary_pred;
# 139 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
IndexType n;
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
typedef ValueType result_type;
# 144 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
head_flag_functor(IndexType n) : binary_pred(), n(n)
# 146 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{ }
# 149 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
head_flag_functor(IndexType n, BinaryPredicate binary_pred) : binary_pred(binary_pred), n(n)
# 151 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{ }
# 153 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
template< class Tuple>
# 154 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
__attribute((always_inline)) result_type
# 155 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
operator()(const Tuple &t)
# 156 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{
# 157 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
const IndexType i = thrust::get< 0> (t);
# 161 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
return (i == 0) || (!(binary_pred)(thrust::get< 1> (t), thrust::get< 2> (t)));
# 162 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
}
# 163 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
};
# 165 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
typedef thrust::counting_iterator< IndexType> counting_iterator;
# 171 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
typedef transform_iterator< head_flag_functor, zip_iterator< tuple< thrust::counting_iterator< IndexType> , RandomAccessIterator, RandomAccessIterator, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > > iterator;
# 175 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
head_flags_(RandomAccessIterator first, RandomAccessIterator last) : m_begin(thrust::make_transform_iterator(thrust::make_zip_iterator(thrust::make_tuple(((thrust::counting_iterator< IndexType> )(0)), first, first - 1)), (head_flag_functor)(last - first))), m_end((m_begin) + (last - first))
# 179 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{ }
# 183 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
head_flags_(RandomAccessIterator first, RandomAccessIterator last, BinaryPredicate binary_pred) : m_begin(thrust::make_transform_iterator(thrust::make_zip_iterator(thrust::make_tuple(((thrust::counting_iterator< IndexType> )(0)), first, first - 1)), head_flag_functor(last - first, binary_pred))), m_end((m_begin) + (last - first))
# 187 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{ }
# 190 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
iterator begin() const
# 191 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{
# 192 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
return m_begin;
# 193 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
}
# 196 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
iterator end() const
# 197 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{
# 198 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
return m_end;
# 199 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
}
# 201 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
template< class OtherIndex> typename transform_iterator< head_flag_functor, zip_iterator< tuple< thrust::counting_iterator< IndexType> , RandomAccessIterator, RandomAccessIterator, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > > ::reference
# 203 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
operator[](OtherIndex i)
# 204 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{
# 205 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
return *(begin() + i);
# 206 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
}
# 209 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
private: iterator m_begin, m_end;
# 210 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
};
# 213 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
template< class RandomAccessIterator, class BinaryPredicate> head_flags_< RandomAccessIterator, BinaryPredicate>
# 217 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
make_head_flags(RandomAccessIterator first, RandomAccessIterator last, BinaryPredicate binary_pred)
# 218 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{
# 220 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
return head_flags_< RandomAccessIterator, BinaryPredicate> (first, last, binary_pred);
# 221 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
}
# 224 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
template< class RandomAccessIterator> head_flags_< RandomAccessIterator>
# 228 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
make_head_flags(RandomAccessIterator first, RandomAccessIterator last)
# 229 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
{
# 231 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
return head_flags_< RandomAccessIterator> (first, last);
# 232 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
}
# 235 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
}
# 236 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
}
# 237 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/head_flags.hpp"
}}}}
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
namespace bulk_ {
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
namespace detail {
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
template< class RandomAccessIterator, class
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
BinaryPredicate = equal_to< typename iterator_value< RandomAccessIterator> ::type> , class
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
ValueType = bool, class
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
IndexType = typename iterator_difference< RandomAccessIterator> ::type>
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
class tail_flags_ {
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
public: struct tail_flag_functor {
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
BinaryPredicate binary_pred;
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
RandomAccessIterator iter;
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
IndexType n;
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
typedef ValueType result_type;
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
tail_flag_functor(RandomAccessIterator first, RandomAccessIterator last) : binary_pred(), iter(first), n(last - first)
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
{ }
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
tail_flag_functor(RandomAccessIterator first, RandomAccessIterator last, BinaryPredicate binary_pred) : binary_pred(binary_pred), iter(first), n(last - first)
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
{ }
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
__attribute((always_inline)) result_type
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
operator()(const IndexType &i)
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
{
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
return (i == ((n) - 1)) || (!(binary_pred)((iter)[i], (iter)[i + 1]));
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
}
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
};
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
typedef thrust::counting_iterator< IndexType> counting_iterator;
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
typedef transform_iterator< tail_flag_functor, thrust::counting_iterator< IndexType> > iterator;
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
tail_flags_(RandomAccessIterator first, RandomAccessIterator last) : m_begin(thrust::make_transform_iterator(((thrust::counting_iterator< IndexType> )(0)), tail_flag_functor(first, last))), m_end((m_begin) + (last - first))
# 82 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
{ }
# 86 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
tail_flags_(RandomAccessIterator first, RandomAccessIterator last, BinaryPredicate binary_pred) : m_begin(thrust::make_transform_iterator(((thrust::counting_iterator< IndexType> )(0)), tail_flag_functor(first, last, binary_pred))), m_end((m_begin) + (last - first))
# 90 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
{ }
# 93 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
iterator begin() const
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
{
# 95 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
return m_begin;
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
}
# 99 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
iterator end() const
# 100 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
{
# 101 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
return m_end;
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
}
# 104 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
template< class OtherIndex> typename transform_iterator< tail_flag_functor, thrust::counting_iterator< IndexType> > ::reference
# 106 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
operator[](OtherIndex i)
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
{
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
return *(begin() + i);
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
}
# 112 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
private: iterator m_begin, m_end;
# 113 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
};
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
template< class RandomAccessIterator, class BinaryPredicate> tail_flags_< RandomAccessIterator, BinaryPredicate>
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
make_tail_flags(RandomAccessIterator first, RandomAccessIterator last, BinaryPredicate binary_pred)
# 121 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
{
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
return tail_flags_< RandomAccessIterator, BinaryPredicate> (first, last, binary_pred);
# 124 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
}
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
template< class RandomAccessIterator> tail_flags_< RandomAccessIterator>
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
make_tail_flags(RandomAccessIterator first, RandomAccessIterator last)
# 132 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
{
# 134 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
return tail_flags_< RandomAccessIterator> (first, last);
# 135 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
}
# 138 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
}
# 139 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
}
# 140 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/detail/tail_flags.hpp"
}}}}
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
namespace bulk_ {
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
namespace detail {
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
namespace reduce_by_key_detail {
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
template< class FlagType, class ValueType, class BinaryFunction>
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
struct scan_head_flags_functor {
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
BinaryFunction binary_op;
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
typedef tuple< FlagType, ValueType, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> result_type;
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
typedef result_type first_argument_type;
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
typedef result_type second_argument_type;
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
scan_head_flags_functor(BinaryFunction binary_op) : binary_op(binary_op)
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
{ }
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
result_type operator()(const first_argument_type &a, const second_argument_type &b)
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
{
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
ValueType val = (thrust::get< 0> (b)) ? thrust::get< 1> (b) : (binary_op)(thrust::get< 1> (a), thrust::get< 1> (b));
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
FlagType flag = thrust::get< 0> (a) + thrust::get< 0> (b);
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
return result_type(flag, val);
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
}
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
};
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
template< class ConcurrentGroup, class
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
InputIterator1, class
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
Size, class
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
InputIterator2, class
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
InputIterator3, class
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
OutputIterator1, class
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
OutputIterator2> __attribute__((unused)) void
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
scatter_tails_n(ConcurrentGroup &group, InputIterator1
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
flags_first, Size
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
n, InputIterator2
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
keys_first, InputIterator3
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
values_first, OutputIterator1
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
keys_result, OutputIterator2
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
values_result)
# 80 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
{int volatile ___ = 1;(void)group;(void)flags_first;(void)n;(void)keys_first;(void)values_first;(void)keys_result;(void)values_result;
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
::exit(___);}
# 111 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
}
# 112 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
}
# 115 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
template< std::size_t groupsize, std::size_t
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
grainsize, class
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
InputIterator1, class
# 118 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
InputIterator2, class
# 119 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
OutputIterator1, class
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
OutputIterator2, class
# 121 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
T1, class
# 122 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
T2, class
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
BinaryPredicate, class
# 124 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
BinaryFunction> __attribute__((unused)) tuple< OutputIterator1, OutputIterator2, typename iterator_value< InputIterator1> ::type, typename iterator_value< OutputIterator2> ::type, null_type, null_type, null_type, null_type, null_type, null_type>
# 132 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
reduce_by_key(concurrent_group< agent< grainsize> , groupsize> &g, InputIterator1
# 133 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
keys_first, InputIterator1 keys_last, InputIterator2
# 134 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
values_first, OutputIterator1
# 135 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
keys_result, OutputIterator2
# 136 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
values_result, T1
# 137 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
init_key, T2
# 138 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
init_value, BinaryPredicate
# 139 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
pred, BinaryFunction
# 140 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
binary_op)
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
{int volatile ___ = 1;(void)g;(void)keys_first;(void)keys_last;(void)values_first;(void)keys_result;(void)values_result;(void)init_key;(void)init_value;(void)pred;(void)binary_op;
# 216 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
::exit(___);}
# 219 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
}
# 220 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/reduce_by_key.hpp"
}}}}
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
namespace bulk_ {
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
template< std::size_t bound, std::size_t
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
grainsize, class
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
RandomAccessIterator1, class
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
RandomAccessIterator2, class
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
Compare>
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
__attribute((always_inline)) __attribute__((unused)) inline void
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
stable_sort_by_key(const bounded< bound, agent< grainsize> > & exec, RandomAccessIterator1 keys_first, RandomAccessIterator1 keys_last, RandomAccessIterator2 values_first, Compare comp);
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
namespace detail {
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
namespace stable_merge_sort_detail {
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
template< std::size_t bound, std::size_t groupsize, std::size_t grainsize, class KeyType, class ValType, class Compare> __attribute__((unused)) typename thrust::detail::enable_if< bound <= (groupsize * grainsize)> ::type
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
inplace_merge_adjacent_partitions(bounded< bound, concurrent_group< agent< grainsize> , groupsize> > &g, KeyType
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
local_keys[], ValType local_values[], void *stage_ptr, int count, int local_size, Compare comp)
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
{int volatile ___ = 1;(void)g;(void)local_keys;(void)local_values;(void)stage_ptr;(void)count;(void)local_size;(void)comp;
# 119 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
::exit(___);}
# 122 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
}
# 125 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
template< std::size_t bound, std::size_t groupsize, std::size_t grainsize, class
# 126 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
RandomAccessIterator1, class
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
RandomAccessIterator2, class
# 128 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
Compare> __attribute__((unused)) typename thrust::detail::enable_if< bound <= (groupsize * grainsize)> ::type
# 133 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
stable_merge_sort_by_key(bounded< bound, concurrent_group< agent< grainsize> , groupsize> > &g, RandomAccessIterator1
# 134 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
keys_first, RandomAccessIterator1 keys_last, RandomAccessIterator2
# 135 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
values_first, Compare
# 136 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
comp)
# 137 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
{int volatile ___ = 1;(void)g;(void)keys_first;(void)keys_last;(void)values_first;(void)comp;
# 206 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
::exit(___);}
# 209 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
}
# 210 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
}
# 211 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/detail/stable_merge_sort.hpp"
}}}}
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
namespace thrust { namespace system { namespace cuda { namespace detail {
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
namespace bulk_ {
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
namespace sort_detail {
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
template< int i, int bound>
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
struct stable_odd_even_transpose_sort_by_key_impl {
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
template< class RandomAccessIterator1, class RandomAccessIterator2, class Compare> static void
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
sort(RandomAccessIterator1 keys, RandomAccessIterator2 values, int n, Compare comp)
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
{int volatile ___ = 1;(void)keys;(void)values;(void)n;(void)comp;
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
::exit(___);}
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
};
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
template< int i> struct stable_odd_even_transpose_sort_by_key_impl< i, i> {
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
template< class RandomAccessIterator1, class RandomAccessIterator2, class Compare> static void
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
sort(RandomAccessIterator1, RandomAccessIterator2, int, Compare) {int volatile ___ = 1;::exit(___);}
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
};
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
template< std::size_t bound, std::size_t
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
grainsize, class
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
RandomAccessIterator1, class
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
RandomAccessIterator2, class
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
Compare>
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
__attribute((always_inline)) __attribute__((unused)) inline void
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
stable_odd_even_transpose_sort_by_key(const bounded< bound, agent< grainsize> > &, RandomAccessIterator1
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
keys_first, RandomAccessIterator1 keys_last, RandomAccessIterator2
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
values_first, Compare
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
comp)
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
{int volatile ___ = 1;(void)keys_first;(void)keys_last;(void)values_first;(void)comp;
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
::exit(___);}
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
template< int i, int bound>
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
struct stable_odd_even_transpose_sort_impl {
# 81 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
template< class RandomAccessIterator, class Compare> static void
# 83 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
sort(RandomAccessIterator keys, int n, Compare comp)
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
{int volatile ___ = 1;(void)keys;(void)n;(void)comp;
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
::exit(___);}
# 97 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
};
# 100 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
template< int i> struct stable_odd_even_transpose_sort_impl< i, i> {
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
template< class RandomAccessIterator, class Compare> static void
# 103 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
sort(RandomAccessIterator, int, Compare) {int volatile ___ = 1;::exit(___);}
# 104 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
};
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
template< std::size_t bound, std::size_t
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
grainsize, class
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
RandomAccessIterator, class
# 110 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
Compare>
# 111 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
__attribute((always_inline)) __attribute__((unused)) inline void
# 112 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
stable_odd_even_transpose_sort(const bounded< bound, agent< grainsize> > &, RandomAccessIterator
# 113 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
first, RandomAccessIterator last, Compare
# 114 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
comp)
# 115 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
{int volatile ___ = 1;(void)first;(void)last;(void)comp;
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
::exit(___);}
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
}
# 121 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
}
# 124 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
template< std::size_t bound, std::size_t
# 125 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
grainsize, class
# 126 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
RandomAccessIterator1, class
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
RandomAccessIterator2, class
# 128 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
Compare>
# 129 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
__attribute((always_inline)) __attribute__((unused)) inline void
# 130 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
stable_sort_by_key(const bounded< bound, agent< grainsize> > &exec, RandomAccessIterator1
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
keys_first, RandomAccessIterator1 keys_last, RandomAccessIterator2
# 132 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
values_first, Compare
# 133 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
comp)
# 134 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
{int volatile ___ = 1;(void)exec;(void)keys_first;(void)keys_last;(void)values_first;(void)comp;
# 136 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
::exit(___);}
# 139 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
template< std::size_t bound, std::size_t
# 140 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
grainsize, class
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
RandomAccessIterator, class
# 142 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
Compare>
# 143 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
__attribute((always_inline)) __attribute__((unused)) inline void
# 144 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
stable_sort(const bounded< bound, agent< grainsize> > &exec, RandomAccessIterator
# 145 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
first, RandomAccessIterator last, Compare
# 146 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
comp)
# 147 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
{int volatile ___ = 1;(void)exec;(void)first;(void)last;(void)comp;
# 149 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
::exit(___);}
# 152 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
template< std::size_t bound, std::size_t groupsize, std::size_t grainsize, class
# 153 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
RandomAccessIterator1, class
# 154 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
RandomAccessIterator2, class
# 155 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
Compare> __attribute__((unused)) typename thrust::detail::enable_if< bound <= (groupsize * grainsize)> ::type
# 160 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
stable_sort_by_key(bounded< bound, concurrent_group< agent< grainsize> , groupsize> > &g, RandomAccessIterator1
# 161 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
keys_first, RandomAccessIterator1 keys_last, RandomAccessIterator2
# 162 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
values_first, Compare
# 163 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
comp)
# 164 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
{int volatile ___ = 1;(void)g;(void)keys_first;(void)keys_last;(void)values_first;(void)comp;
# 166 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
::exit(___);}
# 169 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
}
# 170 "/usr/local/cuda/include/thrust/system/cuda/detail/bulk/algorithm/sort.hpp"
}}}}
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/throw_on_error.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/throw_on_error.h"
namespace system {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/throw_on_error.h"
namespace cuda {
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/throw_on_error.h"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/throw_on_error.h"
inline void throw_on_error(cudaError_t error, const char *message)
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/throw_on_error.h"
{
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/throw_on_error.h"
thrust::system::cuda::detail::bulk_::detail::throw_on_error(error, message);
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/throw_on_error.h"
}
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/throw_on_error.h"
}
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/throw_on_error.h"
}
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/throw_on_error.h"
}
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/throw_on_error.h"
}
# 26 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
namespace thrust {
# 30 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
template< class DerivedPolicy> pointer< void, DerivedPolicy, use_default, use_default>
# 32 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
malloc(const detail::execution_policy_base< DerivedPolicy> &exec, std::size_t n)
# 33 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
{
# 34 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
using system::detail::generic::malloc;
# 37 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
void *raw_ptr = static_cast< void *>(thrust::raw_pointer_cast(malloc(detail::derived_cast(detail::strip_const(exec)), n)));
# 39 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
return ((pointer< void, DerivedPolicy, use_default, use_default> )(raw_ptr));
# 40 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
}
# 43 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
template< class T, class DerivedPolicy> pointer< T, DerivedPolicy, use_default, use_default>
# 45 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
malloc(const detail::execution_policy_base< DerivedPolicy> &exec, std::size_t n)
# 46 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
{
# 47 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
using system::detail::generic::malloc;
# 49 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
T *raw_ptr = static_cast< T *>(thrust::raw_pointer_cast(malloc< T> (detail::derived_cast(detail::strip_const(exec)), n)));
# 51 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
return ((pointer< T, DerivedPolicy, use_default, use_default> )(raw_ptr));
# 52 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
}
# 72 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
template< class DerivedPolicy, class Pointer> void
# 74 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
free(const detail::execution_policy_base< DerivedPolicy> &exec, Pointer ptr)
# 75 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
{
# 76 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
using system::detail::generic::free;
# 78 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
free(detail::derived_cast(detail::strip_const(exec)), ptr);
# 79 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
}
# 84 "/usr/local/cuda/include/thrust/detail/malloc_and_free.h"
}
# 25 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
namespace thrust {
# 27 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
namespace detail {
# 32 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class Alloc> struct allocator_system;
# 35 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
namespace allocator_traits_detail {
# 38 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T> struct has_value_type { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::value_type *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 39 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T> struct has_pointer { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::pointer *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 40 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T> struct has_const_pointer { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::const_pointer *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 41 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T> struct has_reference { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::reference *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 42 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T> struct has_const_reference { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::const_reference *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 43 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T> struct has_void_pointer { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::void_pointer *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 44 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T> struct has_const_void_pointer { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::const_void_pointer *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 45 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T> struct has_difference_type { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::difference_type *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 46 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T> struct has_size_type { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::size_type *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 47 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T> struct has_propagate_on_container_copy_assignment { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::propagate_on_container_copy_assignment *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 48 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T> struct has_propagate_on_container_move_assignment { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::propagate_on_container_move_assignment *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 49 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T> struct has_propagate_on_container_swap { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::propagate_on_container_swap *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 50 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T> struct has_system_type { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::system_type *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 51 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T, class Signature> class has_member_system_impl; template< class T, class Result> class has_member_system_impl< T, Result (void)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result system(); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(void), &U::system> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg> class has_member_system_impl< T, Result (Arg)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result system(Arg); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg), &U::system> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg1, class Arg2> class has_member_system_impl< T, Result (Arg1, Arg2)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result system(Arg1, Arg2); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg1, Arg2), &U::system> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg1, class Arg2, class Arg3> class has_member_system_impl< T, Result (Arg1, Arg2, Arg3)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result system(Arg1, Arg2, Arg3); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg1, Arg2, Arg3), &U::system> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg1, class Arg2, class Arg3, class Arg4> class has_member_system_impl< T, Result (Arg1, Arg2, Arg3, Arg4)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result system(Arg1, Arg2, Arg3, Arg4); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg1, Arg2, Arg3, Arg4), &U::system> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; };
# 54 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T>
# 55 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
struct nested_pointer {
# 57 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename T::pointer type;
# 58 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
};
# 60 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T>
# 61 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
struct nested_const_pointer {
# 63 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename T::const_pointer type;
# 64 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
};
# 66 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T>
# 67 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
struct nested_reference {
# 69 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename T::reference type;
# 70 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
};
# 72 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T>
# 73 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
struct nested_const_reference {
# 75 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename T::const_reference type;
# 76 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
};
# 78 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T>
# 79 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
struct nested_void_pointer {
# 81 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename T::void_pointer type;
# 82 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
};
# 84 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T>
# 85 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
struct nested_const_void_pointer {
# 87 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename T::const_void_pointer type;
# 88 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
};
# 90 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T>
# 91 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
struct nested_difference_type {
# 93 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename T::difference_type type;
# 94 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
};
# 96 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T>
# 97 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
struct nested_size_type {
# 99 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename T::size_type type;
# 100 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
};
# 102 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T>
# 103 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
struct nested_propagate_on_container_copy_assignment {
# 105 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename T::propagate_on_container_copy_assignment type;
# 106 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
};
# 108 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T>
# 109 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
struct nested_propagate_on_container_move_assignment {
# 111 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename T::propagate_on_container_move_assignment type;
# 112 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
};
# 114 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T>
# 115 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
struct nested_propagate_on_container_swap {
# 117 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename T::propagate_on_container_swap type;
# 118 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
};
# 120 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T>
# 121 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
struct nested_system_type {
# 123 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename T::system_type type;
# 124 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
};
# 126 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class Alloc>
# 127 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
class has_member_system {
# 129 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename allocator_system< Alloc> ::type system_type;
# 132 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
public: typedef typename has_member_system_impl< Alloc, typename allocator_system< Alloc> ::type &(void)> ::type type;
# 133 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
static const bool value = (type::value);
# 134 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
};
# 137 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
}
# 140 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class Alloc>
# 141 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
struct allocator_traits {
# 143 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef Alloc allocator_type;
# 145 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename Alloc::value_type value_type;
# 151 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename eval_if< allocator_traits_detail::has_pointer< Alloc> ::value, allocator_traits_detail::nested_pointer< Alloc> , identity_< typename Alloc::value_type *> > ::type pointer;
# 155 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
private:
# 154 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T>
# 155 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
struct rebind_pointer {
# 157 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename pointer_traits< typename eval_if< allocator_traits_detail::has_pointer< Alloc> ::value, allocator_traits_detail::nested_pointer< Alloc> , identity_< typename Alloc::value_type *> > ::type> ::template rebind< T> ::other type;
# 158 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
};
# 166 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
public: typedef typename eval_if< allocator_traits_detail::has_const_pointer< Alloc> ::value, allocator_traits_detail::nested_const_pointer< Alloc> , rebind_pointer< const typename Alloc::value_type> > ::type const_pointer;
# 172 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename eval_if< allocator_traits_detail::has_void_pointer< Alloc> ::value, allocator_traits_detail::nested_void_pointer< Alloc> , rebind_pointer< void> > ::type void_pointer;
# 178 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename eval_if< allocator_traits_detail::has_const_void_pointer< Alloc> ::value, allocator_traits_detail::nested_const_void_pointer< Alloc> , rebind_pointer< const void> > ::type const_void_pointer;
# 184 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename eval_if< allocator_traits_detail::has_difference_type< Alloc> ::value, allocator_traits_detail::nested_difference_type< Alloc> , pointer_difference< typename eval_if< allocator_traits_detail::has_pointer< Alloc> ::value, allocator_traits_detail::nested_pointer< Alloc> , identity_< typename Alloc::value_type *> > ::type> > ::type difference_type;
# 190 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename eval_if< allocator_traits_detail::has_size_type< Alloc> ::value, allocator_traits_detail::nested_size_type< Alloc> , make_unsigned< typename eval_if< allocator_traits_detail::has_difference_type< Alloc> ::value, allocator_traits_detail::nested_difference_type< Alloc> , pointer_difference< typename eval_if< allocator_traits_detail::has_pointer< Alloc> ::value, allocator_traits_detail::nested_pointer< Alloc> , identity_< typename Alloc::value_type *> > ::type> > ::type> > ::type size_type;
# 196 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename eval_if< allocator_traits_detail::has_propagate_on_container_copy_assignment< Alloc> ::value, allocator_traits_detail::nested_propagate_on_container_copy_assignment< Alloc> , identity_< integral_constant< bool, false> > > ::type propagate_on_container_copy_assignment;
# 202 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename eval_if< allocator_traits_detail::has_propagate_on_container_move_assignment< Alloc> ::value, allocator_traits_detail::nested_propagate_on_container_move_assignment< Alloc> , identity_< integral_constant< bool, false> > > ::type propagate_on_container_move_assignment;
# 208 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename eval_if< allocator_traits_detail::has_propagate_on_container_swap< Alloc> ::value, allocator_traits_detail::nested_propagate_on_container_swap< Alloc> , identity_< integral_constant< bool, false> > > ::type propagate_on_container_swap;
# 214 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename eval_if< allocator_traits_detail::has_system_type< Alloc> ::value, allocator_traits_detail::nested_system_type< Alloc> , iterator_system< typename eval_if< allocator_traits_detail::has_pointer< Alloc> ::value, allocator_traits_detail::nested_pointer< Alloc> , identity_< typename Alloc::value_type *> > ::type> > ::type system_type;
# 220 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
static inline pointer allocate(allocator_type & a, size_type n);
# 223 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
static inline pointer allocate(allocator_type & a, size_type n, const_void_pointer hint);
# 226 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
static inline void deallocate(allocator_type & a, pointer p, size_type n);
# 230 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T> static inline void construct(allocator_type & a, T * p);
# 233 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T, class Arg1> static inline void construct(allocator_type & a, T * p, const Arg1 & arg1);
# 236 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T> static inline void destroy(allocator_type & a, T * p);
# 240 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
static inline size_type max_size(const allocator_type & a);
# 241 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
};
# 247 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class T>
# 248 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
struct is_allocator : public allocator_traits_detail::has_value_type< T> {
# 250 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
};
# 254 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
template< class Alloc>
# 255 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
struct allocator_system {
# 264 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename eval_if< allocator_traits_detail::has_system_type< Alloc> ::value, allocator_traits_detail::nested_system_type< Alloc> , iterator_system< typename allocator_traits< Alloc> ::pointer> > ::type type;
# 271 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
typedef typename eval_if< allocator_traits_detail::has_member_system< Alloc> ::value, add_reference< typename eval_if< allocator_traits_detail::has_system_type< Alloc> ::value, allocator_traits_detail::nested_system_type< Alloc> , iterator_system< typename allocator_traits< Alloc> ::pointer> > ::type> , identity_< typename eval_if< allocator_traits_detail::has_system_type< Alloc> ::value, allocator_traits_detail::nested_system_type< Alloc> , iterator_system< typename allocator_traits< Alloc> ::pointer> > ::type> > ::type get_result_type;
# 274 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
static inline get_result_type get(Alloc & a);
# 275 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
};
# 278 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
}
# 279 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.h"
}
# 25 "/usr/local/cuda/include/thrust/detail/type_traits/is_call_possible.h"
namespace thrust {
# 27 "/usr/local/cuda/include/thrust/detail/type_traits/is_call_possible.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/detail/type_traits/is_call_possible.h"
namespace is_call_possible_detail {
# 32 "/usr/local/cuda/include/thrust/detail/type_traits/is_call_possible.h"
template< class T> class void_exp_result { };
# 34 "/usr/local/cuda/include/thrust/detail/type_traits/is_call_possible.h"
template< class T, class U> const U &operator,(const U &, void_exp_result< T> );
# 37 "/usr/local/cuda/include/thrust/detail/type_traits/is_call_possible.h"
template< class T, class U> U &operator,(U &, void_exp_result< T> );
# 40 "/usr/local/cuda/include/thrust/detail/type_traits/is_call_possible.h"
template< class src_type, class dest_type>
# 41 "/usr/local/cuda/include/thrust/detail/type_traits/is_call_possible.h"
struct clone_constness {
# 43 "/usr/local/cuda/include/thrust/detail/type_traits/is_call_possible.h"
typedef dest_type type;
# 44 "/usr/local/cuda/include/thrust/detail/type_traits/is_call_possible.h"
};
# 46 "/usr/local/cuda/include/thrust/detail/type_traits/is_call_possible.h"
template< class src_type, class dest_type>
# 47 "/usr/local/cuda/include/thrust/detail/type_traits/is_call_possible.h"
struct clone_constness< const src_type, dest_type> {
# 49 "/usr/local/cuda/include/thrust/detail/type_traits/is_call_possible.h"
typedef const dest_type type;
# 50 "/usr/local/cuda/include/thrust/detail/type_traits/is_call_possible.h"
};
# 52 "/usr/local/cuda/include/thrust/detail/type_traits/is_call_possible.h"
}
# 53 "/usr/local/cuda/include/thrust/detail/type_traits/is_call_possible.h"
}
# 54 "/usr/local/cuda/include/thrust/detail/type_traits/is_call_possible.h"
}
# 23 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
template< class T>
# 30 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
class integer_traits {
# 33 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
public: static const bool is_integral = false;
# 34 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
};
# 36 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
template< class T, T min_val, T max_val>
# 37 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
class integer_traits_base {
# 40 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
public: static const bool is_integral = true;
# 41 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
static const T const_min = min_val;
# 42 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
static const T const_max = max_val;
# 43 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
};
# 47 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
template<> class integer_traits< bool> : public std::numeric_limits< bool> , public integer_traits_base< bool, false, true> {
# 50 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
};
# 54 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
template<> class integer_traits< char> : public std::numeric_limits< char> , public integer_traits_base< char, '\200', '\177'> {
# 57 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
};
# 61 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
template<> class integer_traits< signed char> : public std::numeric_limits< signed char> , public integer_traits_base< signed char, (signed char)'\200', (signed char)'\177'> {
# 64 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
};
# 68 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
template<> class integer_traits< unsigned char> : public std::numeric_limits< unsigned char> , public integer_traits_base< unsigned char, (unsigned char)'\000', (unsigned char)'\377'> {
# 71 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
};
# 75 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
template<> class integer_traits< short> : public std::numeric_limits< short> , public integer_traits_base< short, (short)(-32767-1), (short)32767> {
# 78 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
};
# 82 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
template<> class integer_traits< unsigned short> : public std::numeric_limits< unsigned short> , public integer_traits_base< unsigned short, (unsigned short)0U, (unsigned short)65535U> {
# 85 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
};
# 89 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
template<> class integer_traits< int> : public std::numeric_limits< int> , public integer_traits_base< int, -2147483647-1, 2147483647> {
# 92 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
};
# 96 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
template<> class integer_traits< unsigned> : public std::numeric_limits< unsigned> , public integer_traits_base< unsigned, 0U, 4294967295U> {
# 99 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
};
# 103 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
template<> class integer_traits< long> : public std::numeric_limits< long> , public integer_traits_base< long, -9223372036854775807L-1, 9223372036854775807L> {
# 106 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
};
# 110 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
template<> class integer_traits< unsigned long> : public std::numeric_limits< unsigned long> , public integer_traits_base< unsigned long, 0UL, 18446744073709551615UL> {
# 113 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
};
# 117 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
template<> class integer_traits< long long> : public std::numeric_limits< long long> , public integer_traits_base< long long, -9223372036854775807LL-1, 9223372036854775807LL> {
# 120 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
};
# 124 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
template<> class integer_traits< unsigned long long> : public std::numeric_limits< unsigned long long> , public integer_traits_base< unsigned long long, 0ULL, 18446744073709551615ULL> {
# 127 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
};
# 129 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
}
# 131 "/usr/local/cuda/include/thrust/detail/integer_traits.h"
}
# 23 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
namespace detail {
# 27 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
namespace allocator_traits_detail {
# 30 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class T, class Signature> class has_member_allocate_with_hint_impl_has_member; template< class T, class Result> class has_member_allocate_with_hint_impl_has_member< T, Result (void)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result allocate(); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(void), &U::allocate> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg> class has_member_allocate_with_hint_impl_has_member< T, Result (Arg)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result allocate(Arg); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg), &U::allocate> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg1, class Arg2> class has_member_allocate_with_hint_impl_has_member< T, Result (Arg1, Arg2)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result allocate(Arg1, Arg2); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg1, Arg2), &U::allocate> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg1, class Arg2, class Arg3> class has_member_allocate_with_hint_impl_has_member< T, Result (Arg1, Arg2, Arg3)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result allocate(Arg1, Arg2, Arg3); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg1, Arg2, Arg3), &U::allocate> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg1, class Arg2, class Arg3, class Arg4> class has_member_allocate_with_hint_impl_has_member< T, Result (Arg1, Arg2, Arg3, Arg4)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result allocate(Arg1, Arg2, Arg3, Arg4); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg1, Arg2, Arg3, Arg4), &U::allocate> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Signature> struct has_member_allocate_with_hint_impl { private: struct yes { }; struct no { yes m[2]; }; struct derived : public T { using T::allocate;typename ::thrust::detail::allocator_traits_detail::has_member_allocate_with_hint_impl< T, Signature> ::no allocate(...) const; }; typedef typename is_call_possible_detail::clone_constness< T, derived> ::type derived_type; template< class U, class Result> struct return_value_check { static yes deduce(Result); static no deduce(...); static no deduce(no); static no deduce(is_call_possible_detail::void_exp_result< T> ); }; template< class U> struct return_value_check< U, void> { static yes deduce(...); static no deduce(no); }; template< bool has_the_member_of_interest, class F> struct impl { static const bool value = false; }; template< class Result, class Arg> struct impl< true, Result (Arg)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg> ::type arg; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.allocate(arg)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; template< class Result, class Arg1, class Arg2> struct impl< true, Result (Arg1, Arg2)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg1> ::type arg1; static typename add_reference< Arg2> ::type arg2; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.allocate(arg1, arg2)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; template< class Result, class Arg1, class Arg2, class Arg3> struct impl< true, Result (Arg1, Arg2, Arg3)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg1> ::type arg1; static typename add_reference< Arg2> ::type arg2; static typename add_reference< Arg3> ::type arg3; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.allocate(arg1, arg2, arg3)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; template< class Result, class Arg1, class Arg2, class Arg3, class Arg4> struct impl< true, Result (Arg1, Arg2, Arg3, Arg4)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg1> ::type arg1; static typename add_reference< Arg2> ::type arg2; static typename add_reference< Arg3> ::type arg3; static typename add_reference< Arg4> ::type arg4; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.allocate(arg1, arg2, arg3, arg4)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; public: static const bool value = (impl< has_member_allocate_with_hint_impl_has_member< T, Signature> ::value, Signature> ::value); typedef integral_constant< bool, value> type; };
# 32 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc>
# 33 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
class has_member_allocate_with_hint {
# 35 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
typedef typename allocator_traits< Alloc> ::pointer pointer;
# 36 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
typedef typename allocator_traits< Alloc> ::size_type size_type;
# 37 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
typedef typename allocator_traits< Alloc> ::const_void_pointer const_void_pointer;
# 40 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
public: typedef typename has_member_allocate_with_hint_impl< Alloc, typename allocator_traits< Alloc> ::pointer (typename allocator_traits< Alloc> ::size_type, typename allocator_traits< Alloc> ::const_void_pointer)> ::type type;
# 41 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
static const bool value = (type::value);
# 42 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
};
# 44 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc> typename enable_if< has_member_allocate_with_hint< Alloc> ::value, typename allocator_traits< Alloc> ::pointer> ::type
# 50 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
allocate(Alloc &a, typename allocator_traits< Alloc> ::size_type n, typename allocator_traits< Alloc> ::const_void_pointer hint)
# 51 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 52 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
return (a.allocate(n, hint));
# 53 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 55 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc> typename disable_if< has_member_allocate_with_hint< Alloc> ::value, typename allocator_traits< Alloc> ::pointer> ::type
# 61 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
allocate(Alloc &a, typename allocator_traits< Alloc> ::size_type n, typename allocator_traits< Alloc> ::const_void_pointer)
# 62 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 63 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
return (a.allocate(n));
# 64 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 67 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class T, class Signature> class has_member_construct1_impl_has_member; template< class T, class Result> class has_member_construct1_impl_has_member< T, Result (void)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result construct(); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(void), &U::construct> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg> class has_member_construct1_impl_has_member< T, Result (Arg)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result construct(Arg); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg), &U::construct> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg1, class Arg2> class has_member_construct1_impl_has_member< T, Result (Arg1, Arg2)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result construct(Arg1, Arg2); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg1, Arg2), &U::construct> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg1, class Arg2, class Arg3> class has_member_construct1_impl_has_member< T, Result (Arg1, Arg2, Arg3)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result construct(Arg1, Arg2, Arg3); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg1, Arg2, Arg3), &U::construct> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg1, class Arg2, class Arg3, class Arg4> class has_member_construct1_impl_has_member< T, Result (Arg1, Arg2, Arg3, Arg4)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result construct(Arg1, Arg2, Arg3, Arg4); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg1, Arg2, Arg3, Arg4), &U::construct> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Signature> struct has_member_construct1_impl { private: struct yes { }; struct no { yes m[2]; }; struct derived : public T { using T::construct;typename ::thrust::detail::allocator_traits_detail::has_member_construct1_impl< T, Signature> ::no construct(...) const; }; typedef typename is_call_possible_detail::clone_constness< T, derived> ::type derived_type; template< class U, class Result> struct return_value_check { static yes deduce(Result); static no deduce(...); static no deduce(no); static no deduce(is_call_possible_detail::void_exp_result< T> ); }; template< class U> struct return_value_check< U, void> { static yes deduce(...); static no deduce(no); }; template< bool has_the_member_of_interest, class F> struct impl { static const bool value = false; }; template< class Result, class Arg> struct impl< true, Result (Arg)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg> ::type arg; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.construct(arg)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; template< class Result, class Arg1, class Arg2> struct impl< true, Result (Arg1, Arg2)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg1> ::type arg1; static typename add_reference< Arg2> ::type arg2; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.construct(arg1, arg2)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; template< class Result, class Arg1, class Arg2, class Arg3> struct impl< true, Result (Arg1, Arg2, Arg3)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg1> ::type arg1; static typename add_reference< Arg2> ::type arg2; static typename add_reference< Arg3> ::type arg3; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.construct(arg1, arg2, arg3)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; template< class Result, class Arg1, class Arg2, class Arg3, class Arg4> struct impl< true, Result (Arg1, Arg2, Arg3, Arg4)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg1> ::type arg1; static typename add_reference< Arg2> ::type arg2; static typename add_reference< Arg3> ::type arg3; static typename add_reference< Arg4> ::type arg4; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.construct(arg1, arg2, arg3, arg4)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; public: static const bool value = (impl< has_member_construct1_impl_has_member< T, Signature> ::value, Signature> ::value); typedef integral_constant< bool, value> type; };
# 69 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc, class T>
# 70 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
struct has_member_construct1 : public has_member_construct1_impl< Alloc, void (T *)> {
# 72 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
};
# 75 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc, class T> inline typename enable_if< has_member_construct1< Alloc, T> ::value> ::type
# 80 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
construct(Alloc &a, T *p)
# 81 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 82 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
(a.construct(p));
# 83 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 85 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc, class T> inline typename disable_if< has_member_construct1< Alloc, T> ::value> ::type
# 90 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
construct(Alloc &a, T *p)
# 91 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 92 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
::new (static_cast< void *>(p)) (T)();
# 93 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 96 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class T, class Signature> class has_member_construct2_impl_has_member; template< class T, class Result> class has_member_construct2_impl_has_member< T, Result (void)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result construct(); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(void), &U::construct> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg> class has_member_construct2_impl_has_member< T, Result (Arg)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result construct(Arg); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg), &U::construct> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg1, class Arg2> class has_member_construct2_impl_has_member< T, Result (Arg1, Arg2)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result construct(Arg1, Arg2); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg1, Arg2), &U::construct> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg1, class Arg2, class Arg3> class has_member_construct2_impl_has_member< T, Result (Arg1, Arg2, Arg3)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result construct(Arg1, Arg2, Arg3); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg1, Arg2, Arg3), &U::construct> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg1, class Arg2, class Arg3, class Arg4> class has_member_construct2_impl_has_member< T, Result (Arg1, Arg2, Arg3, Arg4)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result construct(Arg1, Arg2, Arg3, Arg4); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg1, Arg2, Arg3, Arg4), &U::construct> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Signature> struct has_member_construct2_impl { private: struct yes { }; struct no { yes m[2]; }; struct derived : public T { using T::construct;typename ::thrust::detail::allocator_traits_detail::has_member_construct2_impl< T, Signature> ::no construct(...) const; }; typedef typename is_call_possible_detail::clone_constness< T, derived> ::type derived_type; template< class U, class Result> struct return_value_check { static yes deduce(Result); static no deduce(...); static no deduce(no); static no deduce(is_call_possible_detail::void_exp_result< T> ); }; template< class U> struct return_value_check< U, void> { static yes deduce(...); static no deduce(no); }; template< bool has_the_member_of_interest, class F> struct impl { static const bool value = false; }; template< class Result, class Arg> struct impl< true, Result (Arg)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg> ::type arg; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.construct(arg)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; template< class Result, class Arg1, class Arg2> struct impl< true, Result (Arg1, Arg2)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg1> ::type arg1; static typename add_reference< Arg2> ::type arg2; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.construct(arg1, arg2)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; template< class Result, class Arg1, class Arg2, class Arg3> struct impl< true, Result (Arg1, Arg2, Arg3)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg1> ::type arg1; static typename add_reference< Arg2> ::type arg2; static typename add_reference< Arg3> ::type arg3; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.construct(arg1, arg2, arg3)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; template< class Result, class Arg1, class Arg2, class Arg3, class Arg4> struct impl< true, Result (Arg1, Arg2, Arg3, Arg4)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg1> ::type arg1; static typename add_reference< Arg2> ::type arg2; static typename add_reference< Arg3> ::type arg3; static typename add_reference< Arg4> ::type arg4; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.construct(arg1, arg2, arg3, arg4)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; public: static const bool value = (impl< has_member_construct2_impl_has_member< T, Signature> ::value, Signature> ::value); typedef integral_constant< bool, value> type; };
# 98 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc, class T, class Arg1>
# 99 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
struct has_member_construct2 : public has_member_construct2_impl< Alloc, void (T *, const Arg1 &)> {
# 101 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
};
# 103 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc, class T, class Arg1> inline typename enable_if< has_member_construct2< Alloc, T, Arg1> ::value> ::type
# 108 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
construct(Alloc &a, T *p, const Arg1 &arg1)
# 109 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 110 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
(a.construct(p, arg1));
# 111 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 113 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc, class T, class Arg1> inline typename disable_if< has_member_construct2< Alloc, T, Arg1> ::value> ::type
# 118 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
construct(Alloc &, T *p, const Arg1 &arg1)
# 119 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 120 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
::new (static_cast< void *>(p)) (T)(arg1);
# 121 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 124 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class T, class Signature> class has_member_destroy_impl_has_member; template< class T, class Result> class has_member_destroy_impl_has_member< T, Result (void)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result destroy(); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(void), &U::destroy> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg> class has_member_destroy_impl_has_member< T, Result (Arg)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result destroy(Arg); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg), &U::destroy> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg1, class Arg2> class has_member_destroy_impl_has_member< T, Result (Arg1, Arg2)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result destroy(Arg1, Arg2); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg1, Arg2), &U::destroy> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg1, class Arg2, class Arg3> class has_member_destroy_impl_has_member< T, Result (Arg1, Arg2, Arg3)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result destroy(Arg1, Arg2, Arg3); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg1, Arg2, Arg3), &U::destroy> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg1, class Arg2, class Arg3, class Arg4> class has_member_destroy_impl_has_member< T, Result (Arg1, Arg2, Arg3, Arg4)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result destroy(Arg1, Arg2, Arg3, Arg4); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg1, Arg2, Arg3, Arg4), &U::destroy> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Signature> struct has_member_destroy_impl { private: struct yes { }; struct no { yes m[2]; }; struct derived : public T { using T::destroy;typename ::thrust::detail::allocator_traits_detail::has_member_destroy_impl< T, Signature> ::no destroy(...) const; }; typedef typename is_call_possible_detail::clone_constness< T, derived> ::type derived_type; template< class U, class Result> struct return_value_check { static yes deduce(Result); static no deduce(...); static no deduce(no); static no deduce(is_call_possible_detail::void_exp_result< T> ); }; template< class U> struct return_value_check< U, void> { static yes deduce(...); static no deduce(no); }; template< bool has_the_member_of_interest, class F> struct impl { static const bool value = false; }; template< class Result, class Arg> struct impl< true, Result (Arg)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg> ::type arg; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.destroy(arg)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; template< class Result, class Arg1, class Arg2> struct impl< true, Result (Arg1, Arg2)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg1> ::type arg1; static typename add_reference< Arg2> ::type arg2; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.destroy(arg1, arg2)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; template< class Result, class Arg1, class Arg2, class Arg3> struct impl< true, Result (Arg1, Arg2, Arg3)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg1> ::type arg1; static typename add_reference< Arg2> ::type arg2; static typename add_reference< Arg3> ::type arg3; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.destroy(arg1, arg2, arg3)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; template< class Result, class Arg1, class Arg2, class Arg3, class Arg4> struct impl< true, Result (Arg1, Arg2, Arg3, Arg4)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg1> ::type arg1; static typename add_reference< Arg2> ::type arg2; static typename add_reference< Arg3> ::type arg3; static typename add_reference< Arg4> ::type arg4; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.destroy(arg1, arg2, arg3, arg4)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; public: static const bool value = (impl< has_member_destroy_impl_has_member< T, Signature> ::value, Signature> ::value); typedef integral_constant< bool, value> type; };
# 126 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc, class T>
# 127 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
struct has_member_destroy : public has_member_destroy_impl< Alloc, void (T *)> {
# 129 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
};
# 131 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc, class T> inline typename enable_if< has_member_destroy< Alloc, T> ::value> ::type
# 136 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
destroy(Alloc &a, T *p)
# 137 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 138 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
(a.destroy(p));
# 139 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 141 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc, class T> inline typename disable_if< has_member_destroy< Alloc, T> ::value> ::type
# 146 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
destroy(Alloc &, T *p)
# 147 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 148 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
(p->~T());
# 149 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 152 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class T, class Signature> class has_member_max_size_impl_has_member; template< class T, class Result> class has_member_max_size_impl_has_member< T, Result (void)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result max_size(); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(void), &U::max_size> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg> class has_member_max_size_impl_has_member< T, Result (Arg)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result max_size(Arg); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg), &U::max_size> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg1, class Arg2> class has_member_max_size_impl_has_member< T, Result (Arg1, Arg2)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result max_size(Arg1, Arg2); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg1, Arg2), &U::max_size> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg1, class Arg2, class Arg3> class has_member_max_size_impl_has_member< T, Result (Arg1, Arg2, Arg3)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result max_size(Arg1, Arg2, Arg3); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg1, Arg2, Arg3), &U::max_size> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Result, class Arg1, class Arg2, class Arg3, class Arg4> class has_member_max_size_impl_has_member< T, Result (Arg1, Arg2, Arg3, Arg4)> { class yes { char m; }; class no { yes m[2]; }; struct base_mixin { Result max_size(Arg1, Arg2, Arg3, Arg4); }; struct base : public T, public base_mixin { }; template< class U, U t> class helper { }; template< class U> static no deduce(U *, helper< Result (base_mixin::*)(Arg1, Arg2, Arg3, Arg4), &U::max_size> * = 0); static yes deduce(...); public: static const bool value = (sizeof(yes) == sizeof(deduce(static_cast< base *>(0)))); typedef integral_constant< bool, value> type; }; template< class T, class Signature> struct has_member_max_size_impl { private: struct yes { }; struct no { yes m[2]; }; struct derived : public T { using T::max_size;typename ::thrust::detail::allocator_traits_detail::has_member_max_size_impl< T, Signature> ::no max_size(...) const; }; typedef typename is_call_possible_detail::clone_constness< T, derived> ::type derived_type; template< class U, class Result> struct return_value_check { static yes deduce(Result); static no deduce(...); static no deduce(no); static no deduce(is_call_possible_detail::void_exp_result< T> ); }; template< class U> struct return_value_check< U, void> { static yes deduce(...); static no deduce(no); }; template< bool has_the_member_of_interest, class F> struct impl { static const bool value = false; }; template< class Result, class Arg> struct impl< true, Result (Arg)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg> ::type arg; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.max_size(arg)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; template< class Result, class Arg1, class Arg2> struct impl< true, Result (Arg1, Arg2)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg1> ::type arg1; static typename add_reference< Arg2> ::type arg2; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.max_size(arg1, arg2)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; template< class Result, class Arg1, class Arg2, class Arg3> struct impl< true, Result (Arg1, Arg2, Arg3)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg1> ::type arg1; static typename add_reference< Arg2> ::type arg2; static typename add_reference< Arg3> ::type arg3; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.max_size(arg1, arg2, arg3)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; template< class Result, class Arg1, class Arg2, class Arg3, class Arg4> struct impl< true, Result (Arg1, Arg2, Arg3, Arg4)> { static typename add_reference< typename is_call_possible_detail::clone_constness< T, derived> ::type> ::type test_me; static typename add_reference< Arg1> ::type arg1; static typename add_reference< Arg2> ::type arg2; static typename add_reference< Arg3> ::type arg3; static typename add_reference< Arg4> ::type arg4; static const bool value = (sizeof(return_value_check< T, Result> ::deduce(((test_me.max_size(arg1, arg2, arg3, arg4)), (is_call_possible_detail::void_exp_result< T> ())))) == sizeof(yes)); }; public: static const bool value = (impl< has_member_max_size_impl_has_member< T, Signature> ::value, Signature> ::value); typedef integral_constant< bool, value> type; };
# 154 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc>
# 155 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
class has_member_max_size {
# 157 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
typedef typename allocator_traits< Alloc> ::size_type size_type;
# 160 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
public: typedef typename has_member_max_size_impl< Alloc, typename allocator_traits< Alloc> ::size_type (void)> ::type type;
# 161 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
static const bool value = (type::value);
# 162 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
};
# 164 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc> typename enable_if< has_member_max_size< Alloc> ::value, typename allocator_traits< Alloc> ::size_type> ::type
# 170 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
max_size(const Alloc &a)
# 171 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 172 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
return (a.max_size());
# 173 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 175 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc> typename disable_if< has_member_max_size< Alloc> ::value, typename allocator_traits< Alloc> ::size_type> ::type
# 181 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
max_size(const Alloc &)
# 182 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 183 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
typedef typename allocator_traits< Alloc> ::size_type size_type;
# 184 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
return thrust::detail::integer_traits< typename allocator_traits< Alloc> ::size_type> ::const_max;
# 185 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 187 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc> typename enable_if< has_member_system< Alloc> ::value, typename allocator_system< Alloc> ::type &> ::type
# 193 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
system(Alloc &a)
# 194 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 196 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
return (a.system());
# 197 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 199 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc> typename disable_if< has_member_system< Alloc> ::value, typename allocator_system< Alloc> ::type> ::type
# 205 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
system(Alloc &)
# 206 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 208 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
typename allocator_system< Alloc> ::type result;
# 209 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
return result;
# 210 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 213 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 216 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc> inline typename allocator_traits< Alloc> ::pointer
# 220 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
allocator_traits< Alloc> ::allocate(Alloc &a, size_type n)
# 221 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 222 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
struct workaround_warnings {
# 227 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
static pointer allocate(Alloc &a, size_type n)
# 228 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 229 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
return (a.allocate(n));
# 230 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 231 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
};
# 233 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
return (workaround_warnings::allocate)(a, n);
# 234 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 236 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc> inline typename allocator_traits< Alloc> ::pointer
# 240 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
allocator_traits< Alloc> ::allocate(Alloc &a, size_type n, const_void_pointer hint)
# 241 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 242 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
return allocator_traits_detail::allocate(a, n, hint);
# 243 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 245 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc> inline void
# 248 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
allocator_traits< Alloc> ::deallocate(Alloc &a, pointer p, size_type n)
# 249 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 250 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
struct workaround_warnings {
# 254 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
static void deallocate(Alloc &a, pointer p, size_type n)
# 255 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 256 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
return (a.deallocate(p, n));
# 257 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 258 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
};
# 260 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
return (workaround_warnings::deallocate)(a, p, n);
# 261 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 263 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc>
# 264 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class T> inline void
# 267 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
allocator_traits< Alloc> ::construct(allocator_type &a, T *p)
# 268 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 269 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
return allocator_traits_detail::construct(a, p);
# 270 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 272 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc>
# 273 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class T, class Arg1> inline void
# 276 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
allocator_traits< Alloc> ::construct(allocator_type &a, T *p, const Arg1 &arg1)
# 277 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 278 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
return allocator_traits_detail::construct(a, p, arg1);
# 279 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 281 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc>
# 282 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class T> inline void
# 285 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
allocator_traits< Alloc> ::destroy(allocator_type &a, T *p)
# 286 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 287 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
return allocator_traits_detail::destroy(a, p);
# 288 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 290 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc> inline typename allocator_traits< Alloc> ::size_type
# 294 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
allocator_traits< Alloc> ::max_size(const allocator_type &a)
# 295 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 296 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
return allocator_traits_detail::max_size(a);
# 297 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 299 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
template< class Alloc> inline typename allocator_system< Alloc> ::get_result_type
# 303 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
allocator_system< Alloc> ::get(Alloc &a)
# 304 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
{
# 305 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
return allocator_traits_detail::system(a);
# 306 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 309 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 310 "/usr/local/cuda/include/thrust/detail/allocator/allocator_traits.inl"
}
# 26 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
namespace thrust {
# 28 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
namespace detail {
# 31 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
template< class ToPointer, class FromPointer> ToPointer
# 33 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
reinterpret_pointer_cast(FromPointer ptr)
# 34 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
{
# 35 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
typedef typename pointer_element< ToPointer> ::type to_element;
# 36 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
return (ToPointer)(reinterpret_cast< to_element *>(thrust::raw_pointer_cast(ptr)));
# 37 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
}
# 40 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
template< class Allocator, template< class > class BaseSystem>
# 41 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
struct execute_with_allocator : public BaseSystem< execute_with_allocator< Allocator, BaseSystem> > {
# 46 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
typedef BaseSystem< ::thrust::detail::execute_with_allocator< Allocator, BaseSystem> > super_t;
# 48 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
Allocator &m_alloc;
# 51 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
execute_with_allocator(const super_t &super, Allocator &alloc) : super_t(super), m_alloc(alloc)
# 54 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
{ }
# 57 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
execute_with_allocator(Allocator &alloc) : m_alloc(alloc)
# 59 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
{ }
# 61 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
template< class T> friend inline pair< T *, long>
# 64 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
get_temporary_buffer(execute_with_allocator &system, ::std::ptrdiff_t n)
# 65 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
{
# 66 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
typedef allocator_traits< Allocator> alloc_traits;
# 67 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
typedef typename allocator_traits< Allocator> ::void_pointer void_pointer;
# 68 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
typedef typename allocator_traits< Allocator> ::size_type size_type;
# 69 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
typedef typename allocator_traits< Allocator> ::value_type value_type;
# 72 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
size_type num_elements = thrust::detail::util::divide_ri(sizeof(T) * n, sizeof(value_type));
# 75 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
void_pointer ptr = alloc_traits::allocate(system.m_alloc, num_elements);
# 78 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
return ::thrust::make_pair(detail::reinterpret_pointer_cast< T *> (ptr), n);
# 79 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
}
# 81 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
template< class Pointer> friend inline void
# 82 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
return_temporary_buffer(execute_with_allocator &system, Pointer p)
# 83 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
{
# 84 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
typedef allocator_traits< Allocator> alloc_traits;
# 85 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
typedef typename allocator_traits< Allocator> ::pointer pointer;
# 88 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
pointer to_ptr = detail::reinterpret_pointer_cast< typename allocator_traits< Allocator> ::pointer> (p);
# 89 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
alloc_traits::deallocate(system.m_alloc, to_ptr, 0);
# 90 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
}
# 91 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
};
# 94 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
}
# 95 "/usr/local/cuda/include/thrust/detail/execute_with_allocator.h"
}
# 24 "/usr/local/cuda/include/thrust/detail/seq.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/detail/seq.h"
namespace detail {
# 30 "/usr/local/cuda/include/thrust/detail/seq.h"
struct seq_t : public system::detail::sequential::execution_policy< seq_t> {
# 33 "/usr/local/cuda/include/thrust/detail/seq.h"
seq_t() : system::detail::sequential::execution_policy< seq_t> () { }
# 36 "/usr/local/cuda/include/thrust/detail/seq.h"
template< class DerivedPolicy>
# 38 "/usr/local/cuda/include/thrust/detail/seq.h"
seq_t(const thrust::execution_policy< DerivedPolicy> &) : system::detail::sequential::execution_policy< seq_t> ()
# 40 "/usr/local/cuda/include/thrust/detail/seq.h"
{ }
# 42 "/usr/local/cuda/include/thrust/detail/seq.h"
template< class Allocator> execute_with_allocator< Allocator, system::detail::sequential::execution_policy>
# 44 "/usr/local/cuda/include/thrust/detail/seq.h"
operator()(Allocator &alloc) const
# 45 "/usr/local/cuda/include/thrust/detail/seq.h"
{
# 46 "/usr/local/cuda/include/thrust/detail/seq.h"
return ((execute_with_allocator< Allocator, system::detail::sequential::execution_policy> )(alloc));
# 47 "/usr/local/cuda/include/thrust/detail/seq.h"
}
# 48 "/usr/local/cuda/include/thrust/detail/seq.h"
};
# 51 "/usr/local/cuda/include/thrust/detail/seq.h"
}
# 57 "/usr/local/cuda/include/thrust/detail/seq.h"
static const detail::seq_t seq;
# 61 "/usr/local/cuda/include/thrust/detail/seq.h"
}
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
namespace system {
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
namespace cuda {
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
namespace detail {
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
template< class DerivedPolicy> void *
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
malloc(execution_policy< DerivedPolicy> &, std::size_t n)
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
{
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
void *result = (0);
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
cudaError_t error = cudaMalloc(reinterpret_cast< void **>(&result), n);
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
if (error)
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
{
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
throw ((system::detail::bad_alloc)((thrust::cuda_category().message(error)).c_str()));
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
}
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
return result;
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
}
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
template< class DerivedPolicy, class Pointer> void
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
free(execution_policy< DerivedPolicy> &, Pointer ptr)
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
{
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
throw_on_error(cudaFree(thrust::raw_pointer_cast(ptr)), "cudaFree in free");
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
}
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
}
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
}
# 80 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
}
# 81 "/usr/local/cuda/include/thrust/system/cuda/detail/malloc_and_free.h"
}
# 43 "/usr/local/cuda/include/thrust/detail/static_assert.h"
namespace thrust {
# 46 "/usr/local/cuda/include/thrust/detail/static_assert.h"
namespace detail {
# 50 "/usr/local/cuda/include/thrust/detail/static_assert.h"
template< bool x> struct STATIC_ASSERTION_FAILURE;
# 52 "/usr/local/cuda/include/thrust/detail/static_assert.h"
template<> struct STATIC_ASSERTION_FAILURE< true> { enum { value = 1}; };
# 55 "/usr/local/cuda/include/thrust/detail/static_assert.h"
template< int x> struct static_assert_test { };
# 57 "/usr/local/cuda/include/thrust/detail/static_assert.h"
template< class , bool x>
# 58 "/usr/local/cuda/include/thrust/detail/static_assert.h"
struct depend_on_instantiation {
# 60 "/usr/local/cuda/include/thrust/detail/static_assert.h"
static const bool value = x;
# 61 "/usr/local/cuda/include/thrust/detail/static_assert.h"
};
# 63 "/usr/local/cuda/include/thrust/detail/static_assert.h"
}
# 65 "/usr/local/cuda/include/thrust/detail/static_assert.h"
}
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
namespace thrust {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
namespace system {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
namespace detail {
# 31 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
namespace generic {
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
template< class DerivedPolicy, class Size> void
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
malloc(execution_policy< DerivedPolicy> &, Size)
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
{
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
typedef thrust::detail::static_assert_test< sizeof(thrust::detail::STATIC_ASSERTION_FAILURE< (bool)(thrust::detail::depend_on_instantiation< Size, false> ::value)> )> thrust_static_assert_typedef_40 __attribute((unused));
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
}
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
template< class T, class DerivedPolicy> pointer< T, DerivedPolicy, use_default, use_default>
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
malloc(execution_policy< DerivedPolicy> &exec, std::size_t n)
# 48 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
{
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
pointer< void, DerivedPolicy, use_default, use_default> void_ptr = thrust::malloc(exec, sizeof(T) * n);
# 51 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
return ((pointer< T, DerivedPolicy, use_default, use_default> )(static_cast< T *>((void_ptr.get()))));
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
}
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
template< class DerivedPolicy, class Pointer> void
# 57 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
free(execution_policy< DerivedPolicy> &, Pointer)
# 58 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
{
# 60 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
typedef thrust::detail::static_assert_test< sizeof(thrust::detail::STATIC_ASSERTION_FAILURE< (bool)(thrust::detail::depend_on_instantiation< Pointer, false> ::value)> )> thrust_static_assert_typedef_60 __attribute((unused));
# 61 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
}
# 64 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
template< class DerivedPolicy, class Pointer1, class Pointer2> void
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
assign_value(execution_policy< DerivedPolicy> &, Pointer1, Pointer2)
# 67 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
{
# 69 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
typedef thrust::detail::static_assert_test< sizeof(thrust::detail::STATIC_ASSERTION_FAILURE< (bool)(thrust::detail::depend_on_instantiation< Pointer1, false> ::value)> )> thrust_static_assert_typedef_69 __attribute((unused));
# 70 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
}
# 73 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
template< class DerivedPolicy, class Pointer> void
# 75 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
get_value(execution_policy< DerivedPolicy> &, Pointer)
# 76 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
{
# 78 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
typedef thrust::detail::static_assert_test< sizeof(thrust::detail::STATIC_ASSERTION_FAILURE< (bool)(thrust::detail::depend_on_instantiation< Pointer, false> ::value)> )> thrust_static_assert_typedef_78 __attribute((unused));
# 79 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
}
# 82 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
template< class Pointer1, class Pointer2> void
# 84 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
iter_swap(tag, Pointer1, Pointer2)
# 85 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
{
# 87 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
typedef thrust::detail::static_assert_test< sizeof(thrust::detail::STATIC_ASSERTION_FAILURE< (bool)(thrust::detail::depend_on_instantiation< Pointer1, false> ::value)> )> thrust_static_assert_typedef_87 __attribute((unused));
# 88 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
}
# 91 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
}
# 92 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
}
# 93 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
}
# 94 "/usr/local/cuda/include/thrust/system/detail/generic/memory.inl"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/sequential/get_value.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/sequential/get_value.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/sequential/get_value.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/sequential/get_value.h"
namespace sequential {
# 33 "/usr/local/cuda/include/thrust/system/detail/sequential/get_value.h"
template< class DerivedPolicy, class Pointer> typename iterator_value< Pointer> ::type
# 36 "/usr/local/cuda/include/thrust/system/detail/sequential/get_value.h"
get_value(execution_policy< DerivedPolicy> &, Pointer ptr)
# 37 "/usr/local/cuda/include/thrust/system/detail/sequential/get_value.h"
{
# 38 "/usr/local/cuda/include/thrust/system/detail/sequential/get_value.h"
return *thrust::raw_pointer_cast(ptr);
# 39 "/usr/local/cuda/include/thrust/system/detail/sequential/get_value.h"
}
# 42 "/usr/local/cuda/include/thrust/system/detail/sequential/get_value.h"
}
# 43 "/usr/local/cuda/include/thrust/system/detail/sequential/get_value.h"
}
# 44 "/usr/local/cuda/include/thrust/system/detail/sequential/get_value.h"
}
# 45 "/usr/local/cuda/include/thrust/system/detail/sequential/get_value.h"
}
# 22 "/usr/local/cuda/include/thrust/detail/copy.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/detail/copy.h"
template< class System, class
# 26 "/usr/local/cuda/include/thrust/detail/copy.h"
InputIterator, class
# 27 "/usr/local/cuda/include/thrust/detail/copy.h"
OutputIterator> OutputIterator
# 25 "/usr/local/cuda/include/thrust/detail/copy.h"
copy(const detail::execution_policy_base< System> & system, InputIterator first, InputIterator last, OutputIterator result);
# 34 "/usr/local/cuda/include/thrust/detail/copy.h"
template< class System, class
# 35 "/usr/local/cuda/include/thrust/detail/copy.h"
InputIterator, class
# 36 "/usr/local/cuda/include/thrust/detail/copy.h"
Size, class
# 37 "/usr/local/cuda/include/thrust/detail/copy.h"
OutputIterator> OutputIterator
# 34 "/usr/local/cuda/include/thrust/detail/copy.h"
copy_n(const detail::execution_policy_base< System> & system, InputIterator first, Size n, OutputIterator result);
# 44 "/usr/local/cuda/include/thrust/detail/copy.h"
template< class InputIterator, class
# 45 "/usr/local/cuda/include/thrust/detail/copy.h"
OutputIterator> OutputIterator
# 44 "/usr/local/cuda/include/thrust/detail/copy.h"
copy(InputIterator first, InputIterator last, OutputIterator result);
# 50 "/usr/local/cuda/include/thrust/detail/copy.h"
template< class InputIterator, class
# 51 "/usr/local/cuda/include/thrust/detail/copy.h"
Size, class
# 52 "/usr/local/cuda/include/thrust/detail/copy.h"
OutputIterator> OutputIterator
# 50 "/usr/local/cuda/include/thrust/detail/copy.h"
copy_n(InputIterator first, Size n, OutputIterator result);
# 58 "/usr/local/cuda/include/thrust/detail/copy.h"
namespace detail {
# 62 "/usr/local/cuda/include/thrust/detail/copy.h"
template< class FromSystem, class
# 63 "/usr/local/cuda/include/thrust/detail/copy.h"
ToSystem, class
# 64 "/usr/local/cuda/include/thrust/detail/copy.h"
InputIterator, class
# 65 "/usr/local/cuda/include/thrust/detail/copy.h"
OutputIterator> OutputIterator
# 62 "/usr/local/cuda/include/thrust/detail/copy.h"
two_system_copy(const execution_policy< FromSystem> & from_system, const execution_policy< ToSystem> & two_system, InputIterator first, InputIterator last, OutputIterator result);
# 74 "/usr/local/cuda/include/thrust/detail/copy.h"
template< class FromSystem, class
# 75 "/usr/local/cuda/include/thrust/detail/copy.h"
ToSystem, class
# 76 "/usr/local/cuda/include/thrust/detail/copy.h"
InputIterator, class
# 77 "/usr/local/cuda/include/thrust/detail/copy.h"
Size, class
# 78 "/usr/local/cuda/include/thrust/detail/copy.h"
OutputIterator> OutputIterator
# 74 "/usr/local/cuda/include/thrust/detail/copy.h"
two_system_copy_n(const execution_policy< FromSystem> & from_system, const execution_policy< ToSystem> & two_system, InputIterator first, Size n, OutputIterator result);
# 87 "/usr/local/cuda/include/thrust/detail/copy.h"
}
# 88 "/usr/local/cuda/include/thrust/detail/copy.h"
}
# 22 "/usr/local/cuda/include/thrust/system/detail/generic/copy.h"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/system/detail/generic/copy.h"
namespace system {
# 26 "/usr/local/cuda/include/thrust/system/detail/generic/copy.h"
namespace detail {
# 28 "/usr/local/cuda/include/thrust/system/detail/generic/copy.h"
namespace generic {
# 32 "/usr/local/cuda/include/thrust/system/detail/generic/copy.h"
template< class DerivedPolicy, class
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/copy.h"
InputIterator, class
# 34 "/usr/local/cuda/include/thrust/system/detail/generic/copy.h"
OutputIterator> OutputIterator
# 32 "/usr/local/cuda/include/thrust/system/detail/generic/copy.h"
copy(execution_policy< DerivedPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result);
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/copy.h"
template< class DerivedPolicy, class
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/copy.h"
InputIterator, class
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/copy.h"
Size, class
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/copy.h"
OutputIterator> OutputIterator
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/copy.h"
copy_n(execution_policy< DerivedPolicy> & exec, InputIterator first, Size n, OutputIterator result);
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/copy.h"
}
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/copy.h"
}
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/copy.h"
}
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/copy.h"
}
# 32 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
namespace thrust {
# 34 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
namespace detail {
# 38 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class T> struct is_wrapped_reference { typedef char yes_type; typedef int no_type; template< class S> static yes_type test(typename S::wrapped_reference_hint *); template< class S> static no_type test(...); static const bool value = (sizeof(test< T> (0)) == sizeof(yes_type)); typedef integral_constant< bool, value> type; };
# 43 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class T>
# 44 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
struct is_unwrappable : public is_wrapped_reference< T> {
# 46 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
};
# 51 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class
# 52 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T0, class T1, class T2, class
# 53 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T3, class T4, class T5, class
# 54 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T6, class T7, class T8, class
# 55 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T9>
# 57 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
struct is_unwrappable< tuple< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> > : public or_< is_unwrappable< T0> , is_unwrappable< T1> , is_unwrappable< T2> , is_unwrappable< T3> , is_unwrappable< T4> , is_unwrappable< T5> , is_unwrappable< T6> , is_unwrappable< T7> , is_unwrappable< T8> , is_unwrappable< T9> > {
# 72 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
};
# 77 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class
# 78 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T0, class T1, class T2, class
# 79 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T3, class T4, class T5, class
# 80 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T6, class T7, class T8, class
# 81 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T9>
# 83 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
struct is_unwrappable< tuple_of_iterator_references< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> > : public or_< is_unwrappable< T0> , is_unwrappable< T1> , is_unwrappable< T2> , is_unwrappable< T3> , is_unwrappable< T4> , is_unwrappable< T5> , is_unwrappable< T6> , is_unwrappable< T7> , is_unwrappable< T8> , is_unwrappable< T9> > {
# 98 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
};
# 101 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class T, class Result = void>
# 102 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
struct enable_if_unwrappable : public enable_if< is_unwrappable< T> ::value, Result> {
# 107 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
};
# 110 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
namespace raw_reference_detail {
# 114 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class T, class Enable = void>
# 115 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
struct raw_reference_impl : public add_reference< T> {
# 117 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
};
# 120 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class T>
# 121 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
struct raw_reference_impl< T, typename enable_if< is_wrapped_reference< typename remove_cv< T> ::type> ::value> ::type> {
# 132 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
typedef typename add_reference< typename pointer_element< typename T::pointer> ::type> ::type type;
# 133 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
};
# 136 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
}
# 139 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class T>
# 140 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
struct raw_reference : public raw_reference_detail::raw_reference_impl< T> {
# 142 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
};
# 145 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
namespace raw_reference_detail {
# 162 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class T>
# 163 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
struct raw_reference_tuple_helper : public eval_if< is_unwrappable< typename remove_cv< T> ::type> ::value, raw_reference< T> , identity_< T> > {
# 171 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
};
# 175 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class
# 176 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T0, class T1, class T2, class
# 177 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T3, class T4, class T5, class
# 178 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T6, class T7, class T8, class
# 179 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T9>
# 181 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
struct raw_reference_tuple_helper< tuple< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> > {
# 196 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
typedef tuple< typename raw_reference_detail::raw_reference_tuple_helper< T0> ::type, typename raw_reference_detail::raw_reference_tuple_helper< T1> ::type, typename raw_reference_detail::raw_reference_tuple_helper< T2> ::type, typename raw_reference_detail::raw_reference_tuple_helper< T3> ::type, typename raw_reference_detail::raw_reference_tuple_helper< T4> ::type, typename raw_reference_detail::raw_reference_tuple_helper< T5> ::type, typename raw_reference_detail::raw_reference_tuple_helper< T6> ::type, typename raw_reference_detail::raw_reference_tuple_helper< T7> ::type, typename raw_reference_detail::raw_reference_tuple_helper< T8> ::type, typename raw_reference_detail::raw_reference_tuple_helper< T9> ::type> type;
# 197 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
};
# 200 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class
# 201 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T0, class T1, class T2, class
# 202 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T3, class T4, class T5, class
# 203 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T6, class T7, class T8, class
# 204 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T9>
# 206 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
struct raw_reference_tuple_helper< tuple_of_iterator_references< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> > {
# 221 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
typedef tuple_of_iterator_references< typename raw_reference_detail::raw_reference_tuple_helper< T0> ::type, typename raw_reference_detail::raw_reference_tuple_helper< T1> ::type, typename raw_reference_detail::raw_reference_tuple_helper< T2> ::type, typename raw_reference_detail::raw_reference_tuple_helper< T3> ::type, typename raw_reference_detail::raw_reference_tuple_helper< T4> ::type, typename raw_reference_detail::raw_reference_tuple_helper< T5> ::type, typename raw_reference_detail::raw_reference_tuple_helper< T6> ::type, typename raw_reference_detail::raw_reference_tuple_helper< T7> ::type, typename raw_reference_detail::raw_reference_tuple_helper< T8> ::type, typename raw_reference_detail::raw_reference_tuple_helper< T9> ::type> type;
# 222 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
};
# 225 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
}
# 234 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class
# 235 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T0, class T1, class T2, class
# 236 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T3, class T4, class T5, class
# 237 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T6, class T7, class T8, class
# 238 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T9>
# 240 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
struct raw_reference< tuple< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> > {
# 245 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
private: typedef tuple< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> tuple_type;
# 252 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
public: typedef typename eval_if< is_unwrappable< tuple< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> > ::value, raw_reference_detail::raw_reference_tuple_helper< tuple< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> > , add_reference< tuple< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> > > ::type type;
# 253 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
};
# 256 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class
# 257 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T0, class T1, class T2, class
# 258 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T3, class T4, class T5, class
# 259 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T6, class T7, class T8, class
# 260 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T9>
# 262 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
struct raw_reference< tuple_of_iterator_references< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> > {
# 267 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
private: typedef tuple_of_iterator_references< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> tuple_type;
# 270 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
public: typedef typename raw_reference_detail::raw_reference_tuple_helper< tuple_of_iterator_references< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> > ::type type;
# 278 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
};
# 281 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
}
# 285 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class T> inline typename detail::raw_reference< T> ::type raw_reference_cast(T & ref);
# 291 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class T> inline typename detail::raw_reference< const T> ::type raw_reference_cast(const T & ref);
# 297 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class
# 298 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T0, class T1, class T2, class
# 299 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T3, class T4, class T5, class
# 300 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T6, class T7, class T8, class
# 301 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T9> typename detail::enable_if_unwrappable< detail::tuple_of_iterator_references< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> , typename detail::raw_reference< detail::tuple_of_iterator_references< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> > ::type> ::type
# 297 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
raw_reference_cast(detail::tuple_of_iterator_references< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> t);
# 313 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
namespace detail {
# 317 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
struct raw_reference_caster {
# 319 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class T> typename raw_reference< T> ::type
# 321 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
operator()(T &ref)
# 322 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
{
# 323 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
return thrust::raw_reference_cast(ref);
# 324 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
}
# 326 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class T> typename raw_reference< const T> ::type
# 328 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
operator()(const T &ref)
# 329 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
{
# 330 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
return thrust::raw_reference_cast(ref);
# 331 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
}
# 333 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class
# 334 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T0, class T1, class T2, class
# 335 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T3, class T4, class T5, class
# 336 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T6, class T7, class T8, class
# 337 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T9> typename raw_reference< tuple_of_iterator_references< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> > ::type
# 343 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
operator()(tuple_of_iterator_references< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> t, typename enable_if< is_unwrappable< tuple_of_iterator_references< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> > ::value> ::type * = 0)
# 347 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
{
# 348 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
return thrust::raw_reference_cast(t);
# 349 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
}
# 350 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
};
# 353 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
}
# 356 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class T> inline typename detail::raw_reference< T> ::type
# 359 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
raw_reference_cast(T &ref)
# 360 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
{
# 361 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
return *thrust::raw_pointer_cast(&ref);
# 362 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
}
# 365 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class T> inline typename detail::raw_reference< const T> ::type
# 368 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
raw_reference_cast(const T &ref)
# 369 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
{
# 370 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
return *thrust::raw_pointer_cast(&ref);
# 371 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
}
# 374 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
template< class
# 375 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T0, class T1, class T2, class
# 376 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T3, class T4, class T5, class
# 377 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T6, class T7, class T8, class
# 378 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
T9> typename detail::enable_if_unwrappable< detail::tuple_of_iterator_references< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> , typename detail::raw_reference< detail::tuple_of_iterator_references< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> > ::type> ::type
# 387 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
raw_reference_cast(detail::tuple_of_iterator_references< T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> t)
# 388 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
{
# 389 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
detail::raw_reference_caster f;
# 393 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
return detail::tuple_host_device_transform< detail::raw_reference_detail::raw_reference_tuple_helper> (t, f);
# 394 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
}
# 397 "/usr/local/cuda/include/thrust/detail/raw_reference_cast.h"
}
# 63 "/usr/include/c++/5/bits/stl_construct.h" 3

# 63 "/usr/include/c++/5/bits/stl_construct.h" 3
namespace std __attribute((__visibility__("default"))) {
# 77 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _T1, class _T2> inline void
# 79 "/usr/include/c++/5/bits/stl_construct.h" 3
_Construct(_T1 *__p, const _T2 &__value)
# 80 "/usr/include/c++/5/bits/stl_construct.h" 3
{
# 83 "/usr/include/c++/5/bits/stl_construct.h" 3
::new (static_cast< void *>(__p)) (_T1)(__value);
# 84 "/usr/include/c++/5/bits/stl_construct.h" 3
}
# 90 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _Tp> inline void
# 92 "/usr/include/c++/5/bits/stl_construct.h" 3
_Destroy(_Tp *__pointer)
# 93 "/usr/include/c++/5/bits/stl_construct.h" 3
{ (__pointer->~_Tp()); }
# 95 "/usr/include/c++/5/bits/stl_construct.h" 3
template< bool >
# 96 "/usr/include/c++/5/bits/stl_construct.h" 3
struct _Destroy_aux {
# 98 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _ForwardIterator> static void
# 100 "/usr/include/c++/5/bits/stl_construct.h" 3
__destroy(_ForwardIterator __first, _ForwardIterator __last)
# 101 "/usr/include/c++/5/bits/stl_construct.h" 3
{
# 102 "/usr/include/c++/5/bits/stl_construct.h" 3
for (; __first != __last; ++__first) {
# 103 "/usr/include/c++/5/bits/stl_construct.h" 3
std::_Destroy(std::__addressof(*__first)); }
# 104 "/usr/include/c++/5/bits/stl_construct.h" 3
}
# 105 "/usr/include/c++/5/bits/stl_construct.h" 3
};
# 108 "/usr/include/c++/5/bits/stl_construct.h" 3
template<> struct _Destroy_aux< true> {
# 110 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _ForwardIterator> static void
# 112 "/usr/include/c++/5/bits/stl_construct.h" 3
__destroy(_ForwardIterator, _ForwardIterator) { }
# 113 "/usr/include/c++/5/bits/stl_construct.h" 3
};
# 120 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _ForwardIterator> inline void
# 122 "/usr/include/c++/5/bits/stl_construct.h" 3
_Destroy(_ForwardIterator __first, _ForwardIterator __last)
# 123 "/usr/include/c++/5/bits/stl_construct.h" 3
{
# 125 "/usr/include/c++/5/bits/stl_construct.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _Value_type;
# 126 "/usr/include/c++/5/bits/stl_construct.h" 3
std::_Destroy_aux< __has_trivial_destructor(typename iterator_traits< _ForwardIterator> ::value_type)> ::__destroy(__first, __last);
# 128 "/usr/include/c++/5/bits/stl_construct.h" 3
}
# 136 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _ForwardIterator, class _Allocator> void
# 138 "/usr/include/c++/5/bits/stl_construct.h" 3
_Destroy(_ForwardIterator __first, _ForwardIterator __last, _Allocator &
# 139 "/usr/include/c++/5/bits/stl_construct.h" 3
__alloc)
# 140 "/usr/include/c++/5/bits/stl_construct.h" 3
{
# 141 "/usr/include/c++/5/bits/stl_construct.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 142 "/usr/include/c++/5/bits/stl_construct.h" 3
for (; __first != __last; ++__first) {
# 143 "/usr/include/c++/5/bits/stl_construct.h" 3
__traits::destroy(__alloc, std::__addressof(*__first)); }
# 144 "/usr/include/c++/5/bits/stl_construct.h" 3
}
# 146 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _ForwardIterator, class _Tp> inline void
# 148 "/usr/include/c++/5/bits/stl_construct.h" 3
_Destroy(_ForwardIterator __first, _ForwardIterator __last, allocator< _Tp> &)
# 150 "/usr/include/c++/5/bits/stl_construct.h" 3
{
# 151 "/usr/include/c++/5/bits/stl_construct.h" 3
_Destroy(__first, __last);
# 152 "/usr/include/c++/5/bits/stl_construct.h" 3
}
# 155 "/usr/include/c++/5/bits/stl_construct.h" 3
}
# 59 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
namespace std __attribute((__visibility__("default"))) {
# 63 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< bool _TrivialValueTypes>
# 64 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
struct __uninitialized_copy {
# 66 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator> static _ForwardIterator
# 68 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 69 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result)
# 70 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 71 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __result;
# 72 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 73 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 74 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __first != __last; (++__first), (++__cur)) {
# 75 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Construct(std::__addressof(*__cur), *__first); }
# 76 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __cur;
# 77 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 78 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 79 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 80 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __cur);
# 81 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 82 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 83 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 84 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 87 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_copy< true> {
# 89 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator> static _ForwardIterator
# 91 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 92 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result)
# 93 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ return std::copy(__first, __last, __result); }
# 94 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 105 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator> inline _ForwardIterator
# 107 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
uninitialized_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 108 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result)
# 109 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 111 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _InputIterator> ::value_type _ValueType1;
# 113 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType2;
# 115 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
const bool __assignable = true;
# 123 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::__uninitialized_copy< __is_trivial(typename iterator_traits< _InputIterator> ::value_type) && __is_trivial(typename iterator_traits< _ForwardIterator> ::value_type) && true> ::__uninit_copy(__first, __last, __result);
# 127 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 130 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< bool _TrivialValueType>
# 131 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
struct __uninitialized_fill {
# 133 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp> static void
# 135 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 136 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x)
# 137 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 138 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 139 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 140 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 141 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __cur != __last; ++__cur) {
# 142 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Construct(std::__addressof(*__cur), __x); }
# 143 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 144 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 145 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 146 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur);
# 147 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 148 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 149 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 150 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 153 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_fill< true> {
# 155 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp> static void
# 157 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 158 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x)
# 159 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ std::fill(__first, __last, __x); }
# 160 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 171 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp> inline void
# 173 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 174 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x)
# 175 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 177 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 179 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
const bool __assignable = true;
# 185 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::__uninitialized_fill< __is_trivial(typename iterator_traits< _ForwardIterator> ::value_type) && true> ::__uninit_fill(__first, __last, __x);
# 187 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 190 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< bool _TrivialValueType>
# 191 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
struct __uninitialized_fill_n {
# 193 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp> static _ForwardIterator
# 195 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &
# 196 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x)
# 197 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 198 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 199 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 200 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 201 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __n > 0; (--__n), (++__cur)) {
# 202 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Construct(std::__addressof(*__cur), __x); }
# 203 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __cur;
# 204 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 205 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 206 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 207 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur);
# 208 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 209 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 210 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 211 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 214 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_fill_n< true> {
# 216 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp> static _ForwardIterator
# 218 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &
# 219 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x)
# 220 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ return std::fill_n(__first, __n, __x); }
# 221 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 234 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp> inline _ForwardIterator
# 236 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x)
# 237 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 239 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 241 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
const bool __assignable = true;
# 246 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __uninitialized_fill_n< __is_trivial(typename iterator_traits< _ForwardIterator> ::value_type) && true> ::__uninit_fill_n(__first, __n, __x);
# 248 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 256 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class
# 257 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Allocator> _ForwardIterator
# 259 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 260 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, _Allocator &__alloc)
# 261 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 262 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __result;
# 263 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 264 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 265 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 266 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __first != __last; (++__first), (++__cur)) {
# 267 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__traits::construct(__alloc, std::__addressof(*__cur), *__first); }
# 268 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __cur;
# 269 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 270 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 271 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 272 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __cur, __alloc);
# 273 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 274 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 275 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 277 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class _Tp> inline _ForwardIterator
# 279 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 280 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, allocator< _Tp> &)
# 281 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ return std::uninitialized_copy(__first, __last, __result); }
# 283 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class
# 284 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Allocator> inline _ForwardIterator
# 286 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_move_a(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 287 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, _Allocator &__alloc)
# 288 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 289 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::__uninitialized_copy_a(__first, __last, __result, __alloc);
# 292 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 294 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class
# 295 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Allocator> inline _ForwardIterator
# 297 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_move_if_noexcept_a(_InputIterator __first, _InputIterator
# 298 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last, _ForwardIterator
# 299 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, _Allocator &
# 300 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__alloc)
# 301 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 302 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::__uninitialized_copy_a(__first, __last, __result, __alloc);
# 305 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 307 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp, class _Allocator> void
# 309 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 310 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x, _Allocator &__alloc)
# 311 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 312 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 313 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 314 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 315 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 316 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __cur != __last; ++__cur) {
# 317 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__traits::construct(__alloc, std::__addressof(*__cur), __x); }
# 318 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 319 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 320 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 321 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur, __alloc);
# 322 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 323 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 324 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 326 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp, class _Tp2> inline void
# 328 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 329 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x, allocator< _Tp2> &)
# 330 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ std::uninitialized_fill(__first, __last, __x); }
# 332 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp, class
# 333 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Allocator> _ForwardIterator
# 335 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &
# 336 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x, _Allocator &__alloc)
# 337 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 338 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 339 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 340 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 341 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 342 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __n > 0; (--__n), (++__cur)) {
# 343 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__traits::construct(__alloc, std::__addressof(*__cur), __x); }
# 344 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __cur;
# 345 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 346 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 347 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 348 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur, __alloc);
# 349 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 350 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 351 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 353 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp, class
# 354 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Tp2> inline _ForwardIterator
# 356 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &
# 357 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x, allocator< _Tp2> &)
# 358 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ return std::uninitialized_fill_n(__first, __n, __x); }
# 370 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 371 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator, class _Allocator> inline _ForwardIterator
# 373 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_copy_move(_InputIterator1 __first1, _InputIterator1
# 374 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last1, _InputIterator2
# 375 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__first2, _InputIterator2
# 376 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last2, _ForwardIterator
# 377 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, _Allocator &
# 378 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__alloc)
# 379 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 380 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __mid = std::__uninitialized_copy_a(__first1, __last1, __result, __alloc);
# 383 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 384 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 385 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::__uninitialized_move_a(__first2, __last2, __mid, __alloc);
# 386 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 387 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 388 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 389 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __mid, __alloc);
# 390 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 391 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 392 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 398 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 399 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator, class _Allocator> inline _ForwardIterator
# 401 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_move_copy(_InputIterator1 __first1, _InputIterator1
# 402 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last1, _InputIterator2
# 403 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__first2, _InputIterator2
# 404 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last2, _ForwardIterator
# 405 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, _Allocator &
# 406 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__alloc)
# 407 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 408 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __mid = std::__uninitialized_move_a(__first1, __last1, __result, __alloc);
# 411 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 412 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 413 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::__uninitialized_copy_a(__first2, __last2, __mid, __alloc);
# 414 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 415 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 416 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 417 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __mid, __alloc);
# 418 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 419 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 420 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 425 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp, class _InputIterator, class
# 426 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Allocator> inline _ForwardIterator
# 428 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid, const _Tp &
# 429 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x, _InputIterator __first, _InputIterator
# 430 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last, _Allocator &__alloc)
# 431 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 432 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::__uninitialized_fill_a(__result, __mid, __x, __alloc);
# 433 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 434 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 435 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::__uninitialized_move_a(__first, __last, __mid, __alloc);
# 436 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 437 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 438 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 439 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __mid, __alloc);
# 440 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 441 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 442 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 447 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class _Tp, class
# 448 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Allocator> inline void
# 450 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1, _ForwardIterator
# 451 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__first2, _ForwardIterator
# 452 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last2, const _Tp &__x, _Allocator &
# 453 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__alloc)
# 454 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 455 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __mid2 = std::__uninitialized_move_a(__first1, __last1, __first2, __alloc);
# 458 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 459 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 460 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::__uninitialized_fill_a(__mid2, __last2, __x, __alloc);
# 461 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 462 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 463 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 464 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first2, __mid2, __alloc);
# 465 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 466 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 467 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 686 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 62 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
namespace std __attribute((__visibility__("default"))) {
# 83 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
template< class _Tp> pair< _Tp *, long>
# 85 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
get_temporary_buffer(ptrdiff_t __len)
# 86 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
{
# 87 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
const ptrdiff_t __max = (__gnu_cxx::__numeric_traits_integer< long> ::__max / sizeof(_Tp));
# 89 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
if (__len > __max) {
# 90 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
__len = __max; }
# 92 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
while (__len > (0))
# 93 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
{
# 94 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
_Tp *__tmp = static_cast< _Tp *>(::operator new(__len * sizeof(_Tp), std::nothrow));
# 96 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
if (__tmp != 0) {
# 97 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
return pair< _Tp *, long> (__tmp, __len); }
# 98 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
__len /= (2);
# 99 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
}
# 100 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
return pair< _Tp *, long> (static_cast< _Tp *>(0), 0);
# 101 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
}
# 110 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
template< class _Tp> inline void
# 112 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
return_temporary_buffer(_Tp *__p)
# 113 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
{ ::operator delete(__p, std::nothrow); }
# 121 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
template< class _ForwardIterator, class _Tp>
# 122 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
class _Temporary_buffer {
# 128 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
public: typedef _Tp value_type;
# 129 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
typedef value_type *pointer;
# 130 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
typedef pointer iterator;
# 131 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
typedef ptrdiff_t size_type;
# 134 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
protected: size_type _M_original_len;
# 135 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
size_type _M_len;
# 136 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
pointer _M_buffer;
# 141 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
public: size_type size() const
# 142 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
{ return _M_len; }
# 146 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
size_type requested_size() const
# 147 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
{ return _M_original_len; }
# 151 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
iterator begin()
# 152 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
{ return _M_buffer; }
# 156 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
iterator end()
# 157 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
{ return (_M_buffer) + (_M_len); }
# 163 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
_Temporary_buffer(_ForwardIterator __first, _ForwardIterator __last);
# 165 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
~_Temporary_buffer()
# 166 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
{
# 167 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
std::_Destroy(_M_buffer, (_M_buffer) + (_M_len));
# 168 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
std::return_temporary_buffer(_M_buffer);
# 169 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
}
# 173 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
private: _Temporary_buffer(const _Temporary_buffer &);
# 176 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
void operator=(const _Temporary_buffer &);
# 177 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
};
# 180 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
template< bool >
# 181 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
struct __uninitialized_construct_buf_dispatch {
# 183 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
template< class _Pointer, class _ForwardIterator> static void
# 185 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
__ucr(_Pointer __first, _Pointer __last, _ForwardIterator
# 186 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
__seed)
# 187 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
{
# 188 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
if (__first == __last) {
# 189 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
return; }
# 191 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
_Pointer __cur = __first;
# 192 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
try
# 193 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
{
# 194 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
std::_Construct(std::__addressof(*__first), *__seed);
# 196 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
_Pointer __prev = __cur;
# 197 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
++__cur;
# 198 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
for (; __cur != __last; (++__cur), (++__prev)) {
# 199 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
std::_Construct(std::__addressof(*__cur), *__prev); }
# 201 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
(*__seed) = (*__prev);
# 202 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
}
# 203 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
catch (...)
# 204 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
{
# 205 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
std::_Destroy(__first, __cur);
# 206 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
throw;
# 207 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
}
# 208 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
}
# 209 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
};
# 212 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
template<> struct __uninitialized_construct_buf_dispatch< true> {
# 214 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
template< class _Pointer, class _ForwardIterator> static void
# 216 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
__ucr(_Pointer, _Pointer, _ForwardIterator) { }
# 217 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
};
# 229 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
template< class _Pointer, class _ForwardIterator> inline void
# 231 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
__uninitialized_construct_buf(_Pointer __first, _Pointer __last, _ForwardIterator
# 232 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
__seed)
# 233 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
{
# 235 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
typedef typename iterator_traits< _Pointer> ::value_type _ValueType;
# 237 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
std::__uninitialized_construct_buf_dispatch< __has_trivial_constructor(typename iterator_traits< _Pointer> ::value_type)> ::__ucr(__first, __last, __seed);
# 240 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
}
# 242 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
template< class _ForwardIterator, class _Tp>
# 244 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
_Temporary_buffer< _ForwardIterator, _Tp> ::_Temporary_buffer(_ForwardIterator __first, _ForwardIterator __last) : _M_original_len(std::distance(__first, __last)), _M_len((0)), _M_buffer((0))
# 247 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
{
# 248 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
try
# 249 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
{
# 250 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
pair< _Tp *, long> __p(std::get_temporary_buffer< value_type> (_M_original_len));
# 252 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
(_M_buffer) = (__p.first);
# 253 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
(_M_len) = (__p.second);
# 254 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
if (_M_buffer) {
# 255 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
std::__uninitialized_construct_buf(_M_buffer, (_M_buffer) + (_M_len), __first); }
# 257 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
}
# 258 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
catch (...)
# 259 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
{
# 260 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
std::return_temporary_buffer(_M_buffer);
# 261 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
(_M_buffer) = 0;
# 262 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
(_M_len) = (0);
# 263 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
throw;
# 264 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
}
# 265 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
}
# 268 "/usr/include/c++/5/bits/stl_tempbuf.h" 3
}
# 59 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
namespace std __attribute((__visibility__("default"))) {
# 67 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
template< class _OutputIterator, class _Tp>
# 68 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
class raw_storage_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 72 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
protected: _OutputIterator _M_iter;
# 76 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
public: explicit raw_storage_iterator(_OutputIterator __x) : _M_iter(__x)
# 77 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
{ }
# 80 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
raw_storage_iterator &operator*() { return *this; }
# 83 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
raw_storage_iterator &operator=(const _Tp &__element)
# 84 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
{
# 85 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
std::_Construct(std::__addressof(*(_M_iter)), __element);
# 86 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
return *this;
# 87 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
}
# 90 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
raw_storage_iterator &operator++()
# 91 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
{
# 92 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
++(_M_iter);
# 93 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
return *this;
# 94 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
}
# 97 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
raw_storage_iterator operator++(int)
# 98 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
{
# 99 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
raw_storage_iterator __tmp = *this;
# 100 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
++(_M_iter);
# 101 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
return __tmp;
# 102 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
}
# 103 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
};
# 106 "/usr/include/c++/5/bits/stl_raw_storage_iter.h" 3
}
# 36 "/usr/include/c++/5/backward/auto_ptr.h" 3
namespace std __attribute((__visibility__("default"))) {
# 47 "/usr/include/c++/5/backward/auto_ptr.h" 3
template< class _Tp1>
# 48 "/usr/include/c++/5/backward/auto_ptr.h" 3
struct auto_ptr_ref {
# 50 "/usr/include/c++/5/backward/auto_ptr.h" 3
_Tp1 *_M_ptr;
# 53 "/usr/include/c++/5/backward/auto_ptr.h" 3
explicit auto_ptr_ref(_Tp1 *__p) : _M_ptr(__p) { }
# 54 "/usr/include/c++/5/backward/auto_ptr.h" 3
};
# 86 "/usr/include/c++/5/backward/auto_ptr.h" 3
template< class _Tp>
# 87 "/usr/include/c++/5/backward/auto_ptr.h" 3
class auto_ptr {
# 90 "/usr/include/c++/5/backward/auto_ptr.h" 3
_Tp *_M_ptr;
# 94 "/usr/include/c++/5/backward/auto_ptr.h" 3
public: typedef _Tp element_type;
# 103 "/usr/include/c++/5/backward/auto_ptr.h" 3
explicit auto_ptr(element_type *__p = 0) throw() : _M_ptr(__p) { }
# 112 "/usr/include/c++/5/backward/auto_ptr.h" 3
auto_ptr(auto_ptr &__a) throw() : _M_ptr(__a.release()) { }
# 124 "/usr/include/c++/5/backward/auto_ptr.h" 3
template< class _Tp1>
# 125 "/usr/include/c++/5/backward/auto_ptr.h" 3
auto_ptr(std::auto_ptr< _Tp1> &__a) throw() : _M_ptr((__a.release())) { }
# 136 "/usr/include/c++/5/backward/auto_ptr.h" 3
auto_ptr &operator=(auto_ptr &__a) throw()
# 137 "/usr/include/c++/5/backward/auto_ptr.h" 3
{
# 138 "/usr/include/c++/5/backward/auto_ptr.h" 3
reset(__a.release());
# 139 "/usr/include/c++/5/backward/auto_ptr.h" 3
return *this;
# 140 "/usr/include/c++/5/backward/auto_ptr.h" 3
}
# 152 "/usr/include/c++/5/backward/auto_ptr.h" 3
template< class _Tp1> auto_ptr &
# 154 "/usr/include/c++/5/backward/auto_ptr.h" 3
operator=(std::auto_ptr< _Tp1> &__a) throw()
# 155 "/usr/include/c++/5/backward/auto_ptr.h" 3
{
# 156 "/usr/include/c++/5/backward/auto_ptr.h" 3
reset((__a.release()));
# 157 "/usr/include/c++/5/backward/auto_ptr.h" 3
return *this;
# 158 "/usr/include/c++/5/backward/auto_ptr.h" 3
}
# 170 "/usr/include/c++/5/backward/auto_ptr.h" 3
~auto_ptr() { delete (_M_ptr); }
# 181 "/usr/include/c++/5/backward/auto_ptr.h" 3
element_type &operator*() const throw()
# 182 "/usr/include/c++/5/backward/auto_ptr.h" 3
{
# 183 "/usr/include/c++/5/backward/auto_ptr.h" 3
;
# 184 "/usr/include/c++/5/backward/auto_ptr.h" 3
return *(_M_ptr);
# 185 "/usr/include/c++/5/backward/auto_ptr.h" 3
}
# 194 "/usr/include/c++/5/backward/auto_ptr.h" 3
element_type *operator->() const throw()
# 195 "/usr/include/c++/5/backward/auto_ptr.h" 3
{
# 196 "/usr/include/c++/5/backward/auto_ptr.h" 3
;
# 197 "/usr/include/c++/5/backward/auto_ptr.h" 3
return _M_ptr;
# 198 "/usr/include/c++/5/backward/auto_ptr.h" 3
}
# 211 "/usr/include/c++/5/backward/auto_ptr.h" 3
element_type *get() const throw() { return _M_ptr; }
# 225 "/usr/include/c++/5/backward/auto_ptr.h" 3
element_type *release() throw()
# 226 "/usr/include/c++/5/backward/auto_ptr.h" 3
{
# 227 "/usr/include/c++/5/backward/auto_ptr.h" 3
element_type *__tmp = _M_ptr;
# 228 "/usr/include/c++/5/backward/auto_ptr.h" 3
(_M_ptr) = 0;
# 229 "/usr/include/c++/5/backward/auto_ptr.h" 3
return __tmp;
# 230 "/usr/include/c++/5/backward/auto_ptr.h" 3
}
# 240 "/usr/include/c++/5/backward/auto_ptr.h" 3
void reset(element_type *__p = 0) throw()
# 241 "/usr/include/c++/5/backward/auto_ptr.h" 3
{
# 242 "/usr/include/c++/5/backward/auto_ptr.h" 3
if (__p != (_M_ptr))
# 243 "/usr/include/c++/5/backward/auto_ptr.h" 3
{
# 244 "/usr/include/c++/5/backward/auto_ptr.h" 3
delete (_M_ptr);
# 245 "/usr/include/c++/5/backward/auto_ptr.h" 3
(_M_ptr) = __p;
# 246 "/usr/include/c++/5/backward/auto_ptr.h" 3
}
# 247 "/usr/include/c++/5/backward/auto_ptr.h" 3
}
# 260 "/usr/include/c++/5/backward/auto_ptr.h" 3
auto_ptr(auto_ptr_ref< _Tp> __ref) throw() : _M_ptr(((__ref._M_ptr)))
# 261 "/usr/include/c++/5/backward/auto_ptr.h" 3
{ }
# 264 "/usr/include/c++/5/backward/auto_ptr.h" 3
auto_ptr &operator=(auto_ptr_ref< _Tp> __ref) throw()
# 265 "/usr/include/c++/5/backward/auto_ptr.h" 3
{
# 266 "/usr/include/c++/5/backward/auto_ptr.h" 3
if ((__ref._M_ptr) != this->get())
# 267 "/usr/include/c++/5/backward/auto_ptr.h" 3
{
# 268 "/usr/include/c++/5/backward/auto_ptr.h" 3
delete (_M_ptr);
# 269 "/usr/include/c++/5/backward/auto_ptr.h" 3
(_M_ptr) = (__ref._M_ptr);
# 270 "/usr/include/c++/5/backward/auto_ptr.h" 3
}
# 271 "/usr/include/c++/5/backward/auto_ptr.h" 3
return *this;
# 272 "/usr/include/c++/5/backward/auto_ptr.h" 3
}
# 274 "/usr/include/c++/5/backward/auto_ptr.h" 3
template< class _Tp1>
# 275 "/usr/include/c++/5/backward/auto_ptr.h" 3
operator auto_ptr_ref< _Tp1> () throw()
# 276 "/usr/include/c++/5/backward/auto_ptr.h" 3
{ return ((auto_ptr_ref< _Tp1> )(this->release())); }
# 278 "/usr/include/c++/5/backward/auto_ptr.h" 3
template< class _Tp1>
# 279 "/usr/include/c++/5/backward/auto_ptr.h" 3
operator std::auto_ptr< _Tp1> () throw()
# 280 "/usr/include/c++/5/backward/auto_ptr.h" 3
{ return ((std::auto_ptr< _Tp1> )(this->release())); }
# 281 "/usr/include/c++/5/backward/auto_ptr.h" 3
};
# 286 "/usr/include/c++/5/backward/auto_ptr.h" 3
template<> class auto_ptr< void> {
# 289 "/usr/include/c++/5/backward/auto_ptr.h" 3
public: typedef void element_type;
# 290 "/usr/include/c++/5/backward/auto_ptr.h" 3
};
# 327 "/usr/include/c++/5/backward/auto_ptr.h" 3
}
# 31 "/usr/local/cuda/include/thrust/detail/internal_functional.h"

# 31 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
namespace detail {
# 37 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Predicate>
# 38 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct unary_negate {
# 40 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
typedef bool result_type;
# 42 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
Predicate pred;
# 45 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
explicit unary_negate(const Predicate &pred) : pred(pred) { }
# 47 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class T> bool
# 49 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
operator()(const T &x)
# 50 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 51 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
return !((bool)(pred)(x));
# 52 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 53 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 56 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Predicate>
# 57 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct binary_negate {
# 59 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
typedef bool result_type;
# 61 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
Predicate pred;
# 64 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
explicit binary_negate(const Predicate &pred) : pred(pred) { }
# 66 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class T1, class T2> bool
# 68 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
operator()(const T1 &x, const T2 &y)
# 69 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 70 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
return !((bool)(pred)(x, y));
# 71 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 72 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 74 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Predicate> unary_negate< Predicate>
# 76 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
not1(const Predicate &pred)
# 77 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 78 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
return ((unary_negate< Predicate> )(pred));
# 79 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 81 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Predicate> binary_negate< Predicate>
# 83 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
not2(const Predicate &pred)
# 84 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 85 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
return ((binary_negate< Predicate> )(pred));
# 86 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 90 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Predicate, class IntegralType>
# 91 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct predicate_to_integral {
# 93 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
Predicate pred;
# 96 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
explicit predicate_to_integral(const Predicate &pred) : pred(pred) { }
# 98 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class T> bool
# 100 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
operator()(const T &x)
# 101 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 102 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
return ((pred)(x)) ? (IntegralType)1 : ((IntegralType)0);
# 103 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 104 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 108 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class T1>
# 109 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct equal_to {
# 111 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
typedef bool result_type;
# 113 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class T2> bool
# 115 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
operator()(const T1 &lhs, const T2 &rhs) const
# 116 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 117 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
return lhs == rhs;
# 118 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 119 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 122 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class T2>
# 123 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct equal_to_value {
# 125 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
T2 rhs;
# 128 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
equal_to_value(const T2 &rhs) : rhs(rhs) { }
# 130 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class T1> bool
# 132 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
operator()(const T1 &lhs) const
# 133 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 134 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
return lhs == (rhs);
# 135 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 136 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 138 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Predicate>
# 139 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct tuple_binary_predicate {
# 141 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
typedef bool result_type;
# 144 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
tuple_binary_predicate(const Predicate &p) : pred(p) { }
# 146 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Tuple> bool
# 148 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
operator()(const Tuple &t) const
# 149 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 150 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
return (pred)(thrust::get< 0> (t), thrust::get< 1> (t));
# 151 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 153 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
mutable Predicate pred;
# 154 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 156 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Predicate>
# 157 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct tuple_not_binary_predicate {
# 159 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
typedef bool result_type;
# 162 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
tuple_not_binary_predicate(const Predicate &p) : pred(p) { }
# 164 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Tuple> bool
# 166 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
operator()(const Tuple &t) const
# 167 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 168 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
return !(pred)(thrust::get< 0> (t), thrust::get< 1> (t));
# 169 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 171 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
mutable Predicate pred;
# 172 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 174 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Generator>
# 175 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct host_generate_functor {
# 177 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
typedef void result_type;
# 180 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
host_generate_functor(Generator g) : gen(g)
# 181 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{ }
# 193 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class T> void
# 195 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
operator()(const T &x)
# 196 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 198 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
T &lvalue = const_cast< T &>(x);
# 201 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
lvalue = (gen)();
# 202 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 204 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
Generator gen;
# 205 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 207 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Generator>
# 208 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct device_generate_functor {
# 210 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
typedef void result_type;
# 213 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
device_generate_functor(Generator g) : gen(g)
# 214 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{ }
# 226 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class T> void
# 228 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
operator()(const T &x)
# 229 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 231 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
T &lvalue = const_cast< T &>(x);
# 234 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
lvalue = (gen)();
# 235 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 237 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
Generator gen;
# 238 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 240 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class System, class Generator>
# 241 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct generate_functor : public eval_if< is_convertible< System, system::cpp::detail::tag> ::value, identity_< host_generate_functor< Generator> > , identity_< device_generate_functor< Generator> > > {
# 247 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 250 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class ResultType, class BinaryFunction>
# 251 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct zipped_binary_op {
# 253 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
typedef ResultType result_type;
# 256 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
zipped_binary_op(BinaryFunction binary_op) : m_binary_op(binary_op)
# 257 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{ }
# 259 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Tuple> result_type
# 261 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
operator()(Tuple t)
# 262 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 263 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
return (m_binary_op)(thrust::get< 0> (t), thrust::get< 1> (t));
# 264 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 266 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
BinaryFunction m_binary_op;
# 267 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 270 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class T>
# 271 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct is_non_const_reference : public and_< not_< is_const< T> > , is_reference< T> > {
# 276 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 278 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class T> struct is_tuple_of_iterator_references : public false_type { };
# 280 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class T1, class T2, class T3, class
# 281 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
T4, class T5, class T6, class
# 282 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
T7, class T8, class T9, class
# 283 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
T10>
# 284 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct is_tuple_of_iterator_references< tuple_of_iterator_references< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> > : public true_type {
# 290 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 294 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class T>
# 295 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct enable_if_non_const_reference_or_tuple_of_iterator_references : public enable_if< is_non_const_reference< T> ::value || is_tuple_of_iterator_references< T> ::value> {
# 299 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 302 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class UnaryFunction>
# 303 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct unary_transform_functor {
# 305 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
typedef void result_type;
# 307 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
UnaryFunction f;
# 310 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
unary_transform_functor(UnaryFunction f) : f(f)
# 312 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{ }
# 315 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Tuple> typename enable_if_non_const_reference_or_tuple_of_iterator_references< typename tuple_element< 1, Tuple> ::type> ::type
# 320 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
operator()(Tuple t)
# 321 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 322 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
thrust::get< 1> (t) = (f)(thrust::get< 0> (t));
# 323 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 324 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 327 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class BinaryFunction>
# 328 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct binary_transform_functor {
# 330 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
BinaryFunction f;
# 333 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
binary_transform_functor(BinaryFunction f) : f(f)
# 335 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{ }
# 338 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Tuple> typename enable_if_non_const_reference_or_tuple_of_iterator_references< typename tuple_element< 2, Tuple> ::type> ::type
# 343 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
operator()(Tuple t)
# 344 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 345 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
thrust::get< 2> (t) = (f)(thrust::get< 0> (t), thrust::get< 1> (t));
# 346 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 347 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 350 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class UnaryFunction, class Predicate>
# 351 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct unary_transform_if_functor {
# 353 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
UnaryFunction unary_op;
# 354 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
Predicate pred;
# 357 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
unary_transform_if_functor(UnaryFunction unary_op, Predicate pred) : unary_op(unary_op), pred(pred)
# 359 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{ }
# 362 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Tuple> typename enable_if_non_const_reference_or_tuple_of_iterator_references< typename tuple_element< 1, Tuple> ::type> ::type
# 367 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
operator()(Tuple t)
# 368 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 369 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
if ((pred)(thrust::get< 0> (t)))
# 370 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 371 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
thrust::get< 1> (t) = (unary_op)(thrust::get< 0> (t));
# 372 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 373 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 374 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 377 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class UnaryFunction, class Predicate>
# 378 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct unary_transform_if_with_stencil_functor {
# 380 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
UnaryFunction unary_op;
# 381 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
Predicate pred;
# 384 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
unary_transform_if_with_stencil_functor(UnaryFunction unary_op, Predicate pred) : unary_op(unary_op), pred(pred)
# 386 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{ }
# 389 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Tuple> typename enable_if_non_const_reference_or_tuple_of_iterator_references< typename tuple_element< 2, Tuple> ::type> ::type
# 394 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
operator()(Tuple t)
# 395 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 396 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
if ((pred)(thrust::get< 1> (t))) {
# 397 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
thrust::get< 2> (t) = (unary_op)(thrust::get< 0> (t)); }
# 398 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 399 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 402 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class BinaryFunction, class Predicate>
# 403 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct binary_transform_if_functor {
# 405 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
BinaryFunction binary_op;
# 406 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
Predicate pred;
# 409 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
binary_transform_if_functor(BinaryFunction binary_op, Predicate pred) : binary_op(binary_op), pred(pred)
# 410 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{ }
# 413 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Tuple> typename enable_if_non_const_reference_or_tuple_of_iterator_references< typename tuple_element< 3, Tuple> ::type> ::type
# 418 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
operator()(Tuple t)
# 419 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 420 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
if ((pred)(thrust::get< 2> (t))) {
# 421 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
thrust::get< 3> (t) = (binary_op)(thrust::get< 0> (t), thrust::get< 1> (t)); }
# 422 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 423 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 426 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class T>
# 427 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct host_destroy_functor {
# 430 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
void operator()(T &x) const
# 431 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 432 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
(x.~T());
# 433 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 434 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 437 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class T>
# 438 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct device_destroy_functor {
# 442 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
void operator()(T &x) const
# 443 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 444 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
(x.~T());
# 445 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 446 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 449 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class System, class T>
# 450 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct destroy_functor : public eval_if< is_convertible< System, system::cpp::detail::tag> ::value, identity_< host_destroy_functor< T> > , identity_< device_destroy_functor< T> > > {
# 456 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 459 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class T>
# 460 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct fill_functor {
# 462 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
T exemplar;
# 465 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
fill_functor(const T &_exemplar) : exemplar(_exemplar)
# 466 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{ }
# 469 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
T operator()() const
# 470 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 471 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
return exemplar;
# 472 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 473 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 476 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class T>
# 477 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct uninitialized_fill_functor {
# 479 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
T exemplar;
# 482 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
uninitialized_fill_functor(T x) : exemplar(x) { }
# 485 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
void operator()(T &x)
# 486 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 487 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
::new (static_cast< void *>(&x)) (T)(exemplar);
# 488 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 489 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 496 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Compare>
# 497 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct compare_first_less_second {
# 499 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
compare_first_less_second(Compare c) : comp(c)
# 500 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{ }
# 502 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class T1, class T2> bool
# 504 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
operator()(T1 lhs, T2 rhs)
# 505 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 506 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
return (comp)(thrust::get< 0> (lhs), thrust::get< 0> (rhs)) || ((!(comp)(thrust::get< 0> (rhs), thrust::get< 0> (lhs))) && (thrust::get< 1> (lhs) < thrust::get< 1> (rhs)));
# 507 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 509 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
Compare comp;
# 510 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 513 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Compare>
# 514 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
struct compare_first {
# 516 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
Compare comp;
# 519 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
compare_first(Compare comp) : comp(comp)
# 521 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{ }
# 523 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
template< class Tuple1, class Tuple2> bool
# 525 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
operator()(const Tuple1 &x, const Tuple2 &y)
# 526 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
{
# 527 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
return (comp)(thrust::raw_reference_cast(thrust::get< 0> (x)), thrust::raw_reference_cast(thrust::get< 0> (y)));
# 528 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 529 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
};
# 532 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 533 "/usr/local/cuda/include/thrust/detail/internal_functional.h"
}
# 27 "/usr/local/cuda/include/thrust/transform.h"
namespace thrust {
# 87 "/usr/local/cuda/include/thrust/transform.h"
template< class DerivedPolicy, class
# 88 "/usr/local/cuda/include/thrust/transform.h"
InputIterator, class
# 89 "/usr/local/cuda/include/thrust/transform.h"
OutputIterator, class
# 90 "/usr/local/cuda/include/thrust/transform.h"
UnaryFunction> OutputIterator
# 87 "/usr/local/cuda/include/thrust/transform.h"
transform(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result, UnaryFunction op);
# 138 "/usr/local/cuda/include/thrust/transform.h"
template< class InputIterator, class
# 139 "/usr/local/cuda/include/thrust/transform.h"
OutputIterator, class
# 140 "/usr/local/cuda/include/thrust/transform.h"
UnaryFunction> OutputIterator
# 138 "/usr/local/cuda/include/thrust/transform.h"
transform(InputIterator first, InputIterator last, OutputIterator result, UnaryFunction op);
# 201 "/usr/local/cuda/include/thrust/transform.h"
template< class DerivedPolicy, class
# 202 "/usr/local/cuda/include/thrust/transform.h"
InputIterator1, class
# 203 "/usr/local/cuda/include/thrust/transform.h"
InputIterator2, class
# 204 "/usr/local/cuda/include/thrust/transform.h"
OutputIterator, class
# 205 "/usr/local/cuda/include/thrust/transform.h"
BinaryFunction> OutputIterator
# 201 "/usr/local/cuda/include/thrust/transform.h"
transform(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result, BinaryFunction op);
# 262 "/usr/local/cuda/include/thrust/transform.h"
template< class InputIterator1, class
# 263 "/usr/local/cuda/include/thrust/transform.h"
InputIterator2, class
# 264 "/usr/local/cuda/include/thrust/transform.h"
OutputIterator, class
# 265 "/usr/local/cuda/include/thrust/transform.h"
BinaryFunction> OutputIterator
# 262 "/usr/local/cuda/include/thrust/transform.h"
transform(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result, BinaryFunction op);
# 338 "/usr/local/cuda/include/thrust/transform.h"
template< class DerivedPolicy, class
# 339 "/usr/local/cuda/include/thrust/transform.h"
InputIterator, class
# 340 "/usr/local/cuda/include/thrust/transform.h"
ForwardIterator, class
# 341 "/usr/local/cuda/include/thrust/transform.h"
UnaryFunction, class
# 342 "/usr/local/cuda/include/thrust/transform.h"
Predicate> ForwardIterator
# 338 "/usr/local/cuda/include/thrust/transform.h"
transform_if(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator first, InputIterator last, ForwardIterator result, UnaryFunction op, Predicate pred);
# 410 "/usr/local/cuda/include/thrust/transform.h"
template< class InputIterator, class
# 411 "/usr/local/cuda/include/thrust/transform.h"
ForwardIterator, class
# 412 "/usr/local/cuda/include/thrust/transform.h"
UnaryFunction, class
# 413 "/usr/local/cuda/include/thrust/transform.h"
Predicate> ForwardIterator
# 410 "/usr/local/cuda/include/thrust/transform.h"
transform_if(InputIterator first, InputIterator last, ForwardIterator result, UnaryFunction op, Predicate pred);
# 481 "/usr/local/cuda/include/thrust/transform.h"
template< class DerivedPolicy, class
# 482 "/usr/local/cuda/include/thrust/transform.h"
InputIterator1, class
# 483 "/usr/local/cuda/include/thrust/transform.h"
InputIterator2, class
# 484 "/usr/local/cuda/include/thrust/transform.h"
ForwardIterator, class
# 485 "/usr/local/cuda/include/thrust/transform.h"
UnaryFunction, class
# 486 "/usr/local/cuda/include/thrust/transform.h"
Predicate> ForwardIterator
# 481 "/usr/local/cuda/include/thrust/transform.h"
transform_if(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first, InputIterator1 last, InputIterator2 stencil, ForwardIterator result, UnaryFunction op, Predicate pred);
# 550 "/usr/local/cuda/include/thrust/transform.h"
template< class InputIterator1, class
# 551 "/usr/local/cuda/include/thrust/transform.h"
InputIterator2, class
# 552 "/usr/local/cuda/include/thrust/transform.h"
ForwardIterator, class
# 553 "/usr/local/cuda/include/thrust/transform.h"
UnaryFunction, class
# 554 "/usr/local/cuda/include/thrust/transform.h"
Predicate> ForwardIterator
# 550 "/usr/local/cuda/include/thrust/transform.h"
transform_if(InputIterator1 first, InputIterator1 last, InputIterator2 stencil, ForwardIterator result, UnaryFunction op, Predicate pred);
# 628 "/usr/local/cuda/include/thrust/transform.h"
template< class DerivedPolicy, class
# 629 "/usr/local/cuda/include/thrust/transform.h"
InputIterator1, class
# 630 "/usr/local/cuda/include/thrust/transform.h"
InputIterator2, class
# 631 "/usr/local/cuda/include/thrust/transform.h"
InputIterator3, class
# 632 "/usr/local/cuda/include/thrust/transform.h"
ForwardIterator, class
# 633 "/usr/local/cuda/include/thrust/transform.h"
BinaryFunction, class
# 634 "/usr/local/cuda/include/thrust/transform.h"
Predicate> ForwardIterator
# 628 "/usr/local/cuda/include/thrust/transform.h"
transform_if(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, InputIterator3 stencil, ForwardIterator result, BinaryFunction binary_op, Predicate pred);
# 704 "/usr/local/cuda/include/thrust/transform.h"
template< class InputIterator1, class
# 705 "/usr/local/cuda/include/thrust/transform.h"
InputIterator2, class
# 706 "/usr/local/cuda/include/thrust/transform.h"
InputIterator3, class
# 707 "/usr/local/cuda/include/thrust/transform.h"
ForwardIterator, class
# 708 "/usr/local/cuda/include/thrust/transform.h"
BinaryFunction, class
# 709 "/usr/local/cuda/include/thrust/transform.h"
Predicate> ForwardIterator
# 704 "/usr/local/cuda/include/thrust/transform.h"
transform_if(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, InputIterator3 stencil, ForwardIterator result, BinaryFunction binary_op, Predicate pred);
# 722 "/usr/local/cuda/include/thrust/transform.h"
}
# 22 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
namespace system {
# 26 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
namespace detail {
# 28 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
namespace generic {
# 31 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
template< class DerivedPolicy, class
# 32 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
InputIterator, class
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
OutputIterator, class
# 34 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
UnaryFunction> OutputIterator
# 31 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
transform(execution_policy< DerivedPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result, UnaryFunction op);
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
template< class DerivedPolicy, class
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
InputIterator1, class
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
InputIterator2, class
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
OutputIterator, class
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
BinaryFunction> OutputIterator
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
transform(execution_policy< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result, BinaryFunction op);
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
template< class DerivedPolicy, class
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
InputIterator, class
# 57 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
ForwardIterator, class
# 58 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
UnaryFunction, class
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
Predicate> ForwardIterator
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
transform_if(execution_policy< DerivedPolicy> & exec, InputIterator first, InputIterator last, ForwardIterator result, UnaryFunction unary_op, Predicate pred);
# 68 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
template< class DerivedPolicy, class
# 69 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
InputIterator1, class
# 70 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
InputIterator2, class
# 71 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
ForwardIterator, class
# 72 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
UnaryFunction, class
# 73 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
Predicate> ForwardIterator
# 68 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
transform_if(execution_policy< DerivedPolicy> & exec, InputIterator1 first, InputIterator1 last, InputIterator2 stencil, ForwardIterator result, UnaryFunction unary_op, Predicate pred);
# 83 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
template< class DerivedPolicy, class
# 84 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
InputIterator1, class
# 85 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
InputIterator2, class
# 86 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
InputIterator3, class
# 87 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
ForwardIterator, class
# 88 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
BinaryFunction, class
# 89 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
Predicate> ForwardIterator
# 83 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
transform_if(execution_policy< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, InputIterator3 stencil, ForwardIterator result, BinaryFunction binary_op, Predicate pred);
# 100 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
}
# 101 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
}
# 102 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
}
# 103 "/usr/local/cuda/include/thrust/system/detail/generic/transform.h"
}
# 27 "/usr/local/cuda/include/thrust/for_each.h"
namespace thrust {
# 91 "/usr/local/cuda/include/thrust/for_each.h"
template< class DerivedPolicy, class
# 92 "/usr/local/cuda/include/thrust/for_each.h"
InputIterator, class
# 93 "/usr/local/cuda/include/thrust/for_each.h"
UnaryFunction> InputIterator
# 91 "/usr/local/cuda/include/thrust/for_each.h"
for_each(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator first, InputIterator last, UnaryFunction f);
# 154 "/usr/local/cuda/include/thrust/for_each.h"
template< class DerivedPolicy, class
# 155 "/usr/local/cuda/include/thrust/for_each.h"
InputIterator, class
# 156 "/usr/local/cuda/include/thrust/for_each.h"
Size, class
# 157 "/usr/local/cuda/include/thrust/for_each.h"
UnaryFunction> InputIterator
# 154 "/usr/local/cuda/include/thrust/for_each.h"
for_each_n(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator first, Size n, UnaryFunction f);
# 212 "/usr/local/cuda/include/thrust/for_each.h"
template< class InputIterator, class
# 213 "/usr/local/cuda/include/thrust/for_each.h"
UnaryFunction> InputIterator
# 212 "/usr/local/cuda/include/thrust/for_each.h"
for_each(InputIterator first, InputIterator last, UnaryFunction f);
# 267 "/usr/local/cuda/include/thrust/for_each.h"
template< class InputIterator, class
# 268 "/usr/local/cuda/include/thrust/for_each.h"
Size, class
# 269 "/usr/local/cuda/include/thrust/for_each.h"
UnaryFunction> InputIterator
# 267 "/usr/local/cuda/include/thrust/for_each.h"
for_each_n(InputIterator first, Size n, UnaryFunction f);
# 277 "/usr/local/cuda/include/thrust/for_each.h"
}
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
namespace thrust {
# 31 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
namespace system {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
namespace generic {
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
template< class DerivedPolicy, class
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
InputIterator, class
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
UnaryFunction> InputIterator
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
for_each(execution_policy< DerivedPolicy> &exec, InputIterator
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
first, InputIterator
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
last, UnaryFunction
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
f)
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
{
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
typedef thrust::detail::static_assert_test< sizeof(thrust::detail::STATIC_ASSERTION_FAILURE< (bool)(thrust::detail::depend_on_instantiation< InputIterator, false> ::value)> )> thrust_static_assert_typedef_49 __attribute((unused));
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
return first;
# 51 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
}
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
template< class DerivedPolicy, class
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
InputIterator, class
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
Size, class
# 57 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
UnaryFunction> InputIterator
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
for_each_n(execution_policy< DerivedPolicy> &exec, InputIterator
# 60 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
first, Size
# 61 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
n, UnaryFunction
# 62 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
f)
# 63 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
{
# 65 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
typedef thrust::detail::static_assert_test< sizeof(thrust::detail::STATIC_ASSERTION_FAILURE< (bool)(thrust::detail::depend_on_instantiation< InputIterator, false> ::value)> )> thrust_static_assert_typedef_65 __attribute((unused));
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
return first;
# 67 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
}
# 70 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
}
# 71 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
}
# 72 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
}
# 73 "/usr/local/cuda/include/thrust/system/detail/generic/for_each.h"
}
# 22 "/usr/local/cuda/include/thrust/detail/function.h"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/detail/function.h"
namespace detail {
# 28 "/usr/local/cuda/include/thrust/detail/function.h"
template< class Function, class Result>
# 29 "/usr/local/cuda/include/thrust/detail/function.h"
struct wrapped_function {
# 32 "/usr/local/cuda/include/thrust/detail/function.h"
mutable Function m_f;
# 35 "/usr/local/cuda/include/thrust/detail/function.h"
wrapped_function() : m_f()
# 37 "/usr/local/cuda/include/thrust/detail/function.h"
{ }
# 40 "/usr/local/cuda/include/thrust/detail/function.h"
wrapped_function(const Function &f) : m_f(f)
# 42 "/usr/local/cuda/include/thrust/detail/function.h"
{ }
# 45 "/usr/local/cuda/include/thrust/detail/function.h"
template< class Argument> Result
# 47 "/usr/local/cuda/include/thrust/detail/function.h"
operator()(Argument &x) const
# 48 "/usr/local/cuda/include/thrust/detail/function.h"
{
# 51 "/usr/local/cuda/include/thrust/detail/function.h"
return static_cast< Result>((m_f)(thrust::raw_reference_cast(x)));
# 52 "/usr/local/cuda/include/thrust/detail/function.h"
}
# 55 "/usr/local/cuda/include/thrust/detail/function.h"
template< class Argument> Result
# 56 "/usr/local/cuda/include/thrust/detail/function.h"
operator()(const Argument &x) const
# 57 "/usr/local/cuda/include/thrust/detail/function.h"
{
# 60 "/usr/local/cuda/include/thrust/detail/function.h"
return static_cast< Result>((m_f)(thrust::raw_reference_cast(x)));
# 61 "/usr/local/cuda/include/thrust/detail/function.h"
}
# 64 "/usr/local/cuda/include/thrust/detail/function.h"
template< class Argument1, class Argument2> Result
# 65 "/usr/local/cuda/include/thrust/detail/function.h"
operator()(Argument1 &x, Argument2 &y) const
# 66 "/usr/local/cuda/include/thrust/detail/function.h"
{
# 69 "/usr/local/cuda/include/thrust/detail/function.h"
return static_cast< Result>((m_f)(thrust::raw_reference_cast(x), thrust::raw_reference_cast(y)));
# 70 "/usr/local/cuda/include/thrust/detail/function.h"
}
# 73 "/usr/local/cuda/include/thrust/detail/function.h"
template< class Argument1, class Argument2> Result
# 74 "/usr/local/cuda/include/thrust/detail/function.h"
operator()(const Argument1 &x, Argument2 &y) const
# 75 "/usr/local/cuda/include/thrust/detail/function.h"
{
# 78 "/usr/local/cuda/include/thrust/detail/function.h"
return static_cast< Result>((m_f)(thrust::raw_reference_cast(x), thrust::raw_reference_cast(y)));
# 79 "/usr/local/cuda/include/thrust/detail/function.h"
}
# 82 "/usr/local/cuda/include/thrust/detail/function.h"
template< class Argument1, class Argument2> Result
# 83 "/usr/local/cuda/include/thrust/detail/function.h"
operator()(const Argument1 &x, const Argument2 &y) const
# 84 "/usr/local/cuda/include/thrust/detail/function.h"
{
# 87 "/usr/local/cuda/include/thrust/detail/function.h"
return static_cast< Result>((m_f)(thrust::raw_reference_cast(x), thrust::raw_reference_cast(y)));
# 88 "/usr/local/cuda/include/thrust/detail/function.h"
}
# 91 "/usr/local/cuda/include/thrust/detail/function.h"
template< class Argument1, class Argument2> Result
# 92 "/usr/local/cuda/include/thrust/detail/function.h"
operator()(Argument1 &x, const Argument2 &y) const
# 93 "/usr/local/cuda/include/thrust/detail/function.h"
{
# 96 "/usr/local/cuda/include/thrust/detail/function.h"
return static_cast< Result>((m_f)(thrust::raw_reference_cast(x), thrust::raw_reference_cast(y)));
# 97 "/usr/local/cuda/include/thrust/detail/function.h"
}
# 98 "/usr/local/cuda/include/thrust/detail/function.h"
};
# 101 "/usr/local/cuda/include/thrust/detail/function.h"
}
# 102 "/usr/local/cuda/include/thrust/detail/function.h"
}
# 28 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
namespace thrust {
# 30 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
namespace system {
# 32 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
namespace detail {
# 34 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
namespace sequential {
# 39 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
template< class DerivedPolicy, class
# 40 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
InputIterator, class
# 41 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
UnaryFunction> InputIterator
# 43 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
for_each(execution_policy< DerivedPolicy> &, InputIterator
# 44 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
first, InputIterator
# 45 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
last, UnaryFunction
# 46 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
f)
# 47 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
{
# 52 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
thrust::detail::wrapped_function< UnaryFunction, void> wrapped_f(f);
# 54 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
for (; first != last; ++first)
# 55 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
{
# 56 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
wrapped_f(*first);
# 57 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
}
# 59 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
return first;
# 60 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
}
# 63 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
template< class DerivedPolicy, class
# 64 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
InputIterator, class
# 65 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
Size, class
# 66 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
UnaryFunction> InputIterator
# 68 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
for_each_n(execution_policy< DerivedPolicy> &, InputIterator
# 69 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
first, Size
# 70 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
n, UnaryFunction
# 71 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
f)
# 72 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
{
# 77 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
thrust::detail::wrapped_function< UnaryFunction, void> wrapped_f(f);
# 79 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
for (Size i = (0); i != n; i++)
# 80 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
{
# 83 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
wrapped_f(*first);
# 84 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
++first;
# 85 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
}
# 87 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
return first;
# 88 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
}
# 91 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
}
# 92 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
}
# 93 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
}
# 94 "/usr/local/cuda/include/thrust/system/detail/sequential/for_each.h"
}
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.h"
namespace thrust {
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.h"
namespace system {
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.h"
namespace cuda {
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.h"
namespace detail {
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.h"
template< class DerivedPolicy, class
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.h"
RandomAccessIterator, class
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.h"
UnaryFunction> RandomAccessIterator
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.h"
for_each(execution_policy< DerivedPolicy> & s, RandomAccessIterator first, RandomAccessIterator last, UnaryFunction f);
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.h"
template< class DerivedPolicy, class
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.h"
RandomAccessIterator, class
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.h"
Size, class
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.h"
UnaryFunction> RandomAccessIterator
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.h"
for_each_n(execution_policy< DerivedPolicy> & s, RandomAccessIterator first, Size n, UnaryFunction f);
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.h"
}
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.h"
}
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.h"
}
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.h"
}
# 27 "/usr/local/cuda/include/thrust/distance.h"
namespace thrust {
# 66 "/usr/local/cuda/include/thrust/distance.h"
template< class InputIterator> inline typename iterator_traits< InputIterator> ::difference_type distance(InputIterator first, InputIterator last);
# 74 "/usr/local/cuda/include/thrust/distance.h"
}
# 26 "/usr/local/cuda/include/thrust/advance.h"
namespace thrust {
# 64 "/usr/local/cuda/include/thrust/advance.h"
template< class InputIterator, class Distance> void advance(InputIterator & i, Distance n);
# 71 "/usr/local/cuda/include/thrust/advance.h"
}
# 22 "/usr/local/cuda/include/thrust/system/detail/generic/advance.h"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/system/detail/generic/advance.h"
namespace system {
# 26 "/usr/local/cuda/include/thrust/system/detail/generic/advance.h"
namespace detail {
# 28 "/usr/local/cuda/include/thrust/system/detail/generic/advance.h"
namespace generic {
# 31 "/usr/local/cuda/include/thrust/system/detail/generic/advance.h"
template< class InputIterator, class Distance> void advance(InputIterator & i, Distance n);
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/advance.h"
}
# 36 "/usr/local/cuda/include/thrust/system/detail/generic/advance.h"
}
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/advance.h"
}
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/advance.h"
}
# 21 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
namespace thrust {
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
namespace system {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
namespace detail {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
namespace generic {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
namespace detail {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
template< class InputIterator, class Distance> void
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
advance(InputIterator &i, Distance n, incrementable_traversal_tag)
# 36 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
{
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
while (n)
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
{
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
++i;
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
--n;
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
}
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
}
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
template< class InputIterator, class Distance> void
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
advance(InputIterator &i, Distance n, random_access_traversal_tag)
# 48 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
{
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
i += n;
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
}
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
}
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
template< class InputIterator, class Distance> void
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
advance(InputIterator &i, Distance n)
# 57 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
{
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
detail::advance(i, n, typename iterator_traversal< InputIterator> ::type());
# 61 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
}
# 63 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
}
# 64 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
}
# 65 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
}
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/advance.inl"
}
# 26 "/usr/local/cuda/include/thrust/detail/advance.inl"
namespace thrust {
# 30 "/usr/local/cuda/include/thrust/detail/advance.inl"
template< class InputIterator, class Distance> void
# 32 "/usr/local/cuda/include/thrust/detail/advance.inl"
advance(InputIterator &i, Distance n)
# 33 "/usr/local/cuda/include/thrust/detail/advance.inl"
{
# 34 "/usr/local/cuda/include/thrust/detail/advance.inl"
system::detail::generic::advance(i, n);
# 35 "/usr/local/cuda/include/thrust/detail/advance.inl"
}
# 38 "/usr/local/cuda/include/thrust/detail/advance.inl"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/distance.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/distance.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/distance.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/distance.h"
namespace generic {
# 32 "/usr/local/cuda/include/thrust/system/detail/generic/distance.h"
template< class InputIterator> inline typename iterator_traits< InputIterator> ::difference_type distance(InputIterator first, InputIterator last);
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/distance.h"
}
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/distance.h"
}
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/distance.h"
}
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/distance.h"
}
# 21 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
namespace thrust {
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
namespace system {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
namespace detail {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
namespace generic {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
namespace detail {
# 34 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
template< class InputIterator> inline typename iterator_traits< InputIterator> ::difference_type
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
distance(InputIterator first, InputIterator last, incrementable_traversal_tag)
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
{
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
typename iterator_traits< InputIterator> ::difference_type result(0);
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
while (first != last)
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
{
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
++first;
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
++result;
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
}
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
return result;
# 48 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
}
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
template< class InputIterator> inline typename iterator_traits< InputIterator> ::difference_type
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
distance(InputIterator first, InputIterator last, random_access_traversal_tag)
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
{
# 57 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
return last - first;
# 58 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
}
# 61 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
}
# 64 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
template< class InputIterator> inline typename iterator_traits< InputIterator> ::difference_type
# 67 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
distance(InputIterator first, InputIterator last)
# 68 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
{
# 70 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
return detail::distance(first, last, typename iterator_traversal< InputIterator> ::type());
# 72 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
}
# 75 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
}
# 76 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
}
# 77 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
}
# 78 "/usr/local/cuda/include/thrust/system/detail/generic/distance.inl"
}
# 26 "/usr/local/cuda/include/thrust/detail/distance.inl"
namespace thrust {
# 30 "/usr/local/cuda/include/thrust/detail/distance.inl"
template< class InputIterator> inline typename iterator_traits< InputIterator> ::difference_type
# 33 "/usr/local/cuda/include/thrust/detail/distance.inl"
distance(InputIterator first, InputIterator last)
# 34 "/usr/local/cuda/include/thrust/detail/distance.inl"
{
# 35 "/usr/local/cuda/include/thrust/detail/distance.inl"
return system::detail::generic::distance(first, last);
# 36 "/usr/local/cuda/include/thrust/detail/distance.inl"
}
# 39 "/usr/local/cuda/include/thrust/detail/distance.inl"
}
# 23 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
namespace cuda {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
namespace detail {
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
inline cudaStream_t legacy_stream()
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
{
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
return (cudaStream_t)1;
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
}
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
inline cudaStream_t default_stream()
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
{
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
return legacy_stream();
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
}
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
template< class DerivedPolicy> inline cudaStream_t
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
stream(const execution_policy< DerivedPolicy> &exec)
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
{
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
return default_stream();
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
}
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
template< class DerivedPolicy>
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
class execute_on_stream_base : public execution_policy< DerivedPolicy> {
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
public: execute_on_stream_base() : m_stream(default_stream())
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
{ }
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
execute_on_stream_base(::cudaStream_t stream) : m_stream(stream)
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
{ }
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
DerivedPolicy on(const ::cudaStream_t &s) const
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
{
# 82 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
DerivedPolicy result = ::thrust::detail::derived_cast(*this);
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
(result.set_stream(s));
# 87 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
return result;
# 88 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
}
# 93 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
friend inline ::cudaStream_t stream(const execute_on_stream_base &exec)
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
{
# 95 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
return exec.m_stream;
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
}
# 99 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
private: void set_stream(const ::cudaStream_t &s)
# 100 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
{
# 101 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
(m_stream) = s;
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
}
# 104 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
::cudaStream_t m_stream;
# 105 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
};
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
class execute_on_stream : public execute_on_stream_base< execute_on_stream> {
# 112 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
typedef cuda::detail::execute_on_stream_base< execute_on_stream> super_t;
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
public: execute_on_stream(cudaStream_t stream) : super_t(stream)
# 118 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
{ }
# 119 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
};
# 122 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
}
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
}
# 124 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
}
# 125 "/usr/local/cuda/include/thrust/system/cuda/detail/execute_on_stream.h"
}
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
namespace system {
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
namespace cuda {
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
namespace detail {
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
namespace for_each_n_detail {
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
struct for_each_kernel {
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
template< class Iterator, class Function, class Size> void
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
operator()(bulk_::parallel_group< bulk_::concurrent_group<> > &grid, Iterator first, Function f, Size n)
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
{
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
Size grid_size = grid.size() * (grid.this_exec).size();
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
Size i = ((grid.this_exec).index() * (grid.this_exec).size()) + ((grid.this_exec).this_exec).index();
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
first += i;
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
while (i < n)
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
{
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
f(*first);
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
i += grid_size;
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
first += grid_size;
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
}
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
}
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
};
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
template< class Size> bool
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
use_wide_counter(Size n, unsigned narrow_grid_size)
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
{
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
Size threshold = (static_cast< Size>(((2147483647) * 2U) + 1U));
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
bool result = (sizeof(Size) > sizeof(unsigned)) && (n > threshold);
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
if (!result)
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
{
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
unsigned narrow_n = static_cast< unsigned>(n);
# 81 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
if (((narrow_n - 1U) + narrow_grid_size) < narrow_n)
# 82 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
{
# 83 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
result = true;
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
}
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
}
# 87 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
return result;
# 88 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
}
# 91 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
}
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
template< class DerivedPolicy, class
# 95 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
RandomAccessIterator, class
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
Size, class
# 97 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
UnaryFunction> RandomAccessIterator
# 99 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
for_each_n(execution_policy< DerivedPolicy> &exec, RandomAccessIterator
# 100 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
first, Size
# 101 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
n, UnaryFunction
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
f)
# 103 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
{
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
typedef thrust::detail::static_assert_test< sizeof(thrust::detail::STATIC_ASSERTION_FAILURE< (bool)(thrust::detail::depend_on_instantiation< RandomAccessIterator, true> ::value)> )> thrust_static_assert_typedef_109 __attribute((unused));
# 111 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
struct workaround {
# 114 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
static RandomAccessIterator parallel_path(execution_policy< DerivedPolicy> &exec, RandomAccessIterator first, Size n, UnaryFunction f)
# 115 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
{
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
thrust::detail::wrapped_function< UnaryFunction, void> wrapped_f(f);
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
unsigned narrow_n = static_cast< unsigned>(n);
# 121 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
unsigned narrow_num_groups = (0);
# 122 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
unsigned narrow_group_size = (0);
# 125 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
thrust::tie(narrow_num_groups, narrow_group_size) = bulk_::choose_sizes(bulk_::grid(), for_each_n_detail::for_each_kernel(), bulk_::root, first, wrapped_f, narrow_n);
# 128 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
if (for_each_n_detail::use_wide_counter(n, narrow_num_groups * narrow_group_size))
# 129 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
{
# 130 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
Size num_groups = (0);
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
Size group_size = (0);
# 132 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
thrust::tie(num_groups, group_size) = bulk_::choose_sizes(bulk_::grid(), for_each_n_detail::for_each_kernel(), bulk_::root, first, wrapped_f, n);
# 134 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
num_groups = thrust::min< Size> (num_groups, thrust::detail::util::divide_ri(n, group_size));
# 136 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
bulk_::async(bulk_::grid(num_groups, group_size, 0, stream(thrust::detail::derived_cast(exec))), for_each_n_detail::for_each_kernel(), bulk_::root, first, wrapped_f, n);
# 137 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
} else
# 139 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
{
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
narrow_num_groups = thrust::min< unsigned> (narrow_num_groups, thrust::detail::util::divide_ri(narrow_n, narrow_group_size));
# 143 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
bulk_::async(bulk_::grid(narrow_num_groups, narrow_group_size, 0, stream(thrust::detail::derived_cast(exec))), for_each_n_detail::for_each_kernel(), bulk_::root, first, wrapped_f, narrow_n);
# 144 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
}
# 146 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
return first + n;
# 147 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
}
# 150 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
static RandomAccessIterator sequential_path(execution_policy< DerivedPolicy> &, RandomAccessIterator first, Size n, UnaryFunction f)
# 151 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
{
# 152 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
return thrust::for_each_n(thrust::seq, first, n, f);
# 153 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
}
# 154 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
};
# 157 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
return (workaround::parallel_path)(exec, first, n, f);
# 161 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
}
# 164 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
template< class DerivedPolicy, class
# 165 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
InputIterator, class
# 166 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
UnaryFunction> InputIterator
# 168 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
for_each(execution_policy< DerivedPolicy> &exec, InputIterator
# 169 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
first, InputIterator
# 170 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
last, UnaryFunction
# 171 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
f)
# 172 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
{
# 173 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
return cuda::detail::for_each_n(exec, first, thrust::distance(first, last), f);
# 174 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
}
# 177 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
}
# 178 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
}
# 179 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
}
# 180 "/usr/local/cuda/include/thrust/system/cuda/detail/for_each.inl"
}
# 29 "/usr/local/cuda/include/thrust/detail/for_each.inl"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/detail/for_each.inl"
template< class DerivedPolicy, class
# 34 "/usr/local/cuda/include/thrust/detail/for_each.inl"
InputIterator, class
# 35 "/usr/local/cuda/include/thrust/detail/for_each.inl"
UnaryFunction> InputIterator
# 37 "/usr/local/cuda/include/thrust/detail/for_each.inl"
for_each(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 38 "/usr/local/cuda/include/thrust/detail/for_each.inl"
first, InputIterator
# 39 "/usr/local/cuda/include/thrust/detail/for_each.inl"
last, UnaryFunction
# 40 "/usr/local/cuda/include/thrust/detail/for_each.inl"
f)
# 41 "/usr/local/cuda/include/thrust/detail/for_each.inl"
{
# 42 "/usr/local/cuda/include/thrust/detail/for_each.inl"
using system::detail::generic::for_each;
# 44 "/usr/local/cuda/include/thrust/detail/for_each.inl"
return for_each(detail::derived_cast(detail::strip_const(exec)), first, last, f);
# 45 "/usr/local/cuda/include/thrust/detail/for_each.inl"
}
# 48 "/usr/local/cuda/include/thrust/detail/for_each.inl"
template< class InputIterator, class
# 49 "/usr/local/cuda/include/thrust/detail/for_each.inl"
UnaryFunction> InputIterator
# 50 "/usr/local/cuda/include/thrust/detail/for_each.inl"
for_each(InputIterator first, InputIterator
# 51 "/usr/local/cuda/include/thrust/detail/for_each.inl"
last, UnaryFunction
# 52 "/usr/local/cuda/include/thrust/detail/for_each.inl"
f)
# 53 "/usr/local/cuda/include/thrust/detail/for_each.inl"
{
# 54 "/usr/local/cuda/include/thrust/detail/for_each.inl"
using thrust::system::detail::generic::select_system;
# 55 "/usr/local/cuda/include/thrust/detail/for_each.inl"
typedef typename iterator_system< InputIterator> ::type System;
# 57 "/usr/local/cuda/include/thrust/detail/for_each.inl"
System system;
# 58 "/usr/local/cuda/include/thrust/detail/for_each.inl"
return thrust::for_each(select_system(system), first, last, f);
# 59 "/usr/local/cuda/include/thrust/detail/for_each.inl"
}
# 62 "/usr/local/cuda/include/thrust/detail/for_each.inl"
template< class DerivedPolicy, class InputIterator, class Size, class UnaryFunction> InputIterator
# 64 "/usr/local/cuda/include/thrust/detail/for_each.inl"
for_each_n(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 65 "/usr/local/cuda/include/thrust/detail/for_each.inl"
first, Size
# 66 "/usr/local/cuda/include/thrust/detail/for_each.inl"
n, UnaryFunction
# 67 "/usr/local/cuda/include/thrust/detail/for_each.inl"
f)
# 68 "/usr/local/cuda/include/thrust/detail/for_each.inl"
{
# 69 "/usr/local/cuda/include/thrust/detail/for_each.inl"
using system::detail::generic::for_each_n;
# 71 "/usr/local/cuda/include/thrust/detail/for_each.inl"
return for_each_n(detail::derived_cast(detail::strip_const(exec)), first, n, f);
# 72 "/usr/local/cuda/include/thrust/detail/for_each.inl"
}
# 75 "/usr/local/cuda/include/thrust/detail/for_each.inl"
template< class InputIterator, class
# 76 "/usr/local/cuda/include/thrust/detail/for_each.inl"
Size, class
# 77 "/usr/local/cuda/include/thrust/detail/for_each.inl"
UnaryFunction> InputIterator
# 78 "/usr/local/cuda/include/thrust/detail/for_each.inl"
for_each_n(InputIterator first, Size
# 79 "/usr/local/cuda/include/thrust/detail/for_each.inl"
n, UnaryFunction
# 80 "/usr/local/cuda/include/thrust/detail/for_each.inl"
f)
# 81 "/usr/local/cuda/include/thrust/detail/for_each.inl"
{
# 82 "/usr/local/cuda/include/thrust/detail/for_each.inl"
using thrust::system::detail::generic::select_system;
# 84 "/usr/local/cuda/include/thrust/detail/for_each.inl"
typedef typename iterator_system< InputIterator> ::type System;
# 86 "/usr/local/cuda/include/thrust/detail/for_each.inl"
System system;
# 87 "/usr/local/cuda/include/thrust/detail/for_each.inl"
return thrust::for_each_n(select_system(system), first, n, f);
# 88 "/usr/local/cuda/include/thrust/detail/for_each.inl"
}
# 91 "/usr/local/cuda/include/thrust/detail/for_each.inl"
}
# 26 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
namespace thrust {
# 28 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
namespace system {
# 30 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
namespace detail {
# 32 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
namespace generic {
# 36 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
template< class DerivedPolicy, class
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
InputIterator, class
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
OutputIterator, class
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
UnaryFunction> OutputIterator
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
transform(execution_policy< DerivedPolicy> &exec, InputIterator
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
first, InputIterator
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
last, OutputIterator
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
result, UnaryFunction
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
op)
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
{
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
typedef thrust::detail::unary_transform_functor< UnaryFunction> UnaryTransformFunctor;
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
typedef tuple< InputIterator, OutputIterator, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> IteratorTuple;
# 51 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
typedef zip_iterator< tuple< InputIterator, OutputIterator, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > ZipIterator;
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
ZipIterator zipped_result = thrust::for_each(exec, thrust::make_zip_iterator(thrust::make_tuple(first, result)), thrust::make_zip_iterator(thrust::make_tuple(last, result)), ((UnaryTransformFunctor)(op)));
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
return thrust::get< 1> ((zipped_result.get_iterator_tuple()));
# 60 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
}
# 63 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
template< class DerivedPolicy, class
# 64 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
InputIterator1, class
# 65 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
InputIterator2, class
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
OutputIterator, class
# 67 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
BinaryFunction> OutputIterator
# 69 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
transform(execution_policy< DerivedPolicy> &exec, InputIterator1
# 70 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
first1, InputIterator1
# 71 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
last1, InputIterator2
# 72 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
first2, OutputIterator
# 73 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
result, BinaryFunction
# 74 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
op)
# 75 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
{
# 77 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
typedef thrust::detail::binary_transform_functor< BinaryFunction> BinaryTransformFunctor;
# 80 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
typedef tuple< InputIterator1, InputIterator2, OutputIterator, null_type, null_type, null_type, null_type, null_type, null_type, null_type> IteratorTuple;
# 81 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
typedef zip_iterator< tuple< InputIterator1, InputIterator2, OutputIterator, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > ZipIterator;
# 83 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
ZipIterator zipped_result = thrust::for_each(exec, thrust::make_zip_iterator(thrust::make_tuple(first1, first2, result)), thrust::make_zip_iterator(thrust::make_tuple(last1, first2, result)), ((BinaryTransformFunctor)(op)));
# 89 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
return thrust::get< 2> ((zipped_result.get_iterator_tuple()));
# 90 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
}
# 93 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
template< class DerivedPolicy, class
# 94 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
InputIterator, class
# 95 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
ForwardIterator, class
# 96 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
UnaryFunction, class
# 97 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
Predicate> ForwardIterator
# 99 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
transform_if(execution_policy< DerivedPolicy> &exec, InputIterator
# 100 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
first, InputIterator
# 101 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
last, ForwardIterator
# 102 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
result, UnaryFunction
# 103 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
unary_op, Predicate
# 104 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
pred)
# 105 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
{
# 106 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
typedef thrust::detail::unary_transform_if_functor< UnaryFunction, Predicate> UnaryTransformIfFunctor;
# 109 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
typedef tuple< InputIterator, ForwardIterator, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> IteratorTuple;
# 110 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
typedef zip_iterator< tuple< InputIterator, ForwardIterator, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > ZipIterator;
# 112 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
ZipIterator zipped_result = thrust::for_each(exec, thrust::make_zip_iterator(thrust::make_tuple(first, result)), thrust::make_zip_iterator(thrust::make_tuple(last, result)), UnaryTransformIfFunctor(unary_op, pred));
# 118 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
return thrust::get< 1> ((zipped_result.get_iterator_tuple()));
# 119 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
}
# 122 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
template< class DerivedPolicy, class
# 123 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
InputIterator1, class
# 124 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
InputIterator2, class
# 125 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
ForwardIterator, class
# 126 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
UnaryFunction, class
# 127 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
Predicate> ForwardIterator
# 129 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
transform_if(execution_policy< DerivedPolicy> &exec, InputIterator1
# 130 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
first, InputIterator1
# 131 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
last, InputIterator2
# 132 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
stencil, ForwardIterator
# 133 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
result, UnaryFunction
# 134 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
unary_op, Predicate
# 135 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
pred)
# 136 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
{
# 137 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
typedef thrust::detail::unary_transform_if_with_stencil_functor< UnaryFunction, Predicate> UnaryTransformIfFunctor;
# 140 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
typedef tuple< InputIterator1, InputIterator2, ForwardIterator, null_type, null_type, null_type, null_type, null_type, null_type, null_type> IteratorTuple;
# 141 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
typedef zip_iterator< tuple< InputIterator1, InputIterator2, ForwardIterator, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > ZipIterator;
# 143 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
ZipIterator zipped_result = thrust::for_each(exec, thrust::make_zip_iterator(thrust::make_tuple(first, stencil, result)), thrust::make_zip_iterator(thrust::make_tuple(last, stencil, result)), UnaryTransformIfFunctor(unary_op, pred));
# 149 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
return thrust::get< 2> ((zipped_result.get_iterator_tuple()));
# 150 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
}
# 153 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
template< class DerivedPolicy, class
# 154 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
InputIterator1, class
# 155 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
InputIterator2, class
# 156 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
InputIterator3, class
# 157 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
ForwardIterator, class
# 158 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
BinaryFunction, class
# 159 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
Predicate> ForwardIterator
# 161 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
transform_if(execution_policy< DerivedPolicy> &exec, InputIterator1
# 162 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
first1, InputIterator1
# 163 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
last1, InputIterator2
# 164 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
first2, InputIterator3
# 165 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
stencil, ForwardIterator
# 166 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
result, BinaryFunction
# 167 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
binary_op, Predicate
# 168 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
pred)
# 169 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
{
# 170 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
typedef thrust::detail::binary_transform_if_functor< BinaryFunction, Predicate> BinaryTransformIfFunctor;
# 173 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
typedef tuple< InputIterator1, InputIterator2, InputIterator3, ForwardIterator, null_type, null_type, null_type, null_type, null_type, null_type> IteratorTuple;
# 174 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
typedef zip_iterator< tuple< InputIterator1, InputIterator2, InputIterator3, ForwardIterator, null_type, null_type, null_type, null_type, null_type, null_type> > ZipIterator;
# 176 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
ZipIterator zipped_result = thrust::for_each(exec, thrust::make_zip_iterator(thrust::make_tuple(first1, first2, stencil, result)), thrust::make_zip_iterator(thrust::make_tuple(last1, first2, stencil, result)), BinaryTransformIfFunctor(binary_op, pred));
# 182 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
return thrust::get< 3> ((zipped_result.get_iterator_tuple()));
# 183 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
}
# 186 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
}
# 187 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
}
# 188 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
}
# 189 "/usr/local/cuda/include/thrust/system/detail/generic/transform.inl"
}
# 28 "/usr/local/cuda/include/thrust/detail/transform.inl"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/detail/transform.inl"
template< class DerivedPolicy, class
# 34 "/usr/local/cuda/include/thrust/detail/transform.inl"
InputIterator, class
# 35 "/usr/local/cuda/include/thrust/detail/transform.inl"
OutputIterator, class
# 36 "/usr/local/cuda/include/thrust/detail/transform.inl"
UnaryFunction> OutputIterator
# 38 "/usr/local/cuda/include/thrust/detail/transform.inl"
transform(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 39 "/usr/local/cuda/include/thrust/detail/transform.inl"
first, InputIterator last, OutputIterator
# 40 "/usr/local/cuda/include/thrust/detail/transform.inl"
result, UnaryFunction
# 41 "/usr/local/cuda/include/thrust/detail/transform.inl"
op)
# 42 "/usr/local/cuda/include/thrust/detail/transform.inl"
{
# 43 "/usr/local/cuda/include/thrust/detail/transform.inl"
using system::detail::generic::transform;
# 44 "/usr/local/cuda/include/thrust/detail/transform.inl"
return transform(detail::derived_cast(detail::strip_const(exec)), first, last, result, op);
# 45 "/usr/local/cuda/include/thrust/detail/transform.inl"
}
# 49 "/usr/local/cuda/include/thrust/detail/transform.inl"
template< class DerivedPolicy, class
# 50 "/usr/local/cuda/include/thrust/detail/transform.inl"
InputIterator1, class
# 51 "/usr/local/cuda/include/thrust/detail/transform.inl"
InputIterator2, class
# 52 "/usr/local/cuda/include/thrust/detail/transform.inl"
OutputIterator, class
# 53 "/usr/local/cuda/include/thrust/detail/transform.inl"
BinaryFunction> OutputIterator
# 55 "/usr/local/cuda/include/thrust/detail/transform.inl"
transform(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 56 "/usr/local/cuda/include/thrust/detail/transform.inl"
first1, InputIterator1 last1, InputIterator2
# 57 "/usr/local/cuda/include/thrust/detail/transform.inl"
first2, OutputIterator
# 58 "/usr/local/cuda/include/thrust/detail/transform.inl"
result, BinaryFunction
# 59 "/usr/local/cuda/include/thrust/detail/transform.inl"
op)
# 60 "/usr/local/cuda/include/thrust/detail/transform.inl"
{
# 61 "/usr/local/cuda/include/thrust/detail/transform.inl"
using system::detail::generic::transform;
# 62 "/usr/local/cuda/include/thrust/detail/transform.inl"
return transform(detail::derived_cast(detail::strip_const(exec)), first1, last1, first2, result, op);
# 63 "/usr/local/cuda/include/thrust/detail/transform.inl"
}
# 67 "/usr/local/cuda/include/thrust/detail/transform.inl"
template< class DerivedPolicy, class
# 68 "/usr/local/cuda/include/thrust/detail/transform.inl"
InputIterator, class
# 69 "/usr/local/cuda/include/thrust/detail/transform.inl"
ForwardIterator, class
# 70 "/usr/local/cuda/include/thrust/detail/transform.inl"
UnaryFunction, class
# 71 "/usr/local/cuda/include/thrust/detail/transform.inl"
Predicate> ForwardIterator
# 73 "/usr/local/cuda/include/thrust/detail/transform.inl"
transform_if(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 74 "/usr/local/cuda/include/thrust/detail/transform.inl"
first, InputIterator last, ForwardIterator
# 75 "/usr/local/cuda/include/thrust/detail/transform.inl"
result, UnaryFunction
# 76 "/usr/local/cuda/include/thrust/detail/transform.inl"
op, Predicate
# 77 "/usr/local/cuda/include/thrust/detail/transform.inl"
pred)
# 78 "/usr/local/cuda/include/thrust/detail/transform.inl"
{
# 79 "/usr/local/cuda/include/thrust/detail/transform.inl"
using system::detail::generic::transform_if;
# 80 "/usr/local/cuda/include/thrust/detail/transform.inl"
return transform_if(detail::derived_cast(detail::strip_const(exec)), first, last, result, op, pred);
# 81 "/usr/local/cuda/include/thrust/detail/transform.inl"
}
# 85 "/usr/local/cuda/include/thrust/detail/transform.inl"
template< class DerivedPolicy, class
# 86 "/usr/local/cuda/include/thrust/detail/transform.inl"
InputIterator1, class
# 87 "/usr/local/cuda/include/thrust/detail/transform.inl"
InputIterator2, class
# 88 "/usr/local/cuda/include/thrust/detail/transform.inl"
ForwardIterator, class
# 89 "/usr/local/cuda/include/thrust/detail/transform.inl"
UnaryFunction, class
# 90 "/usr/local/cuda/include/thrust/detail/transform.inl"
Predicate> ForwardIterator
# 92 "/usr/local/cuda/include/thrust/detail/transform.inl"
transform_if(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 93 "/usr/local/cuda/include/thrust/detail/transform.inl"
first, InputIterator1 last, InputIterator2
# 94 "/usr/local/cuda/include/thrust/detail/transform.inl"
stencil, ForwardIterator
# 95 "/usr/local/cuda/include/thrust/detail/transform.inl"
result, UnaryFunction
# 96 "/usr/local/cuda/include/thrust/detail/transform.inl"
op, Predicate
# 97 "/usr/local/cuda/include/thrust/detail/transform.inl"
pred)
# 98 "/usr/local/cuda/include/thrust/detail/transform.inl"
{
# 99 "/usr/local/cuda/include/thrust/detail/transform.inl"
using system::detail::generic::transform_if;
# 100 "/usr/local/cuda/include/thrust/detail/transform.inl"
return transform_if(detail::derived_cast(detail::strip_const(exec)), first, last, stencil, result, op, pred);
# 101 "/usr/local/cuda/include/thrust/detail/transform.inl"
}
# 105 "/usr/local/cuda/include/thrust/detail/transform.inl"
template< class DerivedPolicy, class
# 106 "/usr/local/cuda/include/thrust/detail/transform.inl"
InputIterator1, class
# 107 "/usr/local/cuda/include/thrust/detail/transform.inl"
InputIterator2, class
# 108 "/usr/local/cuda/include/thrust/detail/transform.inl"
InputIterator3, class
# 109 "/usr/local/cuda/include/thrust/detail/transform.inl"
ForwardIterator, class
# 110 "/usr/local/cuda/include/thrust/detail/transform.inl"
BinaryFunction, class
# 111 "/usr/local/cuda/include/thrust/detail/transform.inl"
Predicate> ForwardIterator
# 113 "/usr/local/cuda/include/thrust/detail/transform.inl"
transform_if(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 114 "/usr/local/cuda/include/thrust/detail/transform.inl"
first1, InputIterator1 last1, InputIterator2
# 115 "/usr/local/cuda/include/thrust/detail/transform.inl"
first2, InputIterator3
# 116 "/usr/local/cuda/include/thrust/detail/transform.inl"
stencil, ForwardIterator
# 117 "/usr/local/cuda/include/thrust/detail/transform.inl"
result, BinaryFunction
# 118 "/usr/local/cuda/include/thrust/detail/transform.inl"
binary_op, Predicate
# 119 "/usr/local/cuda/include/thrust/detail/transform.inl"
pred)
# 120 "/usr/local/cuda/include/thrust/detail/transform.inl"
{
# 121 "/usr/local/cuda/include/thrust/detail/transform.inl"
using system::detail::generic::transform_if;
# 122 "/usr/local/cuda/include/thrust/detail/transform.inl"
return transform_if(detail::derived_cast(detail::strip_const(exec)), first1, last1, first2, stencil, result, binary_op, pred);
# 123 "/usr/local/cuda/include/thrust/detail/transform.inl"
}
# 126 "/usr/local/cuda/include/thrust/detail/transform.inl"
template< class InputIterator, class
# 127 "/usr/local/cuda/include/thrust/detail/transform.inl"
OutputIterator, class
# 128 "/usr/local/cuda/include/thrust/detail/transform.inl"
UnaryFunction> OutputIterator
# 129 "/usr/local/cuda/include/thrust/detail/transform.inl"
transform(InputIterator first, InputIterator
# 130 "/usr/local/cuda/include/thrust/detail/transform.inl"
last, OutputIterator
# 131 "/usr/local/cuda/include/thrust/detail/transform.inl"
result, UnaryFunction
# 132 "/usr/local/cuda/include/thrust/detail/transform.inl"
op)
# 133 "/usr/local/cuda/include/thrust/detail/transform.inl"
{
# 134 "/usr/local/cuda/include/thrust/detail/transform.inl"
using system::detail::generic::select_system;
# 136 "/usr/local/cuda/include/thrust/detail/transform.inl"
typedef typename iterator_system< InputIterator> ::type System1;
# 137 "/usr/local/cuda/include/thrust/detail/transform.inl"
typedef typename iterator_system< OutputIterator> ::type System2;
# 139 "/usr/local/cuda/include/thrust/detail/transform.inl"
System1 system1;
# 140 "/usr/local/cuda/include/thrust/detail/transform.inl"
System2 system2;
# 142 "/usr/local/cuda/include/thrust/detail/transform.inl"
return thrust::transform(select_system(system1, system2), first, last, result, op);
# 143 "/usr/local/cuda/include/thrust/detail/transform.inl"
}
# 146 "/usr/local/cuda/include/thrust/detail/transform.inl"
template< class InputIterator1, class
# 147 "/usr/local/cuda/include/thrust/detail/transform.inl"
InputIterator2, class
# 148 "/usr/local/cuda/include/thrust/detail/transform.inl"
OutputIterator, class
# 149 "/usr/local/cuda/include/thrust/detail/transform.inl"
BinaryFunction> OutputIterator
# 150 "/usr/local/cuda/include/thrust/detail/transform.inl"
transform(InputIterator1 first1, InputIterator1
# 151 "/usr/local/cuda/include/thrust/detail/transform.inl"
last1, InputIterator2
# 152 "/usr/local/cuda/include/thrust/detail/transform.inl"
first2, OutputIterator
# 153 "/usr/local/cuda/include/thrust/detail/transform.inl"
result, BinaryFunction
# 154 "/usr/local/cuda/include/thrust/detail/transform.inl"
op)
# 155 "/usr/local/cuda/include/thrust/detail/transform.inl"
{
# 156 "/usr/local/cuda/include/thrust/detail/transform.inl"
using system::detail::generic::select_system;
# 158 "/usr/local/cuda/include/thrust/detail/transform.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 159 "/usr/local/cuda/include/thrust/detail/transform.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 160 "/usr/local/cuda/include/thrust/detail/transform.inl"
typedef typename iterator_system< OutputIterator> ::type System3;
# 162 "/usr/local/cuda/include/thrust/detail/transform.inl"
System1 system1;
# 163 "/usr/local/cuda/include/thrust/detail/transform.inl"
System2 system2;
# 164 "/usr/local/cuda/include/thrust/detail/transform.inl"
System3 system3;
# 166 "/usr/local/cuda/include/thrust/detail/transform.inl"
return thrust::transform(select_system(system1, system2, system3), first1, last1, first2, result, op);
# 167 "/usr/local/cuda/include/thrust/detail/transform.inl"
}
# 170 "/usr/local/cuda/include/thrust/detail/transform.inl"
template< class InputIterator, class
# 171 "/usr/local/cuda/include/thrust/detail/transform.inl"
ForwardIterator, class
# 172 "/usr/local/cuda/include/thrust/detail/transform.inl"
UnaryFunction, class
# 173 "/usr/local/cuda/include/thrust/detail/transform.inl"
Predicate> ForwardIterator
# 174 "/usr/local/cuda/include/thrust/detail/transform.inl"
transform_if(InputIterator first, InputIterator
# 175 "/usr/local/cuda/include/thrust/detail/transform.inl"
last, ForwardIterator
# 176 "/usr/local/cuda/include/thrust/detail/transform.inl"
result, UnaryFunction
# 177 "/usr/local/cuda/include/thrust/detail/transform.inl"
unary_op, Predicate
# 178 "/usr/local/cuda/include/thrust/detail/transform.inl"
pred)
# 179 "/usr/local/cuda/include/thrust/detail/transform.inl"
{
# 180 "/usr/local/cuda/include/thrust/detail/transform.inl"
using system::detail::generic::select_system;
# 182 "/usr/local/cuda/include/thrust/detail/transform.inl"
typedef typename iterator_system< InputIterator> ::type System1;
# 183 "/usr/local/cuda/include/thrust/detail/transform.inl"
typedef typename iterator_system< ForwardIterator> ::type System2;
# 185 "/usr/local/cuda/include/thrust/detail/transform.inl"
System1 system1;
# 186 "/usr/local/cuda/include/thrust/detail/transform.inl"
System2 system2;
# 188 "/usr/local/cuda/include/thrust/detail/transform.inl"
return thrust::transform_if(select_system(system1, system2), first, last, result, unary_op, pred);
# 189 "/usr/local/cuda/include/thrust/detail/transform.inl"
}
# 192 "/usr/local/cuda/include/thrust/detail/transform.inl"
template< class InputIterator1, class
# 193 "/usr/local/cuda/include/thrust/detail/transform.inl"
InputIterator2, class
# 194 "/usr/local/cuda/include/thrust/detail/transform.inl"
ForwardIterator, class
# 195 "/usr/local/cuda/include/thrust/detail/transform.inl"
UnaryFunction, class
# 196 "/usr/local/cuda/include/thrust/detail/transform.inl"
Predicate> ForwardIterator
# 197 "/usr/local/cuda/include/thrust/detail/transform.inl"
transform_if(InputIterator1 first, InputIterator1
# 198 "/usr/local/cuda/include/thrust/detail/transform.inl"
last, InputIterator2
# 199 "/usr/local/cuda/include/thrust/detail/transform.inl"
stencil, ForwardIterator
# 200 "/usr/local/cuda/include/thrust/detail/transform.inl"
result, UnaryFunction
# 201 "/usr/local/cuda/include/thrust/detail/transform.inl"
unary_op, Predicate
# 202 "/usr/local/cuda/include/thrust/detail/transform.inl"
pred)
# 203 "/usr/local/cuda/include/thrust/detail/transform.inl"
{
# 204 "/usr/local/cuda/include/thrust/detail/transform.inl"
using system::detail::generic::select_system;
# 206 "/usr/local/cuda/include/thrust/detail/transform.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 207 "/usr/local/cuda/include/thrust/detail/transform.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 208 "/usr/local/cuda/include/thrust/detail/transform.inl"
typedef typename iterator_system< ForwardIterator> ::type System3;
# 210 "/usr/local/cuda/include/thrust/detail/transform.inl"
System1 system1;
# 211 "/usr/local/cuda/include/thrust/detail/transform.inl"
System2 system2;
# 212 "/usr/local/cuda/include/thrust/detail/transform.inl"
System3 system3;
# 214 "/usr/local/cuda/include/thrust/detail/transform.inl"
return thrust::transform_if(select_system(system1, system2, system3), first, last, stencil, result, unary_op, pred);
# 215 "/usr/local/cuda/include/thrust/detail/transform.inl"
}
# 218 "/usr/local/cuda/include/thrust/detail/transform.inl"
template< class InputIterator1, class
# 219 "/usr/local/cuda/include/thrust/detail/transform.inl"
InputIterator2, class
# 220 "/usr/local/cuda/include/thrust/detail/transform.inl"
InputIterator3, class
# 221 "/usr/local/cuda/include/thrust/detail/transform.inl"
ForwardIterator, class
# 222 "/usr/local/cuda/include/thrust/detail/transform.inl"
BinaryFunction, class
# 223 "/usr/local/cuda/include/thrust/detail/transform.inl"
Predicate> ForwardIterator
# 224 "/usr/local/cuda/include/thrust/detail/transform.inl"
transform_if(InputIterator1 first1, InputIterator1
# 225 "/usr/local/cuda/include/thrust/detail/transform.inl"
last1, InputIterator2
# 226 "/usr/local/cuda/include/thrust/detail/transform.inl"
first2, InputIterator3
# 227 "/usr/local/cuda/include/thrust/detail/transform.inl"
stencil, ForwardIterator
# 228 "/usr/local/cuda/include/thrust/detail/transform.inl"
result, BinaryFunction
# 229 "/usr/local/cuda/include/thrust/detail/transform.inl"
binary_op, Predicate
# 230 "/usr/local/cuda/include/thrust/detail/transform.inl"
pred)
# 231 "/usr/local/cuda/include/thrust/detail/transform.inl"
{
# 232 "/usr/local/cuda/include/thrust/detail/transform.inl"
using system::detail::generic::select_system;
# 234 "/usr/local/cuda/include/thrust/detail/transform.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 235 "/usr/local/cuda/include/thrust/detail/transform.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 236 "/usr/local/cuda/include/thrust/detail/transform.inl"
typedef typename iterator_system< InputIterator3> ::type System3;
# 237 "/usr/local/cuda/include/thrust/detail/transform.inl"
typedef typename iterator_system< ForwardIterator> ::type System4;
# 239 "/usr/local/cuda/include/thrust/detail/transform.inl"
System1 system1;
# 240 "/usr/local/cuda/include/thrust/detail/transform.inl"
System2 system2;
# 241 "/usr/local/cuda/include/thrust/detail/transform.inl"
System3 system3;
# 242 "/usr/local/cuda/include/thrust/detail/transform.inl"
System4 system4;
# 244 "/usr/local/cuda/include/thrust/detail/transform.inl"
return thrust::transform_if(select_system(system1, system2, system3, system4), first1, last1, first2, stencil, result, binary_op, pred);
# 245 "/usr/local/cuda/include/thrust/detail/transform.inl"
}
# 248 "/usr/local/cuda/include/thrust/detail/transform.inl"
}
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
namespace thrust {
# 31 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
namespace system {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
namespace generic {
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
template< class DerivedPolicy, class
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
InputIterator, class
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
OutputIterator> OutputIterator
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
copy(execution_policy< DerivedPolicy> &exec, InputIterator
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
first, InputIterator
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
last, OutputIterator
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
result)
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
{
# 48 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
typedef typename iterator_value< InputIterator> ::type T;
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
return thrust::transform(exec, first, last, result, identity< typename iterator_value< InputIterator> ::type> ());
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
}
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
template< class DerivedPolicy, class
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
InputIterator, class
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
Size, class
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
OutputIterator> OutputIterator
# 58 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
copy_n(execution_policy< DerivedPolicy> &exec, InputIterator
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
first, Size
# 60 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
n, OutputIterator
# 61 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
result)
# 62 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
{
# 63 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
typedef typename iterator_value< InputIterator> ::type value_type;
# 64 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
typedef identity< typename iterator_value< InputIterator> ::type> xfrm_type;
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
typedef thrust::detail::unary_transform_functor< identity< typename iterator_value< InputIterator> ::type> > functor_type;
# 68 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
typedef tuple< InputIterator, OutputIterator, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> iterator_tuple;
# 69 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
typedef zip_iterator< tuple< InputIterator, OutputIterator, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > zip_iter;
# 71 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
zip_iter zipped = thrust::make_zip_iterator(thrust::make_tuple(first, result));
# 73 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
return thrust::get< 1> ((thrust::for_each_n(exec, zipped, n, ((functor_type)(xfrm_type()))).get_iterator_tuple()));
# 74 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
}
# 77 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
}
# 78 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
}
# 79 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
}
# 80 "/usr/local/cuda/include/thrust/system/detail/generic/copy.inl"
}
# 26 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.h"
namespace thrust {
# 28 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.h"
namespace system {
# 30 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.h"
namespace detail {
# 32 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.h"
namespace sequential {
# 36 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.h"
template< class DerivedPolicy, class
# 37 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.h"
InputIterator, class
# 38 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.h"
OutputIterator> OutputIterator
# 36 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.h"
copy(execution_policy< DerivedPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result);
# 46 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.h"
template< class DerivedPolicy, class
# 47 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.h"
InputIterator, class
# 48 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.h"
Size, class
# 49 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.h"
OutputIterator> OutputIterator
# 46 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.h"
copy_n(execution_policy< DerivedPolicy> & exec, InputIterator first, Size n, OutputIterator result);
# 57 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.h"
}
# 58 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.h"
}
# 59 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.h"
}
# 60 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.h"
}
# 28 "/usr/local/cuda/include/thrust/detail/dispatch/is_trivial_copy.h"
namespace thrust {
# 31 "/usr/local/cuda/include/thrust/detail/dispatch/is_trivial_copy.h"
namespace detail {
# 34 "/usr/local/cuda/include/thrust/detail/dispatch/is_trivial_copy.h"
namespace dispatch {
# 41 "/usr/local/cuda/include/thrust/detail/dispatch/is_trivial_copy.h"
template< class FromIterator, class ToIterator>
# 42 "/usr/local/cuda/include/thrust/detail/dispatch/is_trivial_copy.h"
struct is_trivial_copy : public integral_constant< bool, is_same< typename iterator_value< FromIterator> ::type, typename iterator_value< ToIterator> ::type> ::value && is_trivial_iterator< FromIterator> ::value && is_trivial_iterator< ToIterator> ::value && has_trivial_assign< typename iterator_value< ToIterator> ::type> ::value> {
# 52 "/usr/local/cuda/include/thrust/detail/dispatch/is_trivial_copy.h"
};
# 54 "/usr/local/cuda/include/thrust/detail/dispatch/is_trivial_copy.h"
}
# 56 "/usr/local/cuda/include/thrust/detail/dispatch/is_trivial_copy.h"
}
# 58 "/usr/local/cuda/include/thrust/detail/dispatch/is_trivial_copy.h"
}
# 27 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
namespace system {
# 31 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
namespace detail {
# 33 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
namespace sequential {
# 35 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
namespace general_copy_detail {
# 39 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
template< class T1, class T2>
# 40 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
struct lazy_is_assignable : public thrust::detail::is_assignable< typename T1::type, typename T2::type> {
# 45 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
};
# 50 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
template< class InputIterator, class OutputIterator>
# 51 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
struct reference_is_assignable : public thrust::detail::eval_if< thrust::detail::is_same< typename iterator_reference< OutputIterator> ::type, void> ::value, thrust::detail::integral_constant< bool, true> , lazy_is_assignable< iterator_reference< OutputIterator> , iterator_reference< InputIterator> > > ::type {
# 62 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
};
# 69 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
template< class OutputIterator, class InputIterator> inline typename thrust::detail::enable_if< reference_is_assignable< InputIterator, OutputIterator> ::value> ::type
# 74 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
iter_assign(OutputIterator dst, InputIterator src)
# 75 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
{
# 76 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
(*dst) = (*src);
# 77 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
}
# 81 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
template< class OutputIterator, class InputIterator> inline typename thrust::detail::disable_if< reference_is_assignable< InputIterator, OutputIterator> ::value> ::type
# 86 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
iter_assign(OutputIterator dst, InputIterator src)
# 87 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
{
# 88 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
typedef typename iterator_value< InputIterator> ::type value_type;
# 91 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
(*dst) = (static_cast< value_type>(*src));
# 92 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
}
# 95 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
}
# 99 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
template< class InputIterator, class
# 100 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
OutputIterator> OutputIterator
# 102 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
general_copy(InputIterator first, InputIterator
# 103 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
last, OutputIterator
# 104 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
result)
# 105 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
{
# 106 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
for (; first != last; (++first), (++result))
# 107 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
{
# 112 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
general_copy_detail::iter_assign(result, first);
# 114 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
}
# 116 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
return result;
# 117 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
}
# 121 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
template< class InputIterator, class
# 122 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
Size, class
# 123 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
OutputIterator> OutputIterator
# 125 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
general_copy_n(InputIterator first, Size
# 126 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
n, OutputIterator
# 127 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
result)
# 128 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
{
# 129 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
for (; n > ((Size)0); ((++first), (++result)), (--n))
# 130 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
{
# 135 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
general_copy_detail::iter_assign(result, first);
# 137 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
}
# 139 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
return result;
# 140 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
}
# 143 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
}
# 144 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
}
# 145 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
}
# 146 "/usr/local/cuda/include/thrust/system/detail/sequential/general_copy.h"
}
# 27 "/usr/local/cuda/include/thrust/system/detail/sequential/trivial_copy.h"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/system/detail/sequential/trivial_copy.h"
namespace system {
# 31 "/usr/local/cuda/include/thrust/system/detail/sequential/trivial_copy.h"
namespace detail {
# 33 "/usr/local/cuda/include/thrust/system/detail/sequential/trivial_copy.h"
namespace sequential {
# 37 "/usr/local/cuda/include/thrust/system/detail/sequential/trivial_copy.h"
template< class T> T *
# 39 "/usr/local/cuda/include/thrust/system/detail/sequential/trivial_copy.h"
trivial_copy_n(const T *first, std::ptrdiff_t
# 40 "/usr/local/cuda/include/thrust/system/detail/sequential/trivial_copy.h"
n, T *
# 41 "/usr/local/cuda/include/thrust/system/detail/sequential/trivial_copy.h"
result)
# 42 "/usr/local/cuda/include/thrust/system/detail/sequential/trivial_copy.h"
{
# 44 "/usr/local/cuda/include/thrust/system/detail/sequential/trivial_copy.h"
std::memmove(result, first, n * sizeof(T));
# 45 "/usr/local/cuda/include/thrust/system/detail/sequential/trivial_copy.h"
return result + n;
# 49 "/usr/local/cuda/include/thrust/system/detail/sequential/trivial_copy.h"
}
# 52 "/usr/local/cuda/include/thrust/system/detail/sequential/trivial_copy.h"
}
# 53 "/usr/local/cuda/include/thrust/system/detail/sequential/trivial_copy.h"
}
# 54 "/usr/local/cuda/include/thrust/system/detail/sequential/trivial_copy.h"
}
# 55 "/usr/local/cuda/include/thrust/system/detail/sequential/trivial_copy.h"
}
# 26 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
namespace thrust {
# 28 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
namespace system {
# 30 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
namespace detail {
# 32 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
namespace sequential {
# 34 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
namespace copy_detail {
# 39 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
template< class Pointer> typename thrust::detail::pointer_traits< Pointer> ::raw_pointer
# 42 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
get(Pointer ptr)
# 43 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
{
# 44 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
return thrust::detail::pointer_traits< Pointer> ::get(ptr);
# 45 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
}
# 49 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
template< class InputIterator, class
# 50 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
OutputIterator> OutputIterator
# 52 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
copy(InputIterator first, InputIterator
# 53 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
last, OutputIterator
# 54 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
result, thrust::detail::true_type)
# 56 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
{
# 57 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
typedef typename iterator_difference< InputIterator> ::type Size;
# 59 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
const Size n = last - first;
# 60 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
sequential::trivial_copy_n(get(&(*first)), n, get(&(*result)));
# 61 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
return result + n;
# 62 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
}
# 66 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
template< class InputIterator, class
# 67 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
OutputIterator> OutputIterator
# 69 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
copy(InputIterator first, InputIterator
# 70 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
last, OutputIterator
# 71 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
result, thrust::detail::false_type)
# 73 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
{
# 74 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
return sequential::general_copy(first, last, result);
# 75 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
}
# 79 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
template< class InputIterator, class
# 80 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
Size, class
# 81 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
OutputIterator> OutputIterator
# 83 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
copy_n(InputIterator first, Size
# 84 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
n, OutputIterator
# 85 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
result, thrust::detail::true_type)
# 87 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
{
# 88 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
sequential::trivial_copy_n(get(&(*first)), n, get(&(*result)));
# 89 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
return result + n;
# 90 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
}
# 93 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
template< class InputIterator, class
# 94 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
Size, class
# 95 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
OutputIterator> OutputIterator
# 97 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
copy_n(InputIterator first, Size
# 98 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
n, OutputIterator
# 99 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
result, thrust::detail::false_type)
# 101 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
{
# 102 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
return sequential::general_copy_n(first, n, result);
# 103 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
}
# 106 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
}
# 110 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
template< class DerivedPolicy, class
# 111 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
InputIterator, class
# 112 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
OutputIterator> OutputIterator
# 114 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
copy(execution_policy< DerivedPolicy> &, InputIterator
# 115 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
first, InputIterator
# 116 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
last, OutputIterator
# 117 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
result)
# 118 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
{
# 119 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
return copy_detail::copy(first, last, result, typename thrust::detail::dispatch::is_trivial_copy< InputIterator, OutputIterator> ::type());
# 121 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
}
# 124 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
template< class DerivedPolicy, class
# 125 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
InputIterator, class
# 126 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
Size, class
# 127 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
OutputIterator> OutputIterator
# 129 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
copy_n(execution_policy< DerivedPolicy> &, InputIterator
# 130 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
first, Size
# 131 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
n, OutputIterator
# 132 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
result)
# 133 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
{
# 134 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
return copy_detail::copy_n(first, n, result, typename thrust::detail::dispatch::is_trivial_copy< InputIterator, OutputIterator> ::type());
# 136 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
}
# 139 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
}
# 140 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
}
# 141 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
}
# 142 "/usr/local/cuda/include/thrust/system/detail/sequential/copy.inl"
}
# 23 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
namespace cuda {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
namespace detail {
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
template< class DerivedPolicy, class
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
InputIterator, class
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
OutputIterator> OutputIterator
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
copy(execution_policy< DerivedPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result);
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
template< class System1, class
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
System2, class
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
InputIterator, class
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
OutputIterator> OutputIterator
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
copy(cross_system< System1, System2> exec, InputIterator first, InputIterator last, OutputIterator result);
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
template< class DerivedPolicy, class
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
InputIterator, class
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
Size, class
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
OutputIterator> OutputIterator
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
copy_n(execution_policy< DerivedPolicy> & exec, InputIterator first, Size n, OutputIterator result);
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
template< class System1, class
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
System2, class
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
InputIterator, class
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
Size, class
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
OutputIterator> OutputIterator
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
copy_n(cross_system< System1, System2> exec, InputIterator first, Size n, OutputIterator result);
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
}
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
}
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
}
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.h"
}
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.h"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.h"
namespace system {
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.h"
namespace cuda {
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.h"
namespace detail {
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.h"
template< class DerivedPolicy, class
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.h"
InputIterator, class
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.h"
OutputIterator> OutputIterator
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.h"
copy_device_to_device(execution_policy< DerivedPolicy> & exec, InputIterator begin, InputIterator end, OutputIterator result);
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.h"
}
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.h"
}
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.h"
}
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.h"
}
# 22 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
namespace system {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
namespace cuda {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
namespace detail {
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
template< class System1, class
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
System2, class
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
InputIterator, class
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
OutputIterator> OutputIterator
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
copy_cross_system(cross_system< System1, System2> systems, InputIterator begin, InputIterator end, OutputIterator result);
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
template< class System1, class
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
System2, class
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
InputIterator, class
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
Size, class
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
OutputIterator> OutputIterator
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
copy_cross_system_n(cross_system< System1, System2> systems, InputIterator begin, Size n, OutputIterator result);
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
}
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
}
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
}
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.h"
}
# 24 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
template< class , class > class tagged_iterator;
# 31 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
template< class Iterator, class Tag>
# 32 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
struct tagged_iterator_base {
# 42 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
typedef iterator_adaptor< tagged_iterator< Iterator, Tag> , Iterator, typename iterator_value< Iterator> ::type, Tag, typename iterator_traversal< Iterator> ::type, typename iterator_reference< Iterator> ::type, typename iterator_difference< Iterator> ::type> type;
# 43 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
};
# 45 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
template< class Iterator, class Tag>
# 46 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
class tagged_iterator : public tagged_iterator_base< Iterator, Tag> ::type {
# 50 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
typedef typename tagged_iterator_base< Iterator, Tag> ::type super_t;
# 54 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
public: tagged_iterator() { }
# 57 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
explicit tagged_iterator(Iterator x) : super_t(x)
# 58 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
{ }
# 59 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
};
# 63 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
template< class > struct is_trivial_iterator;
# 66 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
template< class BaseIterator, class Tag>
# 67 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
struct is_trivial_iterator< tagged_iterator< BaseIterator, Tag> > : public is_trivial_iterator< BaseIterator> {
# 69 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
};
# 72 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
}
# 73 "/usr/local/cuda/include/thrust/iterator/detail/tagged_iterator.h"
}
# 29 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
namespace thrust {
# 31 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
template< class Pointer>
# 36 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
class normal_iterator : public iterator_adaptor< normal_iterator< Pointer> , Pointer> {
# 42 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
typedef ::thrust::iterator_adaptor< ::thrust::detail::normal_iterator< Pointer> , Pointer> super_t;
# 46 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
public: normal_iterator() { }
# 49 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
normal_iterator(Pointer p) : super_t(p)
# 50 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
{ }
# 52 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
template< class OtherPointer>
# 54 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
normal_iterator(const ::thrust::detail::normal_iterator< OtherPointer> &other, typename enable_if_convertible< OtherPointer, Pointer> ::type * = 0) : super_t((other.base()))
# 59 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
{ }
# 61 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
};
# 64 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
template< class Pointer> inline normal_iterator< Pointer>
# 65 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
make_normal_iterator(Pointer ptr)
# 66 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
{
# 67 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
return ((normal_iterator< Pointer> )(ptr));
# 68 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
}
# 71 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
template< class T> struct is_trivial_iterator< normal_iterator< T> > : public true_type { };
# 74 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
}
# 75 "/usr/local/cuda/include/thrust/iterator/detail/normal_iterator.h"
}
# 23 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
namespace detail {
# 30 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
template< class T, class Alloc>
# 31 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
class contiguous_storage {
# 34 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
typedef allocator_traits< Alloc> alloc_traits;
# 37 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
public: typedef Alloc allocator_type;
# 38 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
typedef T value_type;
# 39 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
typedef typename allocator_traits< Alloc> ::pointer pointer;
# 40 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
typedef typename allocator_traits< Alloc> ::const_pointer const_pointer;
# 41 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
typedef typename allocator_traits< Alloc> ::size_type size_type;
# 42 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
typedef typename allocator_traits< Alloc> ::difference_type difference_type;
# 49 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
typedef typename Alloc::reference reference;
# 50 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
typedef typename Alloc::const_reference const_reference;
# 52 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
typedef normal_iterator< typename allocator_traits< Alloc> ::pointer> iterator;
# 53 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
typedef normal_iterator< typename allocator_traits< Alloc> ::const_pointer> const_iterator;
# 57 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
explicit contiguous_storage(const allocator_type & alloc = allocator_type());
# 61 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
explicit contiguous_storage(size_type n, const allocator_type & alloc = allocator_type());
# 65 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
~contiguous_storage();
# 68 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
size_type size() const;
# 71 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
size_type max_size() const;
# 74 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
iterator begin();
# 77 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
const_iterator begin() const;
# 80 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
iterator end();
# 83 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
const_iterator end() const;
# 86 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
reference operator[](size_type n);
# 89 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
const_reference operator[](size_type n) const;
# 92 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
allocator_type get_allocator() const;
# 96 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
void allocate(size_type n);
# 99 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
void deallocate();
# 102 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
void swap(contiguous_storage & x);
# 105 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
void default_construct_n(iterator first, size_type n);
# 108 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
void uninitialized_fill_n(iterator first, size_type n, const value_type & value);
# 110 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
template< class InputIterator> iterator uninitialized_copy(InputIterator first, InputIterator last, iterator result);
# 114 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
template< class System, class InputIterator> iterator uninitialized_copy(execution_policy< System> & from_system, InputIterator first, InputIterator last, iterator result);
# 121 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
template< class InputIterator, class Size> iterator uninitialized_copy_n(InputIterator first, Size n, iterator result);
# 125 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
template< class System, class InputIterator, class Size> iterator uninitialized_copy_n(execution_policy< System> & from_system, InputIterator first, Size n, iterator result);
# 133 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
void destroy(iterator first, iterator last);
# 137 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
private: allocator_type m_allocator;
# 139 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
iterator m_begin;
# 141 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
size_type m_size;
# 144 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
contiguous_storage &operator=(const contiguous_storage & x);
# 145 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
};
# 147 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
}
# 149 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
template< class T, class Alloc> void swap(detail::contiguous_storage< T, Alloc> & lhs, detail::contiguous_storage< T, Alloc> & rhs);
# 153 "/usr/local/cuda/include/thrust/detail/contiguous_storage.h"
}
# 22 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.h"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.h"
namespace detail {
# 27 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.h"
template< class System, class Allocator, class InputIterator, class Pointer> Pointer copy_construct_range(execution_policy< System> & from_system, Allocator & a, InputIterator first, InputIterator last, Pointer result);
# 35 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.h"
template< class System, class Allocator, class InputIterator, class Size, class Pointer> Pointer copy_construct_range_n(execution_policy< System> & from_system, Allocator & a, InputIterator first, Size n, Pointer result);
# 43 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.h"
}
# 44 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.h"
}
# 29 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
namespace thrust {
# 31 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
namespace detail {
# 33 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
namespace allocator_traits_detail {
# 37 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
template< class Allocator, class InputType, class OutputType>
# 38 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
struct copy_construct_with_allocator {
# 40 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
Allocator &a;
# 43 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
copy_construct_with_allocator(Allocator &a) : a(a)
# 45 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
{ }
# 47 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
template< class Tuple> void
# 49 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
operator()(Tuple t)
# 50 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
{
# 51 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
const InputType &in = thrust::get< 0> (t);
# 52 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
OutputType &out = thrust::get< 1> (t);
# 54 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
allocator_traits< Allocator> ::construct(a, &out, in);
# 55 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
}
# 56 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
};
# 63 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
template< class Allocator, class T>
# 64 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
struct needs_copy_construct_via_allocator : public integral_constant< bool, has_member_construct2< Allocator, T, T> ::value || (!has_trivial_copy_constructor< T> ::value)> {
# 69 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
};
# 74 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
template< class U, class T>
# 75 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
struct needs_copy_construct_via_allocator< std::allocator< U> , T> : public integral_constant< bool, !has_trivial_copy_constructor< T> ::value> {
# 80 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
};
# 87 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
template< class Allocator, class FromSystem, class ToSystem, class InputIterator, class Pointer> typename enable_if_convertible< FromSystem, ToSystem, Pointer> ::type
# 94 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
uninitialized_copy_with_allocator(Allocator &a, const execution_policy< FromSystem> &
# 95 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
from_system, const execution_policy< ToSystem> &
# 96 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
to_system, InputIterator
# 97 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
first, InputIterator
# 98 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
last, Pointer
# 99 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
result)
# 100 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
{
# 102 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
typedef tuple< InputIterator, Pointer, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> IteratorTuple;
# 103 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
typedef zip_iterator< tuple< InputIterator, Pointer, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > ZipIterator;
# 105 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
ZipIterator begin = thrust::make_zip_iterator(thrust::make_tuple(first, result));
# 106 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
ZipIterator end = begin;
# 109 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
const typename iterator_difference< InputIterator> ::type n = thrust::distance(first, last);
# 110 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
thrust::advance(end, n);
# 113 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
typedef typename iterator_traits< InputIterator> ::value_type InputType;
# 114 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
typedef typename iterator_traits< Pointer> ::value_type OutputType;
# 118 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
thrust::for_each(to_system, begin, end, ((copy_construct_with_allocator< Allocator, typename iterator_traits< InputIterator> ::value_type, typename iterator_traits< Pointer> ::value_type> )(a)));
# 121 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
return thrust::get< 1> ((end.get_iterator_tuple()));
# 122 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
}
# 129 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
template< class Allocator, class FromSystem, class ToSystem, class InputIterator, class Size, class Pointer> typename enable_if_convertible< FromSystem, ToSystem, Pointer> ::type
# 136 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
uninitialized_copy_with_allocator_n(Allocator &a, const execution_policy< FromSystem> &
# 137 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
from_system, const execution_policy< ToSystem> &
# 138 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
to_system, InputIterator
# 139 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
first, Size
# 140 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
n, Pointer
# 141 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
result)
# 142 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
{
# 144 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
typedef tuple< InputIterator, Pointer, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> IteratorTuple;
# 145 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
typedef zip_iterator< tuple< InputIterator, Pointer, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > ZipIterator;
# 147 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
ZipIterator begin = thrust::make_zip_iterator(thrust::make_tuple(first, result));
# 150 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
typedef typename iterator_traits< InputIterator> ::value_type InputType;
# 151 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
typedef typename iterator_traits< Pointer> ::value_type OutputType;
# 155 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
ZipIterator end = thrust::for_each_n(to_system, begin, n, ((copy_construct_with_allocator< Allocator, typename iterator_traits< InputIterator> ::value_type, typename iterator_traits< Pointer> ::value_type> )(a)));
# 158 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
return thrust::get< 1> ((end.get_iterator_tuple()));
# 159 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
}
# 162 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
template< class Allocator, class FromSystem, class ToSystem, class InputIterator, class Pointer> typename disable_if_convertible< FromSystem, ToSystem, Pointer> ::type
# 169 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
uninitialized_copy_with_allocator(Allocator &, const execution_policy< FromSystem> &
# 170 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
from_system, const execution_policy< ToSystem> &
# 171 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
to_system, InputIterator
# 172 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
first, InputIterator
# 173 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
last, Pointer
# 174 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
result)
# 175 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
{
# 178 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
return detail::two_system_copy(from_system, to_system, first, last, result);
# 179 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
}
# 182 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
template< class Allocator, class FromSystem, class ToSystem, class InputIterator, class Size, class Pointer> typename disable_if_convertible< FromSystem, ToSystem, Pointer> ::type
# 189 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
uninitialized_copy_with_allocator_n(Allocator &, const execution_policy< FromSystem> &
# 190 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
from_system, const execution_policy< ToSystem> &
# 191 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
to_system, InputIterator
# 192 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
first, Size
# 193 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
n, Pointer
# 194 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
result)
# 195 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
{
# 198 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
return detail::two_system_copy_n(from_system, to_system, first, n, result);
# 199 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
}
# 202 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
template< class FromSystem, class Allocator, class InputIterator, class Pointer> typename disable_if< needs_copy_construct_via_allocator< Allocator, typename pointer_element< Pointer> ::type> ::value, Pointer> ::type
# 211 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
copy_construct_range(execution_policy< FromSystem> &from_system, Allocator &
# 212 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
a, InputIterator
# 213 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
first, InputIterator
# 214 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
last, Pointer
# 215 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
result)
# 216 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
{
# 218 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
return detail::two_system_copy(from_system, allocator_system< Allocator> ::get(a), first, last, result);
# 219 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
}
# 222 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
template< class FromSystem, class Allocator, class InputIterator, class Size, class Pointer> typename disable_if< needs_copy_construct_via_allocator< Allocator, typename pointer_element< Pointer> ::type> ::value, Pointer> ::type
# 231 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
copy_construct_range_n(execution_policy< FromSystem> &from_system, Allocator &
# 232 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
a, InputIterator
# 233 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
first, Size
# 234 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
n, Pointer
# 235 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
result)
# 236 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
{
# 238 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
return detail::two_system_copy_n(from_system, allocator_system< Allocator> ::get(a), first, n, result);
# 239 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
}
# 242 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
template< class FromSystem, class Allocator, class InputIterator, class Pointer> typename enable_if< needs_copy_construct_via_allocator< Allocator, typename pointer_element< Pointer> ::type> ::value, Pointer> ::type
# 251 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
copy_construct_range(execution_policy< FromSystem> &from_system, Allocator &
# 252 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
a, InputIterator
# 253 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
first, InputIterator
# 254 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
last, Pointer
# 255 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
result)
# 256 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
{
# 257 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
return uninitialized_copy_with_allocator(a, from_system, allocator_system< Allocator> ::get(a), first, last, result);
# 258 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
}
# 261 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
template< class FromSystem, class Allocator, class InputIterator, class Size, class Pointer> typename enable_if< needs_copy_construct_via_allocator< Allocator, typename pointer_element< Pointer> ::type> ::value, Pointer> ::type
# 270 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
copy_construct_range_n(execution_policy< FromSystem> &from_system, Allocator &
# 271 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
a, InputIterator
# 272 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
first, Size
# 273 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
n, Pointer
# 274 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
result)
# 275 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
{
# 276 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
return uninitialized_copy_with_allocator_n(a, from_system, allocator_system< Allocator> ::get(a), first, n, result);
# 277 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
}
# 280 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
}
# 283 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
template< class System, class Allocator, class InputIterator, class Pointer> Pointer
# 285 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
copy_construct_range(execution_policy< System> &from_system, Allocator &
# 286 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
a, InputIterator
# 287 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
first, InputIterator
# 288 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
last, Pointer
# 289 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
result)
# 290 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
{
# 291 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
return allocator_traits_detail::copy_construct_range(from_system, a, first, last, result);
# 292 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
}
# 295 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
template< class System, class Allocator, class InputIterator, class Size, class Pointer> Pointer
# 297 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
copy_construct_range_n(execution_policy< System> &from_system, Allocator &
# 298 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
a, InputIterator
# 299 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
first, Size
# 300 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
n, Pointer
# 301 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
result)
# 302 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
{
# 303 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
return allocator_traits_detail::copy_construct_range_n(from_system, a, first, n, result);
# 304 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
}
# 307 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
}
# 308 "/usr/local/cuda/include/thrust/detail/allocator/copy_construct_range.inl"
}
# 21 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.h"
namespace thrust {
# 23 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.h"
namespace detail {
# 27 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.h"
template< class Allocator, class Pointer, class Size> inline void default_construct_range(Allocator & a, Pointer p, Size n);
# 32 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.h"
}
# 33 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.h"
}
# 27 "/usr/local/cuda/include/thrust/uninitialized_fill.h"
namespace thrust {
# 90 "/usr/local/cuda/include/thrust/uninitialized_fill.h"
template< class DerivedPolicy, class ForwardIterator, class T> void uninitialized_fill(const detail::execution_policy_base< DerivedPolicy> & exec, ForwardIterator first, ForwardIterator last, const T & x);
# 146 "/usr/local/cuda/include/thrust/uninitialized_fill.h"
template< class ForwardIterator, class T> void uninitialized_fill(ForwardIterator first, ForwardIterator last, const T & x);
# 206 "/usr/local/cuda/include/thrust/uninitialized_fill.h"
template< class DerivedPolicy, class ForwardIterator, class Size, class T> ForwardIterator uninitialized_fill_n(const detail::execution_policy_base< DerivedPolicy> & exec, ForwardIterator first, Size n, const T & x);
# 263 "/usr/local/cuda/include/thrust/uninitialized_fill.h"
template< class ForwardIterator, class Size, class T> ForwardIterator uninitialized_fill_n(ForwardIterator first, Size n, const T & x);
# 272 "/usr/local/cuda/include/thrust/uninitialized_fill.h"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.h"
namespace generic {
# 32 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.h"
template< class DerivedPolicy, class
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.h"
ForwardIterator, class
# 34 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.h"
T> void
# 32 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.h"
uninitialized_fill(execution_policy< DerivedPolicy> & exec, ForwardIterator first, ForwardIterator last, const T & x);
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.h"
template< class DerivedPolicy, class
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.h"
ForwardIterator, class
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.h"
Size, class
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.h"
T> ForwardIterator
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.h"
uninitialized_fill_n(execution_policy< DerivedPolicy> & exec, ForwardIterator first, Size n, const T & x);
# 51 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.h"
}
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.h"
}
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.h"
}
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.h"
}
# 27 "/usr/local/cuda/include/thrust/fill.h"
namespace thrust {
# 74 "/usr/local/cuda/include/thrust/fill.h"
template< class DerivedPolicy, class ForwardIterator, class T> void fill(const detail::execution_policy_base< DerivedPolicy> & exec, ForwardIterator first, ForwardIterator last, const T & value);
# 113 "/usr/local/cuda/include/thrust/fill.h"
template< class ForwardIterator, class T> void fill(ForwardIterator first, ForwardIterator last, const T & value);
# 156 "/usr/local/cuda/include/thrust/fill.h"
template< class DerivedPolicy, class OutputIterator, class Size, class T> OutputIterator fill_n(const detail::execution_policy_base< DerivedPolicy> & exec, OutputIterator first, Size n, const T & value);
# 195 "/usr/local/cuda/include/thrust/fill.h"
template< class OutputIterator, class Size, class T> OutputIterator fill_n(OutputIterator first, Size n, const T & value);
# 206 "/usr/local/cuda/include/thrust/fill.h"
}
# 27 "/usr/local/cuda/include/thrust/generate.h"
namespace thrust {
# 72 "/usr/local/cuda/include/thrust/generate.h"
template< class DerivedPolicy, class
# 73 "/usr/local/cuda/include/thrust/generate.h"
ForwardIterator, class
# 74 "/usr/local/cuda/include/thrust/generate.h"
Generator> void
# 72 "/usr/local/cuda/include/thrust/generate.h"
generate(const detail::execution_policy_base< DerivedPolicy> & exec, ForwardIterator first, ForwardIterator last, Generator gen);
# 114 "/usr/local/cuda/include/thrust/generate.h"
template< class ForwardIterator, class
# 115 "/usr/local/cuda/include/thrust/generate.h"
Generator> void
# 114 "/usr/local/cuda/include/thrust/generate.h"
generate(ForwardIterator first, ForwardIterator last, Generator gen);
# 157 "/usr/local/cuda/include/thrust/generate.h"
template< class DerivedPolicy, class
# 158 "/usr/local/cuda/include/thrust/generate.h"
OutputIterator, class
# 159 "/usr/local/cuda/include/thrust/generate.h"
Size, class
# 160 "/usr/local/cuda/include/thrust/generate.h"
Generator> OutputIterator
# 157 "/usr/local/cuda/include/thrust/generate.h"
generate_n(const detail::execution_policy_base< DerivedPolicy> & exec, OutputIterator first, Size n, Generator gen);
# 199 "/usr/local/cuda/include/thrust/generate.h"
template< class OutputIterator, class
# 200 "/usr/local/cuda/include/thrust/generate.h"
Size, class
# 201 "/usr/local/cuda/include/thrust/generate.h"
Generator> OutputIterator
# 199 "/usr/local/cuda/include/thrust/generate.h"
generate_n(OutputIterator first, Size n, Generator gen);
# 210 "/usr/local/cuda/include/thrust/generate.h"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/generate.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/generate.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/generate.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/generate.h"
namespace generic {
# 32 "/usr/local/cuda/include/thrust/system/detail/generic/generate.h"
template< class ExecutionPolicy, class
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/generate.h"
ForwardIterator, class
# 34 "/usr/local/cuda/include/thrust/system/detail/generic/generate.h"
Generator> void
# 32 "/usr/local/cuda/include/thrust/system/detail/generic/generate.h"
generate(execution_policy< ExecutionPolicy> & exec, ForwardIterator first, ForwardIterator last, Generator gen);
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/generate.h"
template< class ExecutionPolicy, class
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/generate.h"
OutputIterator, class
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/generate.h"
Size, class
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/generate.h"
Generator> OutputIterator
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/generate.h"
generate_n(execution_policy< ExecutionPolicy> & exec, OutputIterator first, Size n, Generator gen);
# 51 "/usr/local/cuda/include/thrust/system/detail/generic/generate.h"
}
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/generate.h"
}
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/generate.h"
}
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/generate.h"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
namespace generic {
# 32 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
template< class ExecutionPolicy, class
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
ForwardIterator, class
# 34 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
Generator> void
# 36 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
generate(execution_policy< ExecutionPolicy> &exec, ForwardIterator
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
first, ForwardIterator
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
last, Generator
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
gen)
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
{
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
thrust::for_each(exec, first, last, (typename thrust::detail::generate_functor< ExecutionPolicy, Generator> ::type)gen);
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
}
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
template< class ExecutionPolicy, class
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
OutputIterator, class
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
Size, class
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
Generator> OutputIterator
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
generate_n(execution_policy< ExecutionPolicy> &exec, OutputIterator
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
first, Size
# 51 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
n, Generator
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
gen)
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
{
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
return thrust::for_each_n(exec, first, n, (typename thrust::detail::generate_functor< ExecutionPolicy, Generator> ::type)gen);
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
}
# 57 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
}
# 58 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
}
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
}
# 60 "/usr/local/cuda/include/thrust/system/detail/generic/generate.inl"
}
# 29 "/usr/local/cuda/include/thrust/detail/generate.inl"
namespace thrust {
# 34 "/usr/local/cuda/include/thrust/detail/generate.inl"
template< class DerivedPolicy, class
# 35 "/usr/local/cuda/include/thrust/detail/generate.inl"
ForwardIterator, class
# 36 "/usr/local/cuda/include/thrust/detail/generate.inl"
Generator> void
# 38 "/usr/local/cuda/include/thrust/detail/generate.inl"
generate(const detail::execution_policy_base< DerivedPolicy> &exec, ForwardIterator
# 39 "/usr/local/cuda/include/thrust/detail/generate.inl"
first, ForwardIterator
# 40 "/usr/local/cuda/include/thrust/detail/generate.inl"
last, Generator
# 41 "/usr/local/cuda/include/thrust/detail/generate.inl"
gen)
# 42 "/usr/local/cuda/include/thrust/detail/generate.inl"
{
# 43 "/usr/local/cuda/include/thrust/detail/generate.inl"
using system::detail::generic::generate;
# 44 "/usr/local/cuda/include/thrust/detail/generate.inl"
return generate(detail::derived_cast(detail::strip_const(exec)), first, last, gen);
# 45 "/usr/local/cuda/include/thrust/detail/generate.inl"
}
# 49 "/usr/local/cuda/include/thrust/detail/generate.inl"
template< class DerivedPolicy, class
# 50 "/usr/local/cuda/include/thrust/detail/generate.inl"
OutputIterator, class
# 51 "/usr/local/cuda/include/thrust/detail/generate.inl"
Size, class
# 52 "/usr/local/cuda/include/thrust/detail/generate.inl"
Generator> OutputIterator
# 54 "/usr/local/cuda/include/thrust/detail/generate.inl"
generate_n(const detail::execution_policy_base< DerivedPolicy> &exec, OutputIterator
# 55 "/usr/local/cuda/include/thrust/detail/generate.inl"
first, Size
# 56 "/usr/local/cuda/include/thrust/detail/generate.inl"
n, Generator
# 57 "/usr/local/cuda/include/thrust/detail/generate.inl"
gen)
# 58 "/usr/local/cuda/include/thrust/detail/generate.inl"
{
# 59 "/usr/local/cuda/include/thrust/detail/generate.inl"
using system::detail::generic::generate_n;
# 60 "/usr/local/cuda/include/thrust/detail/generate.inl"
return generate_n(detail::derived_cast(detail::strip_const(exec)), first, n, gen);
# 61 "/usr/local/cuda/include/thrust/detail/generate.inl"
}
# 64 "/usr/local/cuda/include/thrust/detail/generate.inl"
template< class ForwardIterator, class
# 65 "/usr/local/cuda/include/thrust/detail/generate.inl"
Generator> void
# 66 "/usr/local/cuda/include/thrust/detail/generate.inl"
generate(ForwardIterator first, ForwardIterator
# 67 "/usr/local/cuda/include/thrust/detail/generate.inl"
last, Generator
# 68 "/usr/local/cuda/include/thrust/detail/generate.inl"
gen)
# 69 "/usr/local/cuda/include/thrust/detail/generate.inl"
{
# 70 "/usr/local/cuda/include/thrust/detail/generate.inl"
using thrust::system::detail::generic::select_system;
# 72 "/usr/local/cuda/include/thrust/detail/generate.inl"
typedef typename iterator_system< ForwardIterator> ::type System;
# 74 "/usr/local/cuda/include/thrust/detail/generate.inl"
System system;
# 76 "/usr/local/cuda/include/thrust/detail/generate.inl"
return thrust::generate(select_system(system), first, last, gen);
# 77 "/usr/local/cuda/include/thrust/detail/generate.inl"
}
# 80 "/usr/local/cuda/include/thrust/detail/generate.inl"
template< class OutputIterator, class
# 81 "/usr/local/cuda/include/thrust/detail/generate.inl"
Size, class
# 82 "/usr/local/cuda/include/thrust/detail/generate.inl"
Generator> OutputIterator
# 83 "/usr/local/cuda/include/thrust/detail/generate.inl"
generate_n(OutputIterator first, Size
# 84 "/usr/local/cuda/include/thrust/detail/generate.inl"
n, Generator
# 85 "/usr/local/cuda/include/thrust/detail/generate.inl"
gen)
# 86 "/usr/local/cuda/include/thrust/detail/generate.inl"
{
# 87 "/usr/local/cuda/include/thrust/detail/generate.inl"
using thrust::system::detail::generic::select_system;
# 89 "/usr/local/cuda/include/thrust/detail/generate.inl"
typedef typename iterator_system< OutputIterator> ::type System;
# 91 "/usr/local/cuda/include/thrust/detail/generate.inl"
System system;
# 93 "/usr/local/cuda/include/thrust/detail/generate.inl"
return thrust::generate_n(select_system(system), first, n, gen);
# 94 "/usr/local/cuda/include/thrust/detail/generate.inl"
}
# 97 "/usr/local/cuda/include/thrust/detail/generate.inl"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
namespace generic {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
template< class DerivedPolicy, class OutputIterator, class Size, class T> OutputIterator
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
fill_n(execution_policy< DerivedPolicy> &exec, OutputIterator
# 36 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
first, Size
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
n, const T &
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
value)
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
{
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
return thrust::generate_n(exec, first, n, ((thrust::detail::fill_functor< T> )(value)));
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
}
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
template< class DerivedPolicy, class ForwardIterator, class T> void
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
fill(execution_policy< DerivedPolicy> &exec, ForwardIterator
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
first, ForwardIterator
# 48 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
last, const T &
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
value)
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
{
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
thrust::generate(exec, first, last, ((thrust::detail::fill_functor< T> )(value)));
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
}
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
}
# 57 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
}
# 58 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
}
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/fill.h"
}
# 28 "/usr/local/cuda/include/thrust/detail/fill.inl"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/detail/fill.inl"
template< class DerivedPolicy, class ForwardIterator, class T> void
# 35 "/usr/local/cuda/include/thrust/detail/fill.inl"
fill(const detail::execution_policy_base< DerivedPolicy> &exec, ForwardIterator
# 36 "/usr/local/cuda/include/thrust/detail/fill.inl"
first, ForwardIterator
# 37 "/usr/local/cuda/include/thrust/detail/fill.inl"
last, const T &
# 38 "/usr/local/cuda/include/thrust/detail/fill.inl"
value)
# 39 "/usr/local/cuda/include/thrust/detail/fill.inl"
{
# 40 "/usr/local/cuda/include/thrust/detail/fill.inl"
using system::detail::generic::fill;
# 41 "/usr/local/cuda/include/thrust/detail/fill.inl"
return fill(detail::derived_cast(detail::strip_const(exec)), first, last, value);
# 42 "/usr/local/cuda/include/thrust/detail/fill.inl"
}
# 46 "/usr/local/cuda/include/thrust/detail/fill.inl"
template< class DerivedPolicy, class OutputIterator, class Size, class T> OutputIterator
# 48 "/usr/local/cuda/include/thrust/detail/fill.inl"
fill_n(const detail::execution_policy_base< DerivedPolicy> &exec, OutputIterator
# 49 "/usr/local/cuda/include/thrust/detail/fill.inl"
first, Size
# 50 "/usr/local/cuda/include/thrust/detail/fill.inl"
n, const T &
# 51 "/usr/local/cuda/include/thrust/detail/fill.inl"
value)
# 52 "/usr/local/cuda/include/thrust/detail/fill.inl"
{
# 53 "/usr/local/cuda/include/thrust/detail/fill.inl"
using system::detail::generic::fill_n;
# 54 "/usr/local/cuda/include/thrust/detail/fill.inl"
return fill_n(detail::derived_cast(detail::strip_const(exec)), first, n, value);
# 55 "/usr/local/cuda/include/thrust/detail/fill.inl"
}
# 58 "/usr/local/cuda/include/thrust/detail/fill.inl"
template< class ForwardIterator, class T> void
# 60 "/usr/local/cuda/include/thrust/detail/fill.inl"
fill(ForwardIterator first, ForwardIterator
# 61 "/usr/local/cuda/include/thrust/detail/fill.inl"
last, const T &
# 62 "/usr/local/cuda/include/thrust/detail/fill.inl"
value)
# 63 "/usr/local/cuda/include/thrust/detail/fill.inl"
{
# 64 "/usr/local/cuda/include/thrust/detail/fill.inl"
using thrust::system::detail::generic::select_system;
# 66 "/usr/local/cuda/include/thrust/detail/fill.inl"
typedef typename iterator_system< ForwardIterator> ::type System;
# 68 "/usr/local/cuda/include/thrust/detail/fill.inl"
System system;
# 70 "/usr/local/cuda/include/thrust/detail/fill.inl"
thrust::fill(select_system(system), first, last, value);
# 71 "/usr/local/cuda/include/thrust/detail/fill.inl"
}
# 74 "/usr/local/cuda/include/thrust/detail/fill.inl"
template< class OutputIterator, class Size, class T> OutputIterator
# 76 "/usr/local/cuda/include/thrust/detail/fill.inl"
fill_n(OutputIterator first, Size
# 77 "/usr/local/cuda/include/thrust/detail/fill.inl"
n, const T &
# 78 "/usr/local/cuda/include/thrust/detail/fill.inl"
value)
# 79 "/usr/local/cuda/include/thrust/detail/fill.inl"
{
# 80 "/usr/local/cuda/include/thrust/detail/fill.inl"
using thrust::system::detail::generic::select_system;
# 82 "/usr/local/cuda/include/thrust/detail/fill.inl"
typedef typename iterator_system< OutputIterator> ::type System;
# 84 "/usr/local/cuda/include/thrust/detail/fill.inl"
System system;
# 86 "/usr/local/cuda/include/thrust/detail/fill.inl"
return thrust::fill_n(select_system(system), first, n, value);
# 87 "/usr/local/cuda/include/thrust/detail/fill.inl"
}
# 90 "/usr/local/cuda/include/thrust/detail/fill.inl"
}
# 24 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
namespace system {
# 28 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
namespace detail {
# 30 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
namespace generic {
# 32 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
template< class DerivedPolicy, class
# 36 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
ForwardIterator, class
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
T> void
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
uninitialized_fill(execution_policy< DerivedPolicy> &exec, ForwardIterator
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
first, ForwardIterator
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
last, const T &
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
x, thrust::detail::true_type)
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
{
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
thrust::fill(exec, first, last, x);
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
}
# 48 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
template< class DerivedPolicy, class
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
ForwardIterator, class
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
T> void
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
uninitialized_fill(execution_policy< DerivedPolicy> &exec, ForwardIterator
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
first, ForwardIterator
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
last, const T &
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
x, thrust::detail::false_type)
# 57 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
{
# 58 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
typedef typename iterator_traits< ForwardIterator> ::value_type ValueType;
# 60 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
thrust::for_each(exec, first, last, ((thrust::detail::uninitialized_fill_functor< typename iterator_traits< ForwardIterator> ::value_type> )(x)));
# 61 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
}
# 63 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
template< class DerivedPolicy, class
# 64 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
ForwardIterator, class
# 65 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
Size, class
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
T> ForwardIterator
# 68 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
uninitialized_fill_n(execution_policy< DerivedPolicy> &exec, ForwardIterator
# 69 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
first, Size
# 70 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
n, const T &
# 71 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
x, thrust::detail::true_type)
# 73 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
{
# 74 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
return thrust::fill_n(exec, first, n, x);
# 75 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
}
# 77 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
template< class DerivedPolicy, class
# 78 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
ForwardIterator, class
# 79 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
Size, class
# 80 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
T> ForwardIterator
# 82 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
uninitialized_fill_n(execution_policy< DerivedPolicy> &exec, ForwardIterator
# 83 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
first, Size
# 84 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
n, const T &
# 85 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
x, thrust::detail::false_type)
# 87 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
{
# 88 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
typedef typename iterator_traits< ForwardIterator> ::value_type ValueType;
# 90 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
return thrust::for_each_n(exec, first, n, ((thrust::detail::uninitialized_fill_functor< typename iterator_traits< ForwardIterator> ::value_type> )(x)));
# 91 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
}
# 93 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
}
# 95 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
template< class DerivedPolicy, class
# 96 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
ForwardIterator, class
# 97 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
T> void
# 99 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
uninitialized_fill(execution_policy< DerivedPolicy> &exec, ForwardIterator
# 100 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
first, ForwardIterator
# 101 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
last, const T &
# 102 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
x)
# 103 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
{
# 104 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
typedef typename iterator_traits< ForwardIterator> ::value_type ValueType;
# 106 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
typedef thrust::detail::has_trivial_copy_constructor< typename iterator_traits< ForwardIterator> ::value_type> ValueTypeHasTrivialCopyConstructor;
# 108 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
detail::uninitialized_fill(exec, first, last, x, ValueTypeHasTrivialCopyConstructor());
# 110 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
}
# 112 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
template< class DerivedPolicy, class
# 113 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
ForwardIterator, class
# 114 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
Size, class
# 115 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
T> ForwardIterator
# 117 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
uninitialized_fill_n(execution_policy< DerivedPolicy> &exec, ForwardIterator
# 118 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
first, Size
# 119 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
n, const T &
# 120 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
x)
# 121 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
{
# 122 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
typedef typename iterator_traits< ForwardIterator> ::value_type ValueType;
# 124 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
typedef thrust::detail::has_trivial_copy_constructor< typename iterator_traits< ForwardIterator> ::value_type> ValueTypeHasTrivialCopyConstructor;
# 126 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
return detail::uninitialized_fill_n(exec, first, n, x, ValueTypeHasTrivialCopyConstructor());
# 128 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
}
# 130 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
}
# 131 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
}
# 132 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
}
# 133 "/usr/local/cuda/include/thrust/system/detail/generic/uninitialized_fill.inl"
}
# 28 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
template< class DerivedPolicy, class ForwardIterator, class T> void
# 35 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
uninitialized_fill(const detail::execution_policy_base< DerivedPolicy> &exec, ForwardIterator
# 36 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
first, ForwardIterator
# 37 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
last, const T &
# 38 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
x)
# 39 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
{
# 40 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
using system::detail::generic::uninitialized_fill;
# 41 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
return uninitialized_fill(detail::derived_cast(detail::strip_const(exec)), first, last, x);
# 42 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
}
# 46 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
template< class DerivedPolicy, class ForwardIterator, class Size, class T> ForwardIterator
# 48 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
uninitialized_fill_n(const detail::execution_policy_base< DerivedPolicy> &exec, ForwardIterator
# 49 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
first, Size
# 50 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
n, const T &
# 51 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
x)
# 52 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
{
# 53 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
using system::detail::generic::uninitialized_fill_n;
# 54 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
return uninitialized_fill_n(detail::derived_cast(detail::strip_const(exec)), first, n, x);
# 55 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
}
# 58 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
template< class ForwardIterator, class
# 59 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
T> void
# 60 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
uninitialized_fill(ForwardIterator first, ForwardIterator
# 61 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
last, const T &
# 62 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
x)
# 63 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
{
# 64 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
using thrust::system::detail::generic::select_system;
# 66 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
typedef typename iterator_system< ForwardIterator> ::type System;
# 68 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
System system;
# 70 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
thrust::uninitialized_fill(select_system(system), first, last, x);
# 71 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
}
# 74 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
template< class ForwardIterator, class
# 75 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
Size, class
# 76 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
T> ForwardIterator
# 77 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
uninitialized_fill_n(ForwardIterator first, Size
# 78 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
n, const T &
# 79 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
x)
# 80 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
{
# 81 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
using thrust::system::detail::generic::select_system;
# 83 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
typedef typename iterator_system< ForwardIterator> ::type System;
# 85 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
System system;
# 87 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
return thrust::uninitialized_fill_n(select_system(system), first, n, x);
# 88 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
}
# 91 "/usr/local/cuda/include/thrust/detail/uninitialized_fill.inl"
}
# 24 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
namespace detail {
# 28 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
namespace allocator_traits_detail {
# 32 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
template< class Allocator>
# 33 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
struct construct1_via_allocator {
# 35 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
Allocator &a;
# 38 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
construct1_via_allocator(Allocator &a) : a(a)
# 40 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
{ }
# 42 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
template< class T> void
# 44 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
operator()(T &x)
# 45 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
{
# 46 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
allocator_traits< Allocator> ::construct(a, &x);
# 47 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
}
# 48 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
};
# 52 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
template< class Allocator, class T>
# 53 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
struct needs_default_construct_via_allocator : public or_< has_member_construct1< Allocator, T> , not_< has_trivial_constructor< T> > > {
# 58 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
};
# 64 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
template< class U, class T>
# 65 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
struct needs_default_construct_via_allocator< std::allocator< U> , T> : public not_< has_trivial_constructor< T> > {
# 67 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
};
# 70 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
template< class Allocator, class Pointer, class Size> typename enable_if< needs_default_construct_via_allocator< Allocator, typename pointer_element< Pointer> ::type> ::value> ::type
# 78 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
default_construct_range(Allocator &a, Pointer p, Size n)
# 79 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
{
# 80 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
thrust::for_each_n(allocator_system< Allocator> ::get(a), p, n, ((construct1_via_allocator< Allocator> )(a)));
# 81 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
}
# 84 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
template< class Allocator, class Pointer, class Size> typename disable_if< needs_default_construct_via_allocator< Allocator, typename pointer_element< Pointer> ::type> ::value> ::type
# 92 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
default_construct_range(Allocator &a, Pointer p, Size n)
# 93 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
{
# 94 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
thrust::uninitialized_fill_n(allocator_system< Allocator> ::get(a), p, n, typename pointer_element< Pointer> ::type());
# 95 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
}
# 98 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
}
# 101 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
template< class Allocator, class Pointer, class Size> inline void
# 103 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
default_construct_range(Allocator &a, Pointer p, Size n)
# 104 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
{
# 105 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
return allocator_traits_detail::default_construct_range(a, p, n);
# 106 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
}
# 109 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
}
# 110 "/usr/local/cuda/include/thrust/detail/allocator/default_construct_range.inl"
}
# 21 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.h"
namespace thrust {
# 23 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.h"
namespace detail {
# 26 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.h"
template< class Allocator, class Pointer, class Size> inline void destroy_range(Allocator & a, Pointer p, Size n);
# 30 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.h"
}
# 31 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.h"
}
# 23 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
namespace detail {
# 27 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
namespace allocator_traits_detail {
# 38 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
template< class Allocator, class T>
# 39 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
struct has_effectful_member_destroy : public has_member_destroy< Allocator, T> {
# 41 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
};
# 44 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
template< class U, class T>
# 45 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
struct has_effectful_member_destroy< std::allocator< U> , T> : public false_type {
# 47 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
};
# 50 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
template< class Allocator, class Pointer>
# 51 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
struct enable_if_destroy_range_case1 : public enable_if< has_effectful_member_destroy< Allocator, typename pointer_element< Pointer> ::type> ::value> {
# 58 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
};
# 61 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
template< class Allocator, class Pointer>
# 62 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
struct enable_if_destroy_range_case2 : public enable_if< (!has_effectful_member_destroy< Allocator, typename pointer_element< Pointer> ::type> ::value) && (!has_trivial_destructor< typename pointer_element< Pointer> ::type> ::value)> {
# 72 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
};
# 75 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
template< class Allocator, class Pointer>
# 76 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
struct enable_if_destroy_range_case3 : public enable_if< (!has_effectful_member_destroy< Allocator, typename pointer_element< Pointer> ::type> ::value) && has_trivial_destructor< typename pointer_element< Pointer> ::type> ::value> {
# 86 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
};
# 90 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
template< class Allocator>
# 91 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
struct destroy_via_allocator {
# 93 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
Allocator &a;
# 96 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
destroy_via_allocator(Allocator &a) : a(a)
# 98 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
{ }
# 100 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
template< class T> void
# 102 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
operator()(T &x)
# 103 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
{
# 104 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
allocator_traits< Allocator> ::destroy(a, &x);
# 105 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
}
# 106 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
};
# 110 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
template< class Allocator, class Pointer, class Size> typename enable_if_destroy_range_case1< Allocator, Pointer> ::type
# 113 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
destroy_range(Allocator &a, Pointer p, Size n)
# 114 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
{
# 115 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
thrust::for_each_n(allocator_system< Allocator> ::get(a), p, n, ((destroy_via_allocator< Allocator> )(a)));
# 116 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
}
# 120 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
struct gozer {
# 123 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
template< class T> void
# 125 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
operator()(T &x)
# 126 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
{
# 127 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
(x.~T());
# 128 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
}
# 129 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
};
# 132 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
template< class Allocator, class Pointer, class Size> typename enable_if_destroy_range_case2< Allocator, Pointer> ::type
# 135 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
destroy_range(Allocator &a, Pointer p, Size n)
# 136 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
{
# 137 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
thrust::for_each_n(allocator_system< Allocator> ::get(a), p, n, gozer());
# 138 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
}
# 142 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
template< class Allocator, class Pointer, class Size> typename enable_if_destroy_range_case3< Allocator, Pointer> ::type
# 145 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
destroy_range(Allocator &, Pointer, Size)
# 146 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
{
# 148 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
}
# 151 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
}
# 154 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
template< class Allocator, class Pointer, class Size> inline void
# 156 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
destroy_range(Allocator &a, Pointer p, Size n)
# 157 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
{
# 158 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
return allocator_traits_detail::destroy_range(a, p, n);
# 159 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
}
# 162 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
}
# 163 "/usr/local/cuda/include/thrust/detail/allocator/destroy_range.inl"
}
# 21 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.h"
namespace thrust {
# 23 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.h"
namespace detail {
# 27 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.h"
template< class Allocator, class Pointer, class Size, class T> inline void fill_construct_range(Allocator & a, Pointer p, Size n, const T & value);
# 32 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.h"
}
# 33 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.h"
}
# 25 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
namespace thrust {
# 27 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
namespace allocator_traits_detail {
# 38 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
template< class Allocator, class T, class Arg1>
# 39 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
struct has_effectful_member_construct2 : public has_member_construct2< Allocator, T, Arg1> {
# 41 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
};
# 44 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
template< class U, class T, class Arg1>
# 45 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
struct has_effectful_member_construct2< std::allocator< U> , T, Arg1> : public false_type {
# 47 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
};
# 50 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
template< class Allocator, class Arg1>
# 51 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
struct construct2_via_allocator {
# 53 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
Allocator &a;
# 54 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
Arg1 arg;
# 57 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
construct2_via_allocator(Allocator &a, const Arg1 &arg) : a(a), arg(arg)
# 59 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
{ }
# 61 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
template< class T> void
# 63 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
operator()(T &x)
# 64 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
{
# 65 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
allocator_traits< Allocator> ::construct(a, &x, arg);
# 66 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
}
# 67 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
};
# 70 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
template< class Allocator, class Pointer, class Size, class T> typename enable_if< has_effectful_member_construct2< Allocator, typename pointer_element< Pointer> ::type, T> ::value> ::type
# 79 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
fill_construct_range(Allocator &a, Pointer p, Size n, const T &value)
# 80 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
{
# 81 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
thrust::for_each_n(allocator_system< Allocator> ::get(a), p, n, construct2_via_allocator< Allocator, T> (a, value));
# 82 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
}
# 85 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
template< class Allocator, class Pointer, class Size, class T> typename disable_if< has_effectful_member_construct2< Allocator, typename pointer_element< Pointer> ::type, T> ::value> ::type
# 94 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
fill_construct_range(Allocator &a, Pointer p, Size n, const T &value)
# 95 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
{
# 96 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
thrust::uninitialized_fill_n(allocator_system< Allocator> ::get(a), p, n, value);
# 97 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
}
# 100 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
}
# 103 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
template< class Alloc, class Pointer, class Size, class T> inline void
# 105 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
fill_construct_range(Alloc &a, Pointer p, Size n, const T &value)
# 106 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
{
# 107 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
return allocator_traits_detail::fill_construct_range(a, p, n, value);
# 108 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
}
# 111 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
}
# 112 "/usr/local/cuda/include/thrust/detail/allocator/fill_construct_range.inl"
}
# 28 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
namespace thrust {
# 31 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc>
# 38 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::contiguous_storage(const Alloc &alloc) : m_allocator(alloc), m_begin((pointer)(static_cast< T *>(0))), m_size(0)
# 42 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 43 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
;
# 44 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 47 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc>
# 50 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::contiguous_storage(size_type n, const Alloc &alloc) : m_allocator(alloc), m_begin((pointer)(static_cast< T *>(0))), m_size(0)
# 54 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 55 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
allocate(n);
# 56 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 59 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc>
# 62 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::~contiguous_storage()
# 63 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 64 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
deallocate();
# 65 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 67 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc> typename contiguous_storage< T, Alloc> ::size_type
# 71 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::size() const
# 72 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 73 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
return m_size;
# 74 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 76 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc> typename contiguous_storage< T, Alloc> ::size_type
# 80 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::max_size() const
# 81 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 82 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
return alloc_traits::max_size(m_allocator);
# 83 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 85 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc> typename contiguous_storage< T, Alloc> ::iterator
# 89 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::begin()
# 90 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 91 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
return m_begin;
# 92 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 94 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc> typename contiguous_storage< T, Alloc> ::const_iterator
# 98 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::begin() const
# 99 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 100 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
return m_begin;
# 101 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 103 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc> typename contiguous_storage< T, Alloc> ::iterator
# 107 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::end()
# 108 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 109 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
return (m_begin) + size();
# 110 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 112 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc> typename contiguous_storage< T, Alloc> ::const_iterator
# 116 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::end() const
# 117 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 118 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
return (m_begin) + size();
# 119 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 121 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc> typename contiguous_storage< T, Alloc> ::reference
# 125 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::operator[](size_type n)
# 126 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 127 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
return (m_begin)[n];
# 128 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 130 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc> typename contiguous_storage< T, Alloc> ::const_reference
# 134 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::operator[](size_type n) const
# 135 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 136 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
return (m_begin)[n];
# 137 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 139 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc> typename contiguous_storage< T, Alloc> ::allocator_type
# 143 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::get_allocator() const
# 144 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 145 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
return m_allocator;
# 146 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 148 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc> void
# 151 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::allocate(size_type n)
# 152 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 153 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
if (n > 0)
# 154 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 155 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
(m_begin) = ((iterator)(alloc_traits::allocate(m_allocator, n)));
# 156 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
(m_size) = n;
# 157 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
} else
# 159 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 160 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
(m_begin) = ((iterator)((pointer)(static_cast< T *>(0))));
# 161 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
(m_size) = 0;
# 162 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 163 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 165 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc> void
# 168 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::deallocate()
# 169 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 170 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
if (size() > 0)
# 171 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 172 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
alloc_traits::deallocate(m_allocator, ((m_begin).base()), size());
# 173 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
(m_begin) = ((iterator)((pointer)(static_cast< T *>(0))));
# 174 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
(m_size) = 0;
# 175 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 176 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 178 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc> void
# 181 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::swap(contiguous_storage &x)
# 182 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 183 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
thrust::swap(m_begin, x.m_begin);
# 184 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
thrust::swap(m_size, x.m_size);
# 186 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
thrust::swap(m_allocator, x.m_allocator);
# 187 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 189 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc> void
# 192 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::default_construct_n(iterator first, size_type n)
# 193 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 194 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
default_construct_range(m_allocator, (first.base()), n);
# 195 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 197 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc> void
# 200 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::uninitialized_fill_n(iterator first, size_type n, const value_type &x)
# 201 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 202 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
fill_construct_range(m_allocator, (first.base()), n, x);
# 203 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 205 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc>
# 206 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class System, class InputIterator> typename contiguous_storage< T, Alloc> ::iterator
# 210 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::uninitialized_copy(execution_policy< System> &from_system, InputIterator first, InputIterator last, iterator result)
# 211 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 212 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
return ((iterator)(copy_construct_range(from_system, m_allocator, first, last, (result.base()))));
# 213 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 215 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc>
# 216 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class InputIterator> typename contiguous_storage< T, Alloc> ::iterator
# 220 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::uninitialized_copy(InputIterator first, InputIterator last, iterator result)
# 221 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 223 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
typename iterator_system< InputIterator> ::type from_system;
# 225 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
return ((iterator)(copy_construct_range(from_system, m_allocator, first, last, (result.base()))));
# 226 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 228 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc>
# 229 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class System, class InputIterator, class Size> typename contiguous_storage< T, Alloc> ::iterator
# 233 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::uninitialized_copy_n(execution_policy< System> &from_system, InputIterator first, Size n, iterator result)
# 234 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 235 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
return ((iterator)(copy_construct_range_n(from_system, m_allocator, first, n, (result.base()))));
# 236 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 238 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc>
# 239 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class InputIterator, class Size> typename contiguous_storage< T, Alloc> ::iterator
# 243 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::uninitialized_copy_n(InputIterator first, Size n, iterator result)
# 244 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 246 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
typename iterator_system< InputIterator> ::type from_system;
# 248 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
return ((iterator)(copy_construct_range_n(from_system, m_allocator, first, n, (result.base()))));
# 249 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 251 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc> void
# 254 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
contiguous_storage< T, Alloc> ::destroy(iterator first, iterator last)
# 255 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 256 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
destroy_range(m_allocator, (first.base()), last - first);
# 257 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 259 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 261 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
template< class T, class Alloc> void
# 263 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
swap(detail::contiguous_storage< T, Alloc> &lhs, detail::contiguous_storage< T, Alloc> &rhs)
# 264 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
{
# 265 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
(lhs.swap(rhs));
# 266 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 268 "/usr/local/cuda/include/thrust/detail/contiguous_storage.inl"
}
# 23 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
namespace detail {
# 28 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
template< class T, class Tag, class Pointer> class tagged_allocator;
# 30 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
template< class Tag, class Pointer>
# 31 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
class tagged_allocator< void, Tag, Pointer> {
# 34 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
public: typedef void value_type;
# 35 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
typedef typename pointer_traits< Pointer> ::template rebind< void> ::other pointer;
# 36 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
typedef typename pointer_traits< Pointer> ::template rebind< const void> ::other const_pointer;
# 37 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
typedef std::size_t size_type;
# 38 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
typedef typename pointer_traits< Pointer> ::difference_type difference_type;
# 39 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
typedef Tag system_type;
# 41 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
template< class U>
# 42 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
struct rebind {
# 44 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
typedef detail::tagged_allocator< U, Tag, Pointer> other;
# 45 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
};
# 46 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
};
# 48 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
template< class T, class Tag, class Pointer>
# 49 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
class tagged_allocator {
# 52 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
public: typedef T value_type;
# 53 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
typedef typename pointer_traits< Pointer> ::template rebind< T> ::other pointer;
# 54 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
typedef typename pointer_traits< Pointer> ::template rebind< const T> ::other const_pointer;
# 55 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
typedef typename iterator_reference< typename pointer_traits< Pointer> ::template rebind< T> ::other> ::type reference;
# 56 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
typedef typename iterator_reference< typename pointer_traits< Pointer> ::template rebind< const T> ::other> ::type const_reference;
# 57 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
typedef std::size_t size_type;
# 58 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
typedef typename pointer_traits< typename pointer_traits< Pointer> ::template rebind< T> ::other> ::difference_type difference_type;
# 59 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
typedef Tag system_type;
# 61 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
template< class U>
# 62 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
struct rebind {
# 64 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
typedef detail::tagged_allocator< U, Tag, Pointer> other;
# 65 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
};
# 68 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
inline tagged_allocator();
# 71 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
inline tagged_allocator(const tagged_allocator &);
# 73 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
template< class U, class OtherPointer> inline tagged_allocator(const detail::tagged_allocator< U, Tag, OtherPointer> &);
# 78 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
inline ~tagged_allocator();
# 81 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
pointer address(reference x) const;
# 84 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
const_pointer address(const_reference x) const;
# 86 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
size_type max_size() const;
# 87 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
};
# 89 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
template< class T1, class Pointer1, class T2, class Pointer2, class Tag> bool operator==(const tagged_allocator< T1, Pointer1, Tag> &, const tagged_allocator< T2, Pointer2, Tag> &);
# 93 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
template< class T1, class Pointer1, class T2, class Pointer2, class Tag> bool operator!=(const tagged_allocator< T1, Pointer1, Tag> &, const tagged_allocator< T2, Pointer2, Tag> &);
# 97 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
}
# 98 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.h"
}
# 21 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
namespace thrust {
# 23 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
namespace detail {
# 27 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
template< class T, class Tag, class Pointer> inline
# 29 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
tagged_allocator< T, Tag, Pointer> ::tagged_allocator()
# 30 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
{ }
# 33 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
template< class T, class Tag, class Pointer> inline
# 35 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
tagged_allocator< T, Tag, Pointer> ::tagged_allocator(const tagged_allocator &)
# 36 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
{ }
# 39 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
template< class T, class Tag, class Pointer>
# 40 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
template< class U, class OtherPointer> inline
# 42 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
tagged_allocator< T, Tag, Pointer> ::tagged_allocator(const detail::tagged_allocator< U, Tag, OtherPointer> &)
# 43 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
{ }
# 46 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
template< class T, class Tag, class Pointer> inline
# 48 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
tagged_allocator< T, Tag, Pointer> ::~tagged_allocator()
# 49 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
{ }
# 52 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
template< class T, class Tag, class Pointer> typename tagged_allocator< T, Tag, Pointer> ::pointer
# 55 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
tagged_allocator< T, Tag, Pointer> ::address(reference x) const
# 56 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
{
# 57 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
return &x;
# 58 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
}
# 61 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
template< class T, class Tag, class Pointer> typename tagged_allocator< T, Tag, Pointer> ::const_pointer
# 64 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
tagged_allocator< T, Tag, Pointer> ::address(const_reference x) const
# 65 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
{
# 66 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
return &x;
# 67 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
}
# 70 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
template< class T, class Tag, class Pointer> typename tagged_allocator< T, Tag, Pointer> ::size_type
# 73 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
tagged_allocator< T, Tag, Pointer> ::max_size() const
# 74 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
{
# 75 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
return std::numeric_limits< unsigned long> ::max() / sizeof(T);
# 76 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
}
# 79 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
template< class T1, class Pointer1, class T2, class Pointer2, class Tag> bool
# 81 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
operator==(const tagged_allocator< T1, Pointer1, Tag> &, const tagged_allocator< T2, Pointer2, Tag> &)
# 82 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
{
# 83 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
return true;
# 84 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
}
# 87 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
template< class T1, class Pointer1, class T2, class Pointer2, class Tag> bool
# 89 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
operator!=(const tagged_allocator< T1, Pointer1, Tag> &, const tagged_allocator< T2, Pointer2, Tag> &)
# 90 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
{
# 91 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
return false;
# 92 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
}
# 95 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
}
# 96 "/usr/local/cuda/include/thrust/detail/allocator/tagged_allocator.inl"
}
# 24 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.h"
namespace system {
# 28 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.h"
namespace detail {
# 30 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.h"
namespace generic {
# 34 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.h"
template< class T, class DerivedPolicy> pair< pointer< T, DerivedPolicy, use_default, use_default> , typename pointer< T, DerivedPolicy, use_default, use_default> ::difference_type> get_temporary_buffer(execution_policy< DerivedPolicy> & exec, typename pointer< T, DerivedPolicy, use_default, use_default> ::difference_type n);
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.h"
template< class DerivedPolicy, class Pointer> void return_temporary_buffer(execution_policy< DerivedPolicy> & exec, Pointer p);
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.h"
}
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.h"
}
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.h"
}
# 48 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.h"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
namespace generic {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
template< class T, class DerivedPolicy> pair< pointer< T, DerivedPolicy, use_default, use_default> , typename pointer< T, DerivedPolicy, use_default, use_default> ::difference_type>
# 36 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
get_temporary_buffer(execution_policy< DerivedPolicy> &exec, typename pointer< T, DerivedPolicy, use_default, use_default> ::difference_type n)
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
{
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
pointer< T, DerivedPolicy, use_default, use_default> ptr = thrust::malloc< T> (exec, n);
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
if (!(ptr.get()))
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
{
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
n = 0;
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
}
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
return thrust::make_pair(ptr, n);
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
}
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
template< class DerivedPolicy, class Pointer> void
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
return_temporary_buffer(execution_policy< DerivedPolicy> &exec, Pointer p)
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
{
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
thrust::free(exec, p);
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
}
# 58 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
}
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
}
# 60 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
}
# 61 "/usr/local/cuda/include/thrust/system/detail/generic/temporary_buffer.inl"
}
# 27 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
namespace detail {
# 31 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
namespace get_temporary_buffer_detail {
# 35 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
template< class T, class DerivedPolicy, class Pair> pair< pointer< T, DerivedPolicy, use_default, use_default> , typename pointer< T, DerivedPolicy, use_default, use_default> ::difference_type>
# 38 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
down_cast_pair(Pair p)
# 39 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
{
# 41 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
pointer< T, DerivedPolicy, use_default, use_default> ptr = ((pointer< T, DerivedPolicy, use_default, use_default> )(static_cast< T *>(thrust::raw_pointer_cast((p.first)))));
# 43 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
typedef pair< pointer< T, DerivedPolicy, use_default, use_default> , typename pointer< T, DerivedPolicy, use_default, use_default> ::difference_type> result_type;
# 44 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
return result_type(ptr, (p.second));
# 45 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
}
# 48 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
}
# 49 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
}
# 53 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
template< class T, class DerivedPolicy> pair< pointer< T, DerivedPolicy, use_default, use_default> , typename pointer< T, DerivedPolicy, use_default, use_default> ::difference_type>
# 56 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
get_temporary_buffer(const detail::execution_policy_base< DerivedPolicy> &exec, typename pointer< T, DerivedPolicy, use_default, use_default> ::difference_type n)
# 57 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
{
# 58 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
using system::detail::generic::get_temporary_buffer;
# 60 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
return detail::get_temporary_buffer_detail::down_cast_pair< T, DerivedPolicy> (get_temporary_buffer< T> (detail::derived_cast(detail::strip_const(exec)), n));
# 61 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
}
# 65 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
template< class DerivedPolicy, class Pointer> void
# 67 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
return_temporary_buffer(const detail::execution_policy_base< DerivedPolicy> &exec, Pointer p)
# 68 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
{
# 69 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
using system::detail::generic::return_temporary_buffer;
# 71 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
return return_temporary_buffer(detail::derived_cast(detail::strip_const(exec)), p);
# 72 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
}
# 75 "/usr/local/cuda/include/thrust/detail/temporary_buffer.h"
}
# 31 "/usr/local/cuda/include/thrust/memory.h"
namespace thrust {
# 303 "/usr/local/cuda/include/thrust/memory.h"
template< class DerivedPolicy> pointer< void, DerivedPolicy, use_default, use_default> malloc(const detail::execution_policy_base< DerivedPolicy> & system, std::size_t n);
# 341 "/usr/local/cuda/include/thrust/memory.h"
template< class T, class DerivedPolicy> pointer< T, DerivedPolicy, use_default, use_default> malloc(const detail::execution_policy_base< DerivedPolicy> & system, std::size_t n);
# 394 "/usr/local/cuda/include/thrust/memory.h"
template< class T, class DerivedPolicy> pair< pointer< T, DerivedPolicy, use_default, use_default> , typename pointer< T, DerivedPolicy, use_default, use_default> ::difference_type> get_temporary_buffer(const detail::execution_policy_base< DerivedPolicy> & system, typename pointer< T, DerivedPolicy, use_default, use_default> ::difference_type n);
# 437 "/usr/local/cuda/include/thrust/memory.h"
template< class DerivedPolicy, class Pointer> void free(const detail::execution_policy_base< DerivedPolicy> & system, Pointer ptr);
# 483 "/usr/local/cuda/include/thrust/memory.h"
template< class DerivedPolicy, class Pointer> void return_temporary_buffer(const detail::execution_policy_base< DerivedPolicy> & system, Pointer p);
# 499 "/usr/local/cuda/include/thrust/memory.h"
template< class Pointer> inline typename detail::pointer_traits< Pointer> ::raw_pointer raw_pointer_cast(const Pointer & ptr);
# 516 "/usr/local/cuda/include/thrust/memory.h"
template< class T> inline typename detail::raw_reference< T> ::type raw_reference_cast(T & ref);
# 533 "/usr/local/cuda/include/thrust/memory.h"
template< class T> inline typename detail::raw_reference< const T> ::type raw_reference_cast(const T & ref);
# 542 "/usr/local/cuda/include/thrust/memory.h"
}
# 26 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
namespace thrust {
# 28 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
template< class T, class System>
# 36 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
class temporary_allocator : public tagged_allocator< T, System, pointer< T, System, use_default, use_default> > {
# 44 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
typedef ::thrust::detail::tagged_allocator< T, System, ::thrust::pointer< T, System, ::thrust::use_default, ::thrust::use_default> > super_t;
# 46 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
System &m_system;
# 49 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
public: typedef typename ::thrust::detail::tagged_allocator< T, System, ::thrust::pointer< T, System, ::thrust::use_default, ::thrust::use_default> > ::pointer pointer;
# 50 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
typedef typename ::thrust::detail::tagged_allocator< T, System, ::thrust::pointer< T, System, ::thrust::use_default, ::thrust::use_default> > ::size_type size_type;
# 53 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
temporary_allocator(const temporary_allocator &other) : super_t(), m_system(other.m_system)
# 56 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
{ }
# 59 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
explicit temporary_allocator(execution_policy< System> &system) : super_t(), m_system(::thrust::detail::derived_cast(system))
# 62 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
{ }
# 65 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
pointer allocate(size_type cnt);
# 68 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
void deallocate(pointer p, size_type n);
# 71 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
System &system()
# 72 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
{
# 73 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
return m_system;
# 74 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
}
# 77 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
private: typedef pair< typename ::thrust::detail::tagged_allocator< T, System, ::thrust::pointer< T, System, ::thrust::use_default, ::thrust::use_default> > ::pointer, typename ::thrust::detail::tagged_allocator< T, System, ::thrust::pointer< T, System, ::thrust::use_default, ::thrust::use_default> > ::size_type> pointer_and_size;
# 78 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
};
# 81 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
}
# 82 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.h"
}
# 66 "/usr/include/assert.h" 3

# 66 "/usr/include/assert.h" 3
extern "C" {
# 69 "/usr/include/assert.h" 3
extern void __assert_fail(const char * __assertion, const char * __file, unsigned __line, const char * __function) throw()
# 71 "/usr/include/assert.h" 3
 __attribute((__noreturn__));
# 74 "/usr/include/assert.h" 3
extern void __assert_perror_fail(int __errnum, const char * __file, unsigned __line, const char * __function) throw()
# 76 "/usr/include/assert.h" 3
 __attribute((__noreturn__));
# 81 "/usr/include/assert.h" 3
extern void __assert(const char * __assertion, const char * __file, int __line) throw()
# 82 "/usr/include/assert.h" 3
 __attribute((__noreturn__));
# 85 "/usr/include/assert.h" 3
}
# 22 "/usr/local/cuda/include/thrust/system/cuda/detail/terminate.h"

# 22 "/usr/local/cuda/include/thrust/system/cuda/detail/terminate.h"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/terminate.h"
namespace system {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/terminate.h"
namespace cuda {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/terminate.h"
namespace detail {
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/terminate.h"
__attribute__((unused)) inline void terminate()
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/terminate.h"
{int volatile ___ = 1;
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/terminate.h"
::exit(___);}
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/terminate.h"
inline void terminate_with_message(const char *message)
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/terminate.h"
{
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/terminate.h"
thrust::system::cuda::detail::bulk_::detail::terminate_with_message(message);
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/terminate.h"
}
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/terminate.h"
}
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/terminate.h"
}
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/terminate.h"
}
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/terminate.h"
}
# 27 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
namespace detail {
# 33 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
template< class T, class System> typename temporary_allocator< T, System> ::pointer
# 37 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
temporary_allocator< T, System> ::allocate(size_type cnt)
# 38 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
{
# 39 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
pointer_and_size result = ::thrust::get_temporary_buffer< T> (system(), cnt);
# 42 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
if ((result.second) < cnt)
# 43 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
{
# 46 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
deallocate((result.first), cnt);
# 49 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
throw ((::thrust::system::detail::bad_alloc)("temporary_buffer::allocate: get_temporary_buffer failed"));
# 53 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
}
# 55 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
return result.first;
# 56 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
}
# 59 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
template< class T, class System> void
# 62 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
temporary_allocator< T, System> ::deallocate(pointer p, size_type n)
# 63 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
{
# 64 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
return ::thrust::return_temporary_buffer(system(), p);
# 65 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
}
# 68 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
}
# 69 "/usr/local/cuda/include/thrust/detail/allocator/temporary_allocator.inl"
}
# 21 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
namespace thrust {
# 23 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
namespace detail {
# 26 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
template< class BaseAllocator>
# 27 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
struct no_throw_allocator : public BaseAllocator {
# 30 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
private: typedef BaseAllocator super_t;
# 34 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
public: no_throw_allocator(const BaseAllocator &other = BaseAllocator()) : super_t(other)
# 36 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
{ }
# 38 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
template< class U>
# 39 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
struct rebind {
# 41 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
typedef ::thrust::detail::no_throw_allocator< typename BaseAllocator::template rebind< U> ::other> other;
# 42 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
};
# 45 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
void deallocate(typename BaseAllocator::pointer p, typename BaseAllocator::size_type n)
# 46 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
{
# 48 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
try
# 49 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
{
# 50 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
super_t::deallocate(p, n);
# 51 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
}
# 52 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
catch (...)
# 53 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
{
# 55 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
}
# 59 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
}
# 62 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
bool operator==(const no_throw_allocator &other) { return BaseAllocator::operator==(other); }
# 65 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
bool operator!=(const no_throw_allocator &other) { return BaseAllocator::operator!=(other); }
# 66 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
};
# 68 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
}
# 69 "/usr/local/cuda/include/thrust/detail/allocator/no_throw_allocator.h"
}
# 31 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
namespace detail {
# 37 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
template< class T, class System>
# 38 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
class temporary_array : public contiguous_storage< T, no_throw_allocator< temporary_allocator< T, System> > > {
# 52 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
typedef ::thrust::detail::contiguous_storage< T, no_throw_allocator< temporary_allocator< T, System> > > super_t;
# 55 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
typedef no_throw_allocator< temporary_allocator< T, System> > alloc_type;
# 58 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
public: typedef typename ::thrust::detail::contiguous_storage< T, no_throw_allocator< temporary_allocator< T, System> > > ::size_type size_type;
# 61 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
temporary_array(execution_policy< System> & system);
# 64 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
temporary_array(execution_policy< System> & system, size_type n);
# 68 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
temporary_array(int uninit, execution_policy< System> & system, size_type n);
# 70 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
template< class InputIterator> temporary_array(execution_policy< System> & system, InputIterator first, size_type n);
# 76 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
template< class InputIterator, class InputSystem> temporary_array(execution_policy< System> & system, execution_policy< InputSystem> & input_system, InputIterator first, size_type n);
# 83 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
template< class InputIterator> temporary_array(execution_policy< System> & system, InputIterator first, InputIterator last);
# 89 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
template< class InputSystem, class InputIterator> temporary_array(execution_policy< System> & system, execution_policy< InputSystem> & input_system, InputIterator first, InputIterator last);
# 97 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
~temporary_array();
# 98 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
};
# 102 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
template< class Iterator, class System>
# 103 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
class tagged_iterator_range {
# 106 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
public: typedef tagged_iterator< Iterator, System> iterator;
# 108 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
template< class Ignored1, class Ignored2>
# 109 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
tagged_iterator_range(const Ignored1 &, const Ignored2 &, Iterator first, Iterator last) : m_begin(first), m_end(last)
# 112 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
{ }
# 114 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
iterator begin() const { return m_begin; }
# 115 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
iterator end() const { return m_end; }
# 118 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
private: iterator m_begin, m_end;
# 119 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
};
# 125 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
template< class Iterator, class FromSystem, class ToSystem>
# 126 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
struct move_to_system_base : public eval_if< is_convertible< FromSystem, ToSystem> ::value, identity_< tagged_iterator_range< Iterator, ToSystem> > , identity_< temporary_array< typename iterator_value< Iterator> ::type, ToSystem> > > {
# 142 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
};
# 145 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
template< class Iterator, class FromSystem, class ToSystem>
# 146 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
class move_to_system : public move_to_system_base< Iterator, FromSystem, ToSystem> ::type {
# 153 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
typedef typename move_to_system_base< Iterator, FromSystem, ToSystem> ::type super_t;
# 156 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
public: move_to_system(execution_policy< FromSystem> &from_system, execution_policy< ToSystem> &
# 157 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
to_system, Iterator
# 158 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
first, Iterator
# 159 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
last) : super_t(to_system, from_system, first, last)
# 160 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
{ }
# 161 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
};
# 164 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
}
# 165 "/usr/local/cuda/include/thrust/detail/temporary_array.h"
}
# 23 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
namespace detail {
# 28 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
namespace temporary_array_detail {
# 32 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
template< class T> struct avoid_initialization : public has_trivial_copy_constructor< T> { };
# 35 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
template< class T, class TemporaryArray, class Size> typename enable_if< avoid_initialization< T> ::value> ::type
# 40 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
construct_values(TemporaryArray &, Size)
# 42 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
{
# 44 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
}
# 47 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
template< class T, class TemporaryArray, class Size> typename disable_if< avoid_initialization< T> ::value> ::type
# 52 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
construct_values(TemporaryArray &a, Size
# 53 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
n)
# 54 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
{
# 55 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
(a.default_construct_n((a.begin()), n));
# 56 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
}
# 59 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
}
# 62 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
template< class T, class System>
# 65 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
temporary_array< T, System> ::temporary_array(execution_policy< System> &system) : super_t(((alloc_type)(((temporary_allocator< T, System> )(system)))))
# 67 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
{
# 68 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
}
# 71 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
template< class T, class System>
# 74 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
temporary_array< T, System> ::temporary_array(execution_policy< System> &system, size_type n) : super_t(n, ((alloc_type)(((temporary_allocator< T, System> )(system)))))
# 76 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
{
# 77 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
::thrust::detail::temporary_array_detail::construct_values< T> (*this, n);
# 78 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
}
# 81 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
template< class T, class System>
# 84 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
temporary_array< T, System> ::temporary_array(int, execution_policy< System> &system, size_type n) : super_t(n, ((alloc_type)(((temporary_allocator< T, System> )(system)))))
# 86 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
{
# 88 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
;
# 89 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
}
# 92 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
template< class T, class System>
# 93 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
template< class InputIterator>
# 96 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
temporary_array< T, System> ::temporary_array(execution_policy< System> &system, InputIterator
# 97 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
first, size_type
# 98 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
n) : super_t(((alloc_type)(((temporary_allocator< T, System> )(system)))))
# 100 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
{
# 101 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
super_t::allocate(n);
# 103 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
super_t::uninitialized_copy_n(system, first, n, super_t::begin());
# 104 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
}
# 107 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
template< class T, class System>
# 108 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
template< class InputIterator, class InputSystem>
# 111 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
temporary_array< T, System> ::temporary_array(execution_policy< System> &system, execution_policy< InputSystem> &
# 112 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
input_system, InputIterator
# 113 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
first, size_type
# 114 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
n) : super_t(((alloc_type)(((temporary_allocator< T, System> )(system)))))
# 116 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
{
# 117 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
super_t::allocate(n);
# 119 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
super_t::uninitialized_copy_n(input_system, first, n, super_t::begin());
# 120 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
}
# 123 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
template< class T, class System>
# 124 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
template< class InputIterator>
# 127 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
temporary_array< T, System> ::temporary_array(execution_policy< System> &system, InputIterator
# 128 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
first, InputIterator
# 129 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
last) : super_t(((alloc_type)(((temporary_allocator< T, System> )(system)))))
# 131 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
{
# 132 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
super_t::allocate(::thrust::distance(first, last));
# 134 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
super_t::uninitialized_copy(system, first, last, super_t::begin());
# 135 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
}
# 138 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
template< class T, class System>
# 139 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
template< class InputSystem, class InputIterator>
# 142 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
temporary_array< T, System> ::temporary_array(execution_policy< System> &system, execution_policy< InputSystem> &
# 143 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
input_system, InputIterator
# 144 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
first, InputIterator
# 145 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
last) : super_t(((alloc_type)(((temporary_allocator< T, System> )(system)))))
# 147 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
{
# 148 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
super_t::allocate(::thrust::distance(first, last));
# 150 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
super_t::uninitialized_copy(input_system, first, last, super_t::begin());
# 151 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
}
# 154 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
template< class T, class System>
# 157 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
temporary_array< T, System> ::~temporary_array()
# 158 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
{
# 160 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
super_t::destroy(super_t::begin(), super_t::end());
# 161 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
}
# 163 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
}
# 165 "/usr/local/cuda/include/thrust/detail/temporary_array.inl"
}
# 20 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
namespace thrust {
# 22 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
namespace system {
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
namespace cuda {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
namespace detail {
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
template< class DerivedPolicy, class
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
RandomAccessIterator1, class
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
Size, class
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
RandomAccessIterator2> void
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
trivial_copy_n(execution_policy< DerivedPolicy> & exec, RandomAccessIterator1 first, Size n, RandomAccessIterator2 result);
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
template< class System1, class
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
System2, class
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
RandomAccessIterator1, class
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
Size, class
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
RandomAccessIterator2> void
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
trivial_copy_n(cross_system< System1, System2> & exec, RandomAccessIterator1 first, Size n, RandomAccessIterator2 result);
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
}
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
}
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
}
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
}
# 20 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
namespace thrust {
# 22 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
namespace system {
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
namespace cuda {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
namespace detail {
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
template< class DerivedPolicy, class
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
RandomAccessIterator1, class
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
Size, class
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
RandomAccessIterator2> void
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
trivial_copy_n(execution_policy< DerivedPolicy> & exec, RandomAccessIterator1 first, Size n, RandomAccessIterator2 result);
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
template< class System1, class
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
System2, class
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
RandomAccessIterator1, class
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
Size, class
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
RandomAccessIterator2> void
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
trivial_copy_n(cross_system< System1, System2> & exec, RandomAccessIterator1 first, Size n, RandomAccessIterator2 result);
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
}
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
}
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
}
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
}
# 22 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.h"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.h"
namespace system {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.h"
namespace cuda {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.h"
namespace detail {
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.h"
inline void synchronize(const char * message = "");
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.h"
inline void synchronize(cudaStream_t stream, const char * message = "");
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.h"
inline void synchronize_if_enabled(const char * message = "");
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.h"
}
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.h"
}
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.h"
}
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.h"
}
# 22 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
namespace system {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
namespace cuda {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
namespace detail {
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
inline void synchronize(const char *message)
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
{
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
throw_on_error(cudaDeviceSynchronize(), message);
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
}
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
inline void synchronize(cudaStream_t stream, const char *message)
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
{
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
throw_on_error(cudaStreamSynchronize(stream), message);
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
}
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
inline void synchronize_if_enabled(const char *message)
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
{
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
(void)message;
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
}
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
}
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
}
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
}
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/synchronize.inl"
}
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
namespace thrust {
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
namespace system {
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
namespace cuda {
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
namespace detail {
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
namespace trivial_copy_detail {
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
inline void checked_cudaMemcpyAsync(void *dst, const void *src, size_t count, cudaMemcpyKind kind, cudaStream_t stream)
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
{
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
cudaError_t error = cudaMemcpyAsync(dst, src, count, kind, stream);
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
if (error)
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
{
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
throw system_error(error, thrust::cuda_category());
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
template< class System1, class
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
System2> cudaMemcpyKind
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
cuda_memcpy_kind(const execution_policy< System1> &, const cpp::detail::execution_policy< System2> &)
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
{
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
return cudaMemcpyDeviceToHost;
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
template< class System1, class
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
System2> cudaMemcpyKind
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
cuda_memcpy_kind(const cpp::detail::execution_policy< System1> &, const execution_policy< System2> &)
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
{
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
return cudaMemcpyHostToDevice;
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
template< class System> cudaMemcpyKind
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
cuda_memcpy_kind(const execution_policy< System> &, const execution_policy< System> &)
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
{
# 81 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
return cudaMemcpyDefault;
# 83 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
namespace _GLOBAL__N__17_test_norm_cpp1_ii_d366c12b { }; using namespace ::thrust::system::cuda::detail::trivial_copy_detail::_GLOBAL__N__17_test_norm_cpp1_ii_d366c12b; namespace _GLOBAL__N__17_test_norm_cpp1_ii_d366c12b {
# 92 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
template< class T> bool
# 93 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
is_valid_policy(const T &t)
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
{
# 95 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
volatile size_t value = (reinterpret_cast< size_t>(&t));
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
if (value)
# 97 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
{
# 98 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
if (value == (0))
# 99 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
{
# 100 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
fprintf(stderr, " clang WAR failed. Terminate.\n");
# 101 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
std::terminate();
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 103 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
return true;
# 104 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 105 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
return false;
# 106 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
template< class System1, class
# 110 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
System2> cudaStream_t
# 111 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
cuda_memcpy_stream(const execution_policy< System1> &exec, const cpp::detail::execution_policy< System2> &)
# 113 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
{
# 114 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
if (is_valid_policy(exec)) {
# 115 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
return stream(derived_cast(exec)); }
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
return legacy_stream();
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 119 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
template< class System1, class
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
System2> cudaStream_t
# 121 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
cuda_memcpy_stream(const cpp::detail::execution_policy< System1> &, const execution_policy< System2> &
# 122 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
exec)
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
{
# 124 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
if (is_valid_policy(exec)) {
# 125 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
return stream(derived_cast(exec)); }
# 126 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
return legacy_stream();
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 130 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
template< class System> cudaStream_t
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
cuda_memcpy_stream(const execution_policy< System> &, const execution_policy< System> &
# 132 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
exec)
# 133 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
{
# 134 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
if (is_valid_policy(exec)) {
# 135 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
return stream(derived_cast(exec)); }
# 136 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
return legacy_stream();
# 137 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
template< class System> cudaStream_t
# 142 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
cuda_memcpy_stream(const execute_on_stream &exec, const execution_policy< System> &)
# 144 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
{
# 145 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
if (is_valid_policy(exec)) {
# 146 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
return stream(exec); }
# 147 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
return legacy_stream();
# 148 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 154 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 157 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
template< class DerivedPolicy, class
# 158 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
RandomAccessIterator1, class
# 159 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
Size, class
# 160 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
RandomAccessIterator2> void
# 162 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
trivial_copy_n(execution_policy< DerivedPolicy> &exec, RandomAccessIterator1
# 163 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
first, Size
# 164 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
n, RandomAccessIterator2
# 165 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
result)
# 166 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
{
# 167 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
typedef typename iterator_value< RandomAccessIterator1> ::type T;
# 170 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
void *dst = thrust::raw_pointer_cast(&(*result));
# 171 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
const void *src = thrust::raw_pointer_cast(&(*first));
# 178 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
cudaMemcpyKind kind = trivial_copy_detail::cuda_memcpy_kind(thrust::detail::derived_cast(exec), thrust::detail::derived_cast(exec));
# 179 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
trivial_copy_detail::checked_cudaMemcpyAsync(dst, src, n * sizeof(T), kind, stream(thrust::detail::derived_cast(exec)));
# 183 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 186 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
template< class System1, class
# 187 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
System2, class
# 188 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
RandomAccessIterator1, class
# 189 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
Size, class
# 190 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
RandomAccessIterator2> void
# 191 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
trivial_copy_n(cross_system< System1, System2> &systems, RandomAccessIterator1
# 192 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
first, Size
# 193 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
n, RandomAccessIterator2
# 194 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
result)
# 195 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
{
# 196 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
typedef typename iterator_value< RandomAccessIterator1> ::type T;
# 198 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
void *dst = thrust::raw_pointer_cast(&(*result));
# 199 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
const void *src = thrust::raw_pointer_cast(&(*first));
# 201 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
cudaMemcpyKind kind = trivial_copy_detail::cuda_memcpy_kind(thrust::detail::derived_cast((systems.system1)), thrust::detail::derived_cast((systems.system2)));
# 205 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
cudaStream_t s = trivial_copy_detail::cuda_memcpy_stream(derived_cast((systems.system1)), derived_cast((systems.system2)));
# 206 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
trivial_copy_detail::checked_cudaMemcpyAsync(dst, src, n * sizeof(T), kind, s);
# 207 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
synchronize(s, "failed synchronize in thrust::system::cuda::detail::trivial_copy_n");
# 208 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 211 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 212 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 213 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 214 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.inl"
}
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
namespace thrust {
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
namespace detail {
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
template< class , class > class temporary_array;
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
}
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
namespace system {
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
namespace cuda {
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
namespace detail {
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
template< class System1, class
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
System2, class
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
InputIterator, class
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
RandomAccessIterator> RandomAccessIterator
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
copy_cross_system(cross_system< System1, System2> systems, InputIterator
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
begin, InputIterator
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
end, RandomAccessIterator
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
result, incrementable_traversal_tag, random_access_traversal_tag)
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
{
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
typedef typename iterator_value< InputIterator> ::type InputType;
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
thrust::detail::temporary_array< typename iterator_value< InputIterator> ::type, System1> temp((systems.system1), begin, end);
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
return thrust::copy(systems, (temp.begin()), (temp.end()), result);
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
}
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
template< class System1, class
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
System2, class
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
InputIterator, class
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
Size, class
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
RandomAccessIterator> RandomAccessIterator
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
copy_cross_system_n(cross_system< System1, System2> systems, InputIterator
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
first, Size
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
n, RandomAccessIterator
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
result, incrementable_traversal_tag, random_access_traversal_tag)
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
{
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
typedef typename iterator_value< InputIterator> ::type InputType;
# 81 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
thrust::detail::temporary_array< typename iterator_value< InputIterator> ::type, System1> temp((systems.system1), first, n);
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
return copy_cross_system(systems, (temp.begin()), (temp.end()), result);
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
}
# 89 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
template< class System1, class
# 90 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
System2, class
# 91 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
RandomAccessIterator, class
# 92 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
OutputIterator> OutputIterator
# 93 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
copy_cross_system(cross_system< System1, System2> systems, RandomAccessIterator
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
begin, RandomAccessIterator
# 95 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
end, OutputIterator
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
result, random_access_traversal_tag, incrementable_traversal_tag)
# 99 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
{
# 100 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
typedef typename iterator_value< RandomAccessIterator> ::type InputType;
# 103 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
thrust::detail::temporary_array< typename iterator_value< RandomAccessIterator> ::type, System2> temp((systems.system2), (systems.system1), begin, end);
# 105 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
return thrust::copy((systems.system2), (temp.begin()), (temp.end()), result);
# 106 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
}
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
template< class System1, class
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
System2, class
# 110 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
RandomAccessIterator, class
# 111 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
Size, class
# 112 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
OutputIterator> OutputIterator
# 113 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
copy_cross_system_n(cross_system< System1, System2> systems, RandomAccessIterator
# 114 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
first, Size
# 115 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
n, OutputIterator
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
result, random_access_traversal_tag, incrementable_traversal_tag)
# 119 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
{
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
typedef typename iterator_value< RandomAccessIterator> ::type InputType;
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
thrust::detail::temporary_array< typename iterator_value< RandomAccessIterator> ::type, System2> temp((systems.system2), (systems.system1), first, n);
# 126 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
return thrust::copy((systems.system2), (temp.begin()), (temp.end()), result);
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
}
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
template< class System1, class
# 132 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
System2, class
# 133 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
RandomAccessIterator1, class
# 134 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
RandomAccessIterator2> RandomAccessIterator2
# 135 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
copy_cross_system(cross_system< System1, System2> systems, RandomAccessIterator1
# 136 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
begin, RandomAccessIterator1
# 137 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
end, RandomAccessIterator2
# 138 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
result, random_access_traversal_tag, random_access_traversal_tag, thrust::detail::true_type)
# 142 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
{
# 149 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
typename iterator_traits< RandomAccessIterator1> ::difference_type n = end - begin;
# 151 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
cuda::detail::trivial_copy_n(systems, begin, n, result);
# 153 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
return result + n;
# 154 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
}
# 157 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
namespace detail {
# 161 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
template< class System1, class
# 162 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
System2, class
# 163 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
RandomAccessIterator1, class
# 164 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
RandomAccessIterator2> RandomAccessIterator2
# 165 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
non_trivial_random_access_copy_cross_system(cross_system< System1, System2> systems, RandomAccessIterator1
# 166 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
begin, RandomAccessIterator1
# 167 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
end, RandomAccessIterator2
# 168 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
result, thrust::detail::false_type)
# 170 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
{
# 172 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
typedef typename iterator_value< RandomAccessIterator2> ::type OutputType;
# 175 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
thrust::detail::temporary_array< typename iterator_value< RandomAccessIterator2> ::type, System1> temp((systems.system1), begin, end);
# 178 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
return copy_cross_system(systems, (temp.begin()), (temp.end()), result);
# 179 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
}
# 181 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
template< class System1, class
# 182 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
System2, class
# 183 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
RandomAccessIterator1, class
# 184 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
RandomAccessIterator2> RandomAccessIterator2
# 185 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
non_trivial_random_access_copy_cross_system(cross_system< System1, System2> systems, RandomAccessIterator1
# 186 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
begin, RandomAccessIterator1
# 187 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
end, RandomAccessIterator2
# 188 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
result, thrust::detail::true_type)
# 190 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
{
# 191 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
typename iterator_difference< RandomAccessIterator1> ::type n = thrust::distance(begin, end);
# 196 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
typedef typename iterator_value< RandomAccessIterator1> ::type InputType;
# 197 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
thrust::detail::temporary_array< typename iterator_value< RandomAccessIterator1> ::type, System2> temp(0, (systems.system2), n);
# 204 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
cuda::detail::trivial_copy_n(systems, begin, n, (temp.begin()));
# 207 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
return thrust::copy((systems.system2), (temp.begin()), (temp.end()), result);
# 208 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
}
# 210 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
}
# 214 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
template< class System1, class
# 215 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
System2, class
# 216 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
RandomAccessIterator1, class
# 217 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
RandomAccessIterator2> RandomAccessIterator2
# 218 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
copy_cross_system(cross_system< System1, System2> systems, RandomAccessIterator1
# 219 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
begin, RandomAccessIterator1
# 220 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
end, RandomAccessIterator2
# 221 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
result, random_access_traversal_tag, random_access_traversal_tag, thrust::detail::false_type)
# 225 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
{
# 227 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
return detail::non_trivial_random_access_copy_cross_system(systems, begin, end, result, typename thrust::detail::is_trivial_iterator< RandomAccessIterator1> ::type());
# 229 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
}
# 232 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
template< class System1, class
# 233 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
System2, class
# 234 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
RandomAccessIterator1, class
# 235 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
RandomAccessIterator2> RandomAccessIterator2
# 236 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
copy_cross_system(cross_system< System1, System2> systems, RandomAccessIterator1
# 237 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
begin, RandomAccessIterator1
# 238 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
end, RandomAccessIterator2
# 239 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
result, random_access_traversal_tag
# 240 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
input_traversal, random_access_traversal_tag
# 241 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
output_traversal)
# 242 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
{
# 244 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
return copy_cross_system(systems, begin, end, result, input_traversal, output_traversal, typename thrust::detail::dispatch::is_trivial_copy< RandomAccessIterator1, RandomAccessIterator2> ::type());
# 246 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
}
# 248 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
template< class System1, class
# 249 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
System2, class
# 250 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
RandomAccessIterator1, class
# 251 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
Size, class
# 252 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
RandomAccessIterator2> RandomAccessIterator2
# 253 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
copy_cross_system_n(cross_system< System1, System2> systems, RandomAccessIterator1
# 254 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
first, Size
# 255 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
n, RandomAccessIterator2
# 256 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
result, random_access_traversal_tag
# 257 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
input_traversal, random_access_traversal_tag
# 258 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
output_traversal)
# 259 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
{
# 261 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
return copy_cross_system(systems, first, first + n, result, input_traversal, output_traversal);
# 262 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
}
# 268 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
template< class System1, class
# 269 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
System2, class
# 270 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
InputIterator, class
# 271 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
OutputIterator> OutputIterator
# 272 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
copy_cross_system(cross_system< System1, System2> systems, InputIterator
# 273 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
begin, InputIterator
# 274 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
end, OutputIterator
# 275 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
result)
# 276 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
{
# 277 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
return copy_cross_system(systems, begin, end, result, typename iterator_traversal< InputIterator> ::type(), typename iterator_traversal< OutputIterator> ::type());
# 280 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
}
# 282 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
template< class System1, class
# 283 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
System2, class
# 284 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
InputIterator, class
# 285 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
Size, class
# 286 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
OutputIterator> OutputIterator
# 287 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
copy_cross_system_n(cross_system< System1, System2> systems, InputIterator
# 288 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
begin, Size
# 289 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
n, OutputIterator
# 290 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
result)
# 291 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
{
# 292 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
return copy_cross_system_n(systems, begin, n, result, typename iterator_traversal< InputIterator> ::type(), typename iterator_traversal< OutputIterator> ::type());
# 295 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
}
# 297 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
}
# 298 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
}
# 299 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
}
# 300 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_cross_system.inl"
}
# 20 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
namespace thrust {
# 22 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
namespace system {
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
namespace cuda {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
namespace detail {
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
template< class DerivedPolicy, class
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
RandomAccessIterator1, class
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
Size, class
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
RandomAccessIterator2> void
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
trivial_copy_n(execution_policy< DerivedPolicy> & exec, RandomAccessIterator1 first, Size n, RandomAccessIterator2 result);
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
template< class System1, class
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
System2, class
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
RandomAccessIterator1, class
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
Size, class
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
RandomAccessIterator2> void
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
trivial_copy_n(cross_system< System1, System2> & exec, RandomAccessIterator1 first, Size n, RandomAccessIterator2 result);
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
}
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
}
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
}
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/trivial_copy.h"
}
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
namespace thrust {
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
namespace system {
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
namespace cuda {
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
namespace detail {
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
namespace detail {
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
template< class DerivedPolicy, class
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
InputIterator, class
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
OutputIterator> OutputIterator
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
copy_device_to_device(execution_policy< DerivedPolicy> &exec, InputIterator
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
begin, InputIterator
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
end, OutputIterator
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
result, thrust::detail::false_type)
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
{
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
typedef typename iterator_traits< InputIterator> ::value_type InputType;
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
return thrust::transform(exec, begin, end, result, identity< typename iterator_traits< InputIterator> ::value_type> ());
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
}
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
template< class DerivedPolicy, class
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
InputIterator, class
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
OutputIterator> OutputIterator
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
copy_device_to_device(execution_policy< DerivedPolicy> &exec, InputIterator
# 80 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
begin, InputIterator
# 81 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
end, OutputIterator
# 82 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
result, thrust::detail::true_type)
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
{
# 89 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
typename iterator_traits< OutputIterator> ::difference_type n = end - begin;
# 91 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
cuda::detail::trivial_copy_n(exec, begin, n, result);
# 93 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
return result + n;
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
}
# 97 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
}
# 105 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
template< class DerivedPolicy, class
# 106 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
InputIterator, class
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
OutputIterator> OutputIterator
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
copy_device_to_device(execution_policy< DerivedPolicy> &exec, InputIterator
# 110 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
begin, InputIterator
# 111 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
end, OutputIterator
# 112 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
result)
# 113 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
{
# 114 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
typedef typename iterator_traits< InputIterator> ::value_type InputType;
# 115 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
typedef typename iterator_traits< OutputIterator> ::value_type OutputType;
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
const bool use_trivial_copy = (thrust::detail::is_same< typename iterator_traits< InputIterator> ::value_type, typename iterator_traits< OutputIterator> ::value_type> ::value && thrust::detail::is_trivial_iterator< InputIterator> ::value && thrust::detail::is_trivial_iterator< OutputIterator> ::value);
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
(void)use_trivial_copy;
# 125 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
return detail::copy_device_to_device(exec, begin, end, result, thrust::detail::integral_constant< bool, use_trivial_copy> ());
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
}
# 130 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
}
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
}
# 132 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
}
# 133 "/usr/local/cuda/include/thrust/system/cuda/detail/copy_device_to_device.inl"
}
# 22 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
namespace system {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
namespace cuda {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
namespace detail {
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
template< class System, class
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
InputIterator, class
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
OutputIterator> OutputIterator
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
copy(execution_policy< System> &system, InputIterator
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
first, InputIterator
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
last, OutputIterator
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
result)
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
{
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
return cuda::detail::copy_device_to_device(system, first, last, result);
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
}
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
template< class System1, class
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
System2, class
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
InputIterator, class
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
OutputIterator> OutputIterator
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
copy(cross_system< System1, System2> systems, InputIterator
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
first, InputIterator
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
last, OutputIterator
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
result)
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
{
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
return cuda::detail::copy_cross_system(systems, first, last, result);
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
}
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
template< class System, class
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
InputIterator, class
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
Size, class
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
OutputIterator> OutputIterator
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
copy_n(execution_policy< System> &system, InputIterator
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
first, Size
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
n, OutputIterator
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
result)
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
{
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
return cuda::detail::copy_device_to_device(system, first, first + n, result);
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
}
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
template< class System1, class
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
System2, class
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
InputIterator, class
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
Size, class
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
OutputIterator> OutputIterator
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
copy_n(cross_system< System1, System2> systems, InputIterator
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
first, Size
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
n, OutputIterator
# 80 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
result)
# 81 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
{
# 82 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
return cuda::detail::copy_cross_system_n(systems, first, n, result);
# 83 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
}
# 86 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
}
# 87 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
}
# 88 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
}
# 89 "/usr/local/cuda/include/thrust/system/cuda/detail/copy.inl"
}
# 24 "/usr/local/cuda/include/thrust/detail/copy.inl"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/detail/copy.inl"
template< class DerivedPolicy, class InputIterator, class OutputIterator> OutputIterator
# 31 "/usr/local/cuda/include/thrust/detail/copy.inl"
copy(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 32 "/usr/local/cuda/include/thrust/detail/copy.inl"
first, InputIterator
# 33 "/usr/local/cuda/include/thrust/detail/copy.inl"
last, OutputIterator
# 34 "/usr/local/cuda/include/thrust/detail/copy.inl"
result)
# 35 "/usr/local/cuda/include/thrust/detail/copy.inl"
{
# 36 "/usr/local/cuda/include/thrust/detail/copy.inl"
using system::detail::generic::copy;
# 37 "/usr/local/cuda/include/thrust/detail/copy.inl"
return copy(detail::derived_cast(detail::strip_const(exec)), first, last, result);
# 38 "/usr/local/cuda/include/thrust/detail/copy.inl"
}
# 42 "/usr/local/cuda/include/thrust/detail/copy.inl"
template< class DerivedPolicy, class InputIterator, class Size, class OutputIterator> OutputIterator
# 44 "/usr/local/cuda/include/thrust/detail/copy.inl"
copy_n(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 45 "/usr/local/cuda/include/thrust/detail/copy.inl"
first, Size
# 46 "/usr/local/cuda/include/thrust/detail/copy.inl"
n, OutputIterator
# 47 "/usr/local/cuda/include/thrust/detail/copy.inl"
result)
# 48 "/usr/local/cuda/include/thrust/detail/copy.inl"
{
# 49 "/usr/local/cuda/include/thrust/detail/copy.inl"
using system::detail::generic::copy_n;
# 50 "/usr/local/cuda/include/thrust/detail/copy.inl"
return copy_n(detail::derived_cast(detail::strip_const(exec)), first, n, result);
# 51 "/usr/local/cuda/include/thrust/detail/copy.inl"
}
# 54 "/usr/local/cuda/include/thrust/detail/copy.inl"
namespace detail {
# 59 "/usr/local/cuda/include/thrust/detail/copy.inl"
template< class System1, class
# 60 "/usr/local/cuda/include/thrust/detail/copy.inl"
System2, class
# 61 "/usr/local/cuda/include/thrust/detail/copy.inl"
InputIterator, class
# 62 "/usr/local/cuda/include/thrust/detail/copy.inl"
OutputIterator> OutputIterator
# 64 "/usr/local/cuda/include/thrust/detail/copy.inl"
two_system_copy(const execution_policy< System1> &system1, const execution_policy< System2> &
# 65 "/usr/local/cuda/include/thrust/detail/copy.inl"
system2, InputIterator
# 66 "/usr/local/cuda/include/thrust/detail/copy.inl"
first, InputIterator
# 67 "/usr/local/cuda/include/thrust/detail/copy.inl"
last, OutputIterator
# 68 "/usr/local/cuda/include/thrust/detail/copy.inl"
result)
# 69 "/usr/local/cuda/include/thrust/detail/copy.inl"
{
# 70 "/usr/local/cuda/include/thrust/detail/copy.inl"
using system::detail::generic::select_system;
# 72 "/usr/local/cuda/include/thrust/detail/copy.inl"
return thrust::copy(select_system(detail::derived_cast(detail::strip_const(system1)), detail::derived_cast(detail::strip_const(system2))), first, last, result);
# 73 "/usr/local/cuda/include/thrust/detail/copy.inl"
}
# 77 "/usr/local/cuda/include/thrust/detail/copy.inl"
template< class System1, class
# 78 "/usr/local/cuda/include/thrust/detail/copy.inl"
System2, class
# 79 "/usr/local/cuda/include/thrust/detail/copy.inl"
InputIterator, class
# 80 "/usr/local/cuda/include/thrust/detail/copy.inl"
Size, class
# 81 "/usr/local/cuda/include/thrust/detail/copy.inl"
OutputIterator> OutputIterator
# 83 "/usr/local/cuda/include/thrust/detail/copy.inl"
two_system_copy_n(const execution_policy< System1> &system1, const execution_policy< System2> &
# 84 "/usr/local/cuda/include/thrust/detail/copy.inl"
system2, InputIterator
# 85 "/usr/local/cuda/include/thrust/detail/copy.inl"
first, Size
# 86 "/usr/local/cuda/include/thrust/detail/copy.inl"
n, OutputIterator
# 87 "/usr/local/cuda/include/thrust/detail/copy.inl"
result)
# 88 "/usr/local/cuda/include/thrust/detail/copy.inl"
{
# 89 "/usr/local/cuda/include/thrust/detail/copy.inl"
using system::detail::generic::select_system;
# 91 "/usr/local/cuda/include/thrust/detail/copy.inl"
return thrust::copy_n(select_system(detail::derived_cast(detail::strip_const(system1)), detail::derived_cast(detail::strip_const(system2))), first, n, result);
# 92 "/usr/local/cuda/include/thrust/detail/copy.inl"
}
# 95 "/usr/local/cuda/include/thrust/detail/copy.inl"
}
# 98 "/usr/local/cuda/include/thrust/detail/copy.inl"
template< class InputIterator, class
# 99 "/usr/local/cuda/include/thrust/detail/copy.inl"
OutputIterator> OutputIterator
# 100 "/usr/local/cuda/include/thrust/detail/copy.inl"
copy(InputIterator first, InputIterator
# 101 "/usr/local/cuda/include/thrust/detail/copy.inl"
last, OutputIterator
# 102 "/usr/local/cuda/include/thrust/detail/copy.inl"
result)
# 103 "/usr/local/cuda/include/thrust/detail/copy.inl"
{
# 104 "/usr/local/cuda/include/thrust/detail/copy.inl"
typedef typename iterator_system< InputIterator> ::type System1;
# 105 "/usr/local/cuda/include/thrust/detail/copy.inl"
typedef typename iterator_system< OutputIterator> ::type System2;
# 107 "/usr/local/cuda/include/thrust/detail/copy.inl"
System1 system1;
# 108 "/usr/local/cuda/include/thrust/detail/copy.inl"
System2 system2;
# 110 "/usr/local/cuda/include/thrust/detail/copy.inl"
return detail::two_system_copy(system1, system2, first, last, result);
# 111 "/usr/local/cuda/include/thrust/detail/copy.inl"
}
# 114 "/usr/local/cuda/include/thrust/detail/copy.inl"
template< class InputIterator, class
# 115 "/usr/local/cuda/include/thrust/detail/copy.inl"
Size, class
# 116 "/usr/local/cuda/include/thrust/detail/copy.inl"
OutputIterator> OutputIterator
# 117 "/usr/local/cuda/include/thrust/detail/copy.inl"
copy_n(InputIterator first, Size
# 118 "/usr/local/cuda/include/thrust/detail/copy.inl"
n, OutputIterator
# 119 "/usr/local/cuda/include/thrust/detail/copy.inl"
result)
# 120 "/usr/local/cuda/include/thrust/detail/copy.inl"
{
# 121 "/usr/local/cuda/include/thrust/detail/copy.inl"
typedef typename iterator_system< InputIterator> ::type System1;
# 122 "/usr/local/cuda/include/thrust/detail/copy.inl"
typedef typename iterator_system< OutputIterator> ::type System2;
# 124 "/usr/local/cuda/include/thrust/detail/copy.inl"
System1 system1;
# 125 "/usr/local/cuda/include/thrust/detail/copy.inl"
System2 system2;
# 127 "/usr/local/cuda/include/thrust/detail/copy.inl"
return detail::two_system_copy_n(system1, system2, first, n, result);
# 128 "/usr/local/cuda/include/thrust/detail/copy.inl"
}
# 131 "/usr/local/cuda/include/thrust/detail/copy.inl"
}
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
namespace system {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
namespace cuda {
# 30 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
namespace detail {
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
template< class DerivedPolicy, class Pointer1, class Pointer2> inline void
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
assign_value(execution_policy< DerivedPolicy> &exec, Pointer1 dst, Pointer2 src)
# 80 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
{
# 82 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
struct war_nvbugs_881631 {
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
static void host_path(execution_policy< DerivedPolicy> &exec, Pointer1 dst, Pointer2 src)
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
{
# 86 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
thrust::copy(exec, src, src + 1, dst);
# 87 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
}
# 89 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
static void device_path(execution_policy< DerivedPolicy> &, Pointer1 dst, Pointer2 src)
# 90 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
{int volatile ___ = 1;(void)dst;(void)src;
# 92 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
::exit(___);}
# 93 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
};
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
(war_nvbugs_881631::host_path)(exec, dst, src);
# 100 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
}
# 159 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
template< class System1, class System2, class Pointer1, class Pointer2> inline void
# 161 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
assign_value(cross_system< System1, System2> &systems, Pointer1 dst, Pointer2 src)
# 162 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
{
# 164 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
struct war_nvbugs_881631 {
# 166 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
static void host_path(cross_system< System1, System2> &systems, Pointer1 dst, Pointer2 src)
# 167 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
{
# 170 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
cross_system< System2, System1> rotated_systems = (systems.rotate());
# 171 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
thrust::copy(rotated_systems, src, src + 1, dst);
# 172 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
}
# 174 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
static void device_path(cross_system< System1, System2> &systems, Pointer1 dst, Pointer2 src)
# 175 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
{int volatile ___ = 1;(void)systems;(void)dst;(void)src;
# 180 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
::exit(___);}
# 181 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
};
# 186 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
(war_nvbugs_881631::host_path)(systems, dst, src);
# 188 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
}
# 194 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
}
# 195 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
}
# 196 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
}
# 197 "/usr/local/cuda/include/thrust/system/cuda/detail/assign_value.h"
}
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
namespace thrust {
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
namespace system {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
namespace cuda {
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
namespace detail {
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
namespace _GLOBAL__N__17_test_norm_cpp1_ii_d366c12b { }; using namespace ::thrust::system::cuda::detail::_GLOBAL__N__17_test_norm_cpp1_ii_d366c12b; namespace _GLOBAL__N__17_test_norm_cpp1_ii_d366c12b {
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
template< class DerivedPolicy, class Pointer> inline typename iterator_value< Pointer> ::type
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
get_value_msvc2005_war(execution_policy< DerivedPolicy> &exec, Pointer ptr)
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
{
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
typedef typename iterator_value< Pointer> ::type result_type;
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
struct war_nvbugs_881631 {
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
static result_type host_path(execution_policy< DerivedPolicy> &exec, Pointer ptr)
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
{
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
result_type result;
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
host_system_tag host_tag;
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
cross_system< cpp::detail::tag, DerivedPolicy> systems(host_tag, exec);
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
assign_value(systems, &result, ptr);
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
return result;
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
}
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
static result_type device_path(execution_policy< DerivedPolicy> &, Pointer ptr)
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
{int volatile ___ = 1;(void)ptr;
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
::exit(___);}
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
};
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
return (war_nvbugs_881631::host_path)(exec, ptr);
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
}
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
}
# 80 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
template< class DerivedPolicy, class Pointer> inline typename iterator_value< Pointer> ::type
# 83 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
get_value(execution_policy< DerivedPolicy> &exec, Pointer ptr)
# 84 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
{
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
return get_value_msvc2005_war(exec, ptr);
# 86 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
}
# 89 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
}
# 90 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
}
# 91 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
}
# 92 "/usr/local/cuda/include/thrust/system/cuda/detail/get_value.h"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/sequential/assign_value.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/sequential/assign_value.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/sequential/assign_value.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/sequential/assign_value.h"
namespace sequential {
# 32 "/usr/local/cuda/include/thrust/system/detail/sequential/assign_value.h"
template< class DerivedPolicy, class Pointer1, class Pointer2> void
# 34 "/usr/local/cuda/include/thrust/system/detail/sequential/assign_value.h"
assign_value(execution_policy< DerivedPolicy> &, Pointer1 dst, Pointer2 src)
# 35 "/usr/local/cuda/include/thrust/system/detail/sequential/assign_value.h"
{
# 36 "/usr/local/cuda/include/thrust/system/detail/sequential/assign_value.h"
(*thrust::raw_pointer_cast(dst)) = (*thrust::raw_pointer_cast(src));
# 37 "/usr/local/cuda/include/thrust/system/detail/sequential/assign_value.h"
}
# 39 "/usr/local/cuda/include/thrust/system/detail/sequential/assign_value.h"
}
# 40 "/usr/local/cuda/include/thrust/system/detail/sequential/assign_value.h"
}
# 41 "/usr/local/cuda/include/thrust/system/detail/sequential/assign_value.h"
}
# 42 "/usr/local/cuda/include/thrust/system/detail/sequential/assign_value.h"
}
# 24 "/usr/local/cuda/include/thrust/system/detail/sequential/iter_swap.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/system/detail/sequential/iter_swap.h"
namespace system {
# 28 "/usr/local/cuda/include/thrust/system/detail/sequential/iter_swap.h"
namespace detail {
# 30 "/usr/local/cuda/include/thrust/system/detail/sequential/iter_swap.h"
namespace sequential {
# 34 "/usr/local/cuda/include/thrust/system/detail/sequential/iter_swap.h"
template< class Pointer1, class Pointer2> void
# 36 "/usr/local/cuda/include/thrust/system/detail/sequential/iter_swap.h"
iter_swap(tag, Pointer1 a, Pointer2 b)
# 37 "/usr/local/cuda/include/thrust/system/detail/sequential/iter_swap.h"
{
# 38 "/usr/local/cuda/include/thrust/system/detail/sequential/iter_swap.h"
using thrust::swap;
# 39 "/usr/local/cuda/include/thrust/system/detail/sequential/iter_swap.h"
swap(*thrust::raw_pointer_cast(a), *thrust::raw_pointer_cast(b));
# 40 "/usr/local/cuda/include/thrust/system/detail/sequential/iter_swap.h"
}
# 43 "/usr/local/cuda/include/thrust/system/detail/sequential/iter_swap.h"
}
# 44 "/usr/local/cuda/include/thrust/system/detail/sequential/iter_swap.h"
}
# 45 "/usr/local/cuda/include/thrust/system/detail/sequential/iter_swap.h"
}
# 46 "/usr/local/cuda/include/thrust/system/detail/sequential/iter_swap.h"
}
# 30 "/usr/local/cuda/include/thrust/swap.h"
namespace thrust {
# 65 "/usr/local/cuda/include/thrust/swap.h"
template< class Assignable1, class Assignable2> inline void swap(Assignable1 & a, Assignable2 & b);
# 127 "/usr/local/cuda/include/thrust/swap.h"
template< class DerivedPolicy, class
# 128 "/usr/local/cuda/include/thrust/swap.h"
ForwardIterator1, class
# 129 "/usr/local/cuda/include/thrust/swap.h"
ForwardIterator2> ForwardIterator2
# 127 "/usr/local/cuda/include/thrust/swap.h"
swap_ranges(const detail::execution_policy_base< DerivedPolicy> & exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2);
# 177 "/usr/local/cuda/include/thrust/swap.h"
template< class ForwardIterator1, class
# 178 "/usr/local/cuda/include/thrust/swap.h"
ForwardIterator2> ForwardIterator2
# 177 "/usr/local/cuda/include/thrust/swap.h"
swap_ranges(ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2);
# 188 "/usr/local/cuda/include/thrust/swap.h"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.h"
namespace generic {
# 32 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.h"
template< class DerivedPolicy, class
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.h"
ForwardIterator1, class
# 34 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.h"
ForwardIterator2> ForwardIterator2
# 32 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.h"
swap_ranges(execution_policy< DerivedPolicy> & exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2);
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.h"
}
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.h"
}
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.h"
}
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.h"
}
# 24 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
namespace system {
# 28 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
namespace detail {
# 30 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
namespace generic {
# 32 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
namespace detail {
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
struct swap_pair_elements {
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
template< class Tuple> void
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
operator()(Tuple t)
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
{
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
using thrust::swap;
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
swap(thrust::get< 0> (t), thrust::get< 1> (t));
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
}
# 48 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
};
# 51 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
}
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
template< class DerivedPolicy, class
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
ForwardIterator1, class
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
ForwardIterator2> ForwardIterator2
# 58 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
swap_ranges(execution_policy< DerivedPolicy> &exec, ForwardIterator1
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
first1, ForwardIterator1
# 60 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
last1, ForwardIterator2
# 61 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
first2)
# 62 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
{
# 63 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
typedef tuple< ForwardIterator1, ForwardIterator2, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> IteratorTuple;
# 64 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
typedef zip_iterator< tuple< ForwardIterator1, ForwardIterator2, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > ZipIterator;
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
ZipIterator result = thrust::for_each(exec, thrust::make_zip_iterator(thrust::make_tuple(first1, first2)), thrust::make_zip_iterator(thrust::make_tuple(last1, first2)), detail::swap_pair_elements());
# 70 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
return thrust::get< 1> ((result.get_iterator_tuple()));
# 71 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
}
# 74 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
}
# 75 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
}
# 76 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
}
# 77 "/usr/local/cuda/include/thrust/system/detail/generic/swap_ranges.inl"
}
# 28 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
template< class DerivedPolicy, class
# 34 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
ForwardIterator1, class
# 35 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
ForwardIterator2> ForwardIterator2
# 37 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
swap_ranges(const detail::execution_policy_base< DerivedPolicy> &exec, ForwardIterator1
# 38 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
first1, ForwardIterator1
# 39 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
last1, ForwardIterator2
# 40 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
first2)
# 41 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
{
# 42 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
using system::detail::generic::swap_ranges;
# 43 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
return swap_ranges(detail::derived_cast(detail::strip_const(exec)), first1, last1, first2);
# 44 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
}
# 47 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
template< class ForwardIterator1, class
# 48 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
ForwardIterator2> ForwardIterator2
# 49 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
swap_ranges(ForwardIterator1 first1, ForwardIterator1
# 50 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
last1, ForwardIterator2
# 51 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
first2)
# 52 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
{
# 53 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
using system::detail::generic::select_system;
# 55 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
typedef typename iterator_system< ForwardIterator1> ::type System1;
# 56 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
typedef typename iterator_system< ForwardIterator2> ::type System2;
# 58 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
System1 system1;
# 59 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
System2 system2;
# 61 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
return thrust::swap_ranges(select_system(system1, system2), first1, last1, first2);
# 62 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
}
# 65 "/usr/local/cuda/include/thrust/detail/swap_ranges.inl"
}
# 23 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
namespace cuda {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
namespace detail {
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
template< class Pointer1, class Pointer2> inline void
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
iter_swap(tag, Pointer1 a, Pointer2 b)
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
{
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
struct war_nvbugs_881631 {
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
static void host_path(Pointer1 a, Pointer2 b)
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
{
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
thrust::swap_ranges(a, a + 1, b);
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
}
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
static void device_path(Pointer1 a, Pointer2 b)
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
{int volatile ___ = 1;(void)a;(void)b;
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
::exit(___);}
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
};
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
return (war_nvbugs_881631::host_path)(a, b);
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
}
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
}
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
}
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
}
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/iter_swap.h"
}
# 28 "/usr/local/cuda/include/thrust/detail/reference.inl"
namespace thrust {
# 32 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived>
# 33 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class OtherElement, class OtherPointer, class OtherDerived>
# 35 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::reference(const thrust::reference< OtherElement, OtherPointer, OtherDerived> &other, typename detail::enable_if_convertible< typename thrust::reference< OtherElement, OtherPointer, OtherDerived> ::pointer, Pointer> ::type *) : m_ptr((other.m_ptr))
# 41 "/usr/local/cuda/include/thrust/detail/reference.inl"
{ }
# 44 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived>
# 46 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::reference(const pointer &ptr) : m_ptr(ptr)
# 48 "/usr/local/cuda/include/thrust/detail/reference.inl"
{ }
# 51 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived> typename reference< Element, Pointer, Derived> ::pointer
# 54 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator&() const
# 55 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 56 "/usr/local/cuda/include/thrust/detail/reference.inl"
return m_ptr;
# 57 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 60 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived> typename reference< Element, Pointer, Derived> ::derived_type &
# 63 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator=(const value_type &v)
# 64 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 65 "/usr/local/cuda/include/thrust/detail/reference.inl"
assign_from(&v);
# 66 "/usr/local/cuda/include/thrust/detail/reference.inl"
return static_cast< derived_type &>(*this);
# 67 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 70 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived> typename reference< Element, Pointer, Derived> ::derived_type &
# 73 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator=(const reference &other)
# 74 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 75 "/usr/local/cuda/include/thrust/detail/reference.inl"
assign_from(&other);
# 76 "/usr/local/cuda/include/thrust/detail/reference.inl"
return static_cast< derived_type &>(*this);
# 77 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 80 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived>
# 81 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class OtherElement, class OtherPointer, class OtherDerived> typename reference< Element, Pointer, Derived> ::derived_type &
# 84 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator=(const thrust::reference< OtherElement, OtherPointer, OtherDerived> &other)
# 85 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 86 "/usr/local/cuda/include/thrust/detail/reference.inl"
assign_from(&other);
# 87 "/usr/local/cuda/include/thrust/detail/reference.inl"
return static_cast< derived_type &>(*this);
# 88 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 91 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived>
# 92 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class System> inline typename reference< Element, Pointer, Derived> ::value_type
# 95 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::convert_to_value_type(System *system) const
# 96 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 97 "/usr/local/cuda/include/thrust/detail/reference.inl"
using thrust::system::detail::generic::select_system;
# 98 "/usr/local/cuda/include/thrust/detail/reference.inl"
return strip_const_get_value(select_system(*system));
# 99 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 102 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived>
# 104 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator typename reference< Element, Pointer, Derived> ::value_type() const
# 105 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 106 "/usr/local/cuda/include/thrust/detail/reference.inl"
typedef typename iterator_system< Pointer> ::type System;
# 112 "/usr/local/cuda/include/thrust/detail/reference.inl"
System *system = (0);
# 114 "/usr/local/cuda/include/thrust/detail/reference.inl"
return convert_to_value_type(system);
# 115 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 118 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived>
# 119 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class System> inline typename reference< Element, Pointer, Derived> ::value_type
# 122 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::strip_const_get_value(const System &system) const
# 123 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 124 "/usr/local/cuda/include/thrust/detail/reference.inl"
System &non_const_system = const_cast< System &>(system);
# 126 "/usr/local/cuda/include/thrust/detail/reference.inl"
using thrust::system::detail::generic::get_value;
# 128 "/usr/local/cuda/include/thrust/detail/reference.inl"
return get_value(detail::derived_cast(non_const_system), m_ptr);
# 129 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 132 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived>
# 133 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class System1, class System2, class OtherPointer> inline void
# 135 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::assign_from(System1 *system1, System2 *system2, OtherPointer src)
# 136 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 137 "/usr/local/cuda/include/thrust/detail/reference.inl"
using system::detail::generic::select_system;
# 139 "/usr/local/cuda/include/thrust/detail/reference.inl"
strip_const_assign_value(select_system(*system1, *system2), src);
# 140 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 143 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived>
# 144 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class OtherPointer> inline void
# 146 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::assign_from(OtherPointer src)
# 147 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 148 "/usr/local/cuda/include/thrust/detail/reference.inl"
typedef typename iterator_system< Pointer> ::type System1;
# 149 "/usr/local/cuda/include/thrust/detail/reference.inl"
typedef typename iterator_system< OtherPointer> ::type System2;
# 155 "/usr/local/cuda/include/thrust/detail/reference.inl"
System1 *system1 = (0);
# 156 "/usr/local/cuda/include/thrust/detail/reference.inl"
System2 *system2 = (0);
# 158 "/usr/local/cuda/include/thrust/detail/reference.inl"
assign_from(system1, system2, src);
# 159 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 162 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived>
# 163 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class System, class OtherPointer> inline void
# 165 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::strip_const_assign_value(const System &system, OtherPointer src)
# 166 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 167 "/usr/local/cuda/include/thrust/detail/reference.inl"
System &non_const_system = const_cast< System &>(system);
# 169 "/usr/local/cuda/include/thrust/detail/reference.inl"
using thrust::system::detail::generic::assign_value;
# 171 "/usr/local/cuda/include/thrust/detail/reference.inl"
assign_value(detail::derived_cast(non_const_system), m_ptr, src);
# 172 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 175 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived>
# 176 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class System> inline void
# 178 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::swap(System *system, derived_type &other)
# 179 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 180 "/usr/local/cuda/include/thrust/detail/reference.inl"
using thrust::system::detail::generic::select_system;
# 181 "/usr/local/cuda/include/thrust/detail/reference.inl"
using thrust::system::detail::generic::iter_swap;
# 183 "/usr/local/cuda/include/thrust/detail/reference.inl"
iter_swap(select_system(*system, *system), m_ptr, (other.m_ptr));
# 184 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 187 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived> void
# 189 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::swap(derived_type &other)
# 190 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 191 "/usr/local/cuda/include/thrust/detail/reference.inl"
typedef typename iterator_system< Pointer> ::type System;
# 197 "/usr/local/cuda/include/thrust/detail/reference.inl"
System *system = (0);
# 199 "/usr/local/cuda/include/thrust/detail/reference.inl"
swap(system, other);
# 200 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 203 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived> typename reference< Element, Pointer, Derived> ::derived_type &
# 206 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator++()
# 207 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 208 "/usr/local/cuda/include/thrust/detail/reference.inl"
value_type temp = *this;
# 209 "/usr/local/cuda/include/thrust/detail/reference.inl"
++temp;
# 210 "/usr/local/cuda/include/thrust/detail/reference.inl"
(*this) = temp;
# 211 "/usr/local/cuda/include/thrust/detail/reference.inl"
return static_cast< derived_type &>(*this);
# 212 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 215 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived> typename reference< Element, Pointer, Derived> ::value_type
# 218 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator++(int)
# 219 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 220 "/usr/local/cuda/include/thrust/detail/reference.inl"
value_type temp = *this;
# 221 "/usr/local/cuda/include/thrust/detail/reference.inl"
value_type result = temp++;
# 222 "/usr/local/cuda/include/thrust/detail/reference.inl"
(*this) = temp;
# 223 "/usr/local/cuda/include/thrust/detail/reference.inl"
return result;
# 224 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 227 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived> typename reference< Element, Pointer, Derived> ::derived_type &
# 230 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator+=(const value_type &rhs)
# 231 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 232 "/usr/local/cuda/include/thrust/detail/reference.inl"
value_type temp = *this;
# 233 "/usr/local/cuda/include/thrust/detail/reference.inl"
temp += rhs;
# 234 "/usr/local/cuda/include/thrust/detail/reference.inl"
(*this) = temp;
# 235 "/usr/local/cuda/include/thrust/detail/reference.inl"
return static_cast< derived_type &>(*this);
# 236 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 238 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived> typename reference< Element, Pointer, Derived> ::derived_type &
# 241 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator--()
# 242 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 243 "/usr/local/cuda/include/thrust/detail/reference.inl"
value_type temp = *this;
# 244 "/usr/local/cuda/include/thrust/detail/reference.inl"
--temp;
# 245 "/usr/local/cuda/include/thrust/detail/reference.inl"
(*this) = temp;
# 246 "/usr/local/cuda/include/thrust/detail/reference.inl"
return static_cast< derived_type &>(*this);
# 247 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 249 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived> typename reference< Element, Pointer, Derived> ::value_type
# 252 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator--(int)
# 253 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 254 "/usr/local/cuda/include/thrust/detail/reference.inl"
value_type temp = *this;
# 255 "/usr/local/cuda/include/thrust/detail/reference.inl"
value_type result = temp--;
# 256 "/usr/local/cuda/include/thrust/detail/reference.inl"
(*this) = temp;
# 257 "/usr/local/cuda/include/thrust/detail/reference.inl"
return result;
# 258 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 260 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived> typename reference< Element, Pointer, Derived> ::derived_type &
# 263 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator-=(const value_type &rhs)
# 264 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 265 "/usr/local/cuda/include/thrust/detail/reference.inl"
value_type temp = *this;
# 266 "/usr/local/cuda/include/thrust/detail/reference.inl"
temp -= rhs;
# 267 "/usr/local/cuda/include/thrust/detail/reference.inl"
(*this) = temp;
# 268 "/usr/local/cuda/include/thrust/detail/reference.inl"
return static_cast< derived_type &>(*this);
# 269 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 271 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived> typename reference< Element, Pointer, Derived> ::derived_type &
# 274 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator*=(const value_type &rhs)
# 275 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 276 "/usr/local/cuda/include/thrust/detail/reference.inl"
value_type temp = *this;
# 277 "/usr/local/cuda/include/thrust/detail/reference.inl"
temp *= rhs;
# 278 "/usr/local/cuda/include/thrust/detail/reference.inl"
(*this) = temp;
# 279 "/usr/local/cuda/include/thrust/detail/reference.inl"
return static_cast< derived_type &>(*this);
# 280 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 282 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived> typename reference< Element, Pointer, Derived> ::derived_type &
# 285 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator/=(const value_type &rhs)
# 286 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 287 "/usr/local/cuda/include/thrust/detail/reference.inl"
value_type temp = *this;
# 288 "/usr/local/cuda/include/thrust/detail/reference.inl"
temp /= rhs;
# 289 "/usr/local/cuda/include/thrust/detail/reference.inl"
(*this) = temp;
# 290 "/usr/local/cuda/include/thrust/detail/reference.inl"
return static_cast< derived_type &>(*this);
# 291 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 293 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived> typename reference< Element, Pointer, Derived> ::derived_type &
# 296 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator%=(const value_type &rhs)
# 297 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 298 "/usr/local/cuda/include/thrust/detail/reference.inl"
value_type temp = *this;
# 299 "/usr/local/cuda/include/thrust/detail/reference.inl"
temp %= rhs;
# 300 "/usr/local/cuda/include/thrust/detail/reference.inl"
(*this) = temp;
# 301 "/usr/local/cuda/include/thrust/detail/reference.inl"
return static_cast< derived_type &>(*this);
# 302 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 304 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived> typename reference< Element, Pointer, Derived> ::derived_type &
# 307 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator<<=(const value_type &rhs)
# 308 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 309 "/usr/local/cuda/include/thrust/detail/reference.inl"
value_type temp = *this;
# 310 "/usr/local/cuda/include/thrust/detail/reference.inl"
temp <<= rhs;
# 311 "/usr/local/cuda/include/thrust/detail/reference.inl"
(*this) = temp;
# 312 "/usr/local/cuda/include/thrust/detail/reference.inl"
return static_cast< derived_type &>(*this);
# 313 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 315 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived> typename reference< Element, Pointer, Derived> ::derived_type &
# 318 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator>>=(const value_type &rhs)
# 319 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 320 "/usr/local/cuda/include/thrust/detail/reference.inl"
value_type temp = *this;
# 321 "/usr/local/cuda/include/thrust/detail/reference.inl"
temp >>= rhs;
# 322 "/usr/local/cuda/include/thrust/detail/reference.inl"
(*this) = temp;
# 323 "/usr/local/cuda/include/thrust/detail/reference.inl"
return static_cast< derived_type &>(*this);
# 324 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 326 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived> typename reference< Element, Pointer, Derived> ::derived_type &
# 329 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator&=(const value_type &rhs)
# 330 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 331 "/usr/local/cuda/include/thrust/detail/reference.inl"
value_type temp = *this;
# 332 "/usr/local/cuda/include/thrust/detail/reference.inl"
temp &= rhs;
# 333 "/usr/local/cuda/include/thrust/detail/reference.inl"
(*this) = temp;
# 334 "/usr/local/cuda/include/thrust/detail/reference.inl"
return static_cast< derived_type &>(*this);
# 335 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 337 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived> typename reference< Element, Pointer, Derived> ::derived_type &
# 340 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator|=(const value_type &rhs)
# 341 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 342 "/usr/local/cuda/include/thrust/detail/reference.inl"
value_type temp = *this;
# 343 "/usr/local/cuda/include/thrust/detail/reference.inl"
temp |= rhs;
# 344 "/usr/local/cuda/include/thrust/detail/reference.inl"
(*this) = temp;
# 345 "/usr/local/cuda/include/thrust/detail/reference.inl"
return static_cast< derived_type &>(*this);
# 346 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 348 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived> typename reference< Element, Pointer, Derived> ::derived_type &
# 351 "/usr/local/cuda/include/thrust/detail/reference.inl"
reference< Element, Pointer, Derived> ::operator^=(const value_type &rhs)
# 352 "/usr/local/cuda/include/thrust/detail/reference.inl"
{
# 353 "/usr/local/cuda/include/thrust/detail/reference.inl"
value_type temp = *this;
# 354 "/usr/local/cuda/include/thrust/detail/reference.inl"
temp ^= rhs;
# 355 "/usr/local/cuda/include/thrust/detail/reference.inl"
(*this) = temp;
# 356 "/usr/local/cuda/include/thrust/detail/reference.inl"
return static_cast< derived_type &>(*this);
# 357 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 359 "/usr/local/cuda/include/thrust/detail/reference.inl"
template< class Element, class Pointer, class Derived, class
# 360 "/usr/local/cuda/include/thrust/detail/reference.inl"
charT, class traits> std::basic_ostream< charT, traits> &
# 362 "/usr/local/cuda/include/thrust/detail/reference.inl"
operator<<(std::basic_ostream< charT, traits> &os, const reference< Element, Pointer, Derived> &
# 363 "/usr/local/cuda/include/thrust/detail/reference.inl"
y) {
# 364 "/usr/local/cuda/include/thrust/detail/reference.inl"
typedef typename reference< Element, Pointer, Derived> ::value_type value_type;
# 365 "/usr/local/cuda/include/thrust/detail/reference.inl"
return os << (static_cast< value_type>(y));
# 366 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 368 "/usr/local/cuda/include/thrust/detail/reference.inl"
}
# 31 "/usr/local/cuda/include/thrust/memory.h"
namespace thrust {
# 303 "/usr/local/cuda/include/thrust/memory.h"
template< class DerivedPolicy> pointer< void, DerivedPolicy, use_default, use_default> malloc(const detail::execution_policy_base< DerivedPolicy> & system, std::size_t n);
# 341 "/usr/local/cuda/include/thrust/memory.h"
template< class T, class DerivedPolicy> pointer< T, DerivedPolicy, use_default, use_default> malloc(const detail::execution_policy_base< DerivedPolicy> & system, std::size_t n);
# 394 "/usr/local/cuda/include/thrust/memory.h"
template< class T, class DerivedPolicy> pair< pointer< T, DerivedPolicy, use_default, use_default> , typename pointer< T, DerivedPolicy, use_default, use_default> ::difference_type> get_temporary_buffer(const detail::execution_policy_base< DerivedPolicy> & system, typename pointer< T, DerivedPolicy, use_default, use_default> ::difference_type n);
# 437 "/usr/local/cuda/include/thrust/memory.h"
template< class DerivedPolicy, class Pointer> void free(const detail::execution_policy_base< DerivedPolicy> & system, Pointer ptr);
# 483 "/usr/local/cuda/include/thrust/memory.h"
template< class DerivedPolicy, class Pointer> void return_temporary_buffer(const detail::execution_policy_base< DerivedPolicy> & system, Pointer p);
# 499 "/usr/local/cuda/include/thrust/memory.h"
template< class Pointer> inline typename detail::pointer_traits< Pointer> ::raw_pointer raw_pointer_cast(const Pointer & ptr);
# 516 "/usr/local/cuda/include/thrust/memory.h"
template< class T> inline typename detail::raw_reference< T> ::type raw_reference_cast(T & ref);
# 533 "/usr/local/cuda/include/thrust/memory.h"
template< class T> inline typename detail::raw_reference< const T> ::type raw_reference_cast(const T & ref);
# 542 "/usr/local/cuda/include/thrust/memory.h"
}
# 27 "/usr/local/cuda/include/thrust/device_ptr.h"
namespace thrust {
# 37 "/usr/local/cuda/include/thrust/device_ptr.h"
template< class T> class device_reference;
# 60 "/usr/local/cuda/include/thrust/device_ptr.h"
template< class T>
# 61 "/usr/local/cuda/include/thrust/device_ptr.h"
class device_ptr : public pointer< T, system::cuda::detail::tag, device_reference< T> , device_ptr< T> > {
# 75 "/usr/local/cuda/include/thrust/device_ptr.h"
typedef ::thrust::pointer< T, ::thrust::system::cuda::detail::tag, device_reference< T> , ::thrust::device_ptr< T> > super_t;
# 81 "/usr/local/cuda/include/thrust/device_ptr.h"
public: device_ptr() : super_t() { }
# 89 "/usr/local/cuda/include/thrust/device_ptr.h"
template< class OtherT> explicit
# 91 "/usr/local/cuda/include/thrust/device_ptr.h"
device_ptr(OtherT *ptr) : super_t(ptr) { }
# 96 "/usr/local/cuda/include/thrust/device_ptr.h"
template< class OtherT>
# 98 "/usr/local/cuda/include/thrust/device_ptr.h"
device_ptr(const ::thrust::device_ptr< OtherT> &other) : super_t(other) { }
# 104 "/usr/local/cuda/include/thrust/device_ptr.h"
template< class OtherT> device_ptr &
# 106 "/usr/local/cuda/include/thrust/device_ptr.h"
operator=(const ::thrust::device_ptr< OtherT> &other)
# 107 "/usr/local/cuda/include/thrust/device_ptr.h"
{
# 108 "/usr/local/cuda/include/thrust/device_ptr.h"
::thrust::pointer< T, ::thrust::system::cuda::detail::tag, device_reference< T> , ::thrust::device_ptr< T> > ::operator=(other);
# 109 "/usr/local/cuda/include/thrust/device_ptr.h"
return *this;
# 110 "/usr/local/cuda/include/thrust/device_ptr.h"
}
# 121 "/usr/local/cuda/include/thrust/device_ptr.h"
};
# 153 "/usr/local/cuda/include/thrust/device_ptr.h"
template< class T> inline device_ptr< T> device_pointer_cast(T * ptr);
# 163 "/usr/local/cuda/include/thrust/device_ptr.h"
template< class T> inline device_ptr< T> device_pointer_cast(const device_ptr< T> & ptr);
# 170 "/usr/local/cuda/include/thrust/device_ptr.h"
}
# 29 "/usr/local/cuda/include/thrust/device_reference.h"
namespace thrust {
# 185 "/usr/local/cuda/include/thrust/device_reference.h"
template< class T>
# 186 "/usr/local/cuda/include/thrust/device_reference.h"
class device_reference : public reference< T, device_ptr< T> , device_reference< T> > {
# 198 "/usr/local/cuda/include/thrust/device_reference.h"
typedef ::thrust::reference< T, device_ptr< T> , ::thrust::device_reference< T> > super_t;
# 203 "/usr/local/cuda/include/thrust/device_reference.h"
public: typedef typename ::thrust::reference< T, device_ptr< T> , ::thrust::device_reference< T> > ::value_type value_type;
# 207 "/usr/local/cuda/include/thrust/device_reference.h"
typedef typename ::thrust::reference< T, device_ptr< T> , ::thrust::device_reference< T> > ::pointer pointer;
# 239 "/usr/local/cuda/include/thrust/device_reference.h"
template< class OtherT>
# 241 "/usr/local/cuda/include/thrust/device_reference.h"
device_reference(const ::thrust::device_reference< OtherT> &other, typename ::thrust::detail::enable_if_convertible< typename ::thrust::device_reference< OtherT> ::pointer, typename ::thrust::reference< T, device_ptr< T> , ::thrust::device_reference< T> > ::pointer> ::type * = 0) : super_t(other)
# 247 "/usr/local/cuda/include/thrust/device_reference.h"
{ }
# 279 "/usr/local/cuda/include/thrust/device_reference.h"
explicit device_reference(const pointer &ptr) : super_t(ptr)
# 281 "/usr/local/cuda/include/thrust/device_reference.h"
{ }
# 290 "/usr/local/cuda/include/thrust/device_reference.h"
template< class OtherT> device_reference &operator=(const ::thrust::device_reference< OtherT> & other);
# 301 "/usr/local/cuda/include/thrust/device_reference.h"
device_reference &operator=(const value_type & x);
# 953 "/usr/local/cuda/include/thrust/device_reference.h"
};
# 959 "/usr/local/cuda/include/thrust/device_reference.h"
template< class T> void swap(device_reference< T> & x, device_reference< T> & y);
# 980 "/usr/local/cuda/include/thrust/device_reference.h"
}
# 25 "/usr/local/cuda/include/thrust/detail/device_reference.inl"
namespace thrust {
# 28 "/usr/local/cuda/include/thrust/detail/device_reference.inl"
template< class T>
# 29 "/usr/local/cuda/include/thrust/detail/device_reference.inl"
template< class OtherT> device_reference< T> &
# 32 "/usr/local/cuda/include/thrust/detail/device_reference.inl"
device_reference< T> ::operator=(const ::thrust::device_reference< OtherT> &other)
# 33 "/usr/local/cuda/include/thrust/detail/device_reference.inl"
{
# 34 "/usr/local/cuda/include/thrust/detail/device_reference.inl"
return ::thrust::reference< T, device_ptr< T> , ::thrust::device_reference< T> > ::operator=(other);
# 35 "/usr/local/cuda/include/thrust/detail/device_reference.inl"
}
# 37 "/usr/local/cuda/include/thrust/detail/device_reference.inl"
template< class T> device_reference< T> &
# 40 "/usr/local/cuda/include/thrust/detail/device_reference.inl"
device_reference< T> ::operator=(const value_type &x)
# 41 "/usr/local/cuda/include/thrust/detail/device_reference.inl"
{
# 42 "/usr/local/cuda/include/thrust/detail/device_reference.inl"
return ::thrust::reference< T, device_ptr< T> , ::thrust::device_reference< T> > ::operator=(x);
# 43 "/usr/local/cuda/include/thrust/detail/device_reference.inl"
}
# 45 "/usr/local/cuda/include/thrust/detail/device_reference.inl"
template< class T> void
# 47 "/usr/local/cuda/include/thrust/detail/device_reference.inl"
swap(device_reference< T> &a, device_reference< T> &b)
# 48 "/usr/local/cuda/include/thrust/detail/device_reference.inl"
{
# 49 "/usr/local/cuda/include/thrust/detail/device_reference.inl"
(a.swap(b));
# 50 "/usr/local/cuda/include/thrust/detail/device_reference.inl"
}
# 52 "/usr/local/cuda/include/thrust/detail/device_reference.inl"
}
# 27 "/usr/local/cuda/include/thrust/detail/device_ptr.inl"
namespace thrust {
# 30 "/usr/local/cuda/include/thrust/detail/device_ptr.inl"
template< class T> inline device_ptr< T>
# 31 "/usr/local/cuda/include/thrust/detail/device_ptr.inl"
device_pointer_cast(T *ptr)
# 32 "/usr/local/cuda/include/thrust/detail/device_ptr.inl"
{
# 33 "/usr/local/cuda/include/thrust/detail/device_ptr.inl"
return ((device_ptr< T> )(ptr));
# 34 "/usr/local/cuda/include/thrust/detail/device_ptr.inl"
}
# 36 "/usr/local/cuda/include/thrust/detail/device_ptr.inl"
template< class T> inline device_ptr< T>
# 37 "/usr/local/cuda/include/thrust/detail/device_ptr.inl"
device_pointer_cast(const device_ptr< T> &ptr)
# 38 "/usr/local/cuda/include/thrust/detail/device_ptr.inl"
{
# 39 "/usr/local/cuda/include/thrust/detail/device_ptr.inl"
return ptr;
# 40 "/usr/local/cuda/include/thrust/detail/device_ptr.inl"
}
# 43 "/usr/local/cuda/include/thrust/detail/device_ptr.inl"
namespace detail {
# 46 "/usr/local/cuda/include/thrust/detail/device_ptr.inl"
template< class T>
# 47 "/usr/local/cuda/include/thrust/detail/device_ptr.inl"
struct is_device_ptr< device_ptr< T> > : public true_type {
# 50 "/usr/local/cuda/include/thrust/detail/device_ptr.inl"
};
# 63 "/usr/local/cuda/include/thrust/detail/device_ptr.inl"
}
# 64 "/usr/local/cuda/include/thrust/detail/device_ptr.inl"
}
# 28 "/usr/local/cuda/include/thrust/device_malloc.h"
namespace thrust {
# 64 "/usr/local/cuda/include/thrust/device_malloc.h"
inline device_ptr< void> device_malloc(const std::size_t n);
# 94 "/usr/local/cuda/include/thrust/device_malloc.h"
template< class T> inline device_ptr< T> device_malloc(const std::size_t n);
# 100 "/usr/local/cuda/include/thrust/device_malloc.h"
}
# 28 "/usr/local/cuda/include/thrust/detail/device_malloc.inl"
namespace thrust {
# 32 "/usr/local/cuda/include/thrust/detail/device_malloc.inl"
inline device_ptr< void> device_malloc(const std::size_t n)
# 33 "/usr/local/cuda/include/thrust/detail/device_malloc.inl"
{
# 34 "/usr/local/cuda/include/thrust/detail/device_malloc.inl"
using thrust::system::detail::generic::select_system;
# 36 "/usr/local/cuda/include/thrust/detail/device_malloc.inl"
typedef detail::iterator_category_to_system< detail::iterator_category_with_system_and_traversal< random_access_device_iterator_tag, thrust::system::cuda::detail::tag, random_access_traversal_tag> > ::type system;
# 39 "/usr/local/cuda/include/thrust/detail/device_malloc.inl"
system s;
# 41 "/usr/local/cuda/include/thrust/detail/device_malloc.inl"
return ((device_ptr< void> )(thrust::malloc(s, n).get()));
# 42 "/usr/local/cuda/include/thrust/detail/device_malloc.inl"
}
# 45 "/usr/local/cuda/include/thrust/detail/device_malloc.inl"
template< class T> inline device_ptr< T>
# 46 "/usr/local/cuda/include/thrust/detail/device_malloc.inl"
device_malloc(const std::size_t n)
# 47 "/usr/local/cuda/include/thrust/detail/device_malloc.inl"
{
# 48 "/usr/local/cuda/include/thrust/detail/device_malloc.inl"
using thrust::system::detail::generic::select_system;
# 50 "/usr/local/cuda/include/thrust/detail/device_malloc.inl"
typedef detail::iterator_category_to_system< detail::iterator_category_with_system_and_traversal< random_access_device_iterator_tag, thrust::system::cuda::detail::tag, random_access_traversal_tag> > ::type system;
# 53 "/usr/local/cuda/include/thrust/detail/device_malloc.inl"
system s;
# 55 "/usr/local/cuda/include/thrust/detail/device_malloc.inl"
return ((device_ptr< T> )((thrust::malloc< T> (s, n).get())));
# 56 "/usr/local/cuda/include/thrust/detail/device_malloc.inl"
}
# 59 "/usr/local/cuda/include/thrust/detail/device_malloc.inl"
}
# 27 "/usr/local/cuda/include/thrust/device_free.h"
namespace thrust {
# 60 "/usr/local/cuda/include/thrust/device_free.h"
inline void device_free(device_ptr< void> ptr);
# 65 "/usr/local/cuda/include/thrust/device_free.h"
}
# 28 "/usr/local/cuda/include/thrust/detail/device_free.inl"
namespace thrust {
# 31 "/usr/local/cuda/include/thrust/detail/device_free.inl"
inline void device_free(device_ptr< void> ptr)
# 32 "/usr/local/cuda/include/thrust/detail/device_free.inl"
{
# 33 "/usr/local/cuda/include/thrust/detail/device_free.inl"
using thrust::system::detail::generic::select_system;
# 35 "/usr/local/cuda/include/thrust/detail/device_free.inl"
typedef detail::iterator_category_to_system< detail::iterator_category_with_system_and_traversal< random_access_device_iterator_tag, thrust::system::cuda::detail::tag, random_access_traversal_tag> > ::type system;
# 38 "/usr/local/cuda/include/thrust/detail/device_free.inl"
system s;
# 40 "/usr/local/cuda/include/thrust/detail/device_free.inl"
thrust::free(s, ptr);
# 41 "/usr/local/cuda/include/thrust/detail/device_free.inl"
}
# 43 "/usr/local/cuda/include/thrust/detail/device_free.inl"
}
# 32 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
namespace thrust {
# 36 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
template< class > class device_ptr;
# 37 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
template< class T> inline device_ptr< T> device_malloc(const std::size_t n);
# 52 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
template< class T>
# 53 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
class device_malloc_allocator {
# 57 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
public: typedef T value_type;
# 60 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
typedef device_ptr< T> pointer;
# 63 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
typedef device_ptr< const T> const_pointer;
# 66 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
typedef device_reference< T> reference;
# 69 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
typedef device_reference< const T> const_reference;
# 72 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
typedef std::size_t size_type;
# 75 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
typedef typename device_ptr< T> ::difference_type difference_type;
# 82 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
template< class U>
# 83 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
struct rebind {
# 87 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
typedef thrust::device_malloc_allocator< U> other;
# 88 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
};
# 92 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
device_malloc_allocator() { }
# 96 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
~device_malloc_allocator() { }
# 100 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
device_malloc_allocator(const device_malloc_allocator &) { }
# 103 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
template< class U>
# 105 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
device_malloc_allocator(const thrust::device_malloc_allocator< U> &) { }
# 111 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
pointer address(reference r) { return &r; }
# 117 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
const_pointer address(const_reference r) { return &r; }
# 125 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
pointer allocate(size_type cnt, const_pointer = ((const_pointer)(static_cast< T *>(0))))
# 127 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
{
# 128 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
if (cnt > this->max_size())
# 129 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
{
# 130 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
throw std::bad_alloc();
# 131 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
}
# 133 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
return ((pointer)(device_malloc< T> (cnt)));
# 134 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
}
# 143 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
void deallocate(pointer p, size_type cnt)
# 144 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
{
# 146 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
(void)cnt;
# 148 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
device_free(p);
# 149 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
}
# 154 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
size_type max_size() const
# 155 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
{
# 156 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
return std::numeric_limits< unsigned long> ::max() / sizeof(T);
# 157 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
}
# 163 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
bool operator==(const device_malloc_allocator &) { return true; }
# 169 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
bool operator!=(const device_malloc_allocator &a) { return !operator==(a); }
# 170 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
};
# 175 "/usr/local/cuda/include/thrust/device_malloc_allocator.h"
}
# 22 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator_base.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator_base.h"
template< class > class reverse_iterator;
# 27 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator_base.h"
namespace detail {
# 30 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator_base.h"
template< class BidirectionalIterator>
# 31 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator_base.h"
struct reverse_iterator_base {
# 36 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator_base.h"
typedef iterator_adaptor< reverse_iterator< BidirectionalIterator> , BidirectionalIterator> type;
# 37 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator_base.h"
};
# 39 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator_base.h"
}
# 41 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator_base.h"
}
# 40 "/usr/local/cuda/include/thrust/iterator/reverse_iterator.h"
namespace thrust {
# 144 "/usr/local/cuda/include/thrust/iterator/reverse_iterator.h"
template< class BidirectionalIterator>
# 145 "/usr/local/cuda/include/thrust/iterator/reverse_iterator.h"
class reverse_iterator : public detail::reverse_iterator_base< BidirectionalIterator> ::type {
# 153 "/usr/local/cuda/include/thrust/iterator/reverse_iterator.h"
typedef typename ::thrust::detail::reverse_iterator_base< BidirectionalIterator> ::type super_t;
# 155 "/usr/local/cuda/include/thrust/iterator/reverse_iterator.h"
friend class iterator_core_access;
# 163 "/usr/local/cuda/include/thrust/iterator/reverse_iterator.h"
public: reverse_iterator() { }
# 171 "/usr/local/cuda/include/thrust/iterator/reverse_iterator.h"
explicit reverse_iterator(BidirectionalIterator x);
# 178 "/usr/local/cuda/include/thrust/iterator/reverse_iterator.h"
template< class OtherBidirectionalIterator> reverse_iterator(const ::thrust::reverse_iterator< OtherBidirectionalIterator> & r, typename ::thrust::detail::enable_if< ::thrust::detail::is_convertible< OtherBidirectionalIterator, BidirectionalIterator> ::value> ::type * = 0);
# 198 "/usr/local/cuda/include/thrust/iterator/reverse_iterator.h"
private: typename ::thrust::detail::reverse_iterator_base< BidirectionalIterator> ::type::reference dereference() const;
# 201 "/usr/local/cuda/include/thrust/iterator/reverse_iterator.h"
void increment();
# 204 "/usr/local/cuda/include/thrust/iterator/reverse_iterator.h"
void decrement();
# 207 "/usr/local/cuda/include/thrust/iterator/reverse_iterator.h"
void advance(typename ::thrust::detail::reverse_iterator_base< BidirectionalIterator> ::type::difference_type n);
# 209 "/usr/local/cuda/include/thrust/iterator/reverse_iterator.h"
template< class OtherBidirectionalIterator> typename ::thrust::detail::reverse_iterator_base< BidirectionalIterator> ::type::difference_type distance_to(const ::thrust::reverse_iterator< OtherBidirectionalIterator> & y) const;
# 215 "/usr/local/cuda/include/thrust/iterator/reverse_iterator.h"
};
# 224 "/usr/local/cuda/include/thrust/iterator/reverse_iterator.h"
template< class BidirectionalIterator> reverse_iterator< BidirectionalIterator> make_reverse_iterator(BidirectionalIterator x);
# 235 "/usr/local/cuda/include/thrust/iterator/reverse_iterator.h"
}
# 20 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
namespace thrust {
# 23 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
namespace detail {
# 27 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
template< class Iterator> Iterator
# 29 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
prior(Iterator x)
# 30 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
{
# 31 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
return --x;
# 32 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
}
# 34 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
}
# 36 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
template< class BidirectionalIterator>
# 38 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
reverse_iterator< BidirectionalIterator> ::reverse_iterator(BidirectionalIterator x) : super_t(x)
# 40 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
{
# 41 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
}
# 43 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
template< class BidirectionalIterator>
# 44 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
template< class OtherBidirectionalIterator>
# 46 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
reverse_iterator< BidirectionalIterator> ::reverse_iterator(const ::thrust::reverse_iterator< OtherBidirectionalIterator> &r, typename ::thrust::detail::enable_if< ::thrust::detail::is_convertible< OtherBidirectionalIterator, BidirectionalIterator> ::value> ::type *) : super_t((r.base()))
# 58 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
{
# 59 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
}
# 61 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
template< class BidirectionalIterator> typename detail::reverse_iterator_base< BidirectionalIterator> ::type::reference
# 64 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
reverse_iterator< BidirectionalIterator> ::dereference() const
# 65 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
{
# 66 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
return *::thrust::detail::prior((this->base()));
# 67 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
}
# 69 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
template< class BidirectionalIterator> void
# 71 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
reverse_iterator< BidirectionalIterator> ::increment()
# 72 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
{
# 73 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
--(this->base_reference());
# 74 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
}
# 76 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
template< class BidirectionalIterator> void
# 78 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
reverse_iterator< BidirectionalIterator> ::decrement()
# 79 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
{
# 80 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
++(this->base_reference());
# 81 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
}
# 83 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
template< class BidirectionalIterator> void
# 85 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
reverse_iterator< BidirectionalIterator> ::advance(typename ::thrust::detail::reverse_iterator_base< BidirectionalIterator> ::type::difference_type n)
# 86 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
{
# 87 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
(this->base_reference()) += (-n);
# 88 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
}
# 90 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
template< class BidirectionalIterator>
# 91 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
template< class OtherBidirectionalIterator> typename detail::reverse_iterator_base< BidirectionalIterator> ::type::difference_type
# 94 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
reverse_iterator< BidirectionalIterator> ::distance_to(const ::thrust::reverse_iterator< OtherBidirectionalIterator> &y) const
# 95 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
{
# 96 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
return (this->base_reference()) - (y.base());
# 97 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
}
# 99 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
template< class BidirectionalIterator> reverse_iterator< BidirectionalIterator>
# 101 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
make_reverse_iterator(BidirectionalIterator x)
# 102 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
{
# 103 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
return ((reverse_iterator< BidirectionalIterator> )(x));
# 104 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
}
# 107 "/usr/local/cuda/include/thrust/iterator/detail/reverse_iterator.inl"
}
# 66 "/usr/include/c++/5/bits/stl_vector.h" 3

# 66 "/usr/include/c++/5/bits/stl_vector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 71 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc>
# 72 "/usr/include/c++/5/bits/stl_vector.h" 3
struct _Vector_base {
# 75 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _Tp> ::other _Tp_alloc_type;
# 77 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _Tp> ::other> ::pointer pointer;
# 79 "/usr/include/c++/5/bits/stl_vector.h" 3
struct _Vector_impl : public _Tp_alloc_type {
# 82 "/usr/include/c++/5/bits/stl_vector.h" 3
typename ::std::_Vector_base< _Tp, _Alloc> ::pointer _M_start;
# 83 "/usr/include/c++/5/bits/stl_vector.h" 3
typename ::std::_Vector_base< _Tp, _Alloc> ::pointer _M_finish;
# 84 "/usr/include/c++/5/bits/stl_vector.h" 3
typename ::std::_Vector_base< _Tp, _Alloc> ::pointer _M_end_of_storage;
# 86 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_impl() : ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
# 88 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 90 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_impl(const typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type &__a) : ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
# 92 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 101 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_swap_data(_Vector_impl &__x)
# 102 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 103 "/usr/include/c++/5/bits/stl_vector.h" 3
::std::swap(_M_start, __x._M_start);
# 104 "/usr/include/c++/5/bits/stl_vector.h" 3
::std::swap(_M_finish, __x._M_finish);
# 105 "/usr/include/c++/5/bits/stl_vector.h" 3
::std::swap(_M_end_of_storage, __x._M_end_of_storage);
# 106 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 107 "/usr/include/c++/5/bits/stl_vector.h" 3
};
# 110 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef _Alloc allocator_type;
# 113 "/usr/include/c++/5/bits/stl_vector.h" 3
_Tp_alloc_type &_M_get_Tp_allocator()
# 114 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *(static_cast< _Tp_alloc_type *>(&(this->_M_impl))); }
# 117 "/usr/include/c++/5/bits/stl_vector.h" 3
const _Tp_alloc_type &_M_get_Tp_allocator() const
# 118 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *(static_cast< const _Tp_alloc_type *>(&(this->_M_impl))); }
# 121 "/usr/include/c++/5/bits/stl_vector.h" 3
allocator_type get_allocator() const
# 122 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return (allocator_type)this->_M_get_Tp_allocator(); }
# 124 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_base() : _M_impl()
# 125 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 127 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_base(const allocator_type &__a) : _M_impl(__a)
# 128 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 130 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_base(size_t __n) : _M_impl()
# 132 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_create_storage(__n); }
# 134 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_base(size_t __n, const allocator_type &__a) : _M_impl(__a)
# 136 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_create_storage(__n); }
# 159 "/usr/include/c++/5/bits/stl_vector.h" 3
~_Vector_base()
# 160 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 161 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 164 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_impl _M_impl;
# 167 "/usr/include/c++/5/bits/stl_vector.h" 3
pointer _M_allocate(size_t __n)
# 168 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 169 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _Tp> ::other> _Tr;
# 170 "/usr/include/c++/5/bits/stl_vector.h" 3
return (__n != (0)) ? _Tr::allocate(_M_impl, __n) : (pointer());
# 171 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 174 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_deallocate(pointer __p, size_t __n)
# 175 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 176 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _Tp> ::other> _Tr;
# 177 "/usr/include/c++/5/bits/stl_vector.h" 3
if (__p) {
# 178 "/usr/include/c++/5/bits/stl_vector.h" 3
_Tr::deallocate(_M_impl, __p, __n); }
# 179 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 183 "/usr/include/c++/5/bits/stl_vector.h" 3
private: void _M_create_storage(size_t __n)
# 184 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 185 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_start) = this->_M_allocate(__n);
# 186 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = ((this->_M_impl)._M_start);
# 187 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + __n);
# 188 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 189 "/usr/include/c++/5/bits/stl_vector.h" 3
};
# 213 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc = allocator< _Tp> >
# 214 "/usr/include/c++/5/bits/stl_vector.h" 3
class vector : protected _Vector_base< _Tp, _Alloc> {
# 217 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename _Alloc::value_type _Alloc_value_type;
# 221 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::std::_Vector_base< _Tp, _Alloc> _Base;
# 222 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type _Tp_alloc_type;
# 223 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::__gnu_cxx::__alloc_traits< typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> _Alloc_traits;
# 226 "/usr/include/c++/5/bits/stl_vector.h" 3
public: typedef _Tp value_type;
# 227 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename ::std::_Vector_base< _Tp, _Alloc> ::pointer pointer;
# 228 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename ::__gnu_cxx::__alloc_traits< typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_pointer const_pointer;
# 229 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename ::__gnu_cxx::__alloc_traits< typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::reference reference;
# 230 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename ::__gnu_cxx::__alloc_traits< typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_reference const_reference;
# 231 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::__gnu_cxx::__normal_iterator< typename ::std::_Vector_base< _Tp, _Alloc> ::pointer, vector> iterator;
# 233 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::__gnu_cxx::__normal_iterator< typename ::__gnu_cxx::__alloc_traits< typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_pointer, vector> const_iterator;
# 234 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::std::reverse_iterator< ::__gnu_cxx::__normal_iterator< typename ::__gnu_cxx::__alloc_traits< typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_pointer, vector> > const_reverse_iterator;
# 235 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::std::reverse_iterator< ::__gnu_cxx::__normal_iterator< typename ::std::_Vector_base< _Tp, _Alloc> ::pointer, vector> > reverse_iterator;
# 236 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::std::size_t size_type;
# 237 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::std::ptrdiff_t difference_type;
# 238 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef _Alloc allocator_type;
# 241 "/usr/include/c++/5/bits/stl_vector.h" 3
protected: using ::std::_Vector_base< _Tp, _Alloc> ::_M_allocate;
# 242 "/usr/include/c++/5/bits/stl_vector.h" 3
using ::std::_Vector_base< _Tp, _Alloc> ::_M_deallocate;
# 243 "/usr/include/c++/5/bits/stl_vector.h" 3
using ::std::_Vector_base< _Tp, _Alloc> ::_M_impl;
# 244 "/usr/include/c++/5/bits/stl_vector.h" 3
using ::std::_Vector_base< _Tp, _Alloc> ::_M_get_Tp_allocator;
# 253 "/usr/include/c++/5/bits/stl_vector.h" 3
public: vector() : _Base()
# 257 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 264 "/usr/include/c++/5/bits/stl_vector.h" 3
explicit vector(const allocator_type &__a) : _Base(__a)
# 265 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 303 "/usr/include/c++/5/bits/stl_vector.h" 3
explicit vector(size_type __n, const value_type &__value = value_type(), const allocator_type &
# 304 "/usr/include/c++/5/bits/stl_vector.h" 3
__a = allocator_type()) : _Base(__n, __a)
# 306 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_fill_initialize(__n, __value); }
# 318 "/usr/include/c++/5/bits/stl_vector.h" 3
vector(const vector &__x) : _Base(__x.size(), _Alloc_traits::_S_select_on_copy((__x._M_get_Tp_allocator())))
# 321 "/usr/include/c++/5/bits/stl_vector.h" 3
{ ((this->_M_impl)._M_finish) = ::std::__uninitialized_copy_a(__x.begin(), __x.end(), ((this->_M_impl)._M_start), _M_get_Tp_allocator());
# 325 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 406 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator>
# 407 "/usr/include/c++/5/bits/stl_vector.h" 3
vector(_InputIterator __first, _InputIterator __last, const allocator_type &
# 408 "/usr/include/c++/5/bits/stl_vector.h" 3
__a = allocator_type()) : _Base(__a)
# 410 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 412 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename __is_integer< _InputIterator> ::__type _Integral;
# 413 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_initialize_dispatch(__first, __last, _Integral());
# 414 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 423 "/usr/include/c++/5/bits/stl_vector.h" 3
~vector()
# 424 "/usr/include/c++/5/bits/stl_vector.h" 3
{ ::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 425 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 436 "/usr/include/c++/5/bits/stl_vector.h" 3
vector &operator=(const vector & __x);
# 488 "/usr/include/c++/5/bits/stl_vector.h" 3
void assign(size_type __n, const value_type &__val)
# 489 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_fill_assign(__n, __val); }
# 510 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void
# 512 "/usr/include/c++/5/bits/stl_vector.h" 3
assign(_InputIterator __first, _InputIterator __last)
# 513 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 515 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename __is_integer< _InputIterator> ::__type _Integral;
# 516 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_assign_dispatch(__first, __last, _Integral());
# 517 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 538 "/usr/include/c++/5/bits/stl_vector.h" 3
using ::std::_Vector_base< _Tp, _Alloc> ::get_allocator;
# 547 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator begin()
# 548 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((iterator)(((this->_M_impl)._M_start))); }
# 556 "/usr/include/c++/5/bits/stl_vector.h" 3
const_iterator begin() const
# 557 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_iterator)(((this->_M_impl)._M_start))); }
# 565 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator end()
# 566 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((iterator)(((this->_M_impl)._M_finish))); }
# 574 "/usr/include/c++/5/bits/stl_vector.h" 3
const_iterator end() const
# 575 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_iterator)(((this->_M_impl)._M_finish))); }
# 583 "/usr/include/c++/5/bits/stl_vector.h" 3
reverse_iterator rbegin()
# 584 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((reverse_iterator)(this->end())); }
# 592 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reverse_iterator rbegin() const
# 593 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_reverse_iterator)(this->end())); }
# 601 "/usr/include/c++/5/bits/stl_vector.h" 3
reverse_iterator rend()
# 602 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((reverse_iterator)(this->begin())); }
# 610 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reverse_iterator rend() const
# 611 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 654 "/usr/include/c++/5/bits/stl_vector.h" 3
size_type size() const
# 655 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return (size_type)(((this->_M_impl)._M_finish) - ((this->_M_impl)._M_start)); }
# 659 "/usr/include/c++/5/bits/stl_vector.h" 3
size_type max_size() const
# 660 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
# 713 "/usr/include/c++/5/bits/stl_vector.h" 3
void resize(size_type __new_size, value_type __x = value_type())
# 714 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 715 "/usr/include/c++/5/bits/stl_vector.h" 3
if (__new_size > size()) {
# 716 "/usr/include/c++/5/bits/stl_vector.h" 3
insert(this->end(), __new_size - size(), __x); } else {
# 717 "/usr/include/c++/5/bits/stl_vector.h" 3
if (__new_size < size()) {
# 718 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_erase_at_end(((this->_M_impl)._M_start) + __new_size); } }
# 719 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 734 "/usr/include/c++/5/bits/stl_vector.h" 3
size_type capacity() const
# 735 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return (size_type)(((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 736 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 743 "/usr/include/c++/5/bits/stl_vector.h" 3
bool empty() const
# 744 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return this->begin() == this->end(); }
# 764 "/usr/include/c++/5/bits/stl_vector.h" 3
void reserve(size_type __n);
# 779 "/usr/include/c++/5/bits/stl_vector.h" 3
reference operator[](size_type __n)
# 780 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *(((this->_M_impl)._M_start) + __n); }
# 794 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reference operator[](size_type __n) const
# 795 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *(((this->_M_impl)._M_start) + __n); }
# 800 "/usr/include/c++/5/bits/stl_vector.h" 3
protected: void _M_range_check(size_type __n) const
# 801 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 802 "/usr/include/c++/5/bits/stl_vector.h" 3
if (__n >= this->size()) {
# 803 "/usr/include/c++/5/bits/stl_vector.h" 3
__throw_out_of_range_fmt("vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)", __n, this->size()); }
# 807 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 822 "/usr/include/c++/5/bits/stl_vector.h" 3
public: reference at(size_type __n)
# 823 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 824 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_check(__n);
# 825 "/usr/include/c++/5/bits/stl_vector.h" 3
return (*this)[__n];
# 826 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 840 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reference at(size_type __n) const
# 841 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 842 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_check(__n);
# 843 "/usr/include/c++/5/bits/stl_vector.h" 3
return (*this)[__n];
# 844 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 851 "/usr/include/c++/5/bits/stl_vector.h" 3
reference front()
# 852 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *this->begin(); }
# 859 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reference front() const
# 860 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *this->begin(); }
# 867 "/usr/include/c++/5/bits/stl_vector.h" 3
reference back()
# 868 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *(this->end() - 1); }
# 875 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reference back() const
# 876 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *(this->end() - 1); }
# 890 "/usr/include/c++/5/bits/stl_vector.h" 3
pointer data()
# 891 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return _M_data_ptr(((this->_M_impl)._M_start)); }
# 898 "/usr/include/c++/5/bits/stl_vector.h" 3
const_pointer data() const
# 899 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return _M_data_ptr(((this->_M_impl)._M_start)); }
# 913 "/usr/include/c++/5/bits/stl_vector.h" 3
void push_back(const value_type &__x)
# 914 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 915 "/usr/include/c++/5/bits/stl_vector.h" 3
if (((this->_M_impl)._M_finish) != ((this->_M_impl)._M_end_of_storage))
# 916 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 917 "/usr/include/c++/5/bits/stl_vector.h" 3
_Alloc_traits::construct((this->_M_impl), ((this->_M_impl)._M_finish), __x);
# 919 "/usr/include/c++/5/bits/stl_vector.h" 3
++((this->_M_impl)._M_finish);
# 920 "/usr/include/c++/5/bits/stl_vector.h" 3
} else {
# 925 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_insert_aux(this->end(), __x); }
# 927 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 949 "/usr/include/c++/5/bits/stl_vector.h" 3
void pop_back()
# 950 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 951 "/usr/include/c++/5/bits/stl_vector.h" 3
--((this->_M_impl)._M_finish);
# 952 "/usr/include/c++/5/bits/stl_vector.h" 3
_Alloc_traits::destroy((this->_M_impl), ((this->_M_impl)._M_finish));
# 953 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 998 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator insert(iterator __position, const value_type & __x);
# 1072 "/usr/include/c++/5/bits/stl_vector.h" 3
void insert(iterator __position, size_type __n, const value_type &__x)
# 1073 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_fill_insert(__position, __n, __x); }
# 1118 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void
# 1120 "/usr/include/c++/5/bits/stl_vector.h" 3
insert(iterator __position, _InputIterator __first, _InputIterator
# 1121 "/usr/include/c++/5/bits/stl_vector.h" 3
__last)
# 1122 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1124 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename __is_integer< _InputIterator> ::__type _Integral;
# 1125 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_insert_dispatch(__position, __first, __last, _Integral());
# 1126 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1149 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator erase(iterator __position)
# 1150 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return _M_erase(__position); }
# 1180 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator erase(iterator __first, iterator __last)
# 1181 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return _M_erase(__first, __last); }
# 1194 "/usr/include/c++/5/bits/stl_vector.h" 3
void swap(vector &__x)
# 1198 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1199 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_swap_data((__x._M_impl)));
# 1200 "/usr/include/c++/5/bits/stl_vector.h" 3
_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(), (__x._M_get_Tp_allocator()));
# 1202 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1211 "/usr/include/c++/5/bits/stl_vector.h" 3
void clear()
# 1212 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_erase_at_end(((this->_M_impl)._M_start)); }
# 1221 "/usr/include/c++/5/bits/stl_vector.h" 3
protected:
# 1219 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _ForwardIterator> pointer
# 1221 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_allocate_and_copy(size_type __n, _ForwardIterator
# 1222 "/usr/include/c++/5/bits/stl_vector.h" 3
__first, _ForwardIterator __last)
# 1223 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1224 "/usr/include/c++/5/bits/stl_vector.h" 3
pointer __result = (this->_M_allocate(__n));
# 1225 "/usr/include/c++/5/bits/stl_vector.h" 3
try
# 1226 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1227 "/usr/include/c++/5/bits/stl_vector.h" 3
::std::__uninitialized_copy_a(__first, __last, __result, _M_get_Tp_allocator());
# 1229 "/usr/include/c++/5/bits/stl_vector.h" 3
return __result;
# 1230 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1231 "/usr/include/c++/5/bits/stl_vector.h" 3
catch (...)
# 1232 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1233 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_deallocate(__result, __n);
# 1234 "/usr/include/c++/5/bits/stl_vector.h" 3
throw;
# 1235 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1236 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1245 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Integer> void
# 1247 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_initialize_dispatch(_Integer __n, _Integer __value, ::std::__true_type)
# 1248 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1249 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_start) = _M_allocate(static_cast< size_type>(__n));
# 1250 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + (static_cast< size_type>(__n)));
# 1252 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_fill_initialize(static_cast< size_type>(__n), __value);
# 1253 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1256 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void
# 1258 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_initialize_dispatch(_InputIterator __first, _InputIterator __last, ::std::__false_type)
# 1260 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1262 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename iterator_traits< _InputIterator> ::iterator_category _IterCategory;
# 1263 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_initialize(__first, __last, _IterCategory());
# 1264 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1267 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void
# 1269 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_initialize(_InputIterator __first, _InputIterator
# 1270 "/usr/include/c++/5/bits/stl_vector.h" 3
__last, ::std::input_iterator_tag)
# 1271 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1272 "/usr/include/c++/5/bits/stl_vector.h" 3
for (; __first != __last; ++__first) {
# 1276 "/usr/include/c++/5/bits/stl_vector.h" 3
push_back(*__first); }
# 1278 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1281 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _ForwardIterator> void
# 1283 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_initialize(_ForwardIterator __first, _ForwardIterator
# 1284 "/usr/include/c++/5/bits/stl_vector.h" 3
__last, ::std::forward_iterator_tag)
# 1285 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1286 "/usr/include/c++/5/bits/stl_vector.h" 3
const size_type __n = ::std::distance(__first, __last);
# 1287 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_start) = (this->_M_allocate(__n));
# 1288 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + __n);
# 1289 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_copy_a(__first, __last, ((this->_M_impl)._M_start), _M_get_Tp_allocator());
# 1293 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1298 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_fill_initialize(size_type __n, const value_type &__value)
# 1299 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1300 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_fill_n_a(((this->_M_impl)._M_start), __n, __value, _M_get_Tp_allocator());
# 1303 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1323 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Integer> void
# 1325 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_assign_dispatch(_Integer __n, _Integer __val, ::std::__true_type)
# 1326 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_fill_assign(__n, __val); }
# 1329 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void
# 1331 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_assign_dispatch(_InputIterator __first, _InputIterator __last, ::std::__false_type)
# 1333 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1335 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename iterator_traits< _InputIterator> ::iterator_category _IterCategory;
# 1336 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_assign_aux(__first, __last, _IterCategory());
# 1337 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1340 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, ::std::input_iterator_tag);
# 1346 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, ::std::forward_iterator_tag);
# 1354 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_fill_assign(size_type __n, const value_type & __val);
# 1363 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Integer> void
# 1365 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val, ::std::__true_type)
# 1367 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_fill_insert(__pos, __n, __val); }
# 1370 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void
# 1372 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator
# 1373 "/usr/include/c++/5/bits/stl_vector.h" 3
__last, ::std::__false_type)
# 1374 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1376 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename iterator_traits< _InputIterator> ::iterator_category _IterCategory;
# 1377 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_insert(__pos, __first, __last, _IterCategory());
# 1378 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1381 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, ::std::input_iterator_tag);
# 1387 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _ForwardIterator> void _M_range_insert(iterator __pos, _ForwardIterator __first, _ForwardIterator __last, ::std::forward_iterator_tag);
# 1395 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_fill_insert(iterator __pos, size_type __n, const value_type & __x);
# 1409 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_insert_aux(iterator __position, const value_type & __x);
# 1422 "/usr/include/c++/5/bits/stl_vector.h" 3
size_type _M_check_len(size_type __n, const char *__s) const
# 1423 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1424 "/usr/include/c++/5/bits/stl_vector.h" 3
if ((max_size() - size()) < __n) {
# 1425 "/usr/include/c++/5/bits/stl_vector.h" 3
__throw_length_error(__s); }
# 1427 "/usr/include/c++/5/bits/stl_vector.h" 3
const size_type __len = size() + ::std::max(size(), __n);
# 1428 "/usr/include/c++/5/bits/stl_vector.h" 3
return ((__len < size()) || (__len > max_size())) ? max_size() : __len;
# 1429 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1436 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_erase_at_end(pointer __pos)
# 1437 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1438 "/usr/include/c++/5/bits/stl_vector.h" 3
::std::_Destroy(__pos, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 1439 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = __pos;
# 1440 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1443 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator _M_erase(iterator __position);
# 1446 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator _M_erase(iterator __first, iterator __last);
# 1491 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Ptr> _Ptr
# 1493 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_data_ptr(_Ptr __ptr) const
# 1494 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return __ptr; }
# 1496 "/usr/include/c++/5/bits/stl_vector.h" 3
};
# 1509 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1511 "/usr/include/c++/5/bits/stl_vector.h" 3
operator==(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1512 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((__x.size()) == (__y.size())) && std::equal((__x.begin()), (__x.end()), (__y.begin()));
# 1513 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1526 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1528 "/usr/include/c++/5/bits/stl_vector.h" 3
operator<(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1529 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return std::lexicographical_compare((__x.begin()), (__x.end()), (__y.begin()), (__y.end()));
# 1530 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1533 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1535 "/usr/include/c++/5/bits/stl_vector.h" 3
operator!=(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1536 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return !(__x == __y); }
# 1539 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1541 "/usr/include/c++/5/bits/stl_vector.h" 3
operator>(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1542 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return __y < __x; }
# 1545 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1547 "/usr/include/c++/5/bits/stl_vector.h" 3
operator<=(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1548 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return !(__y < __x); }
# 1551 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1553 "/usr/include/c++/5/bits/stl_vector.h" 3
operator>=(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1554 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return !(__x < __y); }
# 1557 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline void
# 1559 "/usr/include/c++/5/bits/stl_vector.h" 3
swap(vector< _Tp, _Alloc> &__x, vector< _Tp, _Alloc> &__y)
# 1560 "/usr/include/c++/5/bits/stl_vector.h" 3
{ (__x.swap(__y)); }
# 1563 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 63 "/usr/include/c++/5/bits/stl_bvector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 67 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef unsigned long _Bit_type;
# 68 "/usr/include/c++/5/bits/stl_bvector.h" 3
enum { _S_word_bit = 64};
# 70 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct _Bit_reference {
# 72 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_type *_M_p;
# 73 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_type _M_mask;
# 75 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_reference(_Bit_type *__x, _Bit_type __y) : _M_p(__x), _M_mask(__y)
# 76 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 78 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_reference() : _M_p((0)), _M_mask((0)) { }
# 80 "/usr/include/c++/5/bits/stl_bvector.h" 3
operator bool() const
# 81 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return !(!((*(_M_p)) & (_M_mask))); }
# 84 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_reference &operator=(bool __x)
# 85 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 86 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__x) {
# 87 "/usr/include/c++/5/bits/stl_bvector.h" 3
(*(_M_p)) |= (_M_mask); } else {
# 89 "/usr/include/c++/5/bits/stl_bvector.h" 3
(*(_M_p)) &= (~(_M_mask)); }
# 90 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 91 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 94 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_reference &operator=(const _Bit_reference &__x)
# 95 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((*this) = ((bool)__x)); }
# 98 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator==(const _Bit_reference &__x) const
# 99 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((bool)(*this)) == ((bool)__x); }
# 102 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator<(const _Bit_reference &__x) const
# 103 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (!((bool)(*this))) && ((bool)__x); }
# 106 "/usr/include/c++/5/bits/stl_bvector.h" 3
void flip()
# 107 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ (*(_M_p)) ^= (_M_mask); }
# 108 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 136 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct _Bit_iterator_base : public iterator< random_access_iterator_tag, bool> {
# 139 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_type *_M_p;
# 140 "/usr/include/c++/5/bits/stl_bvector.h" 3
unsigned _M_offset;
# 142 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_iterator_base(_Bit_type *__x, unsigned __y) : _M_p(__x), _M_offset(__y)
# 143 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 146 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_bump_up()
# 147 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 148 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (((_M_offset)++) == (((int)_S_word_bit) - 1))
# 149 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 150 "/usr/include/c++/5/bits/stl_bvector.h" 3
(_M_offset) = (0);
# 151 "/usr/include/c++/5/bits/stl_bvector.h" 3
++(_M_p);
# 152 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 153 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 156 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_bump_down()
# 157 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 158 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (((_M_offset)--) == (0))
# 159 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 160 "/usr/include/c++/5/bits/stl_bvector.h" 3
(_M_offset) = (((int)_S_word_bit) - 1);
# 161 "/usr/include/c++/5/bits/stl_bvector.h" 3
--(_M_p);
# 162 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 163 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 166 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_incr(ptrdiff_t __i)
# 167 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 168 "/usr/include/c++/5/bits/stl_bvector.h" 3
difference_type __n = __i + (_M_offset);
# 169 "/usr/include/c++/5/bits/stl_bvector.h" 3
(_M_p) += (__n / ((int)_S_word_bit));
# 170 "/usr/include/c++/5/bits/stl_bvector.h" 3
__n = (__n % ((int)_S_word_bit));
# 171 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__n < (0))
# 172 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 173 "/usr/include/c++/5/bits/stl_bvector.h" 3
__n += ((int)_S_word_bit);
# 174 "/usr/include/c++/5/bits/stl_bvector.h" 3
--(_M_p);
# 175 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 176 "/usr/include/c++/5/bits/stl_bvector.h" 3
(_M_offset) = (static_cast< unsigned>(__n));
# 177 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 180 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator==(const _Bit_iterator_base &__i) const
# 181 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((_M_p) == (__i._M_p)) && ((_M_offset) == (__i._M_offset)); }
# 184 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator<(const _Bit_iterator_base &__i) const
# 185 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 186 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ((_M_p) < (__i._M_p)) || (((_M_p) == (__i._M_p)) && ((_M_offset) < (__i._M_offset)));
# 188 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 191 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator!=(const _Bit_iterator_base &__i) const
# 192 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return !((*this) == __i); }
# 195 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator>(const _Bit_iterator_base &__i) const
# 196 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (__i < (*this)); }
# 199 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator<=(const _Bit_iterator_base &__i) const
# 200 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return !(__i < (*this)); }
# 203 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator>=(const _Bit_iterator_base &__i) const
# 204 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return !((*this) < __i); }
# 205 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 208 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline ptrdiff_t operator-(const _Bit_iterator_base &__x, const _Bit_iterator_base &__y)
# 209 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 210 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ((((int)_S_word_bit) * ((__x._M_p) - (__y._M_p))) + (__x._M_offset)) - (__y._M_offset);
# 212 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 214 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct _Bit_iterator : public _Bit_iterator_base {
# 216 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef _Bit_reference reference;
# 217 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef _Bit_reference *pointer;
# 218 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef _Bit_iterator iterator;
# 220 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_iterator() : _Bit_iterator_base(0, 0) { }
# 222 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_iterator(_Bit_type *__x, unsigned __y) : _Bit_iterator_base(__x, __y)
# 223 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 226 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator _M_const_cast() const
# 227 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return *this; }
# 230 "/usr/include/c++/5/bits/stl_bvector.h" 3
reference operator*() const
# 231 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return reference(_M_p, 1UL << (_M_offset)); }
# 234 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator &operator++()
# 235 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 236 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_up();
# 237 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 238 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 241 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator operator++(int)
# 242 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 243 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator __tmp = *this;
# 244 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_up();
# 245 "/usr/include/c++/5/bits/stl_bvector.h" 3
return __tmp;
# 246 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 249 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator &operator--()
# 250 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 251 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_down();
# 252 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 253 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 256 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator operator--(int)
# 257 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 258 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator __tmp = *this;
# 259 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_down();
# 260 "/usr/include/c++/5/bits/stl_bvector.h" 3
return __tmp;
# 261 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 264 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator &operator+=(difference_type __i)
# 265 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 266 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_incr(__i);
# 267 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 268 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 271 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator &operator-=(difference_type __i)
# 272 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 273 "/usr/include/c++/5/bits/stl_bvector.h" 3
((*this) += (-__i));
# 274 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 275 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 278 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator operator+(difference_type __i) const
# 279 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 280 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator __tmp = *this;
# 281 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (__tmp += __i);
# 282 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 285 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator operator-(difference_type __i) const
# 286 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 287 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator __tmp = *this;
# 288 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (__tmp -= __i);
# 289 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 292 "/usr/include/c++/5/bits/stl_bvector.h" 3
reference operator[](difference_type __i) const
# 293 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (*(((*this) + __i))); }
# 294 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 297 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline _Bit_iterator operator+(ptrdiff_t __n, const _Bit_iterator &__x)
# 298 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (__x + __n); }
# 300 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct _Bit_const_iterator : public _Bit_iterator_base {
# 302 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef bool reference;
# 303 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef bool const_reference;
# 304 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef const bool *pointer;
# 305 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef _Bit_const_iterator const_iterator;
# 307 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_const_iterator() : _Bit_iterator_base(0, 0) { }
# 309 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_const_iterator(_Bit_type *__x, unsigned __y) : _Bit_iterator_base(__x, __y)
# 310 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 312 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_const_iterator(const _Bit_iterator &__x) : _Bit_iterator_base(__x._M_p, __x._M_offset)
# 313 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 316 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_iterator _M_const_cast() const
# 317 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return _Bit_iterator(_M_p, _M_offset); }
# 320 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reference operator*() const
# 321 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return _Bit_reference(_M_p, 1UL << (_M_offset)); }
# 324 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator &operator++()
# 325 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 326 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_up();
# 327 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 328 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 331 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator operator++(int)
# 332 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 333 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator __tmp = *this;
# 334 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_up();
# 335 "/usr/include/c++/5/bits/stl_bvector.h" 3
return __tmp;
# 336 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 339 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator &operator--()
# 340 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 341 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_down();
# 342 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 343 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 346 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator operator--(int)
# 347 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 348 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator __tmp = *this;
# 349 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_down();
# 350 "/usr/include/c++/5/bits/stl_bvector.h" 3
return __tmp;
# 351 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 354 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator &operator+=(difference_type __i)
# 355 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 356 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_incr(__i);
# 357 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 358 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 361 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator &operator-=(difference_type __i)
# 362 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 363 "/usr/include/c++/5/bits/stl_bvector.h" 3
((*this) += (-__i));
# 364 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 365 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 368 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator operator+(difference_type __i) const
# 369 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 370 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator __tmp = *this;
# 371 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (__tmp += __i);
# 372 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 375 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator operator-(difference_type __i) const
# 376 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 377 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator __tmp = *this;
# 378 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (__tmp -= __i);
# 379 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 382 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reference operator[](difference_type __i) const
# 383 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (*(((*this) + __i))); }
# 384 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 387 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline _Bit_const_iterator operator+(ptrdiff_t __n, const _Bit_const_iterator &__x)
# 388 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (__x + __n); }
# 391 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline void __fill_bvector(_Bit_iterator __first, _Bit_iterator __last, bool __x)
# 392 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 393 "/usr/include/c++/5/bits/stl_bvector.h" 3
for (; (__first != __last); (++__first)) {
# 394 "/usr/include/c++/5/bits/stl_bvector.h" 3
(((*__first)) = __x); }
# 395 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 398 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline void fill(_Bit_iterator __first, _Bit_iterator __last, const bool &__x)
# 399 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 400 "/usr/include/c++/5/bits/stl_bvector.h" 3
if ((__first._M_p) != (__last._M_p))
# 401 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 402 "/usr/include/c++/5/bits/stl_bvector.h" 3
std::fill((__first._M_p) + 1, __last._M_p, __x ? ~0 : 0);
# 403 "/usr/include/c++/5/bits/stl_bvector.h" 3
__fill_bvector(__first, _Bit_iterator((__first._M_p) + 1, 0), __x);
# 404 "/usr/include/c++/5/bits/stl_bvector.h" 3
__fill_bvector(_Bit_iterator(__last._M_p, 0), __last, __x);
# 405 "/usr/include/c++/5/bits/stl_bvector.h" 3
} else {
# 407 "/usr/include/c++/5/bits/stl_bvector.h" 3
__fill_bvector(__first, __last, __x); }
# 408 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 410 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _Alloc>
# 411 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct _Bvector_base {
# 414 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< unsigned long> ::other _Bit_alloc_type;
# 416 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< unsigned long> ::other> _Bit_alloc_traits;
# 417 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< unsigned long> ::other> ::pointer _Bit_pointer;
# 419 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct _Bvector_impl : public _Bit_alloc_type {
# 422 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::_Bit_iterator _M_start;
# 423 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::_Bit_iterator _M_finish;
# 424 "/usr/include/c++/5/bits/stl_bvector.h" 3
typename ::std::_Bvector_base< _Alloc> ::_Bit_pointer _M_end_of_storage;
# 426 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bvector_impl() : ::std::_Bvector_base< _Alloc> ::_Bit_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
# 428 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 430 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bvector_impl(const typename ::std::_Bvector_base< _Alloc> ::_Bit_alloc_type &__a) : ::std::_Bvector_base< _Alloc> ::_Bit_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
# 432 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 442 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::_Bit_type *_M_end_addr() const
# 443 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 444 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (_M_end_of_storage) {
# 445 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ::std::__addressof((_M_end_of_storage)[-1]) + 1; }
# 446 "/usr/include/c++/5/bits/stl_bvector.h" 3
return 0;
# 447 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 448 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 451 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef _Alloc allocator_type;
# 454 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_alloc_type &_M_get_Bit_allocator()
# 455 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return *(static_cast< _Bit_alloc_type *>(&(this->_M_impl))); }
# 458 "/usr/include/c++/5/bits/stl_bvector.h" 3
const _Bit_alloc_type &_M_get_Bit_allocator() const
# 459 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return *(static_cast< const _Bit_alloc_type *>(&(this->_M_impl))); }
# 462 "/usr/include/c++/5/bits/stl_bvector.h" 3
allocator_type get_allocator() const
# 463 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (allocator_type)this->_M_get_Bit_allocator(); }
# 465 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bvector_base() : _M_impl()
# 466 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 468 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bvector_base(const allocator_type &__a) : _M_impl(__a)
# 469 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 484 "/usr/include/c++/5/bits/stl_bvector.h" 3
~_Bvector_base()
# 485 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ this->_M_deallocate(); }
# 488 "/usr/include/c++/5/bits/stl_bvector.h" 3
protected: _Bvector_impl _M_impl;
# 491 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_pointer _M_allocate(size_t __n)
# 492 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return _Bit_alloc_traits::allocate(_M_impl, (_S_nword)(__n)); }
# 495 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_deallocate()
# 496 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 497 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (((_M_impl)._M_start)._M_p)
# 498 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 499 "/usr/include/c++/5/bits/stl_bvector.h" 3
const size_t __n = ((_M_impl)._M_end_addr()) - (((_M_impl)._M_start)._M_p);
# 500 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_alloc_traits::deallocate(_M_impl, ((_M_impl)._M_end_of_storage) - __n, __n);
# 503 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 504 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 507 "/usr/include/c++/5/bits/stl_bvector.h" 3
static size_t _S_nword(size_t __n)
# 508 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((__n + ((int)_S_word_bit)) - (1)) / ((int)_S_word_bit); }
# 509 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 512 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 517 "/usr/include/c++/5/bits/stl_bvector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 540 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _Alloc>
# 541 "/usr/include/c++/5/bits/stl_bvector.h" 3
class vector< bool, _Alloc> : protected _Bvector_base< _Alloc> {
# 543 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::_Bvector_base< _Alloc> _Base;
# 544 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef typename ::std::_Bvector_base< _Alloc> ::_Bit_pointer _Bit_pointer;
# 545 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef typename ::std::_Bvector_base< _Alloc> ::_Bit_alloc_traits _Bit_alloc_traits;
# 552 "/usr/include/c++/5/bits/stl_bvector.h" 3
public: typedef bool value_type;
# 553 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::size_t size_type;
# 554 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::ptrdiff_t difference_type;
# 555 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::_Bit_reference reference;
# 556 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef bool const_reference;
# 557 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::_Bit_reference *pointer;
# 558 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef const bool *const_pointer;
# 559 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::_Bit_iterator iterator;
# 560 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::_Bit_const_iterator const_iterator;
# 561 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::reverse_iterator< ::std::_Bit_const_iterator> const_reverse_iterator;
# 562 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::reverse_iterator< ::std::_Bit_iterator> reverse_iterator;
# 563 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef _Alloc allocator_type;
# 565 "/usr/include/c++/5/bits/stl_bvector.h" 3
allocator_type get_allocator() const
# 566 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return _Base::get_allocator(); }
# 569 "/usr/include/c++/5/bits/stl_bvector.h" 3
protected: using ::std::_Bvector_base< _Alloc> ::_M_allocate;
# 570 "/usr/include/c++/5/bits/stl_bvector.h" 3
using ::std::_Bvector_base< _Alloc> ::_M_deallocate;
# 571 "/usr/include/c++/5/bits/stl_bvector.h" 3
using ::std::_Bvector_base< _Alloc> ::_S_nword;
# 572 "/usr/include/c++/5/bits/stl_bvector.h" 3
using ::std::_Bvector_base< _Alloc> ::_M_get_Bit_allocator;
# 575 "/usr/include/c++/5/bits/stl_bvector.h" 3
public: vector() : _Base()
# 579 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 582 "/usr/include/c++/5/bits/stl_bvector.h" 3
explicit vector(const allocator_type &__a) : _Base(__a)
# 583 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 601 "/usr/include/c++/5/bits/stl_bvector.h" 3
explicit vector(size_type __n, const bool &__value = ((bool)0), const allocator_type &
# 602 "/usr/include/c++/5/bits/stl_bvector.h" 3
__a = allocator_type()) : _Base(__a)
# 604 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 605 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__n);
# 606 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::fill((((this->_M_impl)._M_start)._M_p), ((this->_M_impl)._M_end_addr()), __value ? ~0 : 0);
# 608 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 611 "/usr/include/c++/5/bits/stl_bvector.h" 3
vector(const ::std::vector< bool, _Alloc> &__x) : _Base(_Bit_alloc_traits::_S_select_on_copy((__x._M_get_Bit_allocator())))
# 613 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 614 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__x.size());
# 615 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_copy_aligned(__x.begin(), __x.end(), ((this->_M_impl)._M_start));
# 616 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 667 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator>
# 668 "/usr/include/c++/5/bits/stl_bvector.h" 3
vector(_InputIterator __first, _InputIterator __last, const allocator_type &
# 669 "/usr/include/c++/5/bits/stl_bvector.h" 3
__a = allocator_type()) : _Base(__a)
# 671 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 672 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef typename __is_integer< _InputIterator> ::__type _Integral;
# 673 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize_dispatch(__first, __last, _Integral());
# 674 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 677 "/usr/include/c++/5/bits/stl_bvector.h" 3
~vector() { }
# 680 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::vector< bool, _Alloc> &operator=(const ::std::vector< bool, _Alloc> &__x)
# 681 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 682 "/usr/include/c++/5/bits/stl_bvector.h" 3
if ((&__x) == this) {
# 683 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this; }
# 699 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__x.size() > capacity())
# 700 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 701 "/usr/include/c++/5/bits/stl_bvector.h" 3
(this->_M_deallocate());
# 702 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__x.size());
# 703 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 704 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_finish) = _M_copy_aligned(__x.begin(), __x.end(), this->begin());
# 706 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 707 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 753 "/usr/include/c++/5/bits/stl_bvector.h" 3
void assign(size_type __n, const bool &__x)
# 754 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_fill_assign(__n, __x); }
# 763 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 765 "/usr/include/c++/5/bits/stl_bvector.h" 3
assign(_InputIterator __first, _InputIterator __last)
# 766 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 767 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef typename __is_integer< _InputIterator> ::__type _Integral;
# 768 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_assign_dispatch(__first, __last, _Integral());
# 769 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 779 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator begin()
# 780 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->_M_impl)._M_start); }
# 783 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator begin() const
# 784 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->_M_impl)._M_start); }
# 787 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator end()
# 788 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->_M_impl)._M_finish); }
# 791 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator end() const
# 792 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->_M_impl)._M_finish); }
# 795 "/usr/include/c++/5/bits/stl_bvector.h" 3
reverse_iterator rbegin()
# 796 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((reverse_iterator)(this->end())); }
# 799 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reverse_iterator rbegin() const
# 800 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((const_reverse_iterator)(this->end())); }
# 803 "/usr/include/c++/5/bits/stl_bvector.h" 3
reverse_iterator rend()
# 804 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((reverse_iterator)(this->begin())); }
# 807 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reverse_iterator rend() const
# 808 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 829 "/usr/include/c++/5/bits/stl_bvector.h" 3
size_type size() const
# 830 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (size_type)(((this->end()) - (this->begin()))); }
# 833 "/usr/include/c++/5/bits/stl_bvector.h" 3
size_type max_size() const
# 834 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 835 "/usr/include/c++/5/bits/stl_bvector.h" 3
const size_type __isize = ((::__gnu_cxx::__numeric_traits_integer< long> ::__max - ((int)_S_word_bit)) + (1));
# 838 "/usr/include/c++/5/bits/stl_bvector.h" 3
const size_type __asize = _Bit_alloc_traits::max_size(_M_get_Bit_allocator());
# 840 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (__asize <= (__isize / ((int)_S_word_bit))) ? __asize * ((int)_S_word_bit) : __isize;
# 842 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 845 "/usr/include/c++/5/bits/stl_bvector.h" 3
size_type capacity() const
# 846 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (size_type)((const_iterator(((this->_M_impl)._M_end_addr()), 0) - (this->begin())));
# 847 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 850 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool empty() const
# 851 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->begin()) == (this->end())); }
# 854 "/usr/include/c++/5/bits/stl_bvector.h" 3
reference operator[](size_type __n)
# 855 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 856 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (*iterator((((this->_M_impl)._M_start)._M_p) + (__n / ((int)_S_word_bit)), __n % ((int)_S_word_bit)));
# 858 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 861 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reference operator[](size_type __n) const
# 862 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 863 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (*const_iterator((((this->_M_impl)._M_start)._M_p) + (__n / ((int)_S_word_bit)), __n % ((int)_S_word_bit)));
# 865 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 869 "/usr/include/c++/5/bits/stl_bvector.h" 3
protected: void _M_range_check(size_type __n) const
# 870 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 871 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__n >= this->size()) {
# 872 "/usr/include/c++/5/bits/stl_bvector.h" 3
__throw_out_of_range_fmt("vector<bool>::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)", __n, this->size()); }
# 876 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 880 "/usr/include/c++/5/bits/stl_bvector.h" 3
public: reference at(size_type __n)
# 881 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_range_check(__n); return (*this)[__n]; }
# 884 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reference at(size_type __n) const
# 885 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_range_check(__n); return (*this)[__n]; }
# 888 "/usr/include/c++/5/bits/stl_bvector.h" 3
void reserve(size_type __n)
# 889 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 890 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__n > max_size()) {
# 891 "/usr/include/c++/5/bits/stl_bvector.h" 3
__throw_length_error("vector::reserve"); }
# 892 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (capacity() < __n) {
# 893 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_reallocate(__n); }
# 894 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 897 "/usr/include/c++/5/bits/stl_bvector.h" 3
reference front()
# 898 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (*(this->begin())); }
# 901 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reference front() const
# 902 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (*(this->begin())); }
# 905 "/usr/include/c++/5/bits/stl_bvector.h" 3
reference back()
# 906 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (*(((this->end()) - (1)))); }
# 909 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reference back() const
# 910 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (*(((this->end()) - (1)))); }
# 918 "/usr/include/c++/5/bits/stl_bvector.h" 3
void data() { }
# 921 "/usr/include/c++/5/bits/stl_bvector.h" 3
void push_back(bool __x)
# 922 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 923 "/usr/include/c++/5/bits/stl_bvector.h" 3
if ((((this->_M_impl)._M_finish)._M_p) != ((this->_M_impl)._M_end_addr())) {
# 924 "/usr/include/c++/5/bits/stl_bvector.h" 3
(*(((this->_M_impl)._M_finish)++)) = __x; } else {
# 926 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_insert_aux(this->end(), __x); }
# 927 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 930 "/usr/include/c++/5/bits/stl_bvector.h" 3
void swap(::std::vector< bool, _Alloc> &__x)
# 934 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 935 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::swap(((this->_M_impl)._M_start), ((__x._M_impl)._M_start));
# 936 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::swap(((this->_M_impl)._M_finish), ((__x._M_impl)._M_finish));
# 937 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::swap(((this->_M_impl)._M_end_of_storage), ((__x._M_impl)._M_end_of_storage));
# 939 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_alloc_traits::_S_on_swap(_M_get_Bit_allocator(), (__x._M_get_Bit_allocator()));
# 941 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 945 "/usr/include/c++/5/bits/stl_bvector.h" 3
static void swap(reference __x, reference __y)
# 946 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 947 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool __tmp = __x;
# 948 "/usr/include/c++/5/bits/stl_bvector.h" 3
(__x = __y);
# 949 "/usr/include/c++/5/bits/stl_bvector.h" 3
(__y = __tmp);
# 950 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 956 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator insert(iterator __position, const bool &__x = ((bool)0))
# 958 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 959 "/usr/include/c++/5/bits/stl_bvector.h" 3
const difference_type __n = (__position - (this->begin()));
# 960 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (((((this->_M_impl)._M_finish)._M_p) != ((this->_M_impl)._M_end_addr())) && (__position == (this->end()))) {
# 962 "/usr/include/c++/5/bits/stl_bvector.h" 3
(*(((this->_M_impl)._M_finish)++)) = __x; } else {
# 964 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_insert_aux(__position._M_const_cast(), __x); }
# 965 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ((this->begin()) + __n);
# 966 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 981 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 983 "/usr/include/c++/5/bits/stl_bvector.h" 3
insert(iterator __position, _InputIterator
# 984 "/usr/include/c++/5/bits/stl_bvector.h" 3
__first, _InputIterator __last)
# 985 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 986 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef typename __is_integer< _InputIterator> ::__type _Integral;
# 987 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_insert_dispatch(__position, __first, __last, _Integral());
# 988 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1001 "/usr/include/c++/5/bits/stl_bvector.h" 3
void insert(iterator __position, size_type __n, const bool &__x)
# 1002 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_fill_insert(__position, __n, __x); }
# 1012 "/usr/include/c++/5/bits/stl_bvector.h" 3
void pop_back()
# 1013 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ --((this->_M_impl)._M_finish); }
# 1019 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator erase(iterator __position)
# 1021 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return this->_M_erase(__position._M_const_cast()); }
# 1027 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator erase(iterator __first, iterator __last)
# 1029 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return this->_M_erase(__first._M_const_cast(), __last._M_const_cast()); }
# 1032 "/usr/include/c++/5/bits/stl_bvector.h" 3
void resize(size_type __new_size, bool __x = ((bool)0))
# 1033 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1034 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__new_size < size()) {
# 1035 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_erase_at_end(((this->begin()) + ((difference_type)__new_size))); } else {
# 1037 "/usr/include/c++/5/bits/stl_bvector.h" 3
insert(this->end(), __new_size - size(), __x); }
# 1038 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1047 "/usr/include/c++/5/bits/stl_bvector.h" 3
void flip()
# 1048 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1049 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::_Bit_type *const __end = ((this->_M_impl)._M_end_addr());
# 1050 "/usr/include/c++/5/bits/stl_bvector.h" 3
for (::std::_Bit_type *__p = ((((this->_M_impl)._M_start)._M_p)); __p != __end; ++__p) {
# 1051 "/usr/include/c++/5/bits/stl_bvector.h" 3
(*__p) = (~(*__p)); }
# 1052 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1055 "/usr/include/c++/5/bits/stl_bvector.h" 3
void clear()
# 1056 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_erase_at_end(this->begin()); }
# 1073 "/usr/include/c++/5/bits/stl_bvector.h" 3
protected: iterator _M_copy_aligned(const_iterator __first, const_iterator __last, iterator
# 1074 "/usr/include/c++/5/bits/stl_bvector.h" 3
__result)
# 1075 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1076 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::_Bit_type *__q = std::copy(__first._M_p, __last._M_p, __result._M_p);
# 1077 "/usr/include/c++/5/bits/stl_bvector.h" 3
return std::copy(const_iterator(__last._M_p, 0), __last, iterator(__q, 0));
# 1079 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1082 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_initialize(size_type __n)
# 1083 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1084 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_pointer __q = (this->_M_allocate(__n));
# 1085 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__n));
# 1086 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_start) = iterator(::std::__addressof(*__q), 0);
# 1087 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_finish) = (((this->_M_impl)._M_start) + ((difference_type)__n));
# 1088 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1091 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_reallocate(size_type __n);
# 1102 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _Integer> void
# 1104 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize_dispatch(_Integer __n, _Integer __x, ::std::__true_type)
# 1105 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1106 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(static_cast< size_type>(__n));
# 1107 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::fill((((this->_M_impl)._M_start)._M_p), ((this->_M_impl)._M_end_addr()), (__x) ? ~0 : 0);
# 1109 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1111 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1113 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize_dispatch(_InputIterator __first, _InputIterator __last, ::std::__false_type)
# 1115 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_initialize_range(__first, __last, ::std::__iterator_category(__first));
# 1116 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1118 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1120 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize_range(_InputIterator __first, _InputIterator __last, ::std::input_iterator_tag)
# 1122 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1123 "/usr/include/c++/5/bits/stl_bvector.h" 3
for (; __first != __last; ++__first) {
# 1124 "/usr/include/c++/5/bits/stl_bvector.h" 3
push_back(*__first); }
# 1125 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1127 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _ForwardIterator> void
# 1129 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize_range(_ForwardIterator __first, _ForwardIterator __last, ::std::forward_iterator_tag)
# 1131 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1132 "/usr/include/c++/5/bits/stl_bvector.h" 3
const size_type __n = ::std::distance(__first, __last);
# 1133 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__n);
# 1134 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::copy(__first, __last, ((this->_M_impl)._M_start));
# 1135 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1139 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _Integer> void
# 1141 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_assign_dispatch(_Integer __n, _Integer __val, ::std::__true_type)
# 1142 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_fill_assign(__n, __val); }
# 1144 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1146 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_assign_dispatch(_InputIterator __first, _InputIterator __last, ::std::__false_type)
# 1148 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_assign_aux(__first, __last, ::std::__iterator_category(__first)); }
# 1151 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_fill_assign(::std::size_t __n, bool __x)
# 1152 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1153 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__n > size())
# 1154 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1155 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::fill((((this->_M_impl)._M_start)._M_p), ((this->_M_impl)._M_end_addr()), __x ? ~0 : 0);
# 1157 "/usr/include/c++/5/bits/stl_bvector.h" 3
insert(this->end(), __n - size(), __x);
# 1158 "/usr/include/c++/5/bits/stl_bvector.h" 3
} else
# 1160 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1161 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_erase_at_end(((this->begin()) + __n));
# 1162 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::fill((((this->_M_impl)._M_start)._M_p), ((this->_M_impl)._M_end_addr()), __x ? ~0 : 0);
# 1164 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1165 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1167 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1169 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_assign_aux(_InputIterator __first, _InputIterator __last, ::std::input_iterator_tag)
# 1171 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1172 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator __cur = this->begin();
# 1173 "/usr/include/c++/5/bits/stl_bvector.h" 3
for (; (__first != __last) && (__cur != (this->end())); (++__cur), (++__first)) {
# 1174 "/usr/include/c++/5/bits/stl_bvector.h" 3
(*__cur) = (*__first); }
# 1175 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__first == __last) {
# 1176 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_erase_at_end(__cur); } else {
# 1178 "/usr/include/c++/5/bits/stl_bvector.h" 3
insert(this->end(), __first, __last); }
# 1179 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1181 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _ForwardIterator> void
# 1183 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, ::std::forward_iterator_tag)
# 1185 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1186 "/usr/include/c++/5/bits/stl_bvector.h" 3
const size_type __len = ::std::distance(__first, __last);
# 1187 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__len < size()) {
# 1188 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_erase_at_end(::std::copy(__first, __last, this->begin())); } else
# 1190 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1191 "/usr/include/c++/5/bits/stl_bvector.h" 3
_ForwardIterator __mid = __first;
# 1192 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::advance(__mid, size());
# 1193 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::copy(__first, __mid, this->begin());
# 1194 "/usr/include/c++/5/bits/stl_bvector.h" 3
insert(this->end(), __mid, __last);
# 1195 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1196 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1202 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _Integer> void
# 1204 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x, ::std::__true_type)
# 1206 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_fill_insert(__pos, __n, __x); }
# 1208 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1210 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_insert_dispatch(iterator __pos, _InputIterator
# 1211 "/usr/include/c++/5/bits/stl_bvector.h" 3
__first, _InputIterator __last, ::std::__false_type)
# 1213 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_insert_range(__pos, __first, __last, ::std::__iterator_category(__first));
# 1214 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1217 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_fill_insert(iterator __position, size_type __n, bool __x);
# 1219 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1221 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_insert_range(iterator __pos, _InputIterator __first, _InputIterator
# 1222 "/usr/include/c++/5/bits/stl_bvector.h" 3
__last, ::std::input_iterator_tag)
# 1223 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1224 "/usr/include/c++/5/bits/stl_bvector.h" 3
for (; __first != __last; ++__first)
# 1225 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1226 "/usr/include/c++/5/bits/stl_bvector.h" 3
__pos = insert(__pos, *__first);
# 1227 "/usr/include/c++/5/bits/stl_bvector.h" 3
(++__pos);
# 1228 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1229 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1231 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, ::std::forward_iterator_tag);
# 1237 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_insert_aux(iterator __position, bool __x);
# 1240 "/usr/include/c++/5/bits/stl_bvector.h" 3
size_type _M_check_len(size_type __n, const char *__s) const
# 1241 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1242 "/usr/include/c++/5/bits/stl_bvector.h" 3
if ((max_size() - size()) < __n) {
# 1243 "/usr/include/c++/5/bits/stl_bvector.h" 3
__throw_length_error(__s); }
# 1245 "/usr/include/c++/5/bits/stl_bvector.h" 3
const size_type __len = size() + ::std::max(size(), __n);
# 1246 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ((__len < size()) || (__len > max_size())) ? max_size() : __len;
# 1247 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1250 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_erase_at_end(iterator __pos)
# 1251 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ ((this->_M_impl)._M_finish) = __pos; }
# 1254 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator _M_erase(iterator __pos);
# 1257 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator _M_erase(iterator __first, iterator __last);
# 1258 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 1261 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 59 "/usr/include/c++/5/bits/vector.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 63 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> void
# 66 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::reserve(size_type __n)
# 67 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 68 "/usr/include/c++/5/bits/vector.tcc" 3
if (__n > this->max_size()) {
# 69 "/usr/include/c++/5/bits/vector.tcc" 3
__throw_length_error("vector::reserve"); }
# 70 "/usr/include/c++/5/bits/vector.tcc" 3
if (this->capacity() < __n)
# 71 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 72 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __old_size = size();
# 73 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __tmp = _M_allocate_and_copy(__n, ((this->_M_impl)._M_start), ((this->_M_impl)._M_finish));
# 76 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 78 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 81 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __tmp;
# 82 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = (__tmp + __old_size);
# 83 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + __n);
# 84 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 85 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 105 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> typename vector< _Tp, _Alloc> ::iterator
# 111 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::insert(iterator __position, const value_type &__x)
# 113 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 114 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __n = __position - this->begin();
# 115 "/usr/include/c++/5/bits/vector.tcc" 3
if ((((this->_M_impl)._M_finish) != ((this->_M_impl)._M_end_of_storage)) && (__position == this->end()))
# 117 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 118 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::construct((this->_M_impl), ((this->_M_impl)._M_finish), __x);
# 119 "/usr/include/c++/5/bits/vector.tcc" 3
++((this->_M_impl)._M_finish);
# 120 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 122 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 133 "/usr/include/c++/5/bits/vector.tcc" 3
_M_insert_aux(__position, __x);
# 135 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 136 "/usr/include/c++/5/bits/vector.tcc" 3
return ((iterator)(((this->_M_impl)._M_start) + __n));
# 137 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 139 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> typename vector< _Tp, _Alloc> ::iterator
# 142 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_erase(iterator __position)
# 143 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 144 "/usr/include/c++/5/bits/vector.tcc" 3
if ((__position + 1) != this->end()) {
# 145 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy(__position + 1, this->end(), __position); }
# 146 "/usr/include/c++/5/bits/vector.tcc" 3
--((this->_M_impl)._M_finish);
# 147 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::destroy((this->_M_impl), ((this->_M_impl)._M_finish));
# 148 "/usr/include/c++/5/bits/vector.tcc" 3
return __position;
# 149 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 151 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> typename vector< _Tp, _Alloc> ::iterator
# 154 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_erase(iterator __first, iterator __last)
# 155 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 156 "/usr/include/c++/5/bits/vector.tcc" 3
if (__first != __last)
# 157 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 158 "/usr/include/c++/5/bits/vector.tcc" 3
if (__last != this->end()) {
# 159 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy(__last, this->end(), __first); }
# 160 "/usr/include/c++/5/bits/vector.tcc" 3
_M_erase_at_end((__first.base()) + (this->end() - __last));
# 161 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 162 "/usr/include/c++/5/bits/vector.tcc" 3
return __first;
# 163 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 165 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> vector< _Tp, _Alloc> &
# 168 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::operator=(const vector &__x)
# 169 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 170 "/usr/include/c++/5/bits/vector.tcc" 3
if ((&__x) != this)
# 171 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 191 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __xlen = __x.size();
# 192 "/usr/include/c++/5/bits/vector.tcc" 3
if (__xlen > capacity())
# 193 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 194 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(), __x.end());
# 196 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 198 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 201 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __tmp;
# 202 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + __xlen);
# 203 "/usr/include/c++/5/bits/vector.tcc" 3
} else {
# 204 "/usr/include/c++/5/bits/vector.tcc" 3
if (size() >= __xlen)
# 205 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 206 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(::std::copy(__x.begin(), __x.end(), this->begin()), this->end(), _M_get_Tp_allocator());
# 208 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 210 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 211 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy(((__x._M_impl)._M_start), ((__x._M_impl)._M_start) + size(), ((this->_M_impl)._M_start));
# 213 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_copy_a(((__x._M_impl)._M_start) + size(), ((__x._M_impl)._M_finish), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 217 "/usr/include/c++/5/bits/vector.tcc" 3
} }
# 218 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = (((this->_M_impl)._M_start) + __xlen);
# 219 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 220 "/usr/include/c++/5/bits/vector.tcc" 3
return *this;
# 221 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 223 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> void
# 226 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_fill_assign(::std::size_t __n, const value_type &__val)
# 227 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 228 "/usr/include/c++/5/bits/vector.tcc" 3
if (__n > capacity())
# 229 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 230 "/usr/include/c++/5/bits/vector.tcc" 3
vector __tmp(__n, __val, _M_get_Tp_allocator());
# 231 "/usr/include/c++/5/bits/vector.tcc" 3
((__tmp._M_impl)._M_swap_data((this->_M_impl)));
# 232 "/usr/include/c++/5/bits/vector.tcc" 3
} else {
# 233 "/usr/include/c++/5/bits/vector.tcc" 3
if (__n > size())
# 234 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 235 "/usr/include/c++/5/bits/vector.tcc" 3
::std::fill(this->begin(), this->end(), __val);
# 236 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_fill_n_a(((this->_M_impl)._M_finish), __n - size(), __val, _M_get_Tp_allocator());
# 240 "/usr/include/c++/5/bits/vector.tcc" 3
} else {
# 242 "/usr/include/c++/5/bits/vector.tcc" 3
_M_erase_at_end(::std::fill_n(((this->_M_impl)._M_start), __n, __val)); } }
# 243 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 245 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 246 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _InputIterator> void
# 249 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_assign_aux(_InputIterator __first, _InputIterator __last, ::std::input_iterator_tag)
# 251 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 252 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __cur(((this->_M_impl)._M_start));
# 253 "/usr/include/c++/5/bits/vector.tcc" 3
for (; (__first != __last) && (__cur != ((this->_M_impl)._M_finish)); (++__cur), (++__first)) {
# 255 "/usr/include/c++/5/bits/vector.tcc" 3
(*__cur) = (*__first); }
# 256 "/usr/include/c++/5/bits/vector.tcc" 3
if (__first == __last) {
# 257 "/usr/include/c++/5/bits/vector.tcc" 3
_M_erase_at_end(__cur); } else {
# 259 "/usr/include/c++/5/bits/vector.tcc" 3
insert(this->end(), __first, __last); }
# 260 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 262 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 263 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _ForwardIterator> void
# 266 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, ::std::forward_iterator_tag)
# 268 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 269 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = ::std::distance(__first, __last);
# 271 "/usr/include/c++/5/bits/vector.tcc" 3
if (__len > capacity())
# 272 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 273 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
# 274 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 276 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 279 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __tmp;
# 280 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = (((this->_M_impl)._M_start) + __len);
# 281 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = ((this->_M_impl)._M_finish);
# 282 "/usr/include/c++/5/bits/vector.tcc" 3
} else {
# 283 "/usr/include/c++/5/bits/vector.tcc" 3
if (size() >= __len) {
# 284 "/usr/include/c++/5/bits/vector.tcc" 3
_M_erase_at_end(::std::copy(__first, __last, ((this->_M_impl)._M_start))); } else
# 286 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 287 "/usr/include/c++/5/bits/vector.tcc" 3
_ForwardIterator __mid = __first;
# 288 "/usr/include/c++/5/bits/vector.tcc" 3
::std::advance(__mid, size());
# 289 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy(__first, __mid, ((this->_M_impl)._M_start));
# 290 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_copy_a(__mid, __last, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 294 "/usr/include/c++/5/bits/vector.tcc" 3
} }
# 295 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 324 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> void
# 327 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_insert_aux(iterator __position, const _Tp &__x)
# 329 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 330 "/usr/include/c++/5/bits/vector.tcc" 3
if (((this->_M_impl)._M_finish) != ((this->_M_impl)._M_end_of_storage))
# 331 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 332 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::construct((this->_M_impl), ((this->_M_impl)._M_finish), *(((this->_M_impl)._M_finish) - 1));
# 335 "/usr/include/c++/5/bits/vector.tcc" 3
++((this->_M_impl)._M_finish);
# 337 "/usr/include/c++/5/bits/vector.tcc" 3
_Tp __x_copy = __x;
# 339 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy_backward((__position.base()), ((this->_M_impl)._M_finish) - 2, ((this->_M_impl)._M_finish) - 1);
# 343 "/usr/include/c++/5/bits/vector.tcc" 3
(*__position) = __x_copy;
# 347 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 349 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 350 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len((size_type)1, "vector::_M_insert_aux");
# 352 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __elems_before = __position - this->begin();
# 353 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_start((this->_M_allocate(__len)));
# 354 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_finish(__new_start);
# 355 "/usr/include/c++/5/bits/vector.tcc" 3
try
# 356 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 361 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::construct((this->_M_impl), __new_start + __elems_before, __x);
# 368 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = pointer();
# 370 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a(((this->_M_impl)._M_start), (__position.base()), __new_start, _M_get_Tp_allocator());
# 375 "/usr/include/c++/5/bits/vector.tcc" 3
++__new_finish;
# 377 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a((__position.base()), ((this->_M_impl)._M_finish), __new_finish, _M_get_Tp_allocator());
# 381 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 382 "/usr/include/c++/5/bits/vector.tcc" 3
catch (...)
# 383 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 384 "/usr/include/c++/5/bits/vector.tcc" 3
if (!__new_finish) {
# 385 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::destroy((this->_M_impl), __new_start + __elems_before); } else {
# 388 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator()); }
# 389 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(__new_start, __len);
# 390 "/usr/include/c++/5/bits/vector.tcc" 3
throw;
# 391 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 392 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 394 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 397 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __new_start;
# 398 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = __new_finish;
# 399 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__new_start + __len);
# 400 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 401 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 447 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> void
# 450 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_fill_insert(iterator __position, size_type __n, const value_type &__x)
# 451 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 452 "/usr/include/c++/5/bits/vector.tcc" 3
if (__n != (0))
# 453 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 454 "/usr/include/c++/5/bits/vector.tcc" 3
if (((size_type)(((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_finish))) >= __n)
# 456 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 457 "/usr/include/c++/5/bits/vector.tcc" 3
value_type __x_copy = __x;
# 458 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __elems_after = this->end() - __position;
# 459 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __old_finish(((this->_M_impl)._M_finish));
# 460 "/usr/include/c++/5/bits/vector.tcc" 3
if (__elems_after > __n)
# 461 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 462 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_move_a(((this->_M_impl)._M_finish) - __n, ((this->_M_impl)._M_finish), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 466 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += __n;
# 467 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy_backward((__position.base()), __old_finish - __n, __old_finish);
# 469 "/usr/include/c++/5/bits/vector.tcc" 3
::std::fill((__position.base()), (__position.base()) + __n, __x_copy);
# 471 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 473 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 474 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_fill_n_a(((this->_M_impl)._M_finish), __n - __elems_after, __x_copy, _M_get_Tp_allocator());
# 479 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_move_a((__position.base()), __old_finish, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 482 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += __elems_after;
# 483 "/usr/include/c++/5/bits/vector.tcc" 3
::std::fill((__position.base()), __old_finish, __x_copy);
# 484 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 485 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 487 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 488 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len(__n, "vector::_M_fill_insert");
# 490 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __elems_before = __position - this->begin();
# 491 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_start((this->_M_allocate(__len)));
# 492 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_finish(__new_start);
# 493 "/usr/include/c++/5/bits/vector.tcc" 3
try
# 494 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 496 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_fill_n_a(__new_start + __elems_before, __n, __x, _M_get_Tp_allocator());
# 499 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = pointer();
# 501 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a(((this->_M_impl)._M_start), (__position.base()), __new_start, _M_get_Tp_allocator());
# 506 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish += __n;
# 508 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a((__position.base()), ((this->_M_impl)._M_finish), __new_finish, _M_get_Tp_allocator());
# 512 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 513 "/usr/include/c++/5/bits/vector.tcc" 3
catch (...)
# 514 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 515 "/usr/include/c++/5/bits/vector.tcc" 3
if (!__new_finish) {
# 516 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(__new_start + __elems_before, (__new_start + __elems_before) + __n, _M_get_Tp_allocator()); } else {
# 520 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator()); }
# 522 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(__new_start, __len);
# 523 "/usr/include/c++/5/bits/vector.tcc" 3
throw;
# 524 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 525 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 527 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 530 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __new_start;
# 531 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = __new_finish;
# 532 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__new_start + __len);
# 533 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 534 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 535 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 599 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 600 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _InputIterator> void
# 603 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_range_insert(iterator __pos, _InputIterator __first, _InputIterator
# 604 "/usr/include/c++/5/bits/vector.tcc" 3
__last, ::std::input_iterator_tag)
# 605 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 606 "/usr/include/c++/5/bits/vector.tcc" 3
for (; __first != __last; ++__first)
# 607 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 608 "/usr/include/c++/5/bits/vector.tcc" 3
__pos = insert(__pos, *__first);
# 609 "/usr/include/c++/5/bits/vector.tcc" 3
++__pos;
# 610 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 611 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 613 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 614 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _ForwardIterator> void
# 617 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_range_insert(iterator __position, _ForwardIterator __first, _ForwardIterator
# 618 "/usr/include/c++/5/bits/vector.tcc" 3
__last, ::std::forward_iterator_tag)
# 619 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 620 "/usr/include/c++/5/bits/vector.tcc" 3
if (__first != __last)
# 621 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 622 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __n = ::std::distance(__first, __last);
# 623 "/usr/include/c++/5/bits/vector.tcc" 3
if (((size_type)(((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_finish))) >= __n)
# 625 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 626 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __elems_after = this->end() - __position;
# 627 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __old_finish(((this->_M_impl)._M_finish));
# 628 "/usr/include/c++/5/bits/vector.tcc" 3
if (__elems_after > __n)
# 629 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 630 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_move_a(((this->_M_impl)._M_finish) - __n, ((this->_M_impl)._M_finish), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 634 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += __n;
# 635 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy_backward((__position.base()), __old_finish - __n, __old_finish);
# 637 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy(__first, __last, __position);
# 638 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 640 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 641 "/usr/include/c++/5/bits/vector.tcc" 3
_ForwardIterator __mid = __first;
# 642 "/usr/include/c++/5/bits/vector.tcc" 3
::std::advance(__mid, __elems_after);
# 643 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_copy_a(__mid, __last, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 646 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += (__n - __elems_after);
# 647 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_move_a((__position.base()), __old_finish, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 651 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += __elems_after;
# 652 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy(__first, __mid, __position);
# 653 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 654 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 656 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 657 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len(__n, "vector::_M_range_insert");
# 659 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_start((this->_M_allocate(__len)));
# 660 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_finish(__new_start);
# 661 "/usr/include/c++/5/bits/vector.tcc" 3
try
# 662 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 663 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a(((this->_M_impl)._M_start), (__position.base()), __new_start, _M_get_Tp_allocator());
# 667 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_copy_a(__first, __last, __new_finish, _M_get_Tp_allocator());
# 671 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a((__position.base()), ((this->_M_impl)._M_finish), __new_finish, _M_get_Tp_allocator());
# 675 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 676 "/usr/include/c++/5/bits/vector.tcc" 3
catch (...)
# 677 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 678 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
# 680 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(__new_start, __len);
# 681 "/usr/include/c++/5/bits/vector.tcc" 3
throw;
# 682 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 683 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 685 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 688 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __new_start;
# 689 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = __new_finish;
# 690 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__new_start + __len);
# 691 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 692 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 693 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 697 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> void
# 700 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_reallocate(size_type __n)
# 701 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 702 "/usr/include/c++/5/bits/vector.tcc" 3
_Bit_pointer __q = (this->_M_allocate(__n));
# 703 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __start(::std::__addressof(*__q), 0);
# 704 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = _M_copy_aligned(this->begin(), this->end(), __start);
# 705 "/usr/include/c++/5/bits/vector.tcc" 3
(this->_M_deallocate());
# 706 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __start;
# 707 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__n));
# 708 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 710 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> void
# 713 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_fill_insert(iterator __position, size_type __n, bool __x)
# 714 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 715 "/usr/include/c++/5/bits/vector.tcc" 3
if (__n == (0)) {
# 716 "/usr/include/c++/5/bits/vector.tcc" 3
return; }
# 717 "/usr/include/c++/5/bits/vector.tcc" 3
if ((capacity() - size()) >= __n)
# 718 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 719 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy_backward(__position, this->end(), ((this->_M_impl)._M_finish) + ((difference_type)__n));
# 721 "/usr/include/c++/5/bits/vector.tcc" 3
std::fill(__position, (__position + ((difference_type)__n)), __x);
# 722 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += ((difference_type)__n);
# 723 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 725 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 726 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len(__n, "vector<bool>::_M_fill_insert");
# 728 "/usr/include/c++/5/bits/vector.tcc" 3
_Bit_pointer __q = (this->_M_allocate(__len));
# 729 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __start(::std::__addressof(*__q), 0);
# 730 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __i = _M_copy_aligned(this->begin(), __position, __start);
# 731 "/usr/include/c++/5/bits/vector.tcc" 3
std::fill(__i, (__i + ((difference_type)__n)), __x);
# 732 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::copy(__position, this->end(), (__i + ((difference_type)__n)));
# 734 "/usr/include/c++/5/bits/vector.tcc" 3
(this->_M_deallocate());
# 735 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__len));
# 736 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __start;
# 737 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 738 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 740 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc>
# 741 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _ForwardIterator> void
# 744 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator
# 745 "/usr/include/c++/5/bits/vector.tcc" 3
__last, ::std::forward_iterator_tag)
# 746 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 747 "/usr/include/c++/5/bits/vector.tcc" 3
if (__first != __last)
# 748 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 749 "/usr/include/c++/5/bits/vector.tcc" 3
size_type __n = ::std::distance(__first, __last);
# 750 "/usr/include/c++/5/bits/vector.tcc" 3
if ((capacity() - size()) >= __n)
# 751 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 752 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy_backward(__position, this->end(), ((this->_M_impl)._M_finish) + ((difference_type)__n));
# 755 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy(__first, __last, __position);
# 756 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += ((difference_type)__n);
# 757 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 759 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 760 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len(__n, "vector<bool>::_M_insert_range");
# 762 "/usr/include/c++/5/bits/vector.tcc" 3
_Bit_pointer __q = (this->_M_allocate(__len));
# 763 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __start(::std::__addressof(*__q), 0);
# 764 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __i = _M_copy_aligned(this->begin(), __position, __start);
# 765 "/usr/include/c++/5/bits/vector.tcc" 3
__i = ::std::copy(__first, __last, __i);
# 766 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::copy(__position, this->end(), __i);
# 767 "/usr/include/c++/5/bits/vector.tcc" 3
(this->_M_deallocate());
# 768 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__len));
# 769 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __start;
# 770 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 771 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 772 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 774 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> void
# 777 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_insert_aux(iterator __position, bool __x)
# 778 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 779 "/usr/include/c++/5/bits/vector.tcc" 3
if ((((this->_M_impl)._M_finish)._M_p) != ((this->_M_impl)._M_end_addr()))
# 780 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 781 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy_backward(__position, ((this->_M_impl)._M_finish), ((this->_M_impl)._M_finish) + 1);
# 783 "/usr/include/c++/5/bits/vector.tcc" 3
(((*__position)) = __x);
# 784 "/usr/include/c++/5/bits/vector.tcc" 3
++((this->_M_impl)._M_finish);
# 785 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 787 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 788 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len((size_type)1, "vector<bool>::_M_insert_aux");
# 790 "/usr/include/c++/5/bits/vector.tcc" 3
_Bit_pointer __q = (this->_M_allocate(__len));
# 791 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __start(::std::__addressof(*__q), 0);
# 792 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __i = _M_copy_aligned(this->begin(), __position, __start);
# 793 "/usr/include/c++/5/bits/vector.tcc" 3
(((*(__i++))) = __x);
# 794 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::copy(__position, this->end(), __i);
# 795 "/usr/include/c++/5/bits/vector.tcc" 3
(this->_M_deallocate());
# 796 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__len));
# 797 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __start;
# 798 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 799 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 801 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> typename vector< bool, _Alloc> ::iterator
# 804 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_erase(iterator __position)
# 805 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 806 "/usr/include/c++/5/bits/vector.tcc" 3
if ((((__position + (1))) != (this->end()))) {
# 807 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy((__position + (1)), this->end(), __position); }
# 808 "/usr/include/c++/5/bits/vector.tcc" 3
--((this->_M_impl)._M_finish);
# 809 "/usr/include/c++/5/bits/vector.tcc" 3
return __position;
# 810 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 812 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> typename vector< bool, _Alloc> ::iterator
# 815 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_erase(iterator __first, iterator __last)
# 816 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 817 "/usr/include/c++/5/bits/vector.tcc" 3
if ((__first != __last)) {
# 818 "/usr/include/c++/5/bits/vector.tcc" 3
_M_erase_at_end(::std::copy(__last, this->end(), __first)); }
# 819 "/usr/include/c++/5/bits/vector.tcc" 3
return __first;
# 820 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 841 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 32 "/usr/local/cuda/include/thrust/detail/vector_base.h"

# 32 "/usr/local/cuda/include/thrust/detail/vector_base.h"
namespace thrust {
# 35 "/usr/local/cuda/include/thrust/detail/vector_base.h"
namespace detail {
# 38 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class T, class Alloc>
# 39 "/usr/local/cuda/include/thrust/detail/vector_base.h"
class vector_base {
# 42 "/usr/local/cuda/include/thrust/detail/vector_base.h"
typedef contiguous_storage< T, Alloc> storage_type;
# 46 "/usr/local/cuda/include/thrust/detail/vector_base.h"
public: typedef typename contiguous_storage< T, Alloc> ::value_type value_type;
# 47 "/usr/local/cuda/include/thrust/detail/vector_base.h"
typedef typename contiguous_storage< T, Alloc> ::pointer pointer;
# 48 "/usr/local/cuda/include/thrust/detail/vector_base.h"
typedef typename contiguous_storage< T, Alloc> ::const_pointer const_pointer;
# 49 "/usr/local/cuda/include/thrust/detail/vector_base.h"
typedef typename contiguous_storage< T, Alloc> ::reference reference;
# 50 "/usr/local/cuda/include/thrust/detail/vector_base.h"
typedef typename contiguous_storage< T, Alloc> ::const_reference const_reference;
# 51 "/usr/local/cuda/include/thrust/detail/vector_base.h"
typedef typename contiguous_storage< T, Alloc> ::size_type size_type;
# 52 "/usr/local/cuda/include/thrust/detail/vector_base.h"
typedef typename contiguous_storage< T, Alloc> ::difference_type difference_type;
# 53 "/usr/local/cuda/include/thrust/detail/vector_base.h"
typedef typename contiguous_storage< T, Alloc> ::allocator_type allocator_type;
# 55 "/usr/local/cuda/include/thrust/detail/vector_base.h"
typedef typename contiguous_storage< T, Alloc> ::iterator iterator;
# 56 "/usr/local/cuda/include/thrust/detail/vector_base.h"
typedef typename contiguous_storage< T, Alloc> ::const_iterator const_iterator;
# 58 "/usr/local/cuda/include/thrust/detail/vector_base.h"
typedef thrust::reverse_iterator< typename contiguous_storage< T, Alloc> ::iterator> reverse_iterator;
# 59 "/usr/local/cuda/include/thrust/detail/vector_base.h"
typedef thrust::reverse_iterator< typename contiguous_storage< T, Alloc> ::const_iterator> const_reverse_iterator;
# 63 "/usr/local/cuda/include/thrust/detail/vector_base.h"
vector_base();
# 69 "/usr/local/cuda/include/thrust/detail/vector_base.h"
explicit vector_base(size_type n);
# 76 "/usr/local/cuda/include/thrust/detail/vector_base.h"
explicit vector_base(size_type n, const value_type & value);
# 81 "/usr/local/cuda/include/thrust/detail/vector_base.h"
vector_base(const vector_base & v);
# 86 "/usr/local/cuda/include/thrust/detail/vector_base.h"
vector_base &operator=(const vector_base & v);
# 92 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class OtherT, class OtherAlloc> vector_base(const detail::vector_base< OtherT, OtherAlloc> & v);
# 99 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class OtherT, class OtherAlloc> vector_base &operator=(const detail::vector_base< OtherT, OtherAlloc> & v);
# 108 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class OtherT, class OtherAlloc> vector_base(const std::vector< OtherT, OtherAlloc> & v);
# 117 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class OtherT, class OtherAlloc> vector_base &operator=(const std::vector< OtherT, OtherAlloc> & v);
# 124 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class InputIterator> vector_base(InputIterator first, InputIterator last);
# 129 "/usr/local/cuda/include/thrust/detail/vector_base.h"
~vector_base();
# 140 "/usr/local/cuda/include/thrust/detail/vector_base.h"
void resize(size_type new_size);
# 152 "/usr/local/cuda/include/thrust/detail/vector_base.h"
void resize(size_type new_size, const value_type & x);
# 156 "/usr/local/cuda/include/thrust/detail/vector_base.h"
size_type size() const;
# 161 "/usr/local/cuda/include/thrust/detail/vector_base.h"
size_type max_size() const;
# 169 "/usr/local/cuda/include/thrust/detail/vector_base.h"
void reserve(size_type n);
# 174 "/usr/local/cuda/include/thrust/detail/vector_base.h"
size_type capacity() const;
# 179 "/usr/local/cuda/include/thrust/detail/vector_base.h"
void shrink_to_fit();
# 189 "/usr/local/cuda/include/thrust/detail/vector_base.h"
reference operator[](size_type n);
# 199 "/usr/local/cuda/include/thrust/detail/vector_base.h"
const_reference operator[](size_type n) const;
# 205 "/usr/local/cuda/include/thrust/detail/vector_base.h"
iterator begin();
# 211 "/usr/local/cuda/include/thrust/detail/vector_base.h"
const_iterator begin() const;
# 217 "/usr/local/cuda/include/thrust/detail/vector_base.h"
const_iterator cbegin() const;
# 224 "/usr/local/cuda/include/thrust/detail/vector_base.h"
reverse_iterator rbegin();
# 231 "/usr/local/cuda/include/thrust/detail/vector_base.h"
const_reverse_iterator rbegin() const;
# 238 "/usr/local/cuda/include/thrust/detail/vector_base.h"
const_reverse_iterator crbegin() const;
# 244 "/usr/local/cuda/include/thrust/detail/vector_base.h"
iterator end();
# 250 "/usr/local/cuda/include/thrust/detail/vector_base.h"
const_iterator end() const;
# 256 "/usr/local/cuda/include/thrust/detail/vector_base.h"
const_iterator cend() const;
# 262 "/usr/local/cuda/include/thrust/detail/vector_base.h"
reverse_iterator rend();
# 268 "/usr/local/cuda/include/thrust/detail/vector_base.h"
const_reverse_iterator rend() const;
# 274 "/usr/local/cuda/include/thrust/detail/vector_base.h"
const_reverse_iterator crend() const;
# 280 "/usr/local/cuda/include/thrust/detail/vector_base.h"
const_reference front() const;
# 286 "/usr/local/cuda/include/thrust/detail/vector_base.h"
reference front();
# 292 "/usr/local/cuda/include/thrust/detail/vector_base.h"
const_reference back() const;
# 298 "/usr/local/cuda/include/thrust/detail/vector_base.h"
reference back();
# 303 "/usr/local/cuda/include/thrust/detail/vector_base.h"
pointer data();
# 308 "/usr/local/cuda/include/thrust/detail/vector_base.h"
const_pointer data() const;
# 312 "/usr/local/cuda/include/thrust/detail/vector_base.h"
void clear();
# 317 "/usr/local/cuda/include/thrust/detail/vector_base.h"
bool empty() const;
# 322 "/usr/local/cuda/include/thrust/detail/vector_base.h"
void push_back(const value_type & x);
# 327 "/usr/local/cuda/include/thrust/detail/vector_base.h"
void pop_back();
# 332 "/usr/local/cuda/include/thrust/detail/vector_base.h"
void swap(vector_base & v);
# 339 "/usr/local/cuda/include/thrust/detail/vector_base.h"
iterator erase(iterator pos);
# 347 "/usr/local/cuda/include/thrust/detail/vector_base.h"
iterator erase(iterator first, iterator last);
# 355 "/usr/local/cuda/include/thrust/detail/vector_base.h"
iterator insert(iterator position, const T & x);
# 363 "/usr/local/cuda/include/thrust/detail/vector_base.h"
void insert(iterator position, size_type n, const T & x);
# 374 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class InputIterator> void insert(iterator position, InputIterator first, InputIterator last);
# 382 "/usr/local/cuda/include/thrust/detail/vector_base.h"
void assign(size_type n, const T & x);
# 390 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class InputIterator> void assign(InputIterator first, InputIterator last);
# 396 "/usr/local/cuda/include/thrust/detail/vector_base.h"
allocator_type get_allocator() const;
# 400 "/usr/local/cuda/include/thrust/detail/vector_base.h"
protected: storage_type m_storage;
# 403 "/usr/local/cuda/include/thrust/detail/vector_base.h"
size_type m_size;
# 407 "/usr/local/cuda/include/thrust/detail/vector_base.h"
private: template< class IteratorOrIntegralType> void init_dispatch(IteratorOrIntegralType begin, IteratorOrIntegralType end, false_type);
# 410 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class IteratorOrIntegralType> void init_dispatch(IteratorOrIntegralType n, IteratorOrIntegralType value, true_type);
# 413 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class InputIterator> void range_init(InputIterator first, InputIterator last);
# 416 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class InputIterator> void range_init(InputIterator first, InputIterator last, incrementable_traversal_tag);
# 419 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class ForwardIterator> void range_init(ForwardIterator first, ForwardIterator last, random_access_traversal_tag);
# 422 "/usr/local/cuda/include/thrust/detail/vector_base.h"
void default_init(size_type n);
# 424 "/usr/local/cuda/include/thrust/detail/vector_base.h"
void fill_init(size_type n, const T & x);
# 427 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class InputIteratorOrIntegralType> void insert_dispatch(iterator position, InputIteratorOrIntegralType first, InputIteratorOrIntegralType last, false_type);
# 431 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class InputIteratorOrIntegralType> void insert_dispatch(iterator position, InputIteratorOrIntegralType n, InputIteratorOrIntegralType x, true_type);
# 435 "/usr/local/cuda/include/thrust/detail/vector_base.h"
void append(size_type n);
# 438 "/usr/local/cuda/include/thrust/detail/vector_base.h"
void fill_insert(iterator position, size_type n, const T & x);
# 441 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class InputIterator> void copy_insert(iterator position, InputIterator first, InputIterator last);
# 445 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class InputIterator> void assign_dispatch(InputIterator first, InputIterator last, false_type);
# 449 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class Integral> void assign_dispatch(Integral n, Integral x, true_type);
# 453 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class InputIterator> void range_assign(InputIterator first, InputIterator last);
# 457 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class RandomAccessIterator> void range_assign(RandomAccessIterator first, RandomAccessIterator last, random_access_traversal_tag);
# 461 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class InputIterator> void range_assign(InputIterator first, InputIterator last, incrementable_traversal_tag);
# 465 "/usr/local/cuda/include/thrust/detail/vector_base.h"
void fill_assign(size_type n, const T & x);
# 468 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class ForwardIterator> void allocate_and_copy(size_type requested_size, ForwardIterator first, ForwardIterator last, storage_type & new_storage);
# 472 "/usr/local/cuda/include/thrust/detail/vector_base.h"
};
# 474 "/usr/local/cuda/include/thrust/detail/vector_base.h"
}
# 484 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class T, class Alloc> void swap(detail::vector_base< T, Alloc> & a, detail::vector_base< T, Alloc> & b);
# 495 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class T1, class Alloc1, class
# 496 "/usr/local/cuda/include/thrust/detail/vector_base.h"
T2, class Alloc2> bool
# 495 "/usr/local/cuda/include/thrust/detail/vector_base.h"
operator==(const detail::vector_base< T1, Alloc1> & lhs, const detail::vector_base< T2, Alloc2> & rhs);
# 500 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class T1, class Alloc1, class
# 501 "/usr/local/cuda/include/thrust/detail/vector_base.h"
T2, class Alloc2> bool
# 500 "/usr/local/cuda/include/thrust/detail/vector_base.h"
operator==(const detail::vector_base< T1, Alloc1> & lhs, const std::vector< T2, Alloc2> & rhs);
# 505 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class T1, class Alloc1, class
# 506 "/usr/local/cuda/include/thrust/detail/vector_base.h"
T2, class Alloc2> bool
# 505 "/usr/local/cuda/include/thrust/detail/vector_base.h"
operator==(const std::vector< T1, Alloc1> & lhs, const detail::vector_base< T2, Alloc2> & rhs);
# 516 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class T1, class Alloc1, class
# 517 "/usr/local/cuda/include/thrust/detail/vector_base.h"
T2, class Alloc2> bool
# 516 "/usr/local/cuda/include/thrust/detail/vector_base.h"
operator!=(const detail::vector_base< T1, Alloc1> & lhs, const detail::vector_base< T2, Alloc2> & rhs);
# 521 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class T1, class Alloc1, class
# 522 "/usr/local/cuda/include/thrust/detail/vector_base.h"
T2, class Alloc2> bool
# 521 "/usr/local/cuda/include/thrust/detail/vector_base.h"
operator!=(const detail::vector_base< T1, Alloc1> & lhs, const std::vector< T2, Alloc2> & rhs);
# 526 "/usr/local/cuda/include/thrust/detail/vector_base.h"
template< class T1, class Alloc1, class
# 527 "/usr/local/cuda/include/thrust/detail/vector_base.h"
T2, class Alloc2> bool
# 526 "/usr/local/cuda/include/thrust/detail/vector_base.h"
operator!=(const std::vector< T1, Alloc1> & lhs, const detail::vector_base< T2, Alloc2> & rhs);
# 531 "/usr/local/cuda/include/thrust/detail/vector_base.h"
}
# 26 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
namespace thrust {
# 28 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
namespace detail {
# 32 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
template< class InputIterator, class
# 33 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
OutputIterator> OutputIterator
# 34 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
sequential_copy(InputIterator first, InputIterator
# 35 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
last, OutputIterator
# 36 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
result)
# 37 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
{
# 38 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
for (; first != last; (++first), (++result))
# 39 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
{
# 40 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
(*result) = (*first);
# 41 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
}
# 43 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
return result;
# 44 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
}
# 47 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
template< class BidirectionalIterator1, class
# 48 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
BidirectionalIterator2> BidirectionalIterator2
# 49 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
sequential_copy_backward(BidirectionalIterator1 first, BidirectionalIterator1
# 50 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
last, BidirectionalIterator2
# 51 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
result)
# 52 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
{
# 55 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
while (first != last)
# 56 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
{
# 57 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
(*(--result)) = (*(--last));
# 58 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
}
# 60 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
return result;
# 61 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
}
# 64 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
namespace dispatch {
# 68 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
template< class DerivedPolicy, class
# 69 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
RandomAccessIterator1, class
# 70 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
RandomAccessIterator2> RandomAccessIterator2
# 71 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
overlapped_copy(system::cpp::detail::execution_policy< DerivedPolicy> &, RandomAccessIterator1
# 72 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
first, RandomAccessIterator1
# 73 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
last, RandomAccessIterator2
# 74 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
result)
# 75 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
{
# 76 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
if ((first < last) && (first <= result) && (result < last))
# 77 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
{
# 80 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
detail::sequential_copy_backward(first, last, result + (last - first));
# 81 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
result += (last - first);
# 82 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
} else
# 84 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
{
# 87 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
result = detail::sequential_copy(first, last, result);
# 88 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
}
# 90 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
return result;
# 91 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
}
# 94 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
template< class DerivedPolicy, class
# 95 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
RandomAccessIterator1, class
# 96 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
RandomAccessIterator2> RandomAccessIterator2
# 97 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
overlapped_copy(execution_policy< DerivedPolicy> &exec, RandomAccessIterator1
# 98 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
first, RandomAccessIterator1
# 99 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
last, RandomAccessIterator2
# 100 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
result)
# 101 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
{
# 102 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
typedef typename iterator_value< RandomAccessIterator1> ::type value_type;
# 105 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
temporary_array< typename iterator_value< RandomAccessIterator1> ::type, DerivedPolicy> temp(exec, first, last);
# 106 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
return thrust::copy(exec, (temp.begin()), (temp.end()), result);
# 107 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
}
# 109 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
}
# 112 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
template< class RandomAccessIterator1, class
# 113 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
RandomAccessIterator2> RandomAccessIterator2
# 114 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
overlapped_copy(RandomAccessIterator1 first, RandomAccessIterator1
# 115 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
last, RandomAccessIterator2
# 116 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
result)
# 117 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
{
# 118 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
typedef typename iterator_system< RandomAccessIterator2> ::type System1;
# 119 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
typedef typename iterator_system< RandomAccessIterator2> ::type System2;
# 121 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
typedef typename minimum_system< typename iterator_system< RandomAccessIterator2> ::type, typename iterator_system< RandomAccessIterator2> ::type> ::type System;
# 124 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
System system;
# 126 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
return dispatch::overlapped_copy(system, first, last, result);
# 127 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
}
# 129 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
}
# 130 "/usr/local/cuda/include/thrust/detail/overlapped_copy.h"
}
# 27 "/usr/local/cuda/include/thrust/equal.h"
namespace thrust {
# 79 "/usr/local/cuda/include/thrust/equal.h"
template< class DerivedPolicy, class InputIterator1, class InputIterator2> bool equal(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2);
# 119 "/usr/local/cuda/include/thrust/equal.h"
template< class InputIterator1, class InputIterator2> bool equal(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2);
# 175 "/usr/local/cuda/include/thrust/equal.h"
template< class DerivedPolicy, class InputIterator1, class InputIterator2, class BinaryPredicate> bool equal(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, BinaryPredicate binary_pred);
# 225 "/usr/local/cuda/include/thrust/equal.h"
template< class InputIterator1, class InputIterator2, class
# 226 "/usr/local/cuda/include/thrust/equal.h"
BinaryPredicate> bool
# 225 "/usr/local/cuda/include/thrust/equal.h"
equal(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, BinaryPredicate binary_pred);
# 235 "/usr/local/cuda/include/thrust/equal.h"
}
# 22 "/usr/local/cuda/include/thrust/system/detail/generic/equal.h"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/system/detail/generic/equal.h"
namespace system {
# 26 "/usr/local/cuda/include/thrust/system/detail/generic/equal.h"
namespace detail {
# 28 "/usr/local/cuda/include/thrust/system/detail/generic/equal.h"
namespace generic {
# 32 "/usr/local/cuda/include/thrust/system/detail/generic/equal.h"
template< class DerivedPolicy, class InputIterator1, class InputIterator2> bool equal(execution_policy< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2);
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/equal.h"
template< class DerivedPolicy, class InputIterator1, class InputIterator2, class BinaryPredicate> bool equal(execution_policy< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, BinaryPredicate binary_pred);
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/equal.h"
}
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/equal.h"
}
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/equal.h"
}
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/equal.h"
}
# 28 "/usr/local/cuda/include/thrust/mismatch.h"
namespace thrust {
# 89 "/usr/local/cuda/include/thrust/mismatch.h"
template< class DerivedPolicy, class InputIterator1, class InputIterator2> pair< InputIterator1, InputIterator2> mismatch(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2);
# 140 "/usr/local/cuda/include/thrust/mismatch.h"
template< class InputIterator1, class InputIterator2> pair< InputIterator1, InputIterator2> mismatch(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2);
# 195 "/usr/local/cuda/include/thrust/mismatch.h"
template< class DerivedPolicy, class InputIterator1, class InputIterator2, class BinaryPredicate> pair< InputIterator1, InputIterator2> mismatch(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, BinaryPredicate pred);
# 248 "/usr/local/cuda/include/thrust/mismatch.h"
template< class InputIterator1, class InputIterator2, class BinaryPredicate> pair< InputIterator1, InputIterator2> mismatch(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, BinaryPredicate pred);
# 257 "/usr/local/cuda/include/thrust/mismatch.h"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.h"
namespace generic {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.h"
template< class DerivedPolicy, class InputIterator1, class InputIterator2> pair< InputIterator1, InputIterator2> mismatch(execution_policy< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2);
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.h"
template< class DerivedPolicy, class InputIterator1, class InputIterator2, class BinaryPredicate> pair< InputIterator1, InputIterator2> mismatch(execution_policy< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, BinaryPredicate pred);
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.h"
}
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.h"
}
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.h"
}
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.h"
}
# 27 "/usr/local/cuda/include/thrust/find.h"
namespace thrust {
# 79 "/usr/local/cuda/include/thrust/find.h"
template< class DerivedPolicy, class InputIterator, class T> InputIterator find(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator first, InputIterator last, const T & value);
# 121 "/usr/local/cuda/include/thrust/find.h"
template< class InputIterator, class T> InputIterator find(InputIterator first, InputIterator last, const T & value);
# 186 "/usr/local/cuda/include/thrust/find.h"
template< class DerivedPolicy, class InputIterator, class Predicate> InputIterator find_if(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator first, InputIterator last, Predicate pred);
# 247 "/usr/local/cuda/include/thrust/find.h"
template< class InputIterator, class Predicate> InputIterator find_if(InputIterator first, InputIterator last, Predicate pred);
# 312 "/usr/local/cuda/include/thrust/find.h"
template< class DerivedPolicy, class InputIterator, class Predicate> InputIterator find_if_not(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator first, InputIterator last, Predicate pred);
# 373 "/usr/local/cuda/include/thrust/find.h"
template< class InputIterator, class Predicate> InputIterator find_if_not(InputIterator first, InputIterator last, Predicate pred);
# 382 "/usr/local/cuda/include/thrust/find.h"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/find.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/find.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/find.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/find.h"
namespace generic {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/find.h"
template< class DerivedPolicy, class InputIterator, class T> InputIterator find(execution_policy< DerivedPolicy> & exec, InputIterator first, InputIterator last, const T & value);
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/find.h"
template< class DerivedPolicy, class InputIterator, class Predicate> InputIterator find_if(execution_policy< DerivedPolicy> & exec, InputIterator first, InputIterator last, Predicate pred);
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/find.h"
template< class DerivedPolicy, class InputIterator, class Predicate> InputIterator find_if_not(execution_policy< DerivedPolicy> & exec, InputIterator first, InputIterator last, Predicate pred);
# 57 "/usr/local/cuda/include/thrust/system/detail/generic/find.h"
}
# 58 "/usr/local/cuda/include/thrust/system/detail/generic/find.h"
}
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/find.h"
}
# 60 "/usr/local/cuda/include/thrust/system/detail/generic/find.h"
}
# 29 "/usr/local/cuda/include/thrust/reduce.h"
namespace thrust {
# 82 "/usr/local/cuda/include/thrust/reduce.h"
template< class DerivedPolicy, class InputIterator> typename iterator_traits< InputIterator> ::value_type reduce(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator first, InputIterator last);
# 127 "/usr/local/cuda/include/thrust/reduce.h"
template< class InputIterator> typename iterator_traits< InputIterator> ::value_type reduce(InputIterator first, InputIterator last);
# 176 "/usr/local/cuda/include/thrust/reduce.h"
template< class DerivedPolicy, class InputIterator, class T> T reduce(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator first, InputIterator last, T init);
# 223 "/usr/local/cuda/include/thrust/reduce.h"
template< class InputIterator, class T> T reduce(InputIterator first, InputIterator last, T init);
# 281 "/usr/local/cuda/include/thrust/reduce.h"
template< class DerivedPolicy, class
# 282 "/usr/local/cuda/include/thrust/reduce.h"
InputIterator, class
# 283 "/usr/local/cuda/include/thrust/reduce.h"
T, class
# 284 "/usr/local/cuda/include/thrust/reduce.h"
BinaryFunction> T
# 281 "/usr/local/cuda/include/thrust/reduce.h"
reduce(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator first, InputIterator last, T init, BinaryFunction binary_op);
# 338 "/usr/local/cuda/include/thrust/reduce.h"
template< class InputIterator, class
# 339 "/usr/local/cuda/include/thrust/reduce.h"
T, class
# 340 "/usr/local/cuda/include/thrust/reduce.h"
BinaryFunction> T
# 338 "/usr/local/cuda/include/thrust/reduce.h"
reduce(InputIterator first, InputIterator last, T init, BinaryFunction binary_op);
# 402 "/usr/local/cuda/include/thrust/reduce.h"
template< class DerivedPolicy, class
# 403 "/usr/local/cuda/include/thrust/reduce.h"
InputIterator1, class
# 404 "/usr/local/cuda/include/thrust/reduce.h"
InputIterator2, class
# 405 "/usr/local/cuda/include/thrust/reduce.h"
OutputIterator1, class
# 406 "/usr/local/cuda/include/thrust/reduce.h"
OutputIterator2> pair< OutputIterator1, OutputIterator2>
# 402 "/usr/local/cuda/include/thrust/reduce.h"
reduce_by_key(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 keys_first, InputIterator1 keys_last, InputIterator2 values_first, OutputIterator1 keys_output, OutputIterator2 values_output);
# 466 "/usr/local/cuda/include/thrust/reduce.h"
template< class InputIterator1, class
# 467 "/usr/local/cuda/include/thrust/reduce.h"
InputIterator2, class
# 468 "/usr/local/cuda/include/thrust/reduce.h"
OutputIterator1, class
# 469 "/usr/local/cuda/include/thrust/reduce.h"
OutputIterator2> pair< OutputIterator1, OutputIterator2>
# 466 "/usr/local/cuda/include/thrust/reduce.h"
reduce_by_key(InputIterator1 keys_first, InputIterator1 keys_last, InputIterator2 values_first, OutputIterator1 keys_output, OutputIterator2 values_output);
# 536 "/usr/local/cuda/include/thrust/reduce.h"
template< class DerivedPolicy, class
# 537 "/usr/local/cuda/include/thrust/reduce.h"
InputIterator1, class
# 538 "/usr/local/cuda/include/thrust/reduce.h"
InputIterator2, class
# 539 "/usr/local/cuda/include/thrust/reduce.h"
OutputIterator1, class
# 540 "/usr/local/cuda/include/thrust/reduce.h"
OutputIterator2, class
# 541 "/usr/local/cuda/include/thrust/reduce.h"
BinaryPredicate> pair< OutputIterator1, OutputIterator2>
# 536 "/usr/local/cuda/include/thrust/reduce.h"
reduce_by_key(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 keys_first, InputIterator1 keys_last, InputIterator2 values_first, OutputIterator1 keys_output, OutputIterator2 values_output, BinaryPredicate binary_pred);
# 605 "/usr/local/cuda/include/thrust/reduce.h"
template< class InputIterator1, class
# 606 "/usr/local/cuda/include/thrust/reduce.h"
InputIterator2, class
# 607 "/usr/local/cuda/include/thrust/reduce.h"
OutputIterator1, class
# 608 "/usr/local/cuda/include/thrust/reduce.h"
OutputIterator2, class
# 609 "/usr/local/cuda/include/thrust/reduce.h"
BinaryPredicate> pair< OutputIterator1, OutputIterator2>
# 605 "/usr/local/cuda/include/thrust/reduce.h"
reduce_by_key(InputIterator1 keys_first, InputIterator1 keys_last, InputIterator2 values_first, OutputIterator1 keys_output, OutputIterator2 values_output, BinaryPredicate binary_pred);
# 684 "/usr/local/cuda/include/thrust/reduce.h"
template< class DerivedPolicy, class
# 685 "/usr/local/cuda/include/thrust/reduce.h"
InputIterator1, class
# 686 "/usr/local/cuda/include/thrust/reduce.h"
InputIterator2, class
# 687 "/usr/local/cuda/include/thrust/reduce.h"
OutputIterator1, class
# 688 "/usr/local/cuda/include/thrust/reduce.h"
OutputIterator2, class
# 689 "/usr/local/cuda/include/thrust/reduce.h"
BinaryPredicate, class
# 690 "/usr/local/cuda/include/thrust/reduce.h"
BinaryFunction> pair< OutputIterator1, OutputIterator2>
# 684 "/usr/local/cuda/include/thrust/reduce.h"
reduce_by_key(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 keys_first, InputIterator1 keys_last, InputIterator2 values_first, OutputIterator1 keys_output, OutputIterator2 values_output, BinaryPredicate binary_pred, BinaryFunction binary_op);
# 762 "/usr/local/cuda/include/thrust/reduce.h"
template< class InputIterator1, class
# 763 "/usr/local/cuda/include/thrust/reduce.h"
InputIterator2, class
# 764 "/usr/local/cuda/include/thrust/reduce.h"
OutputIterator1, class
# 765 "/usr/local/cuda/include/thrust/reduce.h"
OutputIterator2, class
# 766 "/usr/local/cuda/include/thrust/reduce.h"
BinaryPredicate, class
# 767 "/usr/local/cuda/include/thrust/reduce.h"
BinaryFunction> pair< OutputIterator1, OutputIterator2>
# 762 "/usr/local/cuda/include/thrust/reduce.h"
reduce_by_key(InputIterator1 keys_first, InputIterator1 keys_last, InputIterator2 values_first, OutputIterator1 keys_output, OutputIterator2 values_output, BinaryPredicate binary_pred, BinaryFunction binary_op);
# 782 "/usr/local/cuda/include/thrust/reduce.h"
}
# 24 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.h"
namespace system {
# 28 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.h"
namespace detail {
# 30 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.h"
namespace generic {
# 34 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.h"
template< class DerivedPolicy, class InputIterator> typename iterator_traits< InputIterator> ::value_type reduce(execution_policy< DerivedPolicy> & exec, InputIterator first, InputIterator last);
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.h"
template< class DerivedPolicy, class InputIterator, class T> T reduce(execution_policy< DerivedPolicy> & exec, InputIterator first, InputIterator last, T init);
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.h"
template< class DerivedPolicy, class
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.h"
InputIterator, class
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.h"
T, class
# 48 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.h"
BinaryFunction> T
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.h"
reduce(execution_policy< DerivedPolicy> & exec, InputIterator first, InputIterator last, T init, BinaryFunction binary_op);
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.h"
}
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.h"
}
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.h"
}
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.h"
}
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
namespace thrust {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
namespace system {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
namespace detail {
# 31 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
namespace generic {
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
template< class ExecutionPolicy, class InputIterator> typename iterator_traits< InputIterator> ::value_type
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
reduce(execution_policy< ExecutionPolicy> &exec, InputIterator first, InputIterator last)
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
{
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
typedef typename iterator_value< InputIterator> ::type InputType;
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
return thrust::reduce(exec, first, last, (InputType)0);
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
}
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
template< class ExecutionPolicy, class InputIterator, class T> T
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
reduce(execution_policy< ExecutionPolicy> &exec, InputIterator first, InputIterator last, T init)
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
{
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
return thrust::reduce(exec, first, last, init, plus< T> ());
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
}
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
template< class ExecutionPolicy, class
# 57 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
RandomAccessIterator, class
# 58 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
OutputType, class
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
BinaryFunction> OutputType
# 61 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
reduce(execution_policy< ExecutionPolicy> &exec, RandomAccessIterator
# 62 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
first, RandomAccessIterator
# 63 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
last, OutputType
# 64 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
init, BinaryFunction
# 65 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
binary_op)
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
{
# 68 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
typedef thrust::detail::static_assert_test< sizeof(thrust::detail::STATIC_ASSERTION_FAILURE< (bool)(thrust::detail::depend_on_instantiation< RandomAccessIterator, false> ::value)> )> thrust_static_assert_typedef_68 __attribute((unused));
# 69 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
return OutputType();
# 70 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
}
# 73 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
}
# 74 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
}
# 75 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
}
# 76 "/usr/local/cuda/include/thrust/system/detail/generic/reduce.inl"
}
# 24 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
namespace system {
# 28 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
namespace detail {
# 30 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
namespace generic {
# 34 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
template< class DerivedPolicy, class
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
InputIterator1, class
# 36 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
InputIterator2, class
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
OutputIterator1, class
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
OutputIterator2> pair< OutputIterator1, OutputIterator2>
# 34 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
reduce_by_key(execution_policy< DerivedPolicy> & exec, InputIterator1 keys_first, InputIterator1 keys_last, InputIterator2 values_first, OutputIterator1 keys_output, OutputIterator2 values_output);
# 48 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
template< class DerivedPolicy, class
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
InputIterator1, class
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
InputIterator2, class
# 51 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
OutputIterator1, class
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
OutputIterator2, class
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
BinaryPredicate> pair< OutputIterator1, OutputIterator2>
# 48 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
reduce_by_key(execution_policy< DerivedPolicy> & exec, InputIterator1 keys_first, InputIterator1 keys_last, InputIterator2 values_first, OutputIterator1 keys_output, OutputIterator2 values_output, BinaryPredicate binary_pred);
# 64 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
template< class DerivedPolicy, class
# 65 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
InputIterator1, class
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
InputIterator2, class
# 67 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
OutputIterator1, class
# 68 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
OutputIterator2, class
# 69 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
BinaryPredicate, class
# 70 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
BinaryFunction> pair< OutputIterator1, OutputIterator2>
# 64 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
reduce_by_key(execution_policy< DerivedPolicy> & exec, InputIterator1 keys_first, InputIterator1 keys_last, InputIterator2 values_first, OutputIterator1 keys_output, OutputIterator2 values_output, BinaryPredicate binary_pred, BinaryFunction binary_op);
# 83 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
}
# 84 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
}
# 85 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
}
# 86 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.h"
}
# 27 "/usr/local/cuda/include/thrust/scatter.h"
namespace thrust {
# 89 "/usr/local/cuda/include/thrust/scatter.h"
template< class DerivedPolicy, class
# 90 "/usr/local/cuda/include/thrust/scatter.h"
InputIterator1, class
# 91 "/usr/local/cuda/include/thrust/scatter.h"
InputIterator2, class
# 92 "/usr/local/cuda/include/thrust/scatter.h"
RandomAccessIterator> void
# 89 "/usr/local/cuda/include/thrust/scatter.h"
scatter(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first, InputIterator1 last, InputIterator2 map, RandomAccessIterator result);
# 147 "/usr/local/cuda/include/thrust/scatter.h"
template< class InputIterator1, class
# 148 "/usr/local/cuda/include/thrust/scatter.h"
InputIterator2, class
# 149 "/usr/local/cuda/include/thrust/scatter.h"
RandomAccessIterator> void
# 147 "/usr/local/cuda/include/thrust/scatter.h"
scatter(InputIterator1 first, InputIterator1 last, InputIterator2 map, RandomAccessIterator result);
# 203 "/usr/local/cuda/include/thrust/scatter.h"
template< class DerivedPolicy, class
# 204 "/usr/local/cuda/include/thrust/scatter.h"
InputIterator1, class
# 205 "/usr/local/cuda/include/thrust/scatter.h"
InputIterator2, class
# 206 "/usr/local/cuda/include/thrust/scatter.h"
InputIterator3, class
# 207 "/usr/local/cuda/include/thrust/scatter.h"
RandomAccessIterator> void
# 203 "/usr/local/cuda/include/thrust/scatter.h"
scatter_if(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first, InputIterator1 last, InputIterator2 map, InputIterator3 stencil, RandomAccessIterator output);
# 259 "/usr/local/cuda/include/thrust/scatter.h"
template< class InputIterator1, class
# 260 "/usr/local/cuda/include/thrust/scatter.h"
InputIterator2, class
# 261 "/usr/local/cuda/include/thrust/scatter.h"
InputIterator3, class
# 262 "/usr/local/cuda/include/thrust/scatter.h"
RandomAccessIterator> void
# 259 "/usr/local/cuda/include/thrust/scatter.h"
scatter_if(InputIterator1 first, InputIterator1 last, InputIterator2 map, InputIterator3 stencil, RandomAccessIterator output);
# 331 "/usr/local/cuda/include/thrust/scatter.h"
template< class DerivedPolicy, class
# 332 "/usr/local/cuda/include/thrust/scatter.h"
InputIterator1, class
# 333 "/usr/local/cuda/include/thrust/scatter.h"
InputIterator2, class
# 334 "/usr/local/cuda/include/thrust/scatter.h"
InputIterator3, class
# 335 "/usr/local/cuda/include/thrust/scatter.h"
RandomAccessIterator, class
# 336 "/usr/local/cuda/include/thrust/scatter.h"
Predicate> void
# 331 "/usr/local/cuda/include/thrust/scatter.h"
scatter_if(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first, InputIterator1 last, InputIterator2 map, InputIterator3 stencil, RandomAccessIterator output, Predicate pred);
# 403 "/usr/local/cuda/include/thrust/scatter.h"
template< class InputIterator1, class
# 404 "/usr/local/cuda/include/thrust/scatter.h"
InputIterator2, class
# 405 "/usr/local/cuda/include/thrust/scatter.h"
InputIterator3, class
# 406 "/usr/local/cuda/include/thrust/scatter.h"
RandomAccessIterator, class
# 407 "/usr/local/cuda/include/thrust/scatter.h"
Predicate> void
# 403 "/usr/local/cuda/include/thrust/scatter.h"
scatter_if(InputIterator1 first, InputIterator1 last, InputIterator2 map, InputIterator3 stencil, RandomAccessIterator output, Predicate pred);
# 420 "/usr/local/cuda/include/thrust/scatter.h"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
namespace generic {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
template< class DerivedPolicy, class
# 34 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
InputIterator1, class
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
InputIterator2, class
# 36 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
RandomAccessIterator> void
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
scatter(execution_policy< DerivedPolicy> & exec, InputIterator1 first, InputIterator1 last, InputIterator2 map, RandomAccessIterator output);
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
template< class DerivedPolicy, class
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
InputIterator1, class
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
InputIterator2, class
# 48 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
InputIterator3, class
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
RandomAccessIterator> void
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
scatter_if(execution_policy< DerivedPolicy> & exec, InputIterator1 first, InputIterator1 last, InputIterator2 map, InputIterator3 stencil, RandomAccessIterator output);
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
template< class DerivedPolicy, class
# 60 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
InputIterator1, class
# 61 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
InputIterator2, class
# 62 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
InputIterator3, class
# 63 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
RandomAccessIterator, class
# 64 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
Predicate> void
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
scatter_if(execution_policy< DerivedPolicy> & exec, InputIterator1 first, InputIterator1 last, InputIterator2 map, InputIterator3 stencil, RandomAccessIterator output, Predicate pred);
# 75 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
}
# 76 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
}
# 77 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
}
# 78 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.h"
}
# 24 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
namespace system {
# 28 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
namespace detail {
# 30 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
namespace generic {
# 34 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
template< class DerivedPolicy, class
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
InputIterator1, class
# 36 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
InputIterator2, class
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
RandomAccessIterator> void
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
scatter(execution_policy< DerivedPolicy> &exec, InputIterator1
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
first, InputIterator1
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
last, InputIterator2
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
map, RandomAccessIterator
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
output)
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
{
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
thrust::transform(exec, first, last, thrust::make_permutation_iterator(output, map), identity< typename iterator_value< InputIterator1> ::type> ());
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
}
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
template< class DerivedPolicy, class
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
InputIterator1, class
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
InputIterator2, class
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
InputIterator3, class
# 57 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
RandomAccessIterator> void
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
scatter_if(execution_policy< DerivedPolicy> &exec, InputIterator1
# 60 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
first, InputIterator1
# 61 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
last, InputIterator2
# 62 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
map, InputIterator3
# 63 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
stencil, RandomAccessIterator
# 64 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
output)
# 65 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
{
# 67 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
typedef typename iterator_value< InputIterator3> ::type StencilType;
# 68 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
thrust::scatter_if(exec, first, last, map, stencil, output, identity< typename iterator_value< InputIterator3> ::type> ());
# 69 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
}
# 72 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
template< class DerivedPolicy, class
# 73 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
InputIterator1, class
# 74 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
InputIterator2, class
# 75 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
InputIterator3, class
# 76 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
RandomAccessIterator, class
# 77 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
Predicate> void
# 79 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
scatter_if(execution_policy< DerivedPolicy> &exec, InputIterator1
# 80 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
first, InputIterator1
# 81 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
last, InputIterator2
# 82 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
map, InputIterator3
# 83 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
stencil, RandomAccessIterator
# 84 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
output, Predicate
# 85 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
pred)
# 86 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
{
# 87 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
typedef typename iterator_value< InputIterator1> ::type InputType;
# 88 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
thrust::transform_if(exec, first, last, stencil, thrust::make_permutation_iterator(output, map), identity< typename iterator_value< InputIterator1> ::type> (), pred);
# 89 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
}
# 92 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
}
# 93 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
}
# 94 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
}
# 95 "/usr/local/cuda/include/thrust/system/detail/generic/scatter.inl"
}
# 28 "/usr/local/cuda/include/thrust/detail/scatter.inl"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/detail/scatter.inl"
template< class DerivedPolicy, class
# 34 "/usr/local/cuda/include/thrust/detail/scatter.inl"
InputIterator1, class
# 35 "/usr/local/cuda/include/thrust/detail/scatter.inl"
InputIterator2, class
# 36 "/usr/local/cuda/include/thrust/detail/scatter.inl"
RandomAccessIterator> void
# 38 "/usr/local/cuda/include/thrust/detail/scatter.inl"
scatter(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 39 "/usr/local/cuda/include/thrust/detail/scatter.inl"
first, InputIterator1
# 40 "/usr/local/cuda/include/thrust/detail/scatter.inl"
last, InputIterator2
# 41 "/usr/local/cuda/include/thrust/detail/scatter.inl"
map, RandomAccessIterator
# 42 "/usr/local/cuda/include/thrust/detail/scatter.inl"
output)
# 43 "/usr/local/cuda/include/thrust/detail/scatter.inl"
{
# 44 "/usr/local/cuda/include/thrust/detail/scatter.inl"
using system::detail::generic::scatter;
# 45 "/usr/local/cuda/include/thrust/detail/scatter.inl"
return scatter(detail::derived_cast(detail::strip_const(exec)), first, last, map, output);
# 46 "/usr/local/cuda/include/thrust/detail/scatter.inl"
}
# 50 "/usr/local/cuda/include/thrust/detail/scatter.inl"
template< class DerivedPolicy, class
# 51 "/usr/local/cuda/include/thrust/detail/scatter.inl"
InputIterator1, class
# 52 "/usr/local/cuda/include/thrust/detail/scatter.inl"
InputIterator2, class
# 53 "/usr/local/cuda/include/thrust/detail/scatter.inl"
InputIterator3, class
# 54 "/usr/local/cuda/include/thrust/detail/scatter.inl"
RandomAccessIterator> void
# 56 "/usr/local/cuda/include/thrust/detail/scatter.inl"
scatter_if(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 57 "/usr/local/cuda/include/thrust/detail/scatter.inl"
first, InputIterator1
# 58 "/usr/local/cuda/include/thrust/detail/scatter.inl"
last, InputIterator2
# 59 "/usr/local/cuda/include/thrust/detail/scatter.inl"
map, InputIterator3
# 60 "/usr/local/cuda/include/thrust/detail/scatter.inl"
stencil, RandomAccessIterator
# 61 "/usr/local/cuda/include/thrust/detail/scatter.inl"
output)
# 62 "/usr/local/cuda/include/thrust/detail/scatter.inl"
{
# 63 "/usr/local/cuda/include/thrust/detail/scatter.inl"
using system::detail::generic::scatter_if;
# 64 "/usr/local/cuda/include/thrust/detail/scatter.inl"
return scatter_if(detail::derived_cast(detail::strip_const(exec)), first, last, map, stencil, output);
# 65 "/usr/local/cuda/include/thrust/detail/scatter.inl"
}
# 69 "/usr/local/cuda/include/thrust/detail/scatter.inl"
template< class DerivedPolicy, class
# 70 "/usr/local/cuda/include/thrust/detail/scatter.inl"
InputIterator1, class
# 71 "/usr/local/cuda/include/thrust/detail/scatter.inl"
InputIterator2, class
# 72 "/usr/local/cuda/include/thrust/detail/scatter.inl"
InputIterator3, class
# 73 "/usr/local/cuda/include/thrust/detail/scatter.inl"
RandomAccessIterator, class
# 74 "/usr/local/cuda/include/thrust/detail/scatter.inl"
Predicate> void
# 76 "/usr/local/cuda/include/thrust/detail/scatter.inl"
scatter_if(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 77 "/usr/local/cuda/include/thrust/detail/scatter.inl"
first, InputIterator1
# 78 "/usr/local/cuda/include/thrust/detail/scatter.inl"
last, InputIterator2
# 79 "/usr/local/cuda/include/thrust/detail/scatter.inl"
map, InputIterator3
# 80 "/usr/local/cuda/include/thrust/detail/scatter.inl"
stencil, RandomAccessIterator
# 81 "/usr/local/cuda/include/thrust/detail/scatter.inl"
output, Predicate
# 82 "/usr/local/cuda/include/thrust/detail/scatter.inl"
pred)
# 83 "/usr/local/cuda/include/thrust/detail/scatter.inl"
{
# 84 "/usr/local/cuda/include/thrust/detail/scatter.inl"
using system::detail::generic::scatter_if;
# 85 "/usr/local/cuda/include/thrust/detail/scatter.inl"
return scatter_if(detail::derived_cast(detail::strip_const(exec)), first, last, map, stencil, output, pred);
# 86 "/usr/local/cuda/include/thrust/detail/scatter.inl"
}
# 89 "/usr/local/cuda/include/thrust/detail/scatter.inl"
template< class InputIterator1, class
# 90 "/usr/local/cuda/include/thrust/detail/scatter.inl"
InputIterator2, class
# 91 "/usr/local/cuda/include/thrust/detail/scatter.inl"
RandomAccessIterator> void
# 92 "/usr/local/cuda/include/thrust/detail/scatter.inl"
scatter(InputIterator1 first, InputIterator1
# 93 "/usr/local/cuda/include/thrust/detail/scatter.inl"
last, InputIterator2
# 94 "/usr/local/cuda/include/thrust/detail/scatter.inl"
map, RandomAccessIterator
# 95 "/usr/local/cuda/include/thrust/detail/scatter.inl"
output)
# 96 "/usr/local/cuda/include/thrust/detail/scatter.inl"
{
# 97 "/usr/local/cuda/include/thrust/detail/scatter.inl"
using system::detail::generic::select_system;
# 99 "/usr/local/cuda/include/thrust/detail/scatter.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 100 "/usr/local/cuda/include/thrust/detail/scatter.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 101 "/usr/local/cuda/include/thrust/detail/scatter.inl"
typedef typename iterator_system< RandomAccessIterator> ::type System3;
# 103 "/usr/local/cuda/include/thrust/detail/scatter.inl"
System1 system1;
# 104 "/usr/local/cuda/include/thrust/detail/scatter.inl"
System2 system2;
# 105 "/usr/local/cuda/include/thrust/detail/scatter.inl"
System3 system3;
# 107 "/usr/local/cuda/include/thrust/detail/scatter.inl"
return thrust::scatter(select_system(system1, system2, system3), first, last, map, output);
# 108 "/usr/local/cuda/include/thrust/detail/scatter.inl"
}
# 111 "/usr/local/cuda/include/thrust/detail/scatter.inl"
template< class InputIterator1, class
# 112 "/usr/local/cuda/include/thrust/detail/scatter.inl"
InputIterator2, class
# 113 "/usr/local/cuda/include/thrust/detail/scatter.inl"
InputIterator3, class
# 114 "/usr/local/cuda/include/thrust/detail/scatter.inl"
RandomAccessIterator> void
# 115 "/usr/local/cuda/include/thrust/detail/scatter.inl"
scatter_if(InputIterator1 first, InputIterator1
# 116 "/usr/local/cuda/include/thrust/detail/scatter.inl"
last, InputIterator2
# 117 "/usr/local/cuda/include/thrust/detail/scatter.inl"
map, InputIterator3
# 118 "/usr/local/cuda/include/thrust/detail/scatter.inl"
stencil, RandomAccessIterator
# 119 "/usr/local/cuda/include/thrust/detail/scatter.inl"
output)
# 120 "/usr/local/cuda/include/thrust/detail/scatter.inl"
{
# 121 "/usr/local/cuda/include/thrust/detail/scatter.inl"
using system::detail::generic::select_system;
# 123 "/usr/local/cuda/include/thrust/detail/scatter.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 124 "/usr/local/cuda/include/thrust/detail/scatter.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 125 "/usr/local/cuda/include/thrust/detail/scatter.inl"
typedef typename iterator_system< InputIterator3> ::type System3;
# 126 "/usr/local/cuda/include/thrust/detail/scatter.inl"
typedef typename iterator_system< RandomAccessIterator> ::type System4;
# 128 "/usr/local/cuda/include/thrust/detail/scatter.inl"
System1 system1;
# 129 "/usr/local/cuda/include/thrust/detail/scatter.inl"
System2 system2;
# 130 "/usr/local/cuda/include/thrust/detail/scatter.inl"
System3 system3;
# 131 "/usr/local/cuda/include/thrust/detail/scatter.inl"
System4 system4;
# 133 "/usr/local/cuda/include/thrust/detail/scatter.inl"
return thrust::scatter_if(select_system(system1, system2, system3, system4), first, last, map, stencil, output);
# 134 "/usr/local/cuda/include/thrust/detail/scatter.inl"
}
# 137 "/usr/local/cuda/include/thrust/detail/scatter.inl"
template< class InputIterator1, class
# 138 "/usr/local/cuda/include/thrust/detail/scatter.inl"
InputIterator2, class
# 139 "/usr/local/cuda/include/thrust/detail/scatter.inl"
InputIterator3, class
# 140 "/usr/local/cuda/include/thrust/detail/scatter.inl"
RandomAccessIterator, class
# 141 "/usr/local/cuda/include/thrust/detail/scatter.inl"
Predicate> void
# 142 "/usr/local/cuda/include/thrust/detail/scatter.inl"
scatter_if(InputIterator1 first, InputIterator1
# 143 "/usr/local/cuda/include/thrust/detail/scatter.inl"
last, InputIterator2
# 144 "/usr/local/cuda/include/thrust/detail/scatter.inl"
map, InputIterator3
# 145 "/usr/local/cuda/include/thrust/detail/scatter.inl"
stencil, RandomAccessIterator
# 146 "/usr/local/cuda/include/thrust/detail/scatter.inl"
output, Predicate
# 147 "/usr/local/cuda/include/thrust/detail/scatter.inl"
pred)
# 148 "/usr/local/cuda/include/thrust/detail/scatter.inl"
{
# 149 "/usr/local/cuda/include/thrust/detail/scatter.inl"
using system::detail::generic::select_system;
# 151 "/usr/local/cuda/include/thrust/detail/scatter.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 152 "/usr/local/cuda/include/thrust/detail/scatter.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 153 "/usr/local/cuda/include/thrust/detail/scatter.inl"
typedef typename iterator_system< InputIterator3> ::type System3;
# 154 "/usr/local/cuda/include/thrust/detail/scatter.inl"
typedef typename iterator_system< RandomAccessIterator> ::type System4;
# 156 "/usr/local/cuda/include/thrust/detail/scatter.inl"
System1 system1;
# 157 "/usr/local/cuda/include/thrust/detail/scatter.inl"
System2 system2;
# 158 "/usr/local/cuda/include/thrust/detail/scatter.inl"
System3 system3;
# 159 "/usr/local/cuda/include/thrust/detail/scatter.inl"
System4 system4;
# 161 "/usr/local/cuda/include/thrust/detail/scatter.inl"
return thrust::scatter_if(select_system(system1, system2, system3, system4), first, last, map, stencil, output, pred);
# 162 "/usr/local/cuda/include/thrust/detail/scatter.inl"
}
# 165 "/usr/local/cuda/include/thrust/detail/scatter.inl"
}
# 27 "/usr/local/cuda/include/thrust/scan.h"
namespace thrust {
# 93 "/usr/local/cuda/include/thrust/scan.h"
template< class DerivedPolicy, class
# 94 "/usr/local/cuda/include/thrust/scan.h"
InputIterator, class
# 95 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator> OutputIterator
# 93 "/usr/local/cuda/include/thrust/scan.h"
inclusive_scan(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result);
# 148 "/usr/local/cuda/include/thrust/scan.h"
template< class InputIterator, class
# 149 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator> OutputIterator
# 148 "/usr/local/cuda/include/thrust/scan.h"
inclusive_scan(InputIterator first, InputIterator last, OutputIterator result);
# 203 "/usr/local/cuda/include/thrust/scan.h"
template< class DerivedPolicy, class
# 204 "/usr/local/cuda/include/thrust/scan.h"
InputIterator, class
# 205 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator, class
# 206 "/usr/local/cuda/include/thrust/scan.h"
AssociativeOperator> OutputIterator
# 203 "/usr/local/cuda/include/thrust/scan.h"
inclusive_scan(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result, AssociativeOperator binary_op);
# 258 "/usr/local/cuda/include/thrust/scan.h"
template< class InputIterator, class
# 259 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator, class
# 260 "/usr/local/cuda/include/thrust/scan.h"
AssociativeOperator> OutputIterator
# 258 "/usr/local/cuda/include/thrust/scan.h"
inclusive_scan(InputIterator first, InputIterator last, OutputIterator result, AssociativeOperator binary_op);
# 313 "/usr/local/cuda/include/thrust/scan.h"
template< class DerivedPolicy, class
# 314 "/usr/local/cuda/include/thrust/scan.h"
InputIterator, class
# 315 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator> OutputIterator
# 313 "/usr/local/cuda/include/thrust/scan.h"
exclusive_scan(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result);
# 362 "/usr/local/cuda/include/thrust/scan.h"
template< class InputIterator, class
# 363 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator> OutputIterator
# 362 "/usr/local/cuda/include/thrust/scan.h"
exclusive_scan(InputIterator first, InputIterator last, OutputIterator result);
# 414 "/usr/local/cuda/include/thrust/scan.h"
template< class DerivedPolicy, class
# 415 "/usr/local/cuda/include/thrust/scan.h"
InputIterator, class
# 416 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator, class
# 417 "/usr/local/cuda/include/thrust/scan.h"
T> OutputIterator
# 414 "/usr/local/cuda/include/thrust/scan.h"
exclusive_scan(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result, T init);
# 465 "/usr/local/cuda/include/thrust/scan.h"
template< class InputIterator, class
# 466 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator, class
# 467 "/usr/local/cuda/include/thrust/scan.h"
T> OutputIterator
# 465 "/usr/local/cuda/include/thrust/scan.h"
exclusive_scan(InputIterator first, InputIterator last, OutputIterator result, T init);
# 528 "/usr/local/cuda/include/thrust/scan.h"
template< class DerivedPolicy, class
# 529 "/usr/local/cuda/include/thrust/scan.h"
InputIterator, class
# 530 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator, class
# 531 "/usr/local/cuda/include/thrust/scan.h"
T, class
# 532 "/usr/local/cuda/include/thrust/scan.h"
AssociativeOperator> OutputIterator
# 528 "/usr/local/cuda/include/thrust/scan.h"
exclusive_scan(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result, T init, AssociativeOperator binary_op);
# 589 "/usr/local/cuda/include/thrust/scan.h"
template< class InputIterator, class
# 590 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator, class
# 591 "/usr/local/cuda/include/thrust/scan.h"
T, class
# 592 "/usr/local/cuda/include/thrust/scan.h"
AssociativeOperator> OutputIterator
# 589 "/usr/local/cuda/include/thrust/scan.h"
exclusive_scan(InputIterator first, InputIterator last, OutputIterator result, T init, AssociativeOperator binary_op);
# 663 "/usr/local/cuda/include/thrust/scan.h"
template< class DerivedPolicy, class
# 664 "/usr/local/cuda/include/thrust/scan.h"
InputIterator1, class
# 665 "/usr/local/cuda/include/thrust/scan.h"
InputIterator2, class
# 666 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator> OutputIterator
# 663 "/usr/local/cuda/include/thrust/scan.h"
inclusive_scan_by_key(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result);
# 725 "/usr/local/cuda/include/thrust/scan.h"
template< class InputIterator1, class
# 726 "/usr/local/cuda/include/thrust/scan.h"
InputIterator2, class
# 727 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator> OutputIterator
# 725 "/usr/local/cuda/include/thrust/scan.h"
inclusive_scan_by_key(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result);
# 796 "/usr/local/cuda/include/thrust/scan.h"
template< class DerivedPolicy, class
# 797 "/usr/local/cuda/include/thrust/scan.h"
InputIterator1, class
# 798 "/usr/local/cuda/include/thrust/scan.h"
InputIterator2, class
# 799 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator, class
# 800 "/usr/local/cuda/include/thrust/scan.h"
BinaryPredicate> OutputIterator
# 796 "/usr/local/cuda/include/thrust/scan.h"
inclusive_scan_by_key(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result, BinaryPredicate binary_pred);
# 865 "/usr/local/cuda/include/thrust/scan.h"
template< class InputIterator1, class
# 866 "/usr/local/cuda/include/thrust/scan.h"
InputIterator2, class
# 867 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator, class
# 868 "/usr/local/cuda/include/thrust/scan.h"
BinaryPredicate> OutputIterator
# 865 "/usr/local/cuda/include/thrust/scan.h"
inclusive_scan_by_key(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result, BinaryPredicate binary_pred);
# 943 "/usr/local/cuda/include/thrust/scan.h"
template< class DerivedPolicy, class
# 944 "/usr/local/cuda/include/thrust/scan.h"
InputIterator1, class
# 945 "/usr/local/cuda/include/thrust/scan.h"
InputIterator2, class
# 946 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator, class
# 947 "/usr/local/cuda/include/thrust/scan.h"
BinaryPredicate, class
# 948 "/usr/local/cuda/include/thrust/scan.h"
AssociativeOperator> OutputIterator
# 943 "/usr/local/cuda/include/thrust/scan.h"
inclusive_scan_by_key(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result, BinaryPredicate binary_pred, AssociativeOperator binary_op);
# 1019 "/usr/local/cuda/include/thrust/scan.h"
template< class InputIterator1, class
# 1020 "/usr/local/cuda/include/thrust/scan.h"
InputIterator2, class
# 1021 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator, class
# 1022 "/usr/local/cuda/include/thrust/scan.h"
BinaryPredicate, class
# 1023 "/usr/local/cuda/include/thrust/scan.h"
AssociativeOperator> OutputIterator
# 1019 "/usr/local/cuda/include/thrust/scan.h"
inclusive_scan_by_key(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result, BinaryPredicate binary_pred, AssociativeOperator binary_op);
# 1079 "/usr/local/cuda/include/thrust/scan.h"
template< class DerivedPolicy, class
# 1080 "/usr/local/cuda/include/thrust/scan.h"
InputIterator1, class
# 1081 "/usr/local/cuda/include/thrust/scan.h"
InputIterator2, class
# 1082 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator> OutputIterator
# 1079 "/usr/local/cuda/include/thrust/scan.h"
exclusive_scan_by_key(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result);
# 1132 "/usr/local/cuda/include/thrust/scan.h"
template< class InputIterator1, class
# 1133 "/usr/local/cuda/include/thrust/scan.h"
InputIterator2, class
# 1134 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator> OutputIterator
# 1132 "/usr/local/cuda/include/thrust/scan.h"
exclusive_scan_by_key(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result);
# 1187 "/usr/local/cuda/include/thrust/scan.h"
template< class DerivedPolicy, class
# 1188 "/usr/local/cuda/include/thrust/scan.h"
InputIterator1, class
# 1189 "/usr/local/cuda/include/thrust/scan.h"
InputIterator2, class
# 1190 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator, class
# 1191 "/usr/local/cuda/include/thrust/scan.h"
T> OutputIterator
# 1187 "/usr/local/cuda/include/thrust/scan.h"
exclusive_scan_by_key(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result, T init);
# 1241 "/usr/local/cuda/include/thrust/scan.h"
template< class InputIterator1, class
# 1242 "/usr/local/cuda/include/thrust/scan.h"
InputIterator2, class
# 1243 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator, class
# 1244 "/usr/local/cuda/include/thrust/scan.h"
T> OutputIterator
# 1241 "/usr/local/cuda/include/thrust/scan.h"
exclusive_scan_by_key(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result, T init);
# 1306 "/usr/local/cuda/include/thrust/scan.h"
template< class DerivedPolicy, class
# 1307 "/usr/local/cuda/include/thrust/scan.h"
InputIterator1, class
# 1308 "/usr/local/cuda/include/thrust/scan.h"
InputIterator2, class
# 1309 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator, class
# 1310 "/usr/local/cuda/include/thrust/scan.h"
T, class
# 1311 "/usr/local/cuda/include/thrust/scan.h"
BinaryPredicate> OutputIterator
# 1306 "/usr/local/cuda/include/thrust/scan.h"
exclusive_scan_by_key(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result, T init, BinaryPredicate binary_pred);
# 1370 "/usr/local/cuda/include/thrust/scan.h"
template< class InputIterator1, class
# 1371 "/usr/local/cuda/include/thrust/scan.h"
InputIterator2, class
# 1372 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator, class
# 1373 "/usr/local/cuda/include/thrust/scan.h"
T, class
# 1374 "/usr/local/cuda/include/thrust/scan.h"
BinaryPredicate> OutputIterator
# 1370 "/usr/local/cuda/include/thrust/scan.h"
exclusive_scan_by_key(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result, T init, BinaryPredicate binary_pred);
# 1455 "/usr/local/cuda/include/thrust/scan.h"
template< class DerivedPolicy, class
# 1456 "/usr/local/cuda/include/thrust/scan.h"
InputIterator1, class
# 1457 "/usr/local/cuda/include/thrust/scan.h"
InputIterator2, class
# 1458 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator, class
# 1459 "/usr/local/cuda/include/thrust/scan.h"
T, class
# 1460 "/usr/local/cuda/include/thrust/scan.h"
BinaryPredicate, class
# 1461 "/usr/local/cuda/include/thrust/scan.h"
AssociativeOperator> OutputIterator
# 1455 "/usr/local/cuda/include/thrust/scan.h"
exclusive_scan_by_key(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result, T init, BinaryPredicate binary_pred, AssociativeOperator binary_op);
# 1538 "/usr/local/cuda/include/thrust/scan.h"
template< class InputIterator1, class
# 1539 "/usr/local/cuda/include/thrust/scan.h"
InputIterator2, class
# 1540 "/usr/local/cuda/include/thrust/scan.h"
OutputIterator, class
# 1541 "/usr/local/cuda/include/thrust/scan.h"
T, class
# 1542 "/usr/local/cuda/include/thrust/scan.h"
BinaryPredicate, class
# 1543 "/usr/local/cuda/include/thrust/scan.h"
AssociativeOperator> OutputIterator
# 1538 "/usr/local/cuda/include/thrust/scan.h"
exclusive_scan_by_key(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result, T init, BinaryPredicate binary_pred, AssociativeOperator binary_op);
# 1561 "/usr/local/cuda/include/thrust/scan.h"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
namespace generic {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
template< class ExecutionPolicy, class
# 34 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
InputIterator, class
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
OutputIterator> OutputIterator
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
inclusive_scan(execution_policy< ExecutionPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result);
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
template< class ExecutionPolicy, class
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
InputIterator, class
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
OutputIterator, class
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
BinaryFunction> OutputIterator
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
inclusive_scan(execution_policy< ExecutionPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result, BinaryFunction binary_op);
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
template< class ExecutionPolicy, class
# 57 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
InputIterator, class
# 58 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
OutputIterator> OutputIterator
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
exclusive_scan(execution_policy< ExecutionPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result);
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
template< class ExecutionPolicy, class
# 67 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
InputIterator, class
# 68 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
OutputIterator, class
# 69 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
T> OutputIterator
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
exclusive_scan(execution_policy< ExecutionPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result, T init);
# 79 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
template< class ExecutionPolicy, class
# 80 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
InputIterator, class
# 81 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
OutputIterator, class
# 82 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
T, class
# 83 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
BinaryFunction> OutputIterator
# 79 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
exclusive_scan(execution_policy< ExecutionPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result, T init, BinaryFunction binary_op);
# 93 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
}
# 94 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
}
# 95 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
}
# 96 "/usr/local/cuda/include/thrust/system/detail/generic/scan.h"
}
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
namespace thrust {
# 31 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
namespace system {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
namespace generic {
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
template< class ExecutionPolicy, class
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
InputIterator, class
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
OutputIterator> OutputIterator
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
inclusive_scan(execution_policy< ExecutionPolicy> &exec, InputIterator
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
first, InputIterator
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
last, OutputIterator
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
result)
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
{
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
typedef typename thrust::detail::eval_if< thrust::detail::is_output_iterator< OutputIterator> ::value, iterator_value< InputIterator> , iterator_value< OutputIterator> > ::type ValueType;
# 62 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
return thrust::inclusive_scan(exec, first, last, result, plus< typename thrust::detail::eval_if< thrust::detail::is_output_iterator< OutputIterator> ::value, iterator_value< InputIterator> , iterator_value< OutputIterator> > ::type> ());
# 63 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
}
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
template< class ExecutionPolicy, class
# 67 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
InputIterator, class
# 68 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
OutputIterator> OutputIterator
# 70 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
exclusive_scan(execution_policy< ExecutionPolicy> &exec, InputIterator
# 71 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
first, InputIterator
# 72 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
last, OutputIterator
# 73 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
result)
# 74 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
{
# 86 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
typedef typename thrust::detail::eval_if< thrust::detail::is_output_iterator< OutputIterator> ::value, iterator_value< InputIterator> , iterator_value< OutputIterator> > ::type ValueType;
# 89 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
return thrust::exclusive_scan(exec, first, last, result, (ValueType)0);
# 90 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
}
# 93 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
template< class ExecutionPolicy, class
# 94 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
InputIterator, class
# 95 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
OutputIterator, class
# 96 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
T> OutputIterator
# 98 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
exclusive_scan(execution_policy< ExecutionPolicy> &exec, InputIterator
# 99 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
first, InputIterator
# 100 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
last, OutputIterator
# 101 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
result, T
# 102 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
init)
# 103 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
{
# 105 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
return thrust::exclusive_scan(exec, first, last, result, init, plus< T> ());
# 106 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
}
# 109 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
template< class ExecutionPolicy, class
# 110 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
InputIterator, class
# 111 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
OutputIterator, class
# 112 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
BinaryFunction> OutputIterator
# 114 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
inclusive_scan(execution_policy< ExecutionPolicy> &exec, InputIterator
# 115 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
first, InputIterator
# 116 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
last, OutputIterator
# 117 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
result, BinaryFunction
# 118 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
binary_op)
# 119 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
{
# 121 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
typedef thrust::detail::static_assert_test< sizeof(thrust::detail::STATIC_ASSERTION_FAILURE< (bool)(thrust::detail::depend_on_instantiation< InputIterator, false> ::value)> )> thrust_static_assert_typedef_121 __attribute((unused));
# 122 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
return result;
# 123 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
}
# 126 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
template< class ExecutionPolicy, class
# 127 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
InputIterator, class
# 128 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
OutputIterator, class
# 129 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
T, class
# 130 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
BinaryFunction> OutputIterator
# 132 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
exclusive_scan(execution_policy< ExecutionPolicy> &exec, InputIterator
# 133 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
first, InputIterator
# 134 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
last, OutputIterator
# 135 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
result, T
# 136 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
init, BinaryFunction
# 137 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
binary_op)
# 138 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
{
# 140 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
typedef thrust::detail::static_assert_test< sizeof(thrust::detail::STATIC_ASSERTION_FAILURE< (bool)(thrust::detail::depend_on_instantiation< InputIterator, false> ::value)> )> thrust_static_assert_typedef_140 __attribute((unused));
# 141 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
return result;
# 142 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
}
# 145 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
}
# 146 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
}
# 147 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
}
# 148 "/usr/local/cuda/include/thrust/system/detail/generic/scan.inl"
}
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
namespace system {
# 31 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
namespace detail {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
namespace generic {
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
template< class DerivedPolicy, class
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
InputIterator1, class
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
InputIterator2, class
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
OutputIterator> OutputIterator
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
inclusive_scan_by_key(execution_policy< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result);
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
template< class DerivedPolicy, class
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
InputIterator1, class
# 51 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
InputIterator2, class
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
OutputIterator, class
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
BinaryPredicate> OutputIterator
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
inclusive_scan_by_key(execution_policy< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result, BinaryPredicate binary_pred);
# 63 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
template< class DerivedPolicy, class
# 64 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
InputIterator1, class
# 65 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
InputIterator2, class
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
OutputIterator, class
# 67 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
BinaryPredicate, class
# 68 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
AssociativeOperator> OutputIterator
# 63 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
inclusive_scan_by_key(execution_policy< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result, BinaryPredicate binary_pred, AssociativeOperator binary_op);
# 79 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
template< class DerivedPolicy, class
# 80 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
InputIterator1, class
# 81 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
InputIterator2, class
# 82 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
OutputIterator> OutputIterator
# 79 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
exclusive_scan_by_key(execution_policy< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result);
# 91 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
template< class DerivedPolicy, class
# 92 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
InputIterator1, class
# 93 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
InputIterator2, class
# 94 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
OutputIterator, class
# 95 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
T> OutputIterator
# 91 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
exclusive_scan_by_key(execution_policy< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result, T init);
# 105 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
template< class DerivedPolicy, class
# 106 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
InputIterator1, class
# 107 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
InputIterator2, class
# 108 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
OutputIterator, class
# 109 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
T, class
# 110 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
BinaryPredicate> OutputIterator
# 105 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
exclusive_scan_by_key(execution_policy< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result, T init, BinaryPredicate binary_pred);
# 121 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
template< class DerivedPolicy, class
# 122 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
InputIterator1, class
# 123 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
InputIterator2, class
# 124 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
OutputIterator, class
# 125 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
T, class
# 126 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
BinaryPredicate, class
# 127 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
AssociativeOperator> OutputIterator
# 121 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
exclusive_scan_by_key(execution_policy< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputIterator result, T init, BinaryPredicate binary_pred, AssociativeOperator binary_op);
# 138 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
}
# 139 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
}
# 140 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
}
# 141 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.h"
}
# 27 "/usr/local/cuda/include/thrust/replace.h"
namespace thrust {
# 86 "/usr/local/cuda/include/thrust/replace.h"
template< class DerivedPolicy, class ForwardIterator, class T> void replace(const detail::execution_policy_base< DerivedPolicy> & exec, ForwardIterator first, ForwardIterator last, const T & old_value, const T & new_value);
# 136 "/usr/local/cuda/include/thrust/replace.h"
template< class ForwardIterator, class T> void replace(ForwardIterator first, ForwardIterator last, const T & old_value, const T & new_value);
# 200 "/usr/local/cuda/include/thrust/replace.h"
template< class DerivedPolicy, class ForwardIterator, class Predicate, class T> void replace_if(const detail::execution_policy_base< DerivedPolicy> & exec, ForwardIterator first, ForwardIterator last, Predicate pred, const T & new_value);
# 261 "/usr/local/cuda/include/thrust/replace.h"
template< class ForwardIterator, class Predicate, class T> void replace_if(ForwardIterator first, ForwardIterator last, Predicate pred, const T & new_value);
# 334 "/usr/local/cuda/include/thrust/replace.h"
template< class DerivedPolicy, class ForwardIterator, class InputIterator, class Predicate, class T> void replace_if(const detail::execution_policy_base< DerivedPolicy> & exec, ForwardIterator first, ForwardIterator last, InputIterator stencil, Predicate pred, const T & new_value);
# 404 "/usr/local/cuda/include/thrust/replace.h"
template< class ForwardIterator, class InputIterator, class Predicate, class T> void replace_if(ForwardIterator first, ForwardIterator last, InputIterator stencil, Predicate pred, const T & new_value);
# 463 "/usr/local/cuda/include/thrust/replace.h"
template< class DerivedPolicy, class InputIterator, class OutputIterator, class T> OutputIterator replace_copy(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result, const T & old_value, const T & new_value);
# 519 "/usr/local/cuda/include/thrust/replace.h"
template< class InputIterator, class OutputIterator, class T> OutputIterator replace_copy(InputIterator first, InputIterator last, OutputIterator result, const T & old_value, const T & new_value);
# 588 "/usr/local/cuda/include/thrust/replace.h"
template< class DerivedPolicy, class InputIterator, class OutputIterator, class Predicate, class T> OutputIterator replace_copy_if(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result, Predicate pred, const T & new_value);
# 655 "/usr/local/cuda/include/thrust/replace.h"
template< class InputIterator, class OutputIterator, class Predicate, class T> OutputIterator replace_copy_if(InputIterator first, InputIterator last, OutputIterator result, Predicate pred, const T & new_value);
# 732 "/usr/local/cuda/include/thrust/replace.h"
template< class DerivedPolicy, class InputIterator1, class InputIterator2, class OutputIterator, class Predicate, class T> OutputIterator replace_copy_if(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first, InputIterator1 last, InputIterator2 stencil, OutputIterator result, Predicate pred, const T & new_value);
# 807 "/usr/local/cuda/include/thrust/replace.h"
template< class InputIterator1, class InputIterator2, class OutputIterator, class Predicate, class T> OutputIterator replace_copy_if(InputIterator1 first, InputIterator1 last, InputIterator2 stencil, OutputIterator result, Predicate pred, const T & new_value);
# 820 "/usr/local/cuda/include/thrust/replace.h"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/replace.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/replace.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/replace.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/replace.h"
namespace generic {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/replace.h"
template< class DerivedPolicy, class InputIterator, class OutputIterator, class Predicate, class T> OutputIterator replace_copy_if(execution_policy< DerivedPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result, Predicate pred, const T & new_value);
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/replace.h"
template< class DerivedPolicy, class InputIterator1, class InputIterator2, class OutputIterator, class Predicate, class T> OutputIterator replace_copy_if(execution_policy< DerivedPolicy> & exec, InputIterator1 first, InputIterator1 last, InputIterator2 stencil, OutputIterator result, Predicate pred, const T & new_value);
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/replace.h"
template< class DerivedPolicy, class InputIterator, class OutputIterator, class T> OutputIterator replace_copy(execution_policy< DerivedPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result, const T & old_value, const T & new_value);
# 64 "/usr/local/cuda/include/thrust/system/detail/generic/replace.h"
template< class DerivedPolicy, class ForwardIterator, class Predicate, class T> void replace_if(execution_policy< DerivedPolicy> & exec, ForwardIterator first, ForwardIterator last, Predicate pred, const T & new_value);
# 73 "/usr/local/cuda/include/thrust/system/detail/generic/replace.h"
template< class DerivedPolicy, class ForwardIterator, class InputIterator, class Predicate, class T> void replace_if(execution_policy< DerivedPolicy> & exec, ForwardIterator first, ForwardIterator last, InputIterator stencil, Predicate pred, const T & new_value);
# 83 "/usr/local/cuda/include/thrust/system/detail/generic/replace.h"
template< class DerivedPolicy, class ForwardIterator, class T> void replace(execution_policy< DerivedPolicy> & exec, ForwardIterator first, ForwardIterator last, const T & old_value, const T & new_value);
# 92 "/usr/local/cuda/include/thrust/system/detail/generic/replace.h"
}
# 93 "/usr/local/cuda/include/thrust/system/detail/generic/replace.h"
}
# 94 "/usr/local/cuda/include/thrust/system/detail/generic/replace.h"
}
# 95 "/usr/local/cuda/include/thrust/system/detail/generic/replace.h"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
namespace generic {
# 31 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
namespace detail {
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
template< class Predicate, class NewType, class OutputType>
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
struct new_value_if {
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
new_value_if(Predicate p, NewType nv) : pred(p), new_value(nv) { }
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
template< class InputType> OutputType
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
operator()(const InputType &x) const
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
{
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
return ((pred)(x)) ? new_value : x;
# 48 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
}
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
template< class InputType, class PredicateArgumentType> OutputType
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
operator()(const InputType &x, const PredicateArgumentType &y)
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
{
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
return ((pred)(y)) ? new_value : x;
# 57 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
}
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
Predicate pred;
# 60 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
NewType new_value;
# 61 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
};
# 65 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
template< class T>
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
struct constant_unary {
# 69 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
constant_unary(T _c) : c(_c) { }
# 71 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
template< class U> T
# 73 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
operator()(U &x)
# 74 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
{
# 75 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
return c;
# 76 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
}
# 78 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
T c;
# 79 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
};
# 82 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
}
# 85 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
template< class DerivedPolicy, class InputIterator, class OutputIterator, class Predicate, class T> OutputIterator
# 87 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
replace_copy_if(execution_policy< DerivedPolicy> &exec, InputIterator
# 88 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
first, InputIterator
# 89 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
last, OutputIterator
# 90 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
result, Predicate
# 91 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
pred, const T &
# 92 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
new_value)
# 93 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
{
# 94 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
typedef typename iterator_traits< OutputIterator> ::value_type OutputType;
# 96 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
detail::new_value_if< Predicate, T, typename iterator_traits< OutputIterator> ::value_type> op(pred, new_value);
# 97 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
return thrust::transform(exec, first, last, result, op);
# 98 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
}
# 101 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
template< class DerivedPolicy, class InputIterator1, class InputIterator2, class OutputIterator, class Predicate, class T> OutputIterator
# 103 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
replace_copy_if(execution_policy< DerivedPolicy> &exec, InputIterator1
# 104 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
first, InputIterator1
# 105 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
last, InputIterator2
# 106 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
stencil, OutputIterator
# 107 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
result, Predicate
# 108 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
pred, const T &
# 109 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
new_value)
# 110 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
{
# 111 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
typedef typename iterator_traits< OutputIterator> ::value_type OutputType;
# 113 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
detail::new_value_if< Predicate, T, typename iterator_traits< OutputIterator> ::value_type> op(pred, new_value);
# 114 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
return thrust::transform(exec, first, last, stencil, result, op);
# 115 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
}
# 118 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
template< class DerivedPolicy, class InputIterator, class OutputIterator, class T> OutputIterator
# 120 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
replace_copy(execution_policy< DerivedPolicy> &exec, InputIterator
# 121 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
first, InputIterator
# 122 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
last, OutputIterator
# 123 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
result, const T &
# 124 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
old_value, const T &
# 125 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
new_value)
# 126 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
{
# 127 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
thrust::detail::equal_to_value< T> pred(old_value);
# 128 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
return thrust::replace_copy_if(exec, first, last, result, pred, new_value);
# 129 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
}
# 132 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
template< class DerivedPolicy, class ForwardIterator, class Predicate, class T> void
# 134 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
replace_if(execution_policy< DerivedPolicy> &exec, ForwardIterator
# 135 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
first, ForwardIterator
# 136 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
last, Predicate
# 137 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
pred, const T &
# 138 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
new_value)
# 139 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
{
# 140 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
detail::constant_unary< T> f(new_value);
# 141 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
thrust::transform_if(exec, first, last, first, first, f, pred);
# 142 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
}
# 145 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
template< class DerivedPolicy, class ForwardIterator, class InputIterator, class Predicate, class T> void
# 147 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
replace_if(execution_policy< DerivedPolicy> &exec, ForwardIterator
# 148 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
first, ForwardIterator
# 149 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
last, InputIterator
# 150 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
stencil, Predicate
# 151 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
pred, const T &
# 152 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
new_value)
# 153 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
{
# 154 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
detail::constant_unary< T> f(new_value);
# 155 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
thrust::transform_if(exec, first, last, stencil, first, f, pred);
# 156 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
}
# 159 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
template< class DerivedPolicy, class ForwardIterator, class T> void
# 161 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
replace(execution_policy< DerivedPolicy> &exec, ForwardIterator
# 162 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
first, ForwardIterator
# 163 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
last, const T &
# 164 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
old_value, const T &
# 165 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
new_value)
# 166 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
{
# 167 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
thrust::detail::equal_to_value< T> pred(old_value);
# 168 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
return thrust::replace_if(exec, first, last, pred, new_value);
# 169 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
}
# 172 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
}
# 173 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
}
# 174 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
}
# 175 "/usr/local/cuda/include/thrust/system/detail/generic/replace.inl"
}
# 29 "/usr/local/cuda/include/thrust/detail/replace.inl"
namespace thrust {
# 34 "/usr/local/cuda/include/thrust/detail/replace.inl"
template< class DerivedPolicy, class ForwardIterator, class T> void
# 36 "/usr/local/cuda/include/thrust/detail/replace.inl"
replace(const detail::execution_policy_base< DerivedPolicy> &exec, ForwardIterator
# 37 "/usr/local/cuda/include/thrust/detail/replace.inl"
first, ForwardIterator last, const T &
# 38 "/usr/local/cuda/include/thrust/detail/replace.inl"
old_value, const T &
# 39 "/usr/local/cuda/include/thrust/detail/replace.inl"
new_value)
# 40 "/usr/local/cuda/include/thrust/detail/replace.inl"
{
# 41 "/usr/local/cuda/include/thrust/detail/replace.inl"
using system::detail::generic::replace;
# 42 "/usr/local/cuda/include/thrust/detail/replace.inl"
return replace(detail::derived_cast(detail::strip_const(exec)), first, last, old_value, new_value);
# 43 "/usr/local/cuda/include/thrust/detail/replace.inl"
}
# 47 "/usr/local/cuda/include/thrust/detail/replace.inl"
template< class DerivedPolicy, class ForwardIterator, class Predicate, class T> void
# 49 "/usr/local/cuda/include/thrust/detail/replace.inl"
replace_if(const detail::execution_policy_base< DerivedPolicy> &exec, ForwardIterator
# 50 "/usr/local/cuda/include/thrust/detail/replace.inl"
first, ForwardIterator last, Predicate
# 51 "/usr/local/cuda/include/thrust/detail/replace.inl"
pred, const T &
# 52 "/usr/local/cuda/include/thrust/detail/replace.inl"
new_value)
# 53 "/usr/local/cuda/include/thrust/detail/replace.inl"
{
# 54 "/usr/local/cuda/include/thrust/detail/replace.inl"
using system::detail::generic::replace_if;
# 55 "/usr/local/cuda/include/thrust/detail/replace.inl"
return replace_if(detail::derived_cast(detail::strip_const(exec)), first, last, pred, new_value);
# 56 "/usr/local/cuda/include/thrust/detail/replace.inl"
}
# 60 "/usr/local/cuda/include/thrust/detail/replace.inl"
template< class DerivedPolicy, class ForwardIterator, class InputIterator, class Predicate, class T> void
# 62 "/usr/local/cuda/include/thrust/detail/replace.inl"
replace_if(const detail::execution_policy_base< DerivedPolicy> &exec, ForwardIterator
# 63 "/usr/local/cuda/include/thrust/detail/replace.inl"
first, ForwardIterator last, InputIterator
# 64 "/usr/local/cuda/include/thrust/detail/replace.inl"
stencil, Predicate
# 65 "/usr/local/cuda/include/thrust/detail/replace.inl"
pred, const T &
# 66 "/usr/local/cuda/include/thrust/detail/replace.inl"
new_value)
# 67 "/usr/local/cuda/include/thrust/detail/replace.inl"
{
# 68 "/usr/local/cuda/include/thrust/detail/replace.inl"
using system::detail::generic::replace_if;
# 69 "/usr/local/cuda/include/thrust/detail/replace.inl"
return replace_if(detail::derived_cast(detail::strip_const(exec)), first, last, stencil, pred, new_value);
# 70 "/usr/local/cuda/include/thrust/detail/replace.inl"
}
# 74 "/usr/local/cuda/include/thrust/detail/replace.inl"
template< class DerivedPolicy, class InputIterator, class OutputIterator, class T> OutputIterator
# 76 "/usr/local/cuda/include/thrust/detail/replace.inl"
replace_copy(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 77 "/usr/local/cuda/include/thrust/detail/replace.inl"
first, InputIterator last, OutputIterator
# 78 "/usr/local/cuda/include/thrust/detail/replace.inl"
result, const T &
# 79 "/usr/local/cuda/include/thrust/detail/replace.inl"
old_value, const T &
# 80 "/usr/local/cuda/include/thrust/detail/replace.inl"
new_value)
# 81 "/usr/local/cuda/include/thrust/detail/replace.inl"
{
# 82 "/usr/local/cuda/include/thrust/detail/replace.inl"
using system::detail::generic::replace_copy;
# 83 "/usr/local/cuda/include/thrust/detail/replace.inl"
return replace_copy(detail::derived_cast(detail::strip_const(exec)), first, last, result, old_value, new_value);
# 84 "/usr/local/cuda/include/thrust/detail/replace.inl"
}
# 88 "/usr/local/cuda/include/thrust/detail/replace.inl"
template< class DerivedPolicy, class InputIterator, class OutputIterator, class Predicate, class T> OutputIterator
# 90 "/usr/local/cuda/include/thrust/detail/replace.inl"
replace_copy_if(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 91 "/usr/local/cuda/include/thrust/detail/replace.inl"
first, InputIterator last, OutputIterator
# 92 "/usr/local/cuda/include/thrust/detail/replace.inl"
result, Predicate
# 93 "/usr/local/cuda/include/thrust/detail/replace.inl"
pred, const T &
# 94 "/usr/local/cuda/include/thrust/detail/replace.inl"
new_value)
# 95 "/usr/local/cuda/include/thrust/detail/replace.inl"
{
# 96 "/usr/local/cuda/include/thrust/detail/replace.inl"
using system::detail::generic::replace_copy_if;
# 97 "/usr/local/cuda/include/thrust/detail/replace.inl"
return replace_copy_if(detail::derived_cast(detail::strip_const(exec)), first, last, result, pred, new_value);
# 98 "/usr/local/cuda/include/thrust/detail/replace.inl"
}
# 102 "/usr/local/cuda/include/thrust/detail/replace.inl"
template< class DerivedPolicy, class InputIterator1, class InputIterator2, class OutputIterator, class Predicate, class T> OutputIterator
# 104 "/usr/local/cuda/include/thrust/detail/replace.inl"
replace_copy_if(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 105 "/usr/local/cuda/include/thrust/detail/replace.inl"
first, InputIterator1 last, InputIterator2
# 106 "/usr/local/cuda/include/thrust/detail/replace.inl"
stencil, OutputIterator
# 107 "/usr/local/cuda/include/thrust/detail/replace.inl"
result, Predicate
# 108 "/usr/local/cuda/include/thrust/detail/replace.inl"
pred, const T &
# 109 "/usr/local/cuda/include/thrust/detail/replace.inl"
new_value)
# 110 "/usr/local/cuda/include/thrust/detail/replace.inl"
{
# 111 "/usr/local/cuda/include/thrust/detail/replace.inl"
using system::detail::generic::replace_copy_if;
# 112 "/usr/local/cuda/include/thrust/detail/replace.inl"
return replace_copy_if(detail::derived_cast(detail::strip_const(exec)), first, last, stencil, result, pred, new_value);
# 113 "/usr/local/cuda/include/thrust/detail/replace.inl"
}
# 116 "/usr/local/cuda/include/thrust/detail/replace.inl"
template< class InputIterator, class OutputIterator, class Predicate, class T> OutputIterator
# 117 "/usr/local/cuda/include/thrust/detail/replace.inl"
replace_copy_if(InputIterator first, InputIterator last, OutputIterator
# 118 "/usr/local/cuda/include/thrust/detail/replace.inl"
result, Predicate
# 119 "/usr/local/cuda/include/thrust/detail/replace.inl"
pred, const T &
# 120 "/usr/local/cuda/include/thrust/detail/replace.inl"
new_value)
# 121 "/usr/local/cuda/include/thrust/detail/replace.inl"
{
# 122 "/usr/local/cuda/include/thrust/detail/replace.inl"
using system::detail::generic::select_system;
# 124 "/usr/local/cuda/include/thrust/detail/replace.inl"
typedef typename iterator_system< InputIterator> ::type System1;
# 125 "/usr/local/cuda/include/thrust/detail/replace.inl"
typedef typename iterator_system< OutputIterator> ::type System2;
# 127 "/usr/local/cuda/include/thrust/detail/replace.inl"
System1 system1;
# 128 "/usr/local/cuda/include/thrust/detail/replace.inl"
System2 system2;
# 130 "/usr/local/cuda/include/thrust/detail/replace.inl"
return thrust::replace_copy_if(select_system(system1, system2), first, last, result, pred, new_value);
# 131 "/usr/local/cuda/include/thrust/detail/replace.inl"
}
# 134 "/usr/local/cuda/include/thrust/detail/replace.inl"
template< class InputIterator1, class InputIterator2, class OutputIterator, class Predicate, class T> OutputIterator
# 135 "/usr/local/cuda/include/thrust/detail/replace.inl"
replace_copy_if(InputIterator1 first, InputIterator1 last, InputIterator2
# 136 "/usr/local/cuda/include/thrust/detail/replace.inl"
stencil, OutputIterator
# 137 "/usr/local/cuda/include/thrust/detail/replace.inl"
result, Predicate
# 138 "/usr/local/cuda/include/thrust/detail/replace.inl"
pred, const T &
# 139 "/usr/local/cuda/include/thrust/detail/replace.inl"
new_value)
# 140 "/usr/local/cuda/include/thrust/detail/replace.inl"
{
# 141 "/usr/local/cuda/include/thrust/detail/replace.inl"
using system::detail::generic::select_system;
# 143 "/usr/local/cuda/include/thrust/detail/replace.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 144 "/usr/local/cuda/include/thrust/detail/replace.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 145 "/usr/local/cuda/include/thrust/detail/replace.inl"
typedef typename iterator_system< OutputIterator> ::type System3;
# 147 "/usr/local/cuda/include/thrust/detail/replace.inl"
System1 system1;
# 148 "/usr/local/cuda/include/thrust/detail/replace.inl"
System2 system2;
# 149 "/usr/local/cuda/include/thrust/detail/replace.inl"
System3 system3;
# 151 "/usr/local/cuda/include/thrust/detail/replace.inl"
return thrust::replace_copy_if(select_system(system1, system2, system3), first, last, stencil, result, pred, new_value);
# 152 "/usr/local/cuda/include/thrust/detail/replace.inl"
}
# 155 "/usr/local/cuda/include/thrust/detail/replace.inl"
template< class InputIterator, class OutputIterator, class T> OutputIterator
# 156 "/usr/local/cuda/include/thrust/detail/replace.inl"
replace_copy(InputIterator first, InputIterator last, OutputIterator
# 157 "/usr/local/cuda/include/thrust/detail/replace.inl"
result, const T &
# 158 "/usr/local/cuda/include/thrust/detail/replace.inl"
old_value, const T &
# 159 "/usr/local/cuda/include/thrust/detail/replace.inl"
new_value)
# 160 "/usr/local/cuda/include/thrust/detail/replace.inl"
{
# 161 "/usr/local/cuda/include/thrust/detail/replace.inl"
using system::detail::generic::select_system;
# 163 "/usr/local/cuda/include/thrust/detail/replace.inl"
typedef typename iterator_system< InputIterator> ::type System1;
# 164 "/usr/local/cuda/include/thrust/detail/replace.inl"
typedef typename iterator_system< OutputIterator> ::type System2;
# 166 "/usr/local/cuda/include/thrust/detail/replace.inl"
System1 system1;
# 167 "/usr/local/cuda/include/thrust/detail/replace.inl"
System2 system2;
# 169 "/usr/local/cuda/include/thrust/detail/replace.inl"
return thrust::replace_copy(select_system(system1, system2), first, last, result, old_value, new_value);
# 170 "/usr/local/cuda/include/thrust/detail/replace.inl"
}
# 173 "/usr/local/cuda/include/thrust/detail/replace.inl"
template< class ForwardIterator, class Predicate, class T> void
# 174 "/usr/local/cuda/include/thrust/detail/replace.inl"
replace_if(ForwardIterator first, ForwardIterator last, Predicate
# 175 "/usr/local/cuda/include/thrust/detail/replace.inl"
pred, const T &
# 176 "/usr/local/cuda/include/thrust/detail/replace.inl"
new_value)
# 177 "/usr/local/cuda/include/thrust/detail/replace.inl"
{
# 178 "/usr/local/cuda/include/thrust/detail/replace.inl"
using thrust::system::detail::generic::select_system;
# 180 "/usr/local/cuda/include/thrust/detail/replace.inl"
typedef typename iterator_system< ForwardIterator> ::type System;
# 182 "/usr/local/cuda/include/thrust/detail/replace.inl"
System system;
# 184 "/usr/local/cuda/include/thrust/detail/replace.inl"
return thrust::replace_if(select_system(system), first, last, pred, new_value);
# 185 "/usr/local/cuda/include/thrust/detail/replace.inl"
}
# 188 "/usr/local/cuda/include/thrust/detail/replace.inl"
template< class ForwardIterator, class InputIterator, class Predicate, class T> void
# 189 "/usr/local/cuda/include/thrust/detail/replace.inl"
replace_if(ForwardIterator first, ForwardIterator last, InputIterator
# 190 "/usr/local/cuda/include/thrust/detail/replace.inl"
stencil, Predicate
# 191 "/usr/local/cuda/include/thrust/detail/replace.inl"
pred, const T &
# 192 "/usr/local/cuda/include/thrust/detail/replace.inl"
new_value)
# 193 "/usr/local/cuda/include/thrust/detail/replace.inl"
{
# 194 "/usr/local/cuda/include/thrust/detail/replace.inl"
using system::detail::generic::select_system;
# 196 "/usr/local/cuda/include/thrust/detail/replace.inl"
typedef typename iterator_system< ForwardIterator> ::type System1;
# 197 "/usr/local/cuda/include/thrust/detail/replace.inl"
typedef typename iterator_system< InputIterator> ::type System2;
# 199 "/usr/local/cuda/include/thrust/detail/replace.inl"
System1 system1;
# 200 "/usr/local/cuda/include/thrust/detail/replace.inl"
System2 system2;
# 202 "/usr/local/cuda/include/thrust/detail/replace.inl"
return thrust::replace_if(select_system(system1, system2), first, last, stencil, pred, new_value);
# 203 "/usr/local/cuda/include/thrust/detail/replace.inl"
}
# 206 "/usr/local/cuda/include/thrust/detail/replace.inl"
template< class ForwardIterator, class T> void
# 207 "/usr/local/cuda/include/thrust/detail/replace.inl"
replace(ForwardIterator first, ForwardIterator last, const T &
# 208 "/usr/local/cuda/include/thrust/detail/replace.inl"
old_value, const T &
# 209 "/usr/local/cuda/include/thrust/detail/replace.inl"
new_value)
# 210 "/usr/local/cuda/include/thrust/detail/replace.inl"
{
# 211 "/usr/local/cuda/include/thrust/detail/replace.inl"
using thrust::system::detail::generic::select_system;
# 213 "/usr/local/cuda/include/thrust/detail/replace.inl"
typedef typename iterator_system< ForwardIterator> ::type System;
# 215 "/usr/local/cuda/include/thrust/detail/replace.inl"
System system;
# 217 "/usr/local/cuda/include/thrust/detail/replace.inl"
return thrust::replace(select_system(system), first, last, old_value, new_value);
# 218 "/usr/local/cuda/include/thrust/detail/replace.inl"
}
# 221 "/usr/local/cuda/include/thrust/detail/replace.inl"
}
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
namespace thrust {
# 31 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
namespace system {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
namespace generic {
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
namespace detail {
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
template< class OutputType, class HeadFlagType, class AssociativeOperator>
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
struct segmented_scan_functor {
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
AssociativeOperator binary_op;
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
typedef tuple< OutputType, HeadFlagType, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> result_type;
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
segmented_scan_functor(AssociativeOperator _binary_op) : binary_op(_binary_op) { }
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
result_type operator()(result_type a, result_type b)
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
{
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
return result_type((thrust::get< 1> (b)) ? thrust::get< 0> (b) : (binary_op)(thrust::get< 0> (a), thrust::get< 0> (b)), thrust::get< 1> (a) | thrust::get< 1> (b));
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
}
# 57 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
};
# 60 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
}
# 63 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
template< class DerivedPolicy, class
# 64 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
InputIterator1, class
# 65 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
InputIterator2, class
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
OutputIterator> OutputIterator
# 68 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
inclusive_scan_by_key(execution_policy< DerivedPolicy> &exec, InputIterator1
# 69 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
first1, InputIterator1
# 70 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
last1, InputIterator2
# 71 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
first2, OutputIterator
# 72 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
result)
# 73 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
{
# 74 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
typedef typename iterator_traits< InputIterator1> ::value_type InputType1;
# 75 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
return thrust::inclusive_scan_by_key(exec, first1, last1, first2, result, equal_to< typename iterator_traits< InputIterator1> ::value_type> ());
# 76 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
}
# 79 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
template< class DerivedPolicy, class
# 80 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
InputIterator1, class
# 81 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
InputIterator2, class
# 82 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
OutputIterator, class
# 83 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
BinaryPredicate> OutputIterator
# 85 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
inclusive_scan_by_key(execution_policy< DerivedPolicy> &exec, InputIterator1
# 86 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
first1, InputIterator1
# 87 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
last1, InputIterator2
# 88 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
first2, OutputIterator
# 89 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
result, BinaryPredicate
# 90 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
binary_pred)
# 91 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
{
# 92 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
typedef typename iterator_traits< OutputIterator> ::value_type OutputType;
# 93 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
return thrust::inclusive_scan_by_key(exec, first1, last1, first2, result, binary_pred, plus< typename iterator_traits< OutputIterator> ::value_type> ());
# 94 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
}
# 97 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
template< class DerivedPolicy, class
# 98 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
InputIterator1, class
# 99 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
InputIterator2, class
# 100 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
OutputIterator, class
# 101 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
BinaryPredicate, class
# 102 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
AssociativeOperator> OutputIterator
# 104 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
inclusive_scan_by_key(execution_policy< DerivedPolicy> &exec, InputIterator1
# 105 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
first1, InputIterator1
# 106 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
last1, InputIterator2
# 107 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
first2, OutputIterator
# 108 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
result, BinaryPredicate
# 109 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
binary_pred, AssociativeOperator
# 110 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
binary_op)
# 111 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
{
# 112 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
typedef typename iterator_traits< OutputIterator> ::value_type OutputType;
# 113 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
typedef unsigned HeadFlagType;
# 115 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
const size_t n = last1 - first1;
# 117 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
if (n != (0))
# 118 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
{
# 120 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
thrust::detail::temporary_array< unsigned, DerivedPolicy> flags(exec, n);
# 121 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
(flags[0]) = 1; thrust::transform(exec, first1, last1 - 1, first1 + 1, (flags.begin()) + 1, thrust::detail::not2(binary_pred));
# 128 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
thrust::inclusive_scan(exec, thrust::make_zip_iterator(thrust::make_tuple(first2, (flags.begin()))), thrust::make_zip_iterator(thrust::make_tuple(first2, (flags.begin()))) + n, thrust::make_zip_iterator(thrust::make_tuple(result, (flags.begin()))), ((detail::segmented_scan_functor< typename iterator_traits< OutputIterator> ::value_type, unsigned, AssociativeOperator> )(binary_op)));
# 133 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
}
# 135 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
return result + n;
# 136 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
}
# 139 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
template< class DerivedPolicy, class
# 140 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
InputIterator1, class
# 141 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
InputIterator2, class
# 142 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
OutputIterator> OutputIterator
# 144 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
exclusive_scan_by_key(execution_policy< DerivedPolicy> &exec, InputIterator1
# 145 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
first1, InputIterator1
# 146 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
last1, InputIterator2
# 147 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
first2, OutputIterator
# 148 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
result)
# 149 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
{
# 150 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
typedef typename iterator_traits< OutputIterator> ::value_type OutputType;
# 151 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
return thrust::exclusive_scan_by_key(exec, first1, last1, first2, result, (OutputType)0);
# 152 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
}
# 155 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
template< class DerivedPolicy, class
# 156 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
InputIterator1, class
# 157 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
InputIterator2, class
# 158 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
OutputIterator, class
# 159 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
T> OutputIterator
# 161 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
exclusive_scan_by_key(execution_policy< DerivedPolicy> &exec, InputIterator1
# 162 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
first1, InputIterator1
# 163 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
last1, InputIterator2
# 164 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
first2, OutputIterator
# 165 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
result, T
# 166 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
init)
# 167 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
{
# 168 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
typedef typename iterator_traits< InputIterator1> ::value_type InputType1;
# 169 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
return thrust::exclusive_scan_by_key(exec, first1, last1, first2, result, init, equal_to< typename iterator_traits< InputIterator1> ::value_type> ());
# 170 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
}
# 173 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
template< class DerivedPolicy, class
# 174 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
InputIterator1, class
# 175 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
InputIterator2, class
# 176 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
OutputIterator, class
# 177 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
T, class
# 178 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
BinaryPredicate> OutputIterator
# 180 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
exclusive_scan_by_key(execution_policy< DerivedPolicy> &exec, InputIterator1
# 181 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
first1, InputIterator1
# 182 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
last1, InputIterator2
# 183 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
first2, OutputIterator
# 184 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
result, T
# 185 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
init, BinaryPredicate
# 186 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
binary_pred)
# 187 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
{
# 188 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
typedef typename iterator_traits< OutputIterator> ::value_type OutputType;
# 189 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
return thrust::exclusive_scan_by_key(exec, first1, last1, first2, result, init, binary_pred, plus< typename iterator_traits< OutputIterator> ::value_type> ());
# 190 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
}
# 193 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
template< class DerivedPolicy, class
# 194 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
InputIterator1, class
# 195 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
InputIterator2, class
# 196 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
OutputIterator, class
# 197 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
T, class
# 198 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
BinaryPredicate, class
# 199 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
AssociativeOperator> OutputIterator
# 201 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
exclusive_scan_by_key(execution_policy< DerivedPolicy> &exec, InputIterator1
# 202 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
first1, InputIterator1
# 203 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
last1, InputIterator2
# 204 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
first2, OutputIterator
# 205 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
result, T
# 206 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
init, BinaryPredicate
# 207 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
binary_pred, AssociativeOperator
# 208 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
binary_op)
# 209 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
{
# 210 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
typedef typename iterator_traits< OutputIterator> ::value_type OutputType;
# 211 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
typedef unsigned HeadFlagType;
# 213 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
const size_t n = last1 - first1;
# 215 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
if (n != (0))
# 216 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
{
# 217 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
InputIterator2 last2 = first2 + n;
# 220 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
thrust::detail::temporary_array< unsigned, DerivedPolicy> flags(exec, n);
# 221 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
(flags[0]) = 1; thrust::transform(exec, first1, last1 - 1, first1 + 1, (flags.begin()) + 1, thrust::detail::not2(binary_pred));
# 224 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
thrust::detail::temporary_array< typename iterator_traits< OutputIterator> ::value_type, DerivedPolicy> temp(exec, n);
# 225 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
thrust::replace_copy_if(exec, first2, last2 - 1, (flags.begin()) + 1, (temp.begin()) + 1, negate< unsigned> (), init);
# 226 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
(temp[0]) = init;
# 233 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
thrust::inclusive_scan(exec, thrust::make_zip_iterator(thrust::make_tuple((temp.begin()), (flags.begin()))), thrust::make_zip_iterator(thrust::make_tuple((temp.begin()), (flags.begin()))) + n, thrust::make_zip_iterator(thrust::make_tuple(result, (flags.begin()))), ((detail::segmented_scan_functor< typename iterator_traits< OutputIterator> ::value_type, unsigned, AssociativeOperator> )(binary_op)));
# 238 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
}
# 240 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
return result + n;
# 241 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
}
# 244 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
}
# 245 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
}
# 246 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
}
# 247 "/usr/local/cuda/include/thrust/system/detail/generic/scan_by_key.inl"
}
# 32 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
namespace thrust {
# 34 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
namespace system {
# 36 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
namespace detail {
# 38 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
namespace sequential {
# 43 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
template< class DerivedPolicy, class
# 44 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
InputIterator, class
# 45 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
OutputIterator, class
# 46 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
BinaryFunction> OutputIterator
# 48 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
inclusive_scan(execution_policy< DerivedPolicy> &, InputIterator
# 49 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
first, InputIterator
# 50 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
last, OutputIterator
# 51 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
result, BinaryFunction
# 52 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
binary_op)
# 53 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
{
# 66 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
using namespace thrust::detail;
# 76 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
typedef typename thrust::detail::eval_if< thrust::detail::has_result_type< BinaryFunction> ::value, thrust::detail::result_type< BinaryFunction> , thrust::detail::eval_if< thrust::detail::is_output_iterator< OutputIterator> ::value, iterator_value< InputIterator> , iterator_value< OutputIterator> > > ::type ValueType;
# 82 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
thrust::detail::wrapped_function< BinaryFunction, typename thrust::detail::eval_if< thrust::detail::has_result_type< BinaryFunction> ::value, thrust::detail::result_type< BinaryFunction> , thrust::detail::eval_if< thrust::detail::is_output_iterator< OutputIterator> ::value, iterator_value< InputIterator> , iterator_value< OutputIterator> > > ::type> wrapped_binary_op(binary_op);
# 84 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
if (first != last)
# 85 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
{
# 86 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
ValueType sum = *first;
# 88 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
(*result) = sum;
# 90 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
for ((++first), (++result); first != last; (++first), (++result)) {
# 91 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
(*result) = (sum = wrapped_binary_op(sum, *first)); }
# 92 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
}
# 94 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
return result;
# 95 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
}
# 99 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
template< class DerivedPolicy, class
# 100 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
InputIterator, class
# 101 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
OutputIterator, class
# 102 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
T, class
# 103 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
BinaryFunction> OutputIterator
# 105 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
exclusive_scan(execution_policy< DerivedPolicy> &, InputIterator
# 106 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
first, InputIterator
# 107 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
last, OutputIterator
# 108 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
result, T
# 109 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
init, BinaryFunction
# 110 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
binary_op)
# 111 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
{
# 124 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
using namespace thrust::detail;
# 134 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
typedef typename thrust::detail::eval_if< thrust::detail::has_result_type< BinaryFunction> ::value, thrust::detail::result_type< BinaryFunction> , thrust::detail::eval_if< thrust::detail::is_output_iterator< OutputIterator> ::value, iterator_value< InputIterator> , iterator_value< OutputIterator> > > ::type ValueType;
# 136 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
if (first != last)
# 137 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
{
# 138 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
ValueType tmp = *first;
# 139 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
ValueType sum = init;
# 141 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
(*result) = sum;
# 142 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
sum = binary_op(sum, tmp);
# 144 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
for ((++first), (++result); first != last; (++first), (++result))
# 145 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
{
# 146 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
tmp = (*first);
# 147 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
(*result) = sum;
# 148 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
sum = binary_op(sum, tmp);
# 149 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
}
# 150 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
}
# 152 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
return result;
# 153 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
}
# 156 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
}
# 157 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
}
# 158 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
}
# 159 "/usr/local/cuda/include/thrust/system/detail/sequential/scan.h"
}
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
namespace system {
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
namespace cuda {
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
namespace detail {
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
template< class DerivedPolicy, class
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
InputIterator, class
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
OutputIterator, class
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
AssociativeOperator> OutputIterator
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
inclusive_scan(execution_policy< DerivedPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result, AssociativeOperator binary_op);
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
template< class DerivedPolicy, class
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
InputIterator, class
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
OutputIterator, class
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
T, class
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
AssociativeOperator> OutputIterator
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
exclusive_scan(execution_policy< DerivedPolicy> & exec, InputIterator first, InputIterator last, OutputIterator result, T init, AssociativeOperator binary_op);
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
}
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
}
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
}
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.h"
}
# 22 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
namespace system {
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
namespace cuda {
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
namespace detail {
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
template< class Size>
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
class trivial_decomposition {
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
public: typedef Size size_type;
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
typedef pair< Size, Size> range;
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
trivial_decomposition() : m_n(0)
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{ }
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
trivial_decomposition(size_type n) : m_n(n)
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{ }
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
range operator[](size_type) const
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
return range(0, n());
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
size_type size() const
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
return 1;
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
size_type n() const
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
return m_n;
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
private: Size m_n;
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
};
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
template< class Size> trivial_decomposition< Size>
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
make_trivial_decomposition(Size n)
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
return ((trivial_decomposition< Size> )(n));
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 82 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
template< class Size>
# 83 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
class blocked_decomposition {
# 86 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
public: typedef Size size_type;
# 88 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
typedef pair< Size, Size> range;
# 91 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
blocked_decomposition() : m_n(0), m_block_size(0), m_num_partitions(0)
# 95 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{ }
# 98 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
blocked_decomposition(size_type n, Size block_size) : m_n(n), m_block_size(block_size), m_num_partitions(((n + block_size) - 1) / block_size)
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{ }
# 105 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
range operator[](size_type i) const
# 106 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
size_type first = i * (m_block_size);
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
size_type last = thrust::min(m_n, first + (m_block_size));
# 110 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
return range(first, last);
# 111 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 114 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
size_type size() const
# 115 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{
# 116 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
return m_num_partitions;
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 121 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
size_type n() const
# 122 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
return m_n;
# 124 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
private: Size m_n;
# 128 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
Size m_block_size;
# 129 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
Size m_num_partitions;
# 130 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
};
# 133 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
template< class Size> blocked_decomposition< Size>
# 135 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
make_blocked_decomposition(Size n, Size block_size)
# 136 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{
# 137 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
return blocked_decomposition< Size> (n, block_size);
# 138 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
template< class Size>
# 142 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
class uniform_decomposition : public blocked_decomposition< Size> {
# 146 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
typedef ::thrust::system::cuda::detail::blocked_decomposition< Size> super_t;
# 150 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
public: uniform_decomposition() : super_t()
# 152 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{ }
# 155 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
uniform_decomposition(Size n, Size num_partitions) : super_t(n, n / num_partitions)
# 157 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{ }
# 158 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
};
# 161 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
template< class Size> uniform_decomposition< Size>
# 163 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
make_uniform_decomposition(Size n, Size num_partitions)
# 164 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{
# 165 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
return uniform_decomposition< Size> (n, num_partitions);
# 166 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 169 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
template< class Size>
# 170 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
class aligned_decomposition {
# 173 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
public: typedef Size size_type;
# 175 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
typedef pair< Size, Size> range;
# 178 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
aligned_decomposition() : m_n(0), m_num_partitions(0), m_tile_size(0)
# 182 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{ }
# 185 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
aligned_decomposition(Size n, Size num_partitions, Size aligned_size) : m_n(n), m_num_partitions(num_partitions), m_tile_size(aligned_size)
# 189 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{
# 190 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
size_type num_tiles = ((n + (m_tile_size)) - 1) / (m_tile_size);
# 192 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
(m_num_tiles_per_partition) = (num_tiles / size());
# 193 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
(m_last_partial_tile_size) = (num_tiles % size());
# 194 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 197 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
range operator[](Size i) const
# 198 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{
# 199 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
range result = range_in_tiles(i);
# 200 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
(result.first) *= (m_tile_size);
# 201 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
(result.second) = thrust::min< size_type> (m_n, (result.second) * (m_tile_size));
# 202 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
return result;
# 203 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 206 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
size_type size() const
# 207 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{
# 208 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
return m_num_partitions;
# 209 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 213 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
size_type n() const
# 214 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{
# 215 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
return m_n;
# 216 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 220 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
private: range range_in_tiles(size_type i) const
# 221 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{
# 222 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
range result;
# 224 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
(result.first) = ((m_num_tiles_per_partition) * i);
# 225 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
(result.first) += thrust::min< size_type> (i, m_last_partial_tile_size);
# 227 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
(result.second) = (((result.first) + (m_num_tiles_per_partition)) + (i < (m_last_partial_tile_size)));
# 229 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
return result;
# 230 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 232 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
size_type m_n;
# 233 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
size_type m_num_partitions;
# 234 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
size_type m_num_tiles_per_partition;
# 235 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
size_type m_tile_size;
# 236 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
size_type m_last_partial_tile_size;
# 237 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
};
# 240 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
template< class Size> aligned_decomposition< Size>
# 242 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
make_aligned_decomposition(Size n, Size num_partitions, Size aligned_size)
# 243 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
{
# 244 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
return aligned_decomposition< Size> (n, num_partitions, aligned_size);
# 245 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 248 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 249 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 250 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 251 "/usr/local/cuda/include/thrust/system/cuda/detail/decomposition.h"
}
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
namespace system {
# 35 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
namespace cuda {
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
namespace detail {
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
namespace scan_detail {
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
struct inclusive_scan_n {
# 45 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
template< class ConcurrentGroup, class InputIterator, class Size, class OutputIterator, class T, class BinaryFunction> void
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
operator()(ConcurrentGroup &this_group, InputIterator first, Size n, OutputIterator result, T init, BinaryFunction binary_op)
# 47 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
{int volatile ___ = 1;(void)this_group;(void)first;(void)n;(void)result;(void)init;(void)binary_op;
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
::exit(___);}
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
template< class ConcurrentGroup, class InputIterator, class Size, class OutputIterator, class BinaryFunction> void
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
operator()(ConcurrentGroup &this_group, InputIterator first, Size n, OutputIterator result, BinaryFunction binary_op)
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
{int volatile ___ = 1;(void)this_group;(void)first;(void)n;(void)result;(void)binary_op;
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
::exit(___);}
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
};
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
struct exclusive_scan_n {
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
template< class ConcurrentGroup, class InputIterator, class Size, class OutputIterator, class T, class BinaryFunction> void
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
operator()(ConcurrentGroup &this_group, InputIterator first, Size n, OutputIterator result, T init, BinaryFunction binary_op)
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
{int volatile ___ = 1;(void)this_group;(void)first;(void)n;(void)result;(void)init;(void)binary_op;
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
::exit(___);}
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
};
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
struct inclusive_downsweep {
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
template< class ConcurrentGroup, class RandomAccessIterator1, class Decomposition, class RandomAccessIterator2, class RandomAccessIterator3, class BinaryFunction> void
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
operator()(ConcurrentGroup &this_group, RandomAccessIterator1
# 74 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
first, Decomposition
# 75 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
decomp, RandomAccessIterator2
# 76 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
carries_first, RandomAccessIterator3
# 77 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
result, BinaryFunction
# 78 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
binary_op)
# 79 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
{int volatile ___ = 1;(void)this_group;(void)first;(void)decomp;(void)carries_first;(void)result;(void)binary_op;
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
::exit(___);}
# 97 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
};
# 100 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
struct exclusive_downsweep {
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
template< class ConcurrentGroup, class RandomAccessIterator1, class Decomposition, class RandomAccessIterator2, class RandomAccessIterator3, class BinaryFunction> void
# 103 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
operator()(ConcurrentGroup &this_group, RandomAccessIterator1
# 104 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
first, Decomposition
# 105 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
decomp, RandomAccessIterator2
# 106 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
carries_first, RandomAccessIterator3
# 107 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
result, BinaryFunction
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
binary_op)
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
{int volatile ___ = 1;(void)this_group;(void)first;(void)decomp;(void)carries_first;(void)result;(void)binary_op;
# 119 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
::exit(___);}
# 120 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
};
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
template< class T> struct accumulate_tiles_tuning_impl;
# 126 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
template<> struct accumulate_tiles_tuning_impl< int> {
# 129 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
static const int groupsize = 128;
# 130 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
static const int grainsize = 9;
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
};
# 134 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
template<> struct accumulate_tiles_tuning_impl< double> {
# 137 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
static const int groupsize = 128;
# 138 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
static const int grainsize = 9;
# 139 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
};
# 143 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
template< class T>
# 144 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
struct accumulate_tiles_tuning {
# 146 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
static const int groupsize = ((sizeof(T) <= sizeof(int)) ? accumulate_tiles_tuning_impl< int> ::groupsize : ((sizeof(T) <= ((2) * sizeof(int))) ? accumulate_tiles_tuning_impl< double> ::groupsize : 128));
# 151 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
static const int grainsize = ((sizeof(T) <= sizeof(int)) ? accumulate_tiles_tuning_impl< int> ::grainsize : ((sizeof(T) <= ((2) * sizeof(int))) ? accumulate_tiles_tuning_impl< double> ::grainsize : 3));
# 155 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
};
# 159 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
template< class T1, class T2>
# 160 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
struct accumulate_tiles_tuning< tuple< T1, T2, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > {
# 163 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
static const int groupsize = 128;
# 164 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
static const int grainsize = (((sizeof(T1) + sizeof(T2)) <= ((2) * sizeof(double))) ? 5 : 3);
# 165 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
};
# 171 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
struct accumulate_tiles {
# 173 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
template< class ConcurrentGroup, class RandomAccessIterator1, class Decomposition, class RandomAccessIterator2, class BinaryFunction> void
# 174 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
operator()(ConcurrentGroup &this_group, RandomAccessIterator1
# 175 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
first, Decomposition
# 176 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
decomp, RandomAccessIterator2
# 177 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
result, BinaryFunction
# 178 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
binary_op)
# 179 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
{int volatile ___ = 1;(void)this_group;(void)first;(void)decomp;(void)result;(void)binary_op;
# 197 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
::exit(___);}
# 198 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
};
# 201 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
template< class DerivedPolicy, class
# 202 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
InputIterator, class
# 203 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
OutputIterator, class
# 204 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
AssociativeOperator> OutputIterator
# 206 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
inclusive_scan(execution_policy< DerivedPolicy> &exec, InputIterator
# 207 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
first, InputIterator
# 208 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
last, OutputIterator
# 209 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
result, AssociativeOperator
# 210 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
binary_op)
# 211 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
{
# 216 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
typedef typename bulk_::detail::scan_detail::scan_intermediate< InputIterator, OutputIterator, AssociativeOperator> ::type intermediate_type;
# 218 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
typedef typename iterator_difference< InputIterator> ::type Size;
# 220 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
Size n = last - first;
# 222 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
cudaStream_t s = stream(thrust::detail::derived_cast(exec));
# 224 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
const Size threshold_of_parallelism = (20000);
# 226 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
if (n < threshold_of_parallelism)
# 227 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
{
# 228 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
const Size groupsize = ((sizeof(intermediate_type) <= ((2) * sizeof(int))) ? 512 : ((sizeof(intermediate_type) <= ((4) * sizeof(int))) ? 256 : 128));
# 233 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
typedef bulk_::detail::scan_detail::scan_buffer< groupsize, 3UL, InputIterator, OutputIterator, AssociativeOperator> heap_type;
# 234 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
Size heap_size = (sizeof(heap_type));
# 235 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
bulk_::async(bulk_::grid< groupsize, 3> (1, heap_size, s), inclusive_scan_n(), bulk_::root.this_exec, first, n, result, binary_op);
# 238 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
(void)groupsize;
# 239 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
} else
# 241 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
{
# 242 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
const Size groupsize = (scan_detail::accumulate_tiles_tuning< typename bulk_::detail::scan_detail::scan_intermediate< InputIterator, OutputIterator, AssociativeOperator> ::type> ::groupsize);
# 243 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
const Size grainsize = (scan_detail::accumulate_tiles_tuning< typename bulk_::detail::scan_detail::scan_intermediate< InputIterator, OutputIterator, AssociativeOperator> ::type> ::grainsize);
# 245 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
const Size tile_size = groupsize * grainsize;
# 246 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
Size num_tiles = ((n + tile_size) - 1) / tile_size;
# 249 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
Size subscription = (20);
# 250 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
Size num_groups = thrust::min< typename iterator_difference< InputIterator> ::type> (subscription * bulk_::concurrent_group<> ::hardware_concurrency(), num_tiles);
# 252 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
aligned_decomposition< typename iterator_difference< InputIterator> ::type> decomp(n, num_groups, tile_size);
# 254 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
thrust::detail::temporary_array< typename bulk_::detail::scan_detail::scan_intermediate< InputIterator, OutputIterator, AssociativeOperator> ::type, DerivedPolicy> carries(exec, num_groups);
# 258 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
Size heap_size = groupsize * sizeof(intermediate_type);
# 259 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
bulk_::async(bulk_::grid< groupsize, grainsize> (num_groups, heap_size, s), accumulate_tiles(), bulk_::root.this_exec, first, decomp, (carries.begin()), binary_op);
# 263 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
const Size groupsize2 = ((sizeof(intermediate_type) <= ((2) * sizeof(int))) ? 256 : 128);
# 264 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
const Size grainsize2 = (3);
# 265 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
typedef bulk_::detail::scan_detail::scan_buffer< groupsize2, grainsize2, InputIterator, OutputIterator, AssociativeOperator> heap_type2;
# 266 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
heap_size = sizeof(heap_type2);
# 267 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
bulk_::async(bulk_::grid< groupsize2, grainsize2> (1, heap_size, s), inclusive_scan_n(), bulk_::root.this_exec, (carries.begin()), num_groups, (carries.begin()), binary_op);
# 274 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
typedef bulk_::detail::scan_detail::scan_buffer< groupsize, grainsize, InputIterator, OutputIterator, AssociativeOperator> heap_type3;
# 275 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
heap_size = sizeof(heap_type3);
# 276 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
bulk_::async(bulk_::grid< groupsize, grainsize> (num_groups, heap_size, s), inclusive_downsweep(), bulk_::root.this_exec, first, decomp, (carries.begin()), result, binary_op);
# 279 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
(void)groupsize2;
# 280 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
(void)grainsize2;
# 281 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
}
# 283 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
return result + n;
# 284 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
}
# 287 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
template< class DerivedPolicy, class
# 288 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
InputIterator, class
# 289 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
OutputIterator, class
# 290 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
T, class
# 291 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
AssociativeOperator> OutputIterator
# 293 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
exclusive_scan(execution_policy< DerivedPolicy> &exec, InputIterator
# 294 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
first, InputIterator
# 295 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
last, OutputIterator
# 296 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
result, T
# 297 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
init, AssociativeOperator
# 298 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
binary_op)
# 299 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
{
# 304 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
typedef typename bulk_::detail::scan_detail::scan_intermediate< InputIterator, OutputIterator, AssociativeOperator> ::type intermediate_type;
# 306 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
typedef typename iterator_difference< InputIterator> ::type Size;
# 308 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
Size n = last - first;
# 310 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
cudaStream_t s = stream(thrust::detail::derived_cast(exec));
# 312 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
const Size threshold_of_parallelism = (20000);
# 314 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
if (n < threshold_of_parallelism)
# 315 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
{
# 316 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
const Size groupsize = ((sizeof(intermediate_type) <= ((2) * sizeof(int))) ? 512 : ((sizeof(intermediate_type) <= ((4) * sizeof(int))) ? 256 : 128));
# 321 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
typedef bulk_::detail::scan_detail::scan_buffer< groupsize, 3UL, InputIterator, OutputIterator, AssociativeOperator> heap_type;
# 322 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
Size heap_size = (sizeof(heap_type));
# 323 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
bulk_::async(bulk_::grid< groupsize, 3> (1, heap_size, s), exclusive_scan_n(), bulk_::root.this_exec, first, n, result, init, binary_op);
# 326 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
(void)groupsize;
# 327 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
} else
# 329 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
{
# 330 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
const Size groupsize = (scan_detail::accumulate_tiles_tuning< typename bulk_::detail::scan_detail::scan_intermediate< InputIterator, OutputIterator, AssociativeOperator> ::type> ::groupsize);
# 331 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
const Size grainsize = (scan_detail::accumulate_tiles_tuning< typename bulk_::detail::scan_detail::scan_intermediate< InputIterator, OutputIterator, AssociativeOperator> ::type> ::grainsize);
# 333 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
const Size tile_size = groupsize * grainsize;
# 334 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
Size num_tiles = ((n + tile_size) - 1) / tile_size;
# 337 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
Size subscription = (20);
# 338 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
Size num_groups = thrust::min< typename iterator_difference< InputIterator> ::type> (subscription * bulk_::concurrent_group<> ::hardware_concurrency(), num_tiles);
# 340 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
aligned_decomposition< typename iterator_difference< InputIterator> ::type> decomp(n, num_groups, tile_size);
# 342 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
thrust::detail::temporary_array< typename bulk_::detail::scan_detail::scan_intermediate< InputIterator, OutputIterator, AssociativeOperator> ::type, DerivedPolicy> carries(exec, num_groups);
# 346 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
Size heap_size = groupsize * sizeof(intermediate_type);
# 347 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
bulk_::async(bulk_::grid< groupsize, grainsize> (num_groups, heap_size, s), accumulate_tiles(), bulk_::root.this_exec, first, decomp, (carries.begin()), binary_op);
# 351 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
const Size groupsize2 = ((sizeof(intermediate_type) <= ((2) * sizeof(int))) ? 256 : 128);
# 352 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
const Size grainsize2 = (3);
# 354 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
typedef bulk_::detail::scan_detail::scan_buffer< groupsize2, grainsize2, InputIterator, OutputIterator, AssociativeOperator> heap_type2;
# 355 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
heap_size = sizeof(heap_type2);
# 356 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
bulk_::async(bulk_::grid< groupsize2, grainsize2> (1, heap_size, s), exclusive_scan_n(), bulk_::root.this_exec, (carries.begin()), num_groups, (carries.begin()), init, binary_op);
# 363 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
typedef bulk_::detail::scan_detail::scan_buffer< groupsize, grainsize, InputIterator, OutputIterator, AssociativeOperator> heap_type3;
# 364 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
heap_size = sizeof(heap_type3);
# 365 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
bulk_::async(bulk_::grid< groupsize, grainsize> (num_groups, heap_size, s), exclusive_downsweep(), bulk_::root.this_exec, first, decomp, (carries.begin()), result, binary_op);
# 368 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
(void)groupsize2;
# 369 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
(void)grainsize2;
# 370 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
}
# 372 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
return result + n;
# 373 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
}
# 376 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
}
# 379 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
template< class DerivedPolicy, class
# 380 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
InputIterator, class
# 381 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
OutputIterator, class
# 382 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
AssociativeOperator> OutputIterator
# 384 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
inclusive_scan(execution_policy< DerivedPolicy> &exec, InputIterator
# 385 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
first, InputIterator
# 386 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
last, OutputIterator
# 387 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
result, AssociativeOperator
# 388 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
binary_op)
# 389 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
{
# 395 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
typedef thrust::detail::static_assert_test< sizeof(thrust::detail::STATIC_ASSERTION_FAILURE< (bool)(thrust::detail::depend_on_instantiation< InputIterator, true> ::value)> )> thrust_static_assert_typedef_395 __attribute((unused));
# 397 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
struct workaround {
# 400 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
static OutputIterator parallel_path(execution_policy< DerivedPolicy> &exec, InputIterator
# 401 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
first, InputIterator
# 402 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
last, OutputIterator
# 403 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
result, AssociativeOperator
# 404 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
binary_op)
# 405 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
{
# 406 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
return scan_detail::inclusive_scan(exec, first, last, result, binary_op);
# 407 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
}
# 410 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
static OutputIterator sequential_path(execution_policy< DerivedPolicy> &, InputIterator
# 411 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
first, InputIterator
# 412 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
last, OutputIterator
# 413 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
result, AssociativeOperator
# 414 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
binary_op)
# 415 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
{
# 416 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
return thrust::inclusive_scan(thrust::seq, first, last, result, binary_op);
# 417 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
}
# 418 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
};
# 421 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
return (workaround::parallel_path)(exec, first, last, result, binary_op);
# 425 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
}
# 428 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
template< class DerivedPolicy, class
# 429 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
InputIterator, class
# 430 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
OutputIterator, class
# 431 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
T, class
# 432 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
AssociativeOperator> OutputIterator
# 434 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
exclusive_scan(execution_policy< DerivedPolicy> &exec, InputIterator
# 435 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
first, InputIterator
# 436 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
last, OutputIterator
# 437 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
result, T
# 438 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
init, AssociativeOperator
# 439 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
binary_op)
# 440 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
{
# 446 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
typedef thrust::detail::static_assert_test< sizeof(thrust::detail::STATIC_ASSERTION_FAILURE< (bool)(thrust::detail::depend_on_instantiation< InputIterator, true> ::value)> )> thrust_static_assert_typedef_446 __attribute((unused));
# 448 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
struct workaround {
# 451 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
static OutputIterator parallel_path(execution_policy< DerivedPolicy> &exec, InputIterator
# 452 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
first, InputIterator
# 453 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
last, OutputIterator
# 454 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
result, T
# 455 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
init, AssociativeOperator
# 456 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
binary_op)
# 457 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
{
# 458 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
return scan_detail::exclusive_scan(exec, first, last, result, init, binary_op);
# 459 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
}
# 462 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
static OutputIterator sequential_path(execution_policy< DerivedPolicy> &, InputIterator
# 463 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
first, InputIterator
# 464 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
last, OutputIterator
# 465 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
result, T
# 466 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
init, AssociativeOperator
# 467 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
binary_op)
# 468 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
{
# 469 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
return thrust::exclusive_scan(thrust::seq, first, last, result, init, binary_op);
# 470 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
}
# 471 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
};
# 474 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
return (workaround::parallel_path)(exec, first, last, result, init, binary_op);
# 478 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
}
# 481 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
}
# 482 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
}
# 483 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
}
# 484 "/usr/local/cuda/include/thrust/system/cuda/detail/scan.inl"
}
# 29 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
namespace thrust {
# 31 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
namespace system {
# 33 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
namespace sequential {
# 40 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
template< class DerivedPolicy, class
# 41 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
InputIterator1, class
# 42 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
InputIterator2, class
# 43 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
OutputIterator, class
# 44 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
BinaryPredicate, class
# 45 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
BinaryFunction> OutputIterator
# 47 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
inclusive_scan_by_key(execution_policy< DerivedPolicy> &, InputIterator1
# 48 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
first1, InputIterator1
# 49 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
last1, InputIterator2
# 50 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
first2, OutputIterator
# 51 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
result, BinaryPredicate
# 52 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
binary_pred, BinaryFunction
# 53 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
binary_op)
# 54 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
{
# 55 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
typedef typename iterator_traits< InputIterator1> ::value_type KeyType;
# 56 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
typedef typename iterator_traits< OutputIterator> ::value_type ValueType;
# 62 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
thrust::detail::wrapped_function< BinaryFunction, typename iterator_traits< OutputIterator> ::value_type> wrapped_binary_op(binary_op);
# 64 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
if (first1 != last1)
# 65 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
{
# 66 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
KeyType prev_key = *first1;
# 67 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
ValueType prev_value = *first2;
# 69 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
(*result) = prev_value;
# 71 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
for (((++first1), (++first2)), (++result); first1 != last1; ((++first1), (++first2)), (++result))
# 74 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
{
# 75 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
KeyType key = *first1;
# 77 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
if (binary_pred(prev_key, key)) {
# 78 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
(*result) = (prev_value = wrapped_binary_op(prev_value, *first2)); } else {
# 80 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
(*result) = (prev_value = (*first2)); }
# 82 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
prev_key = key;
# 83 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
}
# 84 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
}
# 86 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
return result;
# 87 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
}
# 91 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
template< class DerivedPolicy, class
# 92 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
InputIterator1, class
# 93 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
InputIterator2, class
# 94 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
OutputIterator, class
# 95 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
T, class
# 96 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
BinaryPredicate, class
# 97 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
BinaryFunction> OutputIterator
# 99 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
exclusive_scan_by_key(execution_policy< DerivedPolicy> &, InputIterator1
# 100 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
first1, InputIterator1
# 101 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
last1, InputIterator2
# 102 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
first2, OutputIterator
# 103 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
result, T
# 104 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
init, BinaryPredicate
# 105 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
binary_pred, BinaryFunction
# 106 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
binary_op)
# 107 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
{
# 108 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
typedef typename iterator_traits< InputIterator1> ::value_type KeyType;
# 109 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
typedef typename iterator_traits< OutputIterator> ::value_type ValueType;
# 111 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
if (first1 != last1)
# 112 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
{
# 113 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
KeyType temp_key = *first1;
# 114 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
ValueType temp_value = *first2;
# 116 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
ValueType next = init;
# 119 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
(*result) = next;
# 121 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
next = binary_op(next, temp_value);
# 123 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
for (((++first1), (++first2)), (++result); first1 != last1; ((++first1), (++first2)), (++result))
# 126 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
{
# 127 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
KeyType key = *first1;
# 130 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
temp_value = (*first2);
# 132 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
if (!binary_pred(temp_key, key)) {
# 133 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
next = init; }
# 135 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
(*result) = next;
# 136 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
next = binary_op(next, temp_value);
# 138 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
temp_key = key;
# 139 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
}
# 140 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
}
# 142 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
return result;
# 143 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
}
# 146 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
}
# 147 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
}
# 148 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
}
# 149 "/usr/local/cuda/include/thrust/system/detail/sequential/scan_by_key.h"
}
# 31 "/usr/local/cuda/include/thrust/detail/scan.inl"
namespace thrust {
# 36 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class DerivedPolicy, class
# 37 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator, class
# 38 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator> OutputIterator
# 40 "/usr/local/cuda/include/thrust/detail/scan.inl"
inclusive_scan(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 41 "/usr/local/cuda/include/thrust/detail/scan.inl"
first, InputIterator
# 42 "/usr/local/cuda/include/thrust/detail/scan.inl"
last, OutputIterator
# 43 "/usr/local/cuda/include/thrust/detail/scan.inl"
result)
# 44 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 45 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::inclusive_scan;
# 46 "/usr/local/cuda/include/thrust/detail/scan.inl"
return inclusive_scan(detail::derived_cast(detail::strip_const(exec)), first, last, result);
# 47 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 51 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class DerivedPolicy, class
# 52 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator, class
# 53 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator, class
# 54 "/usr/local/cuda/include/thrust/detail/scan.inl"
AssociativeOperator> OutputIterator
# 56 "/usr/local/cuda/include/thrust/detail/scan.inl"
inclusive_scan(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 57 "/usr/local/cuda/include/thrust/detail/scan.inl"
first, InputIterator
# 58 "/usr/local/cuda/include/thrust/detail/scan.inl"
last, OutputIterator
# 59 "/usr/local/cuda/include/thrust/detail/scan.inl"
result, AssociativeOperator
# 60 "/usr/local/cuda/include/thrust/detail/scan.inl"
binary_op)
# 61 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 62 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::inclusive_scan;
# 63 "/usr/local/cuda/include/thrust/detail/scan.inl"
return inclusive_scan(detail::derived_cast(detail::strip_const(exec)), first, last, result, binary_op);
# 64 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 68 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class DerivedPolicy, class
# 69 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator, class
# 70 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator> OutputIterator
# 72 "/usr/local/cuda/include/thrust/detail/scan.inl"
exclusive_scan(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 73 "/usr/local/cuda/include/thrust/detail/scan.inl"
first, InputIterator
# 74 "/usr/local/cuda/include/thrust/detail/scan.inl"
last, OutputIterator
# 75 "/usr/local/cuda/include/thrust/detail/scan.inl"
result)
# 76 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 77 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::exclusive_scan;
# 78 "/usr/local/cuda/include/thrust/detail/scan.inl"
return exclusive_scan(detail::derived_cast(detail::strip_const(exec)), first, last, result);
# 79 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 83 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class DerivedPolicy, class
# 84 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator, class
# 85 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator, class
# 86 "/usr/local/cuda/include/thrust/detail/scan.inl"
T> OutputIterator
# 88 "/usr/local/cuda/include/thrust/detail/scan.inl"
exclusive_scan(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 89 "/usr/local/cuda/include/thrust/detail/scan.inl"
first, InputIterator
# 90 "/usr/local/cuda/include/thrust/detail/scan.inl"
last, OutputIterator
# 91 "/usr/local/cuda/include/thrust/detail/scan.inl"
result, T
# 92 "/usr/local/cuda/include/thrust/detail/scan.inl"
init)
# 93 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 94 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::exclusive_scan;
# 95 "/usr/local/cuda/include/thrust/detail/scan.inl"
return exclusive_scan(detail::derived_cast(detail::strip_const(exec)), first, last, result, init);
# 96 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 100 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class DerivedPolicy, class
# 101 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator, class
# 102 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator, class
# 103 "/usr/local/cuda/include/thrust/detail/scan.inl"
T, class
# 104 "/usr/local/cuda/include/thrust/detail/scan.inl"
AssociativeOperator> OutputIterator
# 106 "/usr/local/cuda/include/thrust/detail/scan.inl"
exclusive_scan(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 107 "/usr/local/cuda/include/thrust/detail/scan.inl"
first, InputIterator
# 108 "/usr/local/cuda/include/thrust/detail/scan.inl"
last, OutputIterator
# 109 "/usr/local/cuda/include/thrust/detail/scan.inl"
result, T
# 110 "/usr/local/cuda/include/thrust/detail/scan.inl"
init, AssociativeOperator
# 111 "/usr/local/cuda/include/thrust/detail/scan.inl"
binary_op)
# 112 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 113 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::exclusive_scan;
# 114 "/usr/local/cuda/include/thrust/detail/scan.inl"
return exclusive_scan(detail::derived_cast(detail::strip_const(exec)), first, last, result, init, binary_op);
# 115 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 119 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class DerivedPolicy, class
# 120 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator1, class
# 121 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator2, class
# 122 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator> OutputIterator
# 124 "/usr/local/cuda/include/thrust/detail/scan.inl"
inclusive_scan_by_key(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 125 "/usr/local/cuda/include/thrust/detail/scan.inl"
first1, InputIterator1
# 126 "/usr/local/cuda/include/thrust/detail/scan.inl"
last1, InputIterator2
# 127 "/usr/local/cuda/include/thrust/detail/scan.inl"
first2, OutputIterator
# 128 "/usr/local/cuda/include/thrust/detail/scan.inl"
result)
# 129 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 130 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::inclusive_scan_by_key;
# 131 "/usr/local/cuda/include/thrust/detail/scan.inl"
return inclusive_scan_by_key(detail::derived_cast(detail::strip_const(exec)), first1, last1, first2, result);
# 132 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 136 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class DerivedPolicy, class
# 137 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator1, class
# 138 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator2, class
# 139 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator, class
# 140 "/usr/local/cuda/include/thrust/detail/scan.inl"
BinaryPredicate> OutputIterator
# 142 "/usr/local/cuda/include/thrust/detail/scan.inl"
inclusive_scan_by_key(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 143 "/usr/local/cuda/include/thrust/detail/scan.inl"
first1, InputIterator1
# 144 "/usr/local/cuda/include/thrust/detail/scan.inl"
last1, InputIterator2
# 145 "/usr/local/cuda/include/thrust/detail/scan.inl"
first2, OutputIterator
# 146 "/usr/local/cuda/include/thrust/detail/scan.inl"
result, BinaryPredicate
# 147 "/usr/local/cuda/include/thrust/detail/scan.inl"
binary_pred)
# 148 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 149 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::inclusive_scan_by_key;
# 150 "/usr/local/cuda/include/thrust/detail/scan.inl"
return inclusive_scan_by_key(detail::derived_cast(detail::strip_const(exec)), first1, last1, first2, result, binary_pred);
# 151 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 155 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class DerivedPolicy, class
# 156 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator1, class
# 157 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator2, class
# 158 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator, class
# 159 "/usr/local/cuda/include/thrust/detail/scan.inl"
BinaryPredicate, class
# 160 "/usr/local/cuda/include/thrust/detail/scan.inl"
AssociativeOperator> OutputIterator
# 162 "/usr/local/cuda/include/thrust/detail/scan.inl"
inclusive_scan_by_key(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 163 "/usr/local/cuda/include/thrust/detail/scan.inl"
first1, InputIterator1
# 164 "/usr/local/cuda/include/thrust/detail/scan.inl"
last1, InputIterator2
# 165 "/usr/local/cuda/include/thrust/detail/scan.inl"
first2, OutputIterator
# 166 "/usr/local/cuda/include/thrust/detail/scan.inl"
result, BinaryPredicate
# 167 "/usr/local/cuda/include/thrust/detail/scan.inl"
binary_pred, AssociativeOperator
# 168 "/usr/local/cuda/include/thrust/detail/scan.inl"
binary_op)
# 169 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 170 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::inclusive_scan_by_key;
# 171 "/usr/local/cuda/include/thrust/detail/scan.inl"
return inclusive_scan_by_key(detail::derived_cast(detail::strip_const(exec)), first1, last1, first2, result, binary_pred, binary_op);
# 172 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 176 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class DerivedPolicy, class
# 177 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator1, class
# 178 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator2, class
# 179 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator> OutputIterator
# 181 "/usr/local/cuda/include/thrust/detail/scan.inl"
exclusive_scan_by_key(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 182 "/usr/local/cuda/include/thrust/detail/scan.inl"
first1, InputIterator1
# 183 "/usr/local/cuda/include/thrust/detail/scan.inl"
last1, InputIterator2
# 184 "/usr/local/cuda/include/thrust/detail/scan.inl"
first2, OutputIterator
# 185 "/usr/local/cuda/include/thrust/detail/scan.inl"
result)
# 186 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 187 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::exclusive_scan_by_key;
# 188 "/usr/local/cuda/include/thrust/detail/scan.inl"
return exclusive_scan_by_key(detail::derived_cast(detail::strip_const(exec)), first1, last1, first2, result);
# 189 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 193 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class DerivedPolicy, class
# 194 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator1, class
# 195 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator2, class
# 196 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator, class
# 197 "/usr/local/cuda/include/thrust/detail/scan.inl"
T> OutputIterator
# 199 "/usr/local/cuda/include/thrust/detail/scan.inl"
exclusive_scan_by_key(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 200 "/usr/local/cuda/include/thrust/detail/scan.inl"
first1, InputIterator1
# 201 "/usr/local/cuda/include/thrust/detail/scan.inl"
last1, InputIterator2
# 202 "/usr/local/cuda/include/thrust/detail/scan.inl"
first2, OutputIterator
# 203 "/usr/local/cuda/include/thrust/detail/scan.inl"
result, T
# 204 "/usr/local/cuda/include/thrust/detail/scan.inl"
init)
# 205 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 206 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::exclusive_scan_by_key;
# 207 "/usr/local/cuda/include/thrust/detail/scan.inl"
return exclusive_scan_by_key(detail::derived_cast(detail::strip_const(exec)), first1, last1, first2, result, init);
# 208 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 212 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class DerivedPolicy, class
# 213 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator1, class
# 214 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator2, class
# 215 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator, class
# 216 "/usr/local/cuda/include/thrust/detail/scan.inl"
T, class
# 217 "/usr/local/cuda/include/thrust/detail/scan.inl"
BinaryPredicate> OutputIterator
# 219 "/usr/local/cuda/include/thrust/detail/scan.inl"
exclusive_scan_by_key(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 220 "/usr/local/cuda/include/thrust/detail/scan.inl"
first1, InputIterator1
# 221 "/usr/local/cuda/include/thrust/detail/scan.inl"
last1, InputIterator2
# 222 "/usr/local/cuda/include/thrust/detail/scan.inl"
first2, OutputIterator
# 223 "/usr/local/cuda/include/thrust/detail/scan.inl"
result, T
# 224 "/usr/local/cuda/include/thrust/detail/scan.inl"
init, BinaryPredicate
# 225 "/usr/local/cuda/include/thrust/detail/scan.inl"
binary_pred)
# 226 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 227 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::exclusive_scan_by_key;
# 228 "/usr/local/cuda/include/thrust/detail/scan.inl"
return exclusive_scan_by_key(detail::derived_cast(detail::strip_const(exec)), first1, last1, first2, result, init, binary_pred);
# 229 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 233 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class DerivedPolicy, class
# 234 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator1, class
# 235 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator2, class
# 236 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator, class
# 237 "/usr/local/cuda/include/thrust/detail/scan.inl"
T, class
# 238 "/usr/local/cuda/include/thrust/detail/scan.inl"
BinaryPredicate, class
# 239 "/usr/local/cuda/include/thrust/detail/scan.inl"
AssociativeOperator> OutputIterator
# 241 "/usr/local/cuda/include/thrust/detail/scan.inl"
exclusive_scan_by_key(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 242 "/usr/local/cuda/include/thrust/detail/scan.inl"
first1, InputIterator1
# 243 "/usr/local/cuda/include/thrust/detail/scan.inl"
last1, InputIterator2
# 244 "/usr/local/cuda/include/thrust/detail/scan.inl"
first2, OutputIterator
# 245 "/usr/local/cuda/include/thrust/detail/scan.inl"
result, T
# 246 "/usr/local/cuda/include/thrust/detail/scan.inl"
init, BinaryPredicate
# 247 "/usr/local/cuda/include/thrust/detail/scan.inl"
binary_pred, AssociativeOperator
# 248 "/usr/local/cuda/include/thrust/detail/scan.inl"
binary_op)
# 249 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 250 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::exclusive_scan_by_key;
# 251 "/usr/local/cuda/include/thrust/detail/scan.inl"
return exclusive_scan_by_key(detail::derived_cast(detail::strip_const(exec)), first1, last1, first2, result, init, binary_pred, binary_op);
# 252 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 255 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class InputIterator, class
# 256 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator> OutputIterator
# 257 "/usr/local/cuda/include/thrust/detail/scan.inl"
inclusive_scan(InputIterator first, InputIterator
# 258 "/usr/local/cuda/include/thrust/detail/scan.inl"
last, OutputIterator
# 259 "/usr/local/cuda/include/thrust/detail/scan.inl"
result)
# 260 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 261 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::select_system;
# 263 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator> ::type System1;
# 264 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< OutputIterator> ::type System2;
# 266 "/usr/local/cuda/include/thrust/detail/scan.inl"
System1 system1;
# 267 "/usr/local/cuda/include/thrust/detail/scan.inl"
System2 system2;
# 269 "/usr/local/cuda/include/thrust/detail/scan.inl"
return thrust::inclusive_scan(select_system(system1, system2), first, last, result);
# 270 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 273 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class InputIterator, class
# 274 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator, class
# 275 "/usr/local/cuda/include/thrust/detail/scan.inl"
BinaryFunction> OutputIterator
# 276 "/usr/local/cuda/include/thrust/detail/scan.inl"
inclusive_scan(InputIterator first, InputIterator
# 277 "/usr/local/cuda/include/thrust/detail/scan.inl"
last, OutputIterator
# 278 "/usr/local/cuda/include/thrust/detail/scan.inl"
result, BinaryFunction
# 279 "/usr/local/cuda/include/thrust/detail/scan.inl"
binary_op)
# 280 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 281 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::select_system;
# 283 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator> ::type System1;
# 284 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< OutputIterator> ::type System2;
# 286 "/usr/local/cuda/include/thrust/detail/scan.inl"
System1 system1;
# 287 "/usr/local/cuda/include/thrust/detail/scan.inl"
System2 system2;
# 289 "/usr/local/cuda/include/thrust/detail/scan.inl"
return thrust::inclusive_scan(select_system(system1, system2), first, last, result, binary_op);
# 290 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 293 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class InputIterator, class
# 294 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator> OutputIterator
# 295 "/usr/local/cuda/include/thrust/detail/scan.inl"
exclusive_scan(InputIterator first, InputIterator
# 296 "/usr/local/cuda/include/thrust/detail/scan.inl"
last, OutputIterator
# 297 "/usr/local/cuda/include/thrust/detail/scan.inl"
result)
# 298 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 299 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::select_system;
# 301 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator> ::type System1;
# 302 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< OutputIterator> ::type System2;
# 304 "/usr/local/cuda/include/thrust/detail/scan.inl"
System1 system1;
# 305 "/usr/local/cuda/include/thrust/detail/scan.inl"
System2 system2;
# 307 "/usr/local/cuda/include/thrust/detail/scan.inl"
return thrust::exclusive_scan(select_system(system1, system2), first, last, result);
# 308 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 311 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class InputIterator, class
# 312 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator, class
# 313 "/usr/local/cuda/include/thrust/detail/scan.inl"
T> OutputIterator
# 314 "/usr/local/cuda/include/thrust/detail/scan.inl"
exclusive_scan(InputIterator first, InputIterator
# 315 "/usr/local/cuda/include/thrust/detail/scan.inl"
last, OutputIterator
# 316 "/usr/local/cuda/include/thrust/detail/scan.inl"
result, T
# 317 "/usr/local/cuda/include/thrust/detail/scan.inl"
init)
# 318 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 319 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::select_system;
# 321 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator> ::type System1;
# 322 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< OutputIterator> ::type System2;
# 324 "/usr/local/cuda/include/thrust/detail/scan.inl"
System1 system1;
# 325 "/usr/local/cuda/include/thrust/detail/scan.inl"
System2 system2;
# 327 "/usr/local/cuda/include/thrust/detail/scan.inl"
return thrust::exclusive_scan(select_system(system1, system2), first, last, result, init);
# 328 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 331 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class InputIterator, class
# 332 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator, class
# 333 "/usr/local/cuda/include/thrust/detail/scan.inl"
T, class
# 334 "/usr/local/cuda/include/thrust/detail/scan.inl"
BinaryFunction> OutputIterator
# 335 "/usr/local/cuda/include/thrust/detail/scan.inl"
exclusive_scan(InputIterator first, InputIterator
# 336 "/usr/local/cuda/include/thrust/detail/scan.inl"
last, OutputIterator
# 337 "/usr/local/cuda/include/thrust/detail/scan.inl"
result, T
# 338 "/usr/local/cuda/include/thrust/detail/scan.inl"
init, BinaryFunction
# 339 "/usr/local/cuda/include/thrust/detail/scan.inl"
binary_op)
# 340 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 341 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::select_system;
# 343 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator> ::type System1;
# 344 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< OutputIterator> ::type System2;
# 346 "/usr/local/cuda/include/thrust/detail/scan.inl"
System1 system1;
# 347 "/usr/local/cuda/include/thrust/detail/scan.inl"
System2 system2;
# 349 "/usr/local/cuda/include/thrust/detail/scan.inl"
return thrust::exclusive_scan(select_system(system1, system2), first, last, result, init, binary_op);
# 350 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 353 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class InputIterator1, class
# 354 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator2, class
# 355 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator> OutputIterator
# 356 "/usr/local/cuda/include/thrust/detail/scan.inl"
inclusive_scan_by_key(InputIterator1 first1, InputIterator1
# 357 "/usr/local/cuda/include/thrust/detail/scan.inl"
last1, InputIterator2
# 358 "/usr/local/cuda/include/thrust/detail/scan.inl"
first2, OutputIterator
# 359 "/usr/local/cuda/include/thrust/detail/scan.inl"
result)
# 360 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 361 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::select_system;
# 363 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 364 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 365 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< OutputIterator> ::type System3;
# 367 "/usr/local/cuda/include/thrust/detail/scan.inl"
System1 system1;
# 368 "/usr/local/cuda/include/thrust/detail/scan.inl"
System2 system2;
# 369 "/usr/local/cuda/include/thrust/detail/scan.inl"
System3 system3;
# 371 "/usr/local/cuda/include/thrust/detail/scan.inl"
return thrust::inclusive_scan_by_key(select_system(system1, system2, system3), first1, last1, first2, result);
# 372 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 375 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class InputIterator1, class
# 376 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator2, class
# 377 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator, class
# 378 "/usr/local/cuda/include/thrust/detail/scan.inl"
BinaryPredicate> OutputIterator
# 379 "/usr/local/cuda/include/thrust/detail/scan.inl"
inclusive_scan_by_key(InputIterator1 first1, InputIterator1
# 380 "/usr/local/cuda/include/thrust/detail/scan.inl"
last1, InputIterator2
# 381 "/usr/local/cuda/include/thrust/detail/scan.inl"
first2, OutputIterator
# 382 "/usr/local/cuda/include/thrust/detail/scan.inl"
result, BinaryPredicate
# 383 "/usr/local/cuda/include/thrust/detail/scan.inl"
binary_pred)
# 384 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 385 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::select_system;
# 387 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 388 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 389 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< OutputIterator> ::type System3;
# 391 "/usr/local/cuda/include/thrust/detail/scan.inl"
System1 system1;
# 392 "/usr/local/cuda/include/thrust/detail/scan.inl"
System2 system2;
# 393 "/usr/local/cuda/include/thrust/detail/scan.inl"
System3 system3;
# 395 "/usr/local/cuda/include/thrust/detail/scan.inl"
return thrust::inclusive_scan_by_key(select_system(system1, system2, system3), first1, last1, first2, result, binary_pred);
# 396 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 399 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class InputIterator1, class
# 400 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator2, class
# 401 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator, class
# 402 "/usr/local/cuda/include/thrust/detail/scan.inl"
BinaryPredicate, class
# 403 "/usr/local/cuda/include/thrust/detail/scan.inl"
AssociativeOperator> OutputIterator
# 404 "/usr/local/cuda/include/thrust/detail/scan.inl"
inclusive_scan_by_key(InputIterator1 first1, InputIterator1
# 405 "/usr/local/cuda/include/thrust/detail/scan.inl"
last1, InputIterator2
# 406 "/usr/local/cuda/include/thrust/detail/scan.inl"
first2, OutputIterator
# 407 "/usr/local/cuda/include/thrust/detail/scan.inl"
result, BinaryPredicate
# 408 "/usr/local/cuda/include/thrust/detail/scan.inl"
binary_pred, AssociativeOperator
# 409 "/usr/local/cuda/include/thrust/detail/scan.inl"
binary_op)
# 410 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 411 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::select_system;
# 413 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 414 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 415 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< OutputIterator> ::type System3;
# 417 "/usr/local/cuda/include/thrust/detail/scan.inl"
System1 system1;
# 418 "/usr/local/cuda/include/thrust/detail/scan.inl"
System2 system2;
# 419 "/usr/local/cuda/include/thrust/detail/scan.inl"
System3 system3;
# 421 "/usr/local/cuda/include/thrust/detail/scan.inl"
return thrust::inclusive_scan_by_key(select_system(system1, system2, system3), first1, last1, first2, result, binary_pred, binary_op);
# 422 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 425 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class InputIterator1, class
# 426 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator2, class
# 427 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator> OutputIterator
# 428 "/usr/local/cuda/include/thrust/detail/scan.inl"
exclusive_scan_by_key(InputIterator1 first1, InputIterator1
# 429 "/usr/local/cuda/include/thrust/detail/scan.inl"
last1, InputIterator2
# 430 "/usr/local/cuda/include/thrust/detail/scan.inl"
first2, OutputIterator
# 431 "/usr/local/cuda/include/thrust/detail/scan.inl"
result)
# 432 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 433 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::select_system;
# 435 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 436 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 437 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< OutputIterator> ::type System3;
# 439 "/usr/local/cuda/include/thrust/detail/scan.inl"
System1 system1;
# 440 "/usr/local/cuda/include/thrust/detail/scan.inl"
System2 system2;
# 441 "/usr/local/cuda/include/thrust/detail/scan.inl"
System3 system3;
# 443 "/usr/local/cuda/include/thrust/detail/scan.inl"
return thrust::exclusive_scan_by_key(select_system(system1, system2, system3), first1, last1, first2, result);
# 444 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 447 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class InputIterator1, class
# 448 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator2, class
# 449 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator, class
# 450 "/usr/local/cuda/include/thrust/detail/scan.inl"
T> OutputIterator
# 451 "/usr/local/cuda/include/thrust/detail/scan.inl"
exclusive_scan_by_key(InputIterator1 first1, InputIterator1
# 452 "/usr/local/cuda/include/thrust/detail/scan.inl"
last1, InputIterator2
# 453 "/usr/local/cuda/include/thrust/detail/scan.inl"
first2, OutputIterator
# 454 "/usr/local/cuda/include/thrust/detail/scan.inl"
result, T
# 455 "/usr/local/cuda/include/thrust/detail/scan.inl"
init)
# 456 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 457 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::select_system;
# 459 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 460 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 461 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< OutputIterator> ::type System3;
# 463 "/usr/local/cuda/include/thrust/detail/scan.inl"
System1 system1;
# 464 "/usr/local/cuda/include/thrust/detail/scan.inl"
System2 system2;
# 465 "/usr/local/cuda/include/thrust/detail/scan.inl"
System3 system3;
# 467 "/usr/local/cuda/include/thrust/detail/scan.inl"
return thrust::exclusive_scan_by_key(select_system(system1, system2, system3), first1, last1, first2, result, init);
# 468 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 471 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class InputIterator1, class
# 472 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator2, class
# 473 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator, class
# 474 "/usr/local/cuda/include/thrust/detail/scan.inl"
T, class
# 475 "/usr/local/cuda/include/thrust/detail/scan.inl"
BinaryPredicate> OutputIterator
# 476 "/usr/local/cuda/include/thrust/detail/scan.inl"
exclusive_scan_by_key(InputIterator1 first1, InputIterator1
# 477 "/usr/local/cuda/include/thrust/detail/scan.inl"
last1, InputIterator2
# 478 "/usr/local/cuda/include/thrust/detail/scan.inl"
first2, OutputIterator
# 479 "/usr/local/cuda/include/thrust/detail/scan.inl"
result, T
# 480 "/usr/local/cuda/include/thrust/detail/scan.inl"
init, BinaryPredicate
# 481 "/usr/local/cuda/include/thrust/detail/scan.inl"
binary_pred)
# 482 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 483 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::select_system;
# 485 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 486 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 487 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< OutputIterator> ::type System3;
# 489 "/usr/local/cuda/include/thrust/detail/scan.inl"
System1 system1;
# 490 "/usr/local/cuda/include/thrust/detail/scan.inl"
System2 system2;
# 491 "/usr/local/cuda/include/thrust/detail/scan.inl"
System3 system3;
# 493 "/usr/local/cuda/include/thrust/detail/scan.inl"
return thrust::exclusive_scan_by_key(select_system(system1, system2, system3), first1, last1, first2, result, init, binary_pred);
# 494 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 497 "/usr/local/cuda/include/thrust/detail/scan.inl"
template< class InputIterator1, class
# 498 "/usr/local/cuda/include/thrust/detail/scan.inl"
InputIterator2, class
# 499 "/usr/local/cuda/include/thrust/detail/scan.inl"
OutputIterator, class
# 500 "/usr/local/cuda/include/thrust/detail/scan.inl"
T, class
# 501 "/usr/local/cuda/include/thrust/detail/scan.inl"
BinaryPredicate, class
# 502 "/usr/local/cuda/include/thrust/detail/scan.inl"
AssociativeOperator> OutputIterator
# 503 "/usr/local/cuda/include/thrust/detail/scan.inl"
exclusive_scan_by_key(InputIterator1 first1, InputIterator1
# 504 "/usr/local/cuda/include/thrust/detail/scan.inl"
last1, InputIterator2
# 505 "/usr/local/cuda/include/thrust/detail/scan.inl"
first2, OutputIterator
# 506 "/usr/local/cuda/include/thrust/detail/scan.inl"
result, T
# 507 "/usr/local/cuda/include/thrust/detail/scan.inl"
init, BinaryPredicate
# 508 "/usr/local/cuda/include/thrust/detail/scan.inl"
binary_pred, AssociativeOperator
# 509 "/usr/local/cuda/include/thrust/detail/scan.inl"
binary_op)
# 510 "/usr/local/cuda/include/thrust/detail/scan.inl"
{
# 511 "/usr/local/cuda/include/thrust/detail/scan.inl"
using system::detail::generic::select_system;
# 513 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 514 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 515 "/usr/local/cuda/include/thrust/detail/scan.inl"
typedef typename iterator_system< OutputIterator> ::type System3;
# 517 "/usr/local/cuda/include/thrust/detail/scan.inl"
System1 system1;
# 518 "/usr/local/cuda/include/thrust/detail/scan.inl"
System2 system2;
# 519 "/usr/local/cuda/include/thrust/detail/scan.inl"
System3 system3;
# 521 "/usr/local/cuda/include/thrust/detail/scan.inl"
return thrust::exclusive_scan_by_key(select_system(system1, system2, system3), first1, last1, first2, result, init, binary_pred, binary_op);
# 522 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 525 "/usr/local/cuda/include/thrust/detail/scan.inl"
}
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
namespace thrust {
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
namespace system {
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
namespace detail {
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
namespace generic {
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
namespace detail {
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
template< class ValueType, class TailFlagType, class AssociativeOperator>
# 51 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
struct reduce_by_key_functor {
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
AssociativeOperator binary_op;
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
typedef tuple< ValueType, TailFlagType, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> result_type;
# 58 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
reduce_by_key_functor(AssociativeOperator _binary_op) : binary_op(_binary_op) { }
# 61 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
result_type operator()(result_type a, result_type b)
# 62 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
{
# 63 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
return result_type((thrust::get< 1> (b)) ? thrust::get< 0> (b) : (binary_op)(thrust::get< 0> (a), thrust::get< 0> (b)), thrust::get< 1> (a) | thrust::get< 1> (b));
# 65 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
}
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
};
# 69 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
}
# 72 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
template< class ExecutionPolicy, class
# 73 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
InputIterator1, class
# 74 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
InputIterator2, class
# 75 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
OutputIterator1, class
# 76 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
OutputIterator2, class
# 77 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
BinaryPredicate, class
# 78 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
BinaryFunction> pair< OutputIterator1, OutputIterator2>
# 81 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
reduce_by_key(execution_policy< ExecutionPolicy> &exec, InputIterator1
# 82 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
keys_first, InputIterator1
# 83 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
keys_last, InputIterator2
# 84 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
values_first, OutputIterator1
# 85 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
keys_output, OutputIterator2
# 86 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
values_output, BinaryPredicate
# 87 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
binary_pred, BinaryFunction
# 88 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
binary_op)
# 89 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
{
# 90 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
typedef typename iterator_traits< InputIterator1> ::difference_type difference_type;
# 92 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
typedef unsigned FlagType;
# 114 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
typedef typename thrust::detail::eval_if< thrust::detail::has_result_type< BinaryFunction> ::value, thrust::detail::result_type< BinaryFunction> , thrust::detail::eval_if< thrust::detail::is_output_iterator< OutputIterator2> ::value, iterator_value< InputIterator2> , iterator_value< OutputIterator2> > > ::type ValueType;
# 116 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
if (keys_first == keys_last) {
# 117 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
return thrust::make_pair(keys_output, values_output); }
# 120 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
difference_type n = keys_last - keys_first;
# 122 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
InputIterator2 values_last = values_first + n;
# 125 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
thrust::detail::temporary_array< unsigned, ExecutionPolicy> head_flags(exec, n);
# 126 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
thrust::transform(exec, keys_first, keys_last - 1, keys_first + 1, (head_flags.begin()) + 1, thrust::detail::not2(binary_pred));
# 127 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
(head_flags[0]) = 1;
# 130 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
thrust::detail::temporary_array< unsigned, ExecutionPolicy> tail_flags(exec, n);
# 131 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
thrust::transform(exec, keys_first, keys_last - 1, keys_first + 1, (tail_flags.begin()), thrust::detail::not2(binary_pred));
# 132 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
(tail_flags[n - 1]) = 1;
# 135 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
thrust::detail::temporary_array< typename thrust::detail::eval_if< thrust::detail::has_result_type< BinaryFunction> ::value, thrust::detail::result_type< BinaryFunction> , thrust::detail::eval_if< thrust::detail::is_output_iterator< OutputIterator2> ::value, iterator_value< InputIterator2> , iterator_value< OutputIterator2> > > ::type, ExecutionPolicy> scanned_values(exec, n);
# 136 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
thrust::detail::temporary_array< unsigned, ExecutionPolicy> scanned_tail_flags(exec, n);
# 138 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
thrust::inclusive_scan(exec, thrust::make_zip_iterator(thrust::make_tuple(values_first, (head_flags.begin()))), thrust::make_zip_iterator(thrust::make_tuple(values_last, (head_flags.end()))), thrust::make_zip_iterator(thrust::make_tuple((scanned_values.begin()), (scanned_tail_flags.begin()))), ((detail::reduce_by_key_functor< typename thrust::detail::eval_if< thrust::detail::has_result_type< BinaryFunction> ::value, thrust::detail::result_type< BinaryFunction> , thrust::detail::eval_if< thrust::detail::is_output_iterator< OutputIterator2> ::value, iterator_value< InputIterator2> , iterator_value< OutputIterator2> > > ::type, unsigned, BinaryFunction> )(binary_op)));
# 145 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
thrust::exclusive_scan(exec, (tail_flags.begin()), (tail_flags.end()), (scanned_tail_flags.begin()), (FlagType)0, plus< unsigned> ());
# 148 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
FlagType N = (scanned_tail_flags[n - 1]) + 1;
# 151 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
thrust::scatter_if(exec, keys_first, keys_last, (scanned_tail_flags.begin()), (head_flags.begin()), keys_output);
# 152 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
thrust::scatter_if(exec, (scanned_values.begin()), (scanned_values.end()), (scanned_tail_flags.begin()), (tail_flags.begin()), values_output);
# 154 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
return thrust::make_pair(keys_output + N, values_output + N);
# 155 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
}
# 158 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
template< class ExecutionPolicy, class
# 159 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
InputIterator1, class
# 160 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
InputIterator2, class
# 161 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
OutputIterator1, class
# 162 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
OutputIterator2> pair< OutputIterator1, OutputIterator2>
# 165 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
reduce_by_key(execution_policy< ExecutionPolicy> &exec, InputIterator1
# 166 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
keys_first, InputIterator1
# 167 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
keys_last, InputIterator2
# 168 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
values_first, OutputIterator1
# 169 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
keys_output, OutputIterator2
# 170 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
values_output)
# 171 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
{
# 172 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
typedef typename iterator_value< InputIterator1> ::type KeyType;
# 175 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
return thrust::reduce_by_key(exec, keys_first, keys_last, values_first, keys_output, values_output, equal_to< typename iterator_value< InputIterator1> ::type> ());
# 176 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
}
# 179 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
template< class ExecutionPolicy, class
# 180 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
InputIterator1, class
# 181 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
InputIterator2, class
# 182 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
OutputIterator1, class
# 183 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
OutputIterator2, class
# 184 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
BinaryPredicate> pair< OutputIterator1, OutputIterator2>
# 187 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
reduce_by_key(execution_policy< ExecutionPolicy> &exec, InputIterator1
# 188 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
keys_first, InputIterator1
# 189 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
keys_last, InputIterator2
# 190 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
values_first, OutputIterator1
# 191 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
keys_output, OutputIterator2
# 192 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
values_output, BinaryPredicate
# 193 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
binary_pred)
# 194 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
{
# 199 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
typedef typename thrust::detail::eval_if< thrust::detail::is_output_iterator< OutputIterator2> ::value, iterator_value< InputIterator2> , iterator_value< OutputIterator2> > ::type T;
# 202 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
return thrust::reduce_by_key(exec, keys_first, keys_last, values_first, keys_output, values_output, binary_pred, plus< typename thrust::detail::eval_if< thrust::detail::is_output_iterator< OutputIterator2> ::value, iterator_value< InputIterator2> , iterator_value< OutputIterator2> > ::type> ());
# 209 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
}
# 212 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
}
# 213 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
}
# 214 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
}
# 215 "/usr/local/cuda/include/thrust/system/detail/generic/reduce_by_key.inl"
}
# 28 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
namespace thrust {
# 30 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
namespace system {
# 32 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
namespace detail {
# 34 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
namespace sequential {
# 39 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
template< class DerivedPolicy, class
# 40 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
InputIterator, class
# 41 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
OutputType, class
# 42 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
BinaryFunction> OutputType
# 44 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
reduce(execution_policy< DerivedPolicy> &, InputIterator
# 45 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
begin, InputIterator
# 46 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
end, OutputType
# 47 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
init, BinaryFunction
# 48 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
binary_op)
# 49 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
{
# 54 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
thrust::detail::wrapped_function< BinaryFunction, OutputType> wrapped_binary_op(binary_op);
# 57 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
OutputType result = init;
# 59 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
while (begin != end)
# 60 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
{
# 61 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
result = wrapped_binary_op(result, *begin);
# 62 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
++begin;
# 63 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
}
# 65 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
return result;
# 66 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
}
# 69 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
}
# 70 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
}
# 71 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
}
# 72 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce.h"
}
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.h"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.h"
namespace system {
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.h"
namespace cuda {
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.h"
namespace detail {
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.h"
template< class DerivedPolicy, class
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.h"
InputIterator, class
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.h"
OutputType, class
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.h"
BinaryFunction> OutputType
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.h"
reduce(execution_policy< DerivedPolicy> & exec, InputIterator first, InputIterator last, OutputType init, BinaryFunction binary_op);
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.h"
}
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.h"
}
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.h"
}
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.h"
}
# 32 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
namespace thrust {
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
namespace system {
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
namespace cuda {
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
namespace detail {
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
namespace reduce_detail {
# 44 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
struct reduce_partitions {
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
template< class ConcurrentGroup, class Iterator1, class Iterator2, class T, class BinaryOperation> void
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
operator()(ConcurrentGroup &this_group, Iterator1 first, Iterator1 last, Iterator2 result, T init, BinaryOperation binary_op)
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
{int volatile ___ = 1;(void)this_group;(void)first;(void)last;(void)result;(void)init;(void)binary_op;
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
::exit(___);}
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
template< class ConcurrentGroup, class Iterator1, class Iterator2, class BinaryOperation> void
# 60 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
operator()(ConcurrentGroup &this_group, Iterator1 first, Iterator1 last, Iterator2 result, BinaryOperation binary_op)
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
{int volatile ___ = 1;(void)this_group;(void)first;(void)last;(void)result;(void)binary_op;
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
::exit(___);}
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
template< class ConcurrentGroup, class Iterator1, class Decomposition, class Iterator2, class T, class BinaryFunction> void
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
operator()(ConcurrentGroup &this_group, Iterator1 first, Decomposition decomp, Iterator2 result, T init, BinaryFunction binary_op)
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
{int volatile ___ = 1;(void)this_group;(void)first;(void)decomp;(void)result;(void)init;(void)binary_op;
# 85 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
::exit(___);}
# 86 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
};
# 89 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
template< class DerivedPolicy, class
# 90 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
InputIterator, class
# 91 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
OutputType, class
# 92 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
BinaryFunction> OutputType
# 94 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
tuned_reduce(execution_policy< DerivedPolicy> &exec, InputIterator
# 95 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
first, InputIterator
# 96 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
last, OutputType
# 97 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
init, BinaryFunction
# 98 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
binary_op)
# 99 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
{
# 100 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
typedef typename iterator_difference< InputIterator> ::type size_type;
# 102 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
const size_type n = last - first;
# 104 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
if (n <= 0) { return init; }
# 106 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
cudaStream_t s = stream(thrust::detail::derived_cast(exec));
# 108 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
const size_type groupsize = (128);
# 109 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
const size_type grainsize = (7);
# 110 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
const size_type tile_size = groupsize * grainsize;
# 111 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
const size_type num_tiles = ((n + tile_size) - 1) / tile_size;
# 112 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
const size_type subscription = (10);
# 117 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
bulk_::concurrent_group< bulk_::agent< grainsize> , groupsize> g;
# 119 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
const size_type num_groups = thrust::min< typename iterator_difference< InputIterator> ::type> (subscription * (g.hardware_concurrency()), num_tiles);
# 121 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
aligned_decomposition< typename iterator_difference< InputIterator> ::type> decomp(n, num_groups, tile_size);
# 123 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
thrust::detail::temporary_array< OutputType, DerivedPolicy> partial_sums(exec, (decomp.size()));
# 126 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
(bulk_::async(bulk_::par(s, g, (decomp.size())), reduce_partitions(), bulk_::root.this_exec, first, decomp, (partial_sums.begin()), init, binary_op).wait());
# 128 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
if ((partial_sums.size()) > 1)
# 129 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
{
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
bulk_::async(bulk_::par(s, g, 1), reduce_partitions(), bulk_::root.this_exec, (partial_sums.begin()), (partial_sums.end()), (partial_sums.begin()), binary_op);
# 132 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
}
# 134 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
return get_value(exec, &(partial_sums[0]));
# 135 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
}
# 138 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
template< class DerivedPolicy, class
# 139 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
InputIterator, class
# 140 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
OutputType, class
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
BinaryFunction> OutputType
# 143 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
general_reduce(execution_policy< DerivedPolicy> &exec, InputIterator
# 144 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
first, InputIterator
# 145 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
last, OutputType
# 146 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
init, BinaryFunction
# 147 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
binary_op)
# 148 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
{
# 149 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
typedef typename iterator_difference< InputIterator> ::type size_type;
# 151 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
const size_type n = last - first;
# 153 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
if (n <= 0) { return init; }
# 155 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
cudaStream_t s = stream(thrust::detail::derived_cast(exec));
# 157 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
typedef thrust::detail::temporary_array< OutputType, DerivedPolicy> temporary_array;
# 160 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
size_type num_groups = (0);
# 161 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
size_type group_size = (0);
# 163 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
thrust::tie(num_groups, group_size) = bulk_::choose_sizes(bulk_::grid(), reduce_partitions(), bulk_::root.this_exec, first, uniform_decomposition< typename iterator_difference< InputIterator> ::type> (), typename thrust::detail::temporary_array< OutputType, DerivedPolicy> ::iterator(), init, binary_op);
# 165 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
num_groups = thrust::min< typename iterator_difference< InputIterator> ::type> (num_groups, thrust::detail::util::divide_ri(n, group_size));
# 167 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
uniform_decomposition< typename iterator_difference< InputIterator> ::type> decomp(n, num_groups);
# 168 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
temporary_array partial_sums(exec, (decomp.size()));
# 171 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
bulk_::async(bulk_::grid((decomp.size()), group_size, bulk_::use_default, s), reduce_partitions(), bulk_::root.this_exec, first, decomp, (partial_sums.begin()), init, binary_op);
# 173 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
if ((partial_sums.size()) > 1)
# 174 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
{
# 176 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
thrust::tie(num_groups, group_size) = bulk_::choose_sizes(bulk_::grid(1), reduce_partitions(), bulk_::root.this_exec, (partial_sums.begin()), (partial_sums.end()), (partial_sums.begin()), binary_op);
# 179 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
bulk_::async(bulk_::grid(num_groups, group_size, bulk_::use_default, s), reduce_partitions(), bulk_::root.this_exec, (partial_sums.begin()), (partial_sums.end()), (partial_sums.begin()), binary_op);
# 180 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
}
# 182 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
return get_value(exec, &(partial_sums[0]));
# 183 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
}
# 187 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
template< class DerivedPolicy, class
# 188 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
InputIterator, class
# 189 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
OutputType, class
# 190 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
BinaryFunction> typename thrust::detail::enable_if< thrust::detail::is_arithmetic< OutputType> ::value, OutputType> ::type
# 196 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
reduce(execution_policy< DerivedPolicy> &exec, InputIterator
# 197 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
first, InputIterator
# 198 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
last, OutputType
# 199 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
init, BinaryFunction
# 200 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
binary_op)
# 201 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
{
# 202 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
return reduce_detail::tuned_reduce(exec, first, last, init, binary_op);
# 203 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
}
# 207 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
template< class DerivedPolicy, class
# 208 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
InputIterator, class
# 209 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
OutputType, class
# 210 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
BinaryFunction> typename thrust::detail::disable_if< thrust::detail::is_arithmetic< OutputType> ::value, OutputType> ::type
# 216 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
reduce(execution_policy< DerivedPolicy> &exec, InputIterator
# 217 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
first, InputIterator
# 218 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
last, OutputType
# 219 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
init, BinaryFunction
# 220 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
binary_op)
# 221 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
{
# 222 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
return reduce_detail::general_reduce(exec, first, last, init, binary_op);
# 223 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
}
# 227 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
}
# 230 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
template< class DerivedPolicy, class
# 231 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
InputIterator, class
# 232 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
OutputType, class
# 233 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
BinaryFunction> OutputType
# 235 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
reduce(execution_policy< DerivedPolicy> &exec, InputIterator
# 236 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
first, InputIterator
# 237 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
last, OutputType
# 238 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
init, BinaryFunction
# 239 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
binary_op)
# 240 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
{
# 246 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
typedef thrust::detail::static_assert_test< sizeof(thrust::detail::STATIC_ASSERTION_FAILURE< (bool)(thrust::detail::depend_on_instantiation< InputIterator, true> ::value)> )> thrust_static_assert_typedef_246 __attribute((unused));
# 248 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
struct workaround {
# 251 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
static OutputType parallel_path(execution_policy< DerivedPolicy> &exec, InputIterator
# 252 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
first, InputIterator
# 253 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
last, OutputType
# 254 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
init, BinaryFunction
# 255 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
binary_op)
# 256 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
{
# 257 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
return reduce_detail::reduce(exec, first, last, init, binary_op);
# 258 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
}
# 261 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
static OutputType sequential_path(execution_policy< DerivedPolicy> &, InputIterator
# 262 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
first, InputIterator
# 263 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
last, OutputType
# 264 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
init, BinaryFunction
# 265 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
binary_op)
# 266 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
{
# 267 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
return thrust::reduce(thrust::seq, first, last, init, binary_op);
# 268 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
}
# 269 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
};
# 272 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
return (workaround::parallel_path)(exec, first, last, init, binary_op);
# 276 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
}
# 279 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
}
# 280 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
}
# 281 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
}
# 282 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce.inl"
}
# 24 "/usr/local/cuda/include/thrust/detail/type_traits/algorithm/intermediate_type_from_function_and_iterators.h"
namespace thrust {
# 27 "/usr/local/cuda/include/thrust/detail/type_traits/algorithm/intermediate_type_from_function_and_iterators.h"
namespace detail {
# 44 "/usr/local/cuda/include/thrust/detail/type_traits/algorithm/intermediate_type_from_function_and_iterators.h"
template< class InputIterator, class OutputIterator, class Function>
# 45 "/usr/local/cuda/include/thrust/detail/type_traits/algorithm/intermediate_type_from_function_and_iterators.h"
struct intermediate_type_from_function_and_iterators : public eval_if< has_result_type< Function> ::value, result_type< Function> , eval_if< is_output_iterator< OutputIterator> ::value, iterator_value< InputIterator> , iterator_value< OutputIterator> > > {
# 56 "/usr/local/cuda/include/thrust/detail/type_traits/algorithm/intermediate_type_from_function_and_iterators.h"
};
# 58 "/usr/local/cuda/include/thrust/detail/type_traits/algorithm/intermediate_type_from_function_and_iterators.h"
}
# 60 "/usr/local/cuda/include/thrust/detail/type_traits/algorithm/intermediate_type_from_function_and_iterators.h"
}
# 25 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
namespace thrust {
# 27 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
namespace system {
# 29 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
namespace detail {
# 31 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
namespace sequential {
# 36 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
template< class DerivedPolicy, class
# 37 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
InputIterator1, class
# 38 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
InputIterator2, class
# 39 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
OutputIterator1, class
# 40 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
OutputIterator2, class
# 41 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
BinaryPredicate, class
# 42 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
BinaryFunction> pair< OutputIterator1, OutputIterator2>
# 45 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
reduce_by_key(execution_policy< DerivedPolicy> &, InputIterator1
# 46 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
keys_first, InputIterator1
# 47 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
keys_last, InputIterator2
# 48 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
values_first, OutputIterator1
# 49 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
keys_output, OutputIterator2
# 50 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
values_output, BinaryPredicate
# 51 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
binary_pred, BinaryFunction
# 52 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
binary_op)
# 53 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
{
# 54 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
typedef typename iterator_traits< InputIterator1> ::value_type InputKeyType;
# 55 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
typedef typename iterator_traits< InputIterator2> ::value_type InputValueType;
# 61 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
typedef typename thrust::detail::intermediate_type_from_function_and_iterators< InputIterator2, OutputIterator2, BinaryFunction> ::type TemporaryType;
# 63 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
if (keys_first != keys_last)
# 64 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
{
# 65 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
InputKeyType temp_key = *keys_first;
# 66 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
TemporaryType temp_value = *values_first;
# 68 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
for ((++keys_first), (++values_first); keys_first != keys_last; (++keys_first), (++values_first))
# 71 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
{
# 72 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
InputKeyType key = *keys_first;
# 73 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
InputValueType value = *values_first;
# 75 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
if (binary_pred(temp_key, key))
# 76 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
{
# 77 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
temp_value = binary_op(temp_value, value);
# 78 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
} else
# 80 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
{
# 81 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
(*keys_output) = temp_key;
# 82 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
(*values_output) = temp_value;
# 84 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
++keys_output;
# 85 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
++values_output;
# 87 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
temp_key = key;
# 88 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
temp_value = value;
# 89 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
}
# 90 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
}
# 92 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
(*keys_output) = temp_key;
# 93 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
(*values_output) = temp_value;
# 95 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
++keys_output;
# 96 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
++values_output;
# 97 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
}
# 99 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
return thrust::make_pair(keys_output, values_output);
# 100 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
}
# 103 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
}
# 104 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
}
# 105 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
}
# 106 "/usr/local/cuda/include/thrust/system/detail/sequential/reduce_by_key.h"
}
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.h"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.h"
namespace system {
# 31 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.h"
namespace cuda {
# 33 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.h"
namespace detail {
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.h"
template< class DerivedPolicy, class
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.h"
InputIterator1, class
# 39 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.h"
InputIterator2, class
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.h"
OutputIterator1, class
# 41 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.h"
OutputIterator2, class
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.h"
BinaryPredicate, class
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.h"
BinaryFunction> pair< OutputIterator1, OutputIterator2>
# 37 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.h"
reduce_by_key(execution_policy< DerivedPolicy> & exec, InputIterator1 keys_first, InputIterator1 keys_last, InputIterator2 values_first, OutputIterator1 keys_output, OutputIterator2 values_output, BinaryPredicate binary_pred, BinaryFunction binary_op);
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.h"
}
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.h"
}
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.h"
}
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.h"
}
# 22 "/usr/local/cuda/include/thrust/iterator/detail/constant_iterator_base.h"
namespace thrust {
# 26 "/usr/local/cuda/include/thrust/iterator/detail/constant_iterator_base.h"
template< class , class , class > class constant_iterator;
# 28 "/usr/local/cuda/include/thrust/iterator/detail/constant_iterator_base.h"
namespace detail {
# 31 "/usr/local/cuda/include/thrust/iterator/detail/constant_iterator_base.h"
template< class Value, class
# 32 "/usr/local/cuda/include/thrust/iterator/detail/constant_iterator_base.h"
Incrementable, class
# 33 "/usr/local/cuda/include/thrust/iterator/detail/constant_iterator_base.h"
System>
# 34 "/usr/local/cuda/include/thrust/iterator/detail/constant_iterator_base.h"
struct constant_iterator_base {
# 36 "/usr/local/cuda/include/thrust/iterator/detail/constant_iterator_base.h"
typedef Value value_type;
# 43 "/usr/local/cuda/include/thrust/iterator/detail/constant_iterator_base.h"
typedef value_type reference;
# 49 "/usr/local/cuda/include/thrust/iterator/detail/constant_iterator_base.h"
typedef typename ia_dflt_help< Incrementable, identity_< signed int> > ::type incrementable;
# 55 "/usr/local/cuda/include/thrust/iterator/detail/constant_iterator_base.h"
typedef counting_iterator< typename ia_dflt_help< Incrementable, identity_< signed int> > ::type, System, random_access_traversal_tag> base_iterator;
# 64 "/usr/local/cuda/include/thrust/iterator/detail/constant_iterator_base.h"
typedef iterator_adaptor< constant_iterator< Value, Incrementable, System> , counting_iterator< typename ia_dflt_help< Incrementable, identity_< signed int> > ::type, System, random_access_traversal_tag> , Value, typename iterator_system< counting_iterator< typename ia_dflt_help< Incrementable, identity_< signed int> > ::type, System, random_access_traversal_tag> > ::type, typename iterator_traversal< counting_iterator< typename ia_dflt_help< Incrementable, identity_< signed int> > ::type, System, random_access_traversal_tag> > ::type, Value> type;
# 65 "/usr/local/cuda/include/thrust/iterator/detail/constant_iterator_base.h"
};
# 67 "/usr/local/cuda/include/thrust/iterator/detail/constant_iterator_base.h"
}
# 69 "/usr/local/cuda/include/thrust/iterator/detail/constant_iterator_base.h"
}
# 29 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
namespace thrust {
# 96 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
template< class Value, class
# 97 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
Incrementable = use_default, class
# 98 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
System = use_default>
# 99 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
class constant_iterator : public detail::constant_iterator_base< Value, Incrementable, System> ::type {
# 104 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
friend class iterator_core_access;
# 105 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
typedef typename ::thrust::detail::constant_iterator_base< Value, Incrementable, System> ::type super_t;
# 106 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
typedef typename ::thrust::detail::constant_iterator_base< Value, Incrementable, System> ::incrementable incrementable;
# 107 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
typedef typename ::thrust::detail::constant_iterator_base< Value, Incrementable, System> ::base_iterator base_iterator;
# 110 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
public: typedef typename ::thrust::detail::constant_iterator_base< Value, Incrementable, System> ::type::reference reference;
# 111 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
typedef typename ::thrust::detail::constant_iterator_base< Value, Incrementable, System> ::type::value_type value_type;
# 120 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
constant_iterator() : super_t(), m_value()
# 121 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
{ }
# 129 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
constant_iterator(const constant_iterator &rhs) : super_t((rhs.base())), m_value(rhs.m_value)
# 130 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
{ }
# 137 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
template< class OtherSystem>
# 139 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
constant_iterator(const ::thrust::constant_iterator< Value, Incrementable, OtherSystem> &rhs, typename ::thrust::detail::enable_if_convertible< typename iterator_system< ::thrust::constant_iterator< Value, Incrementable, OtherSystem> > ::type, typename iterator_system< typename ::thrust::detail::constant_iterator_base< Value, Incrementable, System> ::type> ::type> ::type * = 0) : super_t((rhs.base())), m_value((rhs.value()))
# 144 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
{ }
# 156 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
constant_iterator(const value_type &v, const incrementable &i = incrementable()) : super_t((base_iterator)i), m_value(v)
# 157 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
{ }
# 167 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
template< class OtherValue, class OtherIncrementable>
# 169 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
constant_iterator(const OtherValue &v, const OtherIncrementable &i = incrementable()) : super_t((base_iterator)i), m_value(v)
# 170 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
{ }
# 176 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
const Value &value() const
# 177 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
{ return m_value; }
# 184 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
protected: const Value &value_reference() const
# 185 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
{ return m_value; }
# 188 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
Value &value_reference()
# 189 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
{ return m_value; }
# 193 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
private: reference dereference() const
# 194 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
{
# 195 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
return m_value;
# 196 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
}
# 199 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
Value m_value;
# 203 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
};
# 220 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
template< class V, class I> inline constant_iterator< V, I>
# 222 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
make_constant_iterator(V x, I i = ((int)0))
# 223 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
{
# 224 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
return constant_iterator< V, I> (x, i);
# 225 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
}
# 237 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
template< class V> inline constant_iterator< V>
# 239 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
make_constant_iterator(V x)
# 240 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
{
# 241 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
return constant_iterator< V> (x, 0);
# 242 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
}
# 250 "/usr/local/cuda/include/thrust/iterator/constant_iterator.h"
}
# 25 "/usr/local/cuda/include/thrust/iterator/detail/discard_iterator_base.h"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/iterator/detail/discard_iterator_base.h"
template< class > class discard_iterator;
# 31 "/usr/local/cuda/include/thrust/iterator/detail/discard_iterator_base.h"
namespace detail {
# 35 "/usr/local/cuda/include/thrust/iterator/detail/discard_iterator_base.h"
template< class System>
# 36 "/usr/local/cuda/include/thrust/iterator/detail/discard_iterator_base.h"
struct discard_iterator_base {
# 40 "/usr/local/cuda/include/thrust/iterator/detail/discard_iterator_base.h"
typedef any_assign value_type;
# 41 "/usr/local/cuda/include/thrust/iterator/detail/discard_iterator_base.h"
typedef any_assign &reference;
# 42 "/usr/local/cuda/include/thrust/iterator/detail/discard_iterator_base.h"
typedef std::ptrdiff_t incrementable;
# 48 "/usr/local/cuda/include/thrust/iterator/detail/discard_iterator_base.h"
typedef counting_iterator< long, System, random_access_traversal_tag> base_iterator;
# 57 "/usr/local/cuda/include/thrust/iterator/detail/discard_iterator_base.h"
typedef iterator_adaptor< discard_iterator< System> , counting_iterator< long, System, random_access_traversal_tag> , any_assign, typename iterator_system< counting_iterator< long, System, random_access_traversal_tag> > ::type, typename iterator_traversal< counting_iterator< long, System, random_access_traversal_tag> > ::type, any_assign &> type;
# 58 "/usr/local/cuda/include/thrust/iterator/detail/discard_iterator_base.h"
};
# 61 "/usr/local/cuda/include/thrust/iterator/detail/discard_iterator_base.h"
}
# 63 "/usr/local/cuda/include/thrust/iterator/detail/discard_iterator_base.h"
}
# 30 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
namespace thrust {
# 93 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
template< class System = use_default>
# 94 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
class discard_iterator : public detail::discard_iterator_base< System> ::type {
# 99 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
friend class iterator_core_access;
# 100 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
typedef typename ::thrust::detail::discard_iterator_base< System> ::type super_t;
# 101 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
typedef typename ::thrust::detail::discard_iterator_base< System> ::incrementable incrementable;
# 102 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
typedef typename ::thrust::detail::discard_iterator_base< System> ::base_iterator base_iterator;
# 105 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
public: typedef typename ::thrust::detail::discard_iterator_base< System> ::type::reference reference;
# 106 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
typedef typename ::thrust::detail::discard_iterator_base< System> ::type::value_type value_type;
# 116 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
discard_iterator(const discard_iterator &rhs) : super_t((rhs.base()))
# 117 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
{ }
# 127 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
discard_iterator(const incrementable &i = incrementable()) : super_t((base_iterator)i)
# 128 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
{ }
# 135 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
private: reference dereference() const
# 136 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
{
# 137 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
return m_element;
# 138 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
}
# 140 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
mutable value_type m_element;
# 144 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
};
# 157 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
inline discard_iterator<> make_discard_iterator(iterator_adaptor< discard_iterator<> , counting_iterator< long, use_default, random_access_traversal_tag> , detail::any_assign, any_system_tag, random_access_traversal_tag, detail::any_assign &> ::difference_type i = (iterator_adaptor< discard_iterator<> , counting_iterator< long, use_default, random_access_traversal_tag> , detail::any_assign, any_system_tag, random_access_traversal_tag, detail::any_assign &> ::difference_type)0)
# 158 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
{
# 159 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
return ((discard_iterator<> )(i));
# 160 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
}
# 168 "/usr/local/cuda/include/thrust/iterator/discard_iterator.h"
}
# 27 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
namespace thrust {
# 29 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
namespace detail {
# 33 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
template< class RandomAccessIterator, class
# 34 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
BinaryPredicate = thrust::equal_to< typename iterator_value< RandomAccessIterator> ::type> , class
# 35 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
ValueType = bool, class
# 36 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
IndexType = typename iterator_difference< RandomAccessIterator> ::type>
# 37 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
class head_flags_with_init {
# 39 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
typedef typename iterator_value< RandomAccessIterator> ::type init_type;
# 44 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
public: struct head_flag_functor {
# 46 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
BinaryPredicate binary_pred;
# 47 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
init_type init;
# 48 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
IndexType n;
# 50 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
typedef ValueType result_type;
# 53 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
head_flag_functor(init_type init, IndexType n) : binary_pred(), init(init), n(n)
# 55 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{ }
# 58 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
head_flag_functor(init_type init, IndexType n, BinaryPredicate binary_pred) : binary_pred(binary_pred), init(init), n(n)
# 60 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{ }
# 62 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
template< class Tuple>
# 63 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
__attribute((always_inline)) result_type
# 64 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
operator()(const Tuple &t)
# 65 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{
# 66 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
const IndexType i = thrust::get< 0> (t);
# 68 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
if (i == 0)
# 69 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{
# 70 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
return !(binary_pred)(init, thrust::get< 1> (t));
# 71 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
}
# 73 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
return !(binary_pred)(thrust::get< 1> (t), thrust::get< 2> (t));
# 74 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
}
# 75 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
};
# 77 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
typedef thrust::counting_iterator< IndexType> counting_iterator;
# 83 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
typedef transform_iterator< head_flag_functor, zip_iterator< tuple< thrust::counting_iterator< IndexType> , RandomAccessIterator, RandomAccessIterator, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > > iterator;
# 87 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
head_flags_with_init(RandomAccessIterator first, RandomAccessIterator last, init_type init) : m_begin(thrust::make_transform_iterator(thrust::make_zip_iterator(thrust::make_tuple(((thrust::counting_iterator< IndexType> )(0)), first, first - 1)), head_flag_functor(init, last - first))), m_end((m_begin) + (last - first))
# 91 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{ }
# 95 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
head_flags_with_init(RandomAccessIterator first, RandomAccessIterator last, init_type init, BinaryPredicate binary_pred) : m_begin(thrust::make_transform_iterator(thrust::make_zip_iterator(thrust::make_tuple(((thrust::counting_iterator< IndexType> )(0)), first, first - 1)), head_flag_functor(init, last - first, binary_pred))), m_end((m_begin) + (last - first))
# 99 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{ }
# 102 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
iterator begin() const
# 103 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{
# 104 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
return m_begin;
# 105 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
}
# 108 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
iterator end() const
# 109 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{
# 110 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
return m_end;
# 111 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
}
# 113 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
template< class OtherIndex> typename transform_iterator< head_flag_functor, zip_iterator< tuple< thrust::counting_iterator< IndexType> , RandomAccessIterator, RandomAccessIterator, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > > ::reference
# 115 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
operator[](OtherIndex i)
# 116 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{
# 117 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
return *(begin() + i);
# 118 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
}
# 121 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
private: iterator m_begin, m_end;
# 122 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
};
# 126 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
template< class RandomAccessIterator, class
# 127 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
BinaryPredicate = thrust::equal_to< typename iterator_value< RandomAccessIterator> ::type> , class
# 128 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
ValueType = bool, class
# 129 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
IndexType = typename iterator_difference< RandomAccessIterator> ::type>
# 130 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
class head_flags {
# 135 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
public: struct head_flag_functor {
# 137 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
BinaryPredicate binary_pred;
# 138 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
IndexType n;
# 140 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
typedef ValueType result_type;
# 143 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
head_flag_functor(IndexType n) : binary_pred(), n(n)
# 145 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{ }
# 148 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
head_flag_functor(IndexType n, BinaryPredicate binary_pred) : binary_pred(binary_pred), n(n)
# 150 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{ }
# 152 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
template< class Tuple>
# 153 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
__attribute((always_inline)) result_type
# 154 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
operator()(const Tuple &t)
# 155 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{
# 156 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
const IndexType i = thrust::get< 0> (t);
# 160 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
return (i == 0) || (!(binary_pred)(thrust::get< 1> (t), thrust::get< 2> (t)));
# 161 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
}
# 162 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
};
# 164 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
typedef thrust::counting_iterator< IndexType> counting_iterator;
# 170 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
typedef transform_iterator< head_flag_functor, zip_iterator< tuple< thrust::counting_iterator< IndexType> , RandomAccessIterator, RandomAccessIterator, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > > iterator;
# 173 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
head_flags(RandomAccessIterator first, RandomAccessIterator last) : m_begin(thrust::make_transform_iterator(thrust::make_zip_iterator(thrust::make_tuple(((thrust::counting_iterator< IndexType> )(0)), first, first - 1)), (head_flag_functor)(last - first))), m_end((m_begin) + (last - first))
# 177 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{ }
# 180 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
head_flags(RandomAccessIterator first, RandomAccessIterator last, BinaryPredicate binary_pred) : m_begin(thrust::make_transform_iterator(thrust::make_zip_iterator(thrust::make_tuple(((thrust::counting_iterator< IndexType> )(0)), first, first - 1)), head_flag_functor(last - first, binary_pred))), m_end((m_begin) + (last - first))
# 184 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{ }
# 187 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
iterator begin() const
# 188 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{
# 189 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
return m_begin;
# 190 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
}
# 193 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
iterator end() const
# 194 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{
# 195 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
return m_end;
# 196 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
}
# 198 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
template< class OtherIndex> typename transform_iterator< head_flag_functor, zip_iterator< tuple< thrust::counting_iterator< IndexType> , RandomAccessIterator, RandomAccessIterator, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > > ::reference
# 200 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
operator[](OtherIndex i)
# 201 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{
# 202 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
return *(begin() + i);
# 203 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
}
# 206 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
private: iterator m_begin, m_end;
# 207 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
};
# 210 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
template< class RandomAccessIterator, class BinaryPredicate> head_flags< RandomAccessIterator, BinaryPredicate>
# 213 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
make_head_flags(RandomAccessIterator first, RandomAccessIterator last, BinaryPredicate binary_pred)
# 214 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{
# 215 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
return head_flags< RandomAccessIterator, BinaryPredicate> (first, last, binary_pred);
# 216 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
}
# 219 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
template< class RandomAccessIterator> head_flags< RandomAccessIterator>
# 222 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
make_head_flags(RandomAccessIterator first, RandomAccessIterator last)
# 223 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
{
# 224 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
return head_flags< RandomAccessIterator> (first, last);
# 225 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
}
# 228 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
}
# 229 "/usr/local/cuda/include/thrust/detail/range/head_flags.h"
}
# 26 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
namespace thrust {
# 28 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
namespace detail {
# 32 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
template< class RandomAccessIterator, class
# 33 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
BinaryPredicate = thrust::equal_to< typename iterator_value< RandomAccessIterator> ::type> , class
# 34 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
ValueType = bool, class
# 35 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
IndexType = typename iterator_difference< RandomAccessIterator> ::type>
# 36 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
class tail_flags {
# 41 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
public: struct tail_flag_functor {
# 43 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
BinaryPredicate binary_pred;
# 44 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
RandomAccessIterator iter;
# 45 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
IndexType n;
# 47 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
typedef ValueType result_type;
# 50 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
tail_flag_functor(RandomAccessIterator first, RandomAccessIterator last) : binary_pred(), iter(first), n(last - first)
# 52 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
{ }
# 55 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
tail_flag_functor(RandomAccessIterator first, RandomAccessIterator last, BinaryPredicate binary_pred) : binary_pred(binary_pred), iter(first), n(last - first)
# 57 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
{ }
# 59 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
__attribute((always_inline)) result_type
# 60 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
operator()(const IndexType &i)
# 61 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
{
# 62 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
return (i == ((n) - 1)) || (!(binary_pred)((iter)[i], (iter)[i + 1]));
# 63 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
}
# 64 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
};
# 66 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
typedef thrust::counting_iterator< IndexType> counting_iterator;
# 72 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
typedef transform_iterator< tail_flag_functor, thrust::counting_iterator< IndexType> > iterator;
# 76 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
tail_flags(RandomAccessIterator first, RandomAccessIterator last) : m_begin(thrust::make_transform_iterator(((thrust::counting_iterator< IndexType> )(0)), tail_flag_functor(first, last))), m_end((m_begin) + (last - first))
# 80 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
{ }
# 84 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
tail_flags(RandomAccessIterator first, RandomAccessIterator last, BinaryPredicate binary_pred) : m_begin(thrust::make_transform_iterator(((thrust::counting_iterator< IndexType> )(0)), tail_flag_functor(first, last, binary_pred))), m_end((m_begin) + (last - first))
# 88 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
{ }
# 91 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
iterator begin() const
# 92 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
{
# 93 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
return m_begin;
# 94 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
}
# 97 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
iterator end() const
# 98 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
{
# 99 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
return m_end;
# 100 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
}
# 102 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
template< class OtherIndex> typename transform_iterator< tail_flag_functor, thrust::counting_iterator< IndexType> > ::reference
# 104 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
operator[](OtherIndex i)
# 105 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
{
# 106 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
return *(begin() + i);
# 107 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
}
# 110 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
private: iterator m_begin, m_end;
# 111 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
};
# 114 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
template< class RandomAccessIterator, class BinaryPredicate> tail_flags< RandomAccessIterator, BinaryPredicate>
# 117 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
make_tail_flags(RandomAccessIterator first, RandomAccessIterator last, BinaryPredicate binary_pred)
# 118 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
{
# 119 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
return tail_flags< RandomAccessIterator, BinaryPredicate> (first, last, binary_pred);
# 120 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
}
# 123 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
template< class RandomAccessIterator> tail_flags< RandomAccessIterator>
# 126 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
make_tail_flags(RandomAccessIterator first, RandomAccessIterator last)
# 127 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
{
# 128 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
return tail_flags< RandomAccessIterator> (first, last);
# 129 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
}
# 132 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
}
# 133 "/usr/local/cuda/include/thrust/detail/range/tail_flags.h"
}
# 9 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
namespace thrust {
# 11 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
namespace system {
# 13 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
namespace cuda {
# 15 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
namespace detail {
# 17 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
namespace reduce_intervals_detail {
# 21 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
struct reduce_intervals_kernel {
# 23 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
template< std::size_t groupsize, std::size_t grainsize, class RandomAccessIterator1, class Decomposition, class RandomAccessIterator2, class BinaryFunction> void
# 24 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
operator()(bulk_::concurrent_group< bulk_::agent< grainsize> , groupsize> &this_group, RandomAccessIterator1
# 25 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
first, Decomposition
# 26 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
decomp, RandomAccessIterator2
# 27 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
result, BinaryFunction
# 28 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
binary_op)
# 29 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
{int volatile ___ = 1;(void)this_group;(void)first;(void)decomp;(void)result;(void)binary_op;
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
::exit(___);}
# 43 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
};
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
}
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
template< class DerivedPolicy, class RandomAccessIterator1, class Decomposition, class RandomAccessIterator2, class BinaryFunction> RandomAccessIterator2
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
reduce_intervals_(execution_policy< DerivedPolicy> &exec, RandomAccessIterator1 first, Decomposition decomp, RandomAccessIterator2 result, BinaryFunction binary_op)
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
{
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
typedef typename iterator_value< RandomAccessIterator2> ::type result_type;
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
const size_t groupsize = (128);
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
size_t heap_size = (groupsize * sizeof(result_type));
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
bulk_::async(bulk_::grid< 128UL, 7> ((decomp.size()), heap_size, stream(thrust::detail::derived_cast(exec))), reduce_intervals_detail::reduce_intervals_kernel(), bulk_::root.this_exec, first, decomp, result, binary_op);
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
return result + (decomp.size());
# 59 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
}
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
template< class DerivedPolicy, class RandomAccessIterator1, class Size, class RandomAccessIterator2, class BinaryFunction> RandomAccessIterator2
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
reduce_intervals_(execution_policy< DerivedPolicy> &exec, RandomAccessIterator1 first, RandomAccessIterator1 last, Size interval_size, RandomAccessIterator2 result, BinaryFunction binary_op)
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
{
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
return cuda::detail::reduce_intervals_(exec, first, make_blocked_decomposition< Size> (last - first, interval_size), result, binary_op);
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
}
# 70 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
}
# 71 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
}
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
}
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_intervals.hpp"
}
# 34 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
namespace thrust {
# 36 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
namespace system {
# 38 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
namespace cuda {
# 40 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
namespace detail {
# 42 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
namespace reduce_by_key_detail {
# 46 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
struct reduce_by_key_kernel {
# 48 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
template< class ConcurrentGroup, class
# 49 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
RandomAccessIterator1, class
# 50 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
Decomposition, class
# 51 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
RandomAccessIterator2, class
# 52 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
RandomAccessIterator3, class
# 53 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
RandomAccessIterator4, class
# 54 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
RandomAccessIterator5, class
# 55 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
RandomAccessIterator6, class
# 56 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
RandomAccessIterator7, class
# 57 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
BinaryPredicate, class
# 58 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
BinaryFunction> pair< RandomAccessIterator3, RandomAccessIterator4>
# 61 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
operator()(ConcurrentGroup &g, RandomAccessIterator1
# 62 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_first, Decomposition
# 63 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
decomp, RandomAccessIterator2
# 64 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
values_first, RandomAccessIterator3
# 65 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_result, RandomAccessIterator4
# 66 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
values_result, RandomAccessIterator5
# 67 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
interval_output_offsets, RandomAccessIterator6
# 68 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
interval_values, RandomAccessIterator7
# 69 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
is_carry, tuple< BinaryPredicate, BinaryFunction, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type>
# 72 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
pred_and_binary_op)
# 73 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
{int volatile ___ = 1;(void)g;(void)keys_first;(void)decomp;(void)values_first;(void)keys_result;(void)values_result;(void)interval_output_offsets;(void)interval_values;(void)is_carry;(void)pred_and_binary_op;
# 124 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
::exit(___);}
# 127 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
template< class ConcurrentGroup, class
# 128 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
RandomAccessIterator1, class
# 129 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
RandomAccessIterator2, class
# 130 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
RandomAccessIterator3, class
# 131 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
RandomAccessIterator4, class
# 132 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
BinaryPredicate, class
# 133 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
BinaryFunction, class
# 134 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
Iterator> void
# 136 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
operator()(ConcurrentGroup &g, RandomAccessIterator1
# 137 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_first, RandomAccessIterator1
# 138 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_last, RandomAccessIterator2
# 139 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
values_first, RandomAccessIterator3
# 140 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_result, RandomAccessIterator4
# 141 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
values_result, BinaryPredicate
# 142 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
pred, BinaryFunction
# 143 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
binary_op, Iterator
# 144 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
result_size)
# 145 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
{int volatile ___ = 1;(void)g;(void)keys_first;(void)keys_last;(void)values_first;(void)keys_result;(void)values_result;(void)pred;(void)binary_op;(void)result_size;
# 159 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
::exit(___);}
# 160 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
};
# 163 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
struct tuple_and {
# 165 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
typedef bool result_type;
# 167 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
template< class Tuple> bool
# 169 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
operator()(Tuple t)
# 170 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
{
# 171 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
return thrust::get< 0> (t) && thrust::get< 1> (t);
# 172 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
}
# 173 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
};
# 176 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
template< class DerivedPolicy, class
# 177 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
Iterator1, class
# 178 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
Iterator2, class
# 179 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
Iterator3, class
# 180 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
Iterator4, class
# 181 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
BinaryFunction> void
# 183 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
sum_tail_carries(execution_policy< DerivedPolicy> &exec, Iterator1
# 184 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
interval_values_first, Iterator1
# 185 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
interval_values_last, Iterator2
# 186 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
interval_output_offsets_first, Iterator2
# 187 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
interval_output_offsets_last, Iterator3
# 188 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
is_carry, Iterator4
# 189 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
values_result, BinaryFunction
# 190 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
binary_op)
# 191 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
{
# 192 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
typedef thrust::zip_iterator< tuple< Iterator2, Iterator3, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > zip_iterator;
# 194 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
thrust::detail::tail_flags< thrust::zip_iterator< tuple< Iterator2, Iterator3, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > > tail_flags(thrust::make_zip_iterator(thrust::make_tuple(interval_output_offsets_first, is_carry)), thrust::make_zip_iterator(thrust::make_tuple(interval_output_offsets_last, is_carry)));
# 200 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
thrust::transform_if(exec, interval_values_first, interval_values_last, thrust::make_permutation_iterator(values_result, interval_output_offsets_first), thrust::make_transform_iterator(thrust::make_zip_iterator(thrust::make_tuple((tail_flags.begin()), is_carry)), tuple_and()), thrust::make_permutation_iterator(values_result, interval_output_offsets_first), binary_op, identity< bool> ());
# 207 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
}
# 210 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
template< class InputIterator, class OutputIterator, class BinaryFunction>
# 211 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
struct intermediate_type : public thrust::detail::eval_if< thrust::detail::has_result_type< BinaryFunction> ::value, thrust::detail::result_type< BinaryFunction> , thrust::detail::eval_if< thrust::detail::is_output_iterator< OutputIterator> ::value, iterator_value< InputIterator> , iterator_value< OutputIterator> > > {
# 221 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
};
# 224 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
template< class Size, class
# 225 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
DerivedPolicy, class
# 226 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
InputIterator1, class
# 227 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
InputIterator2, class
# 228 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
OutputIterator1, class
# 229 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
OutputIterator2, class
# 230 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
BinaryPredicate, class
# 231 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
BinaryFunction> pair< OutputIterator1, OutputIterator2>
# 234 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
reduce_by_key(execution_policy< DerivedPolicy> &exec, InputIterator1
# 235 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_first, InputIterator1
# 236 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_last, InputIterator2
# 237 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
values_first, OutputIterator1
# 238 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_result, OutputIterator2
# 239 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
values_result, BinaryPredicate
# 240 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
binary_pred, BinaryFunction
# 241 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
binary_op)
# 242 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
{
# 243 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
typedef typename iterator_difference< InputIterator1> ::type difference_type;
# 244 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
typedef typename iterator_value< InputIterator2> ::type value_type;
# 245 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
typedef Size size_type;
# 247 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
const difference_type n = keys_last - keys_first;
# 249 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
if (n <= 0) { return thrust::make_pair(keys_result, values_result); }
# 251 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
const size_type threshold_of_parallelism = (20000);
# 253 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
if (n <= threshold_of_parallelism)
# 254 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
{
# 255 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
thrust::detail::temporary_array< Size, DerivedPolicy> result_size_storage(exec, 1);
# 260 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
const int groupsize = ((sizeof(value_type) <= sizeof(int)) ? 512 : ((sizeof(value_type) <= ((2) * sizeof(int))) ? 256 : 128));
# 265 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
const int grainsize = ((sizeof(value_type) == sizeof(int)) ? 3 : 5);
# 267 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
size_type heap_size = ((groupsize * grainsize) * (sizeof(size_type) + sizeof(value_type)));
# 268 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
bulk_::async(bulk_::grid< groupsize, grainsize> (1, heap_size, stream(thrust::detail::derived_cast(exec))), reduce_by_key_kernel(), bulk_::root.this_exec, keys_first, keys_last, values_first, keys_result, values_result, binary_pred, binary_op, (result_size_storage.begin()));
# 271 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
size_type result_size = get_value(exec, &(result_size_storage[0]));
# 273 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
return thrust::make_pair(keys_result + result_size, values_result + result_size);
# 274 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
}
# 278 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
typedef typename reduce_by_key_detail::intermediate_type< InputIterator2, OutputIterator2, BinaryFunction> ::type intermediate_type;
# 280 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
const size_type groupsize = (128);
# 281 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
const size_type grainsize = (5);
# 282 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
size_type tile_size = groupsize * grainsize;
# 284 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
const size_type interval_size = threshold_of_parallelism;
# 286 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
size_type subscription = (100);
# 287 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
size_type num_groups = thrust::min< Size> (subscription * bulk_::concurrent_group<> ::hardware_concurrency(), ((n + interval_size) - 1) / interval_size);
# 288 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
aligned_decomposition< Size> decomp(n, num_groups, tile_size);
# 295 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
thrust::detail::tail_flags< InputIterator1, BinaryPredicate, Size> tail_flags(keys_first, keys_last, binary_pred);
# 297 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
thrust::detail::temporary_array< Size, DerivedPolicy> interval_output_offsets(exec, (decomp.size()));
# 299 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
reduce_intervals_(exec, (tail_flags.begin()), decomp, (interval_output_offsets.begin()), plus< Size> ());
# 302 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
thrust::inclusive_scan(exec, (interval_output_offsets.begin()), (interval_output_offsets.end()), (interval_output_offsets.begin()));
# 305 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
thrust::detail::temporary_array< bool, DerivedPolicy> is_carry(exec, (decomp.size()));
# 306 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
thrust::detail::temporary_array< typename reduce_by_key_detail::intermediate_type< InputIterator2, OutputIterator2, BinaryFunction> ::type, DerivedPolicy> interval_values(exec, (decomp.size()));
# 308 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
size_type heap_size = tile_size * (sizeof(size_type) + sizeof(value_type));
# 309 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
bulk_::async(bulk_::grid< groupsize, grainsize> ((decomp.size()), heap_size, stream(thrust::detail::derived_cast(exec))), reduce_by_key_kernel(), bulk_::root.this_exec, keys_first, decomp, values_first, keys_result, values_result, (interval_output_offsets.begin()), (interval_values.begin()), (is_carry.begin()), thrust::make_tuple(binary_pred, binary_op));
# 314 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
thrust::inclusive_scan_by_key(exec, thrust::make_zip_iterator(thrust::make_tuple((interval_output_offsets.begin()), (is_carry.begin()))), thrust::make_zip_iterator(thrust::make_tuple((interval_output_offsets.end()), (is_carry.end()))), (interval_values.begin()), (interval_values.begin()), equal_to< tuple< Size, bool, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > (), binary_op);
# 323 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
reduce_by_key_detail::sum_tail_carries(exec, (interval_values.begin()), (interval_values.end()), (interval_output_offsets.begin()), (interval_output_offsets.end()), (is_carry.begin()), values_result, binary_op);
# 330 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
difference_type result_size = interval_output_offsets[(interval_output_offsets.size()) - 1];
# 332 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
return thrust::make_pair(keys_result + result_size, values_result + result_size);
# 333 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
}
# 336 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
template< class DerivedPolicy, class
# 337 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
InputIterator1, class
# 338 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
InputIterator2, class
# 339 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
OutputIterator1, class
# 340 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
OutputIterator2, class
# 341 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
BinaryPredicate, class
# 342 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
BinaryFunction> pair< OutputIterator1, OutputIterator2>
# 345 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
reduce_by_key(execution_policy< DerivedPolicy> &exec, InputIterator1
# 346 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_first, InputIterator1
# 347 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_last, InputIterator2
# 348 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
values_first, OutputIterator1
# 349 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_result, OutputIterator2
# 350 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
values_result, BinaryPredicate
# 351 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
binary_pred, BinaryFunction
# 352 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
binary_op)
# 353 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
{
# 354 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
pair< OutputIterator1, OutputIterator2> result(keys_result, values_result);
# 356 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
typedef typename iterator_difference< InputIterator1> ::type difference_type;
# 360 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
if ((keys_last - keys_first) <= (static_cast< difference_type>(((2147483647) * 2U) + 1U)))
# 361 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
{
# 362 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
result = reduce_by_key_detail::reduce_by_key< unsigned> (exec, keys_first, keys_last, values_first, keys_result, values_result, binary_pred, binary_op);
# 369 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
} else
# 371 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
{
# 372 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
result = reduce_by_key_detail::reduce_by_key< typename iterator_difference< InputIterator1> ::type> (exec, keys_first, keys_last, values_first, keys_result, values_result, binary_pred, binary_op);
# 379 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
}
# 381 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
return result;
# 382 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
}
# 385 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
}
# 388 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
template< class DerivedPolicy, class
# 389 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
InputIterator1, class
# 390 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
InputIterator2, class
# 391 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
OutputIterator1, class
# 392 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
OutputIterator2, class
# 393 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
BinaryPredicate, class
# 394 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
BinaryFunction> pair< OutputIterator1, OutputIterator2>
# 397 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
reduce_by_key(execution_policy< DerivedPolicy> &exec, InputIterator1
# 398 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_first, InputIterator1
# 399 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_last, InputIterator2
# 400 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
values_first, OutputIterator1
# 401 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_result, OutputIterator2
# 402 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
values_result, BinaryPredicate
# 403 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
binary_pred, BinaryFunction
# 404 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
binary_op)
# 405 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
{
# 411 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
typedef thrust::detail::static_assert_test< sizeof(thrust::detail::STATIC_ASSERTION_FAILURE< (bool)(thrust::detail::depend_on_instantiation< InputIterator1, true> ::value)> )> thrust_static_assert_typedef_411 __attribute((unused));
# 413 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
struct workaround {
# 417 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
static pair< OutputIterator1, OutputIterator2> parallel_path(execution_policy< DerivedPolicy> &exec, InputIterator1
# 418 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_first, InputIterator1
# 419 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_last, InputIterator2
# 420 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
values_first, OutputIterator1
# 421 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_result, OutputIterator2
# 422 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
values_result, BinaryPredicate
# 423 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
binary_pred, BinaryFunction
# 424 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
binary_op)
# 425 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
{
# 426 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
return reduce_by_key_detail::reduce_by_key(exec, keys_first, keys_last, values_first, keys_result, values_result, binary_pred, binary_op);
# 427 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
}
# 431 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
static pair< OutputIterator1, OutputIterator2> sequential_path(execution_policy< DerivedPolicy> &, InputIterator1
# 432 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_first, InputIterator1
# 433 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_last, InputIterator2
# 434 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
values_first, OutputIterator1
# 435 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
keys_result, OutputIterator2
# 436 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
values_result, BinaryPredicate
# 437 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
binary_pred, BinaryFunction
# 438 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
binary_op)
# 439 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
{
# 440 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
return thrust::reduce_by_key(thrust::seq, keys_first, keys_last, values_first, keys_result, values_result, binary_pred, binary_op);
# 441 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
}
# 442 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
};
# 445 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
return (workaround::parallel_path)(exec, keys_first, keys_last, values_first, keys_result, values_result, binary_pred, binary_op);
# 449 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
}
# 452 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
}
# 453 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
}
# 454 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
}
# 455 "/usr/local/cuda/include/thrust/system/cuda/detail/reduce_by_key.inl"
}
# 30 "/usr/local/cuda/include/thrust/detail/reduce.inl"
namespace thrust {
# 35 "/usr/local/cuda/include/thrust/detail/reduce.inl"
template< class DerivedPolicy, class InputIterator> typename iterator_traits< InputIterator> ::value_type
# 38 "/usr/local/cuda/include/thrust/detail/reduce.inl"
reduce(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator first, InputIterator last)
# 39 "/usr/local/cuda/include/thrust/detail/reduce.inl"
{
# 40 "/usr/local/cuda/include/thrust/detail/reduce.inl"
using system::detail::generic::reduce;
# 41 "/usr/local/cuda/include/thrust/detail/reduce.inl"
return reduce(detail::derived_cast(detail::strip_const(exec)), first, last);
# 42 "/usr/local/cuda/include/thrust/detail/reduce.inl"
}
# 46 "/usr/local/cuda/include/thrust/detail/reduce.inl"
template< class DerivedPolicy, class InputIterator, class T> T
# 48 "/usr/local/cuda/include/thrust/detail/reduce.inl"
reduce(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 49 "/usr/local/cuda/include/thrust/detail/reduce.inl"
first, InputIterator
# 50 "/usr/local/cuda/include/thrust/detail/reduce.inl"
last, T
# 51 "/usr/local/cuda/include/thrust/detail/reduce.inl"
init)
# 52 "/usr/local/cuda/include/thrust/detail/reduce.inl"
{
# 53 "/usr/local/cuda/include/thrust/detail/reduce.inl"
using system::detail::generic::reduce;
# 54 "/usr/local/cuda/include/thrust/detail/reduce.inl"
return reduce(detail::derived_cast(detail::strip_const(exec)), first, last, init);
# 55 "/usr/local/cuda/include/thrust/detail/reduce.inl"
}
# 59 "/usr/local/cuda/include/thrust/detail/reduce.inl"
template< class DerivedPolicy, class
# 60 "/usr/local/cuda/include/thrust/detail/reduce.inl"
InputIterator, class
# 61 "/usr/local/cuda/include/thrust/detail/reduce.inl"
T, class
# 62 "/usr/local/cuda/include/thrust/detail/reduce.inl"
BinaryFunction> T
# 64 "/usr/local/cuda/include/thrust/detail/reduce.inl"
reduce(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 65 "/usr/local/cuda/include/thrust/detail/reduce.inl"
first, InputIterator
# 66 "/usr/local/cuda/include/thrust/detail/reduce.inl"
last, T
# 67 "/usr/local/cuda/include/thrust/detail/reduce.inl"
init, BinaryFunction
# 68 "/usr/local/cuda/include/thrust/detail/reduce.inl"
binary_op)
# 69 "/usr/local/cuda/include/thrust/detail/reduce.inl"
{
# 70 "/usr/local/cuda/include/thrust/detail/reduce.inl"
using system::detail::generic::reduce;
# 71 "/usr/local/cuda/include/thrust/detail/reduce.inl"
return reduce(detail::derived_cast(detail::strip_const(exec)), first, last, init, binary_op);
# 72 "/usr/local/cuda/include/thrust/detail/reduce.inl"
}
# 76 "/usr/local/cuda/include/thrust/detail/reduce.inl"
template< class DerivedPolicy, class
# 77 "/usr/local/cuda/include/thrust/detail/reduce.inl"
InputIterator1, class
# 78 "/usr/local/cuda/include/thrust/detail/reduce.inl"
InputIterator2, class
# 79 "/usr/local/cuda/include/thrust/detail/reduce.inl"
OutputIterator1, class
# 80 "/usr/local/cuda/include/thrust/detail/reduce.inl"
OutputIterator2> pair< OutputIterator1, OutputIterator2>
# 83 "/usr/local/cuda/include/thrust/detail/reduce.inl"
reduce_by_key(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 84 "/usr/local/cuda/include/thrust/detail/reduce.inl"
keys_first, InputIterator1
# 85 "/usr/local/cuda/include/thrust/detail/reduce.inl"
keys_last, InputIterator2
# 86 "/usr/local/cuda/include/thrust/detail/reduce.inl"
values_first, OutputIterator1
# 87 "/usr/local/cuda/include/thrust/detail/reduce.inl"
keys_output, OutputIterator2
# 88 "/usr/local/cuda/include/thrust/detail/reduce.inl"
values_output)
# 89 "/usr/local/cuda/include/thrust/detail/reduce.inl"
{
# 90 "/usr/local/cuda/include/thrust/detail/reduce.inl"
using system::detail::generic::reduce_by_key;
# 91 "/usr/local/cuda/include/thrust/detail/reduce.inl"
return reduce_by_key(detail::derived_cast(detail::strip_const(exec)), keys_first, keys_last, values_first, keys_output, values_output);
# 92 "/usr/local/cuda/include/thrust/detail/reduce.inl"
}
# 96 "/usr/local/cuda/include/thrust/detail/reduce.inl"
template< class DerivedPolicy, class
# 97 "/usr/local/cuda/include/thrust/detail/reduce.inl"
InputIterator1, class
# 98 "/usr/local/cuda/include/thrust/detail/reduce.inl"
InputIterator2, class
# 99 "/usr/local/cuda/include/thrust/detail/reduce.inl"
OutputIterator1, class
# 100 "/usr/local/cuda/include/thrust/detail/reduce.inl"
OutputIterator2, class
# 101 "/usr/local/cuda/include/thrust/detail/reduce.inl"
BinaryPredicate> pair< OutputIterator1, OutputIterator2>
# 104 "/usr/local/cuda/include/thrust/detail/reduce.inl"
reduce_by_key(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 105 "/usr/local/cuda/include/thrust/detail/reduce.inl"
keys_first, InputIterator1
# 106 "/usr/local/cuda/include/thrust/detail/reduce.inl"
keys_last, InputIterator2
# 107 "/usr/local/cuda/include/thrust/detail/reduce.inl"
values_first, OutputIterator1
# 108 "/usr/local/cuda/include/thrust/detail/reduce.inl"
keys_output, OutputIterator2
# 109 "/usr/local/cuda/include/thrust/detail/reduce.inl"
values_output, BinaryPredicate
# 110 "/usr/local/cuda/include/thrust/detail/reduce.inl"
binary_pred)
# 111 "/usr/local/cuda/include/thrust/detail/reduce.inl"
{
# 112 "/usr/local/cuda/include/thrust/detail/reduce.inl"
using system::detail::generic::reduce_by_key;
# 113 "/usr/local/cuda/include/thrust/detail/reduce.inl"
return reduce_by_key(detail::derived_cast(detail::strip_const(exec)), keys_first, keys_last, values_first, keys_output, values_output, binary_pred);
# 114 "/usr/local/cuda/include/thrust/detail/reduce.inl"
}
# 118 "/usr/local/cuda/include/thrust/detail/reduce.inl"
template< class DerivedPolicy, class
# 119 "/usr/local/cuda/include/thrust/detail/reduce.inl"
InputIterator1, class
# 120 "/usr/local/cuda/include/thrust/detail/reduce.inl"
InputIterator2, class
# 121 "/usr/local/cuda/include/thrust/detail/reduce.inl"
OutputIterator1, class
# 122 "/usr/local/cuda/include/thrust/detail/reduce.inl"
OutputIterator2, class
# 123 "/usr/local/cuda/include/thrust/detail/reduce.inl"
BinaryPredicate, class
# 124 "/usr/local/cuda/include/thrust/detail/reduce.inl"
BinaryFunction> pair< OutputIterator1, OutputIterator2>
# 127 "/usr/local/cuda/include/thrust/detail/reduce.inl"
reduce_by_key(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 128 "/usr/local/cuda/include/thrust/detail/reduce.inl"
keys_first, InputIterator1
# 129 "/usr/local/cuda/include/thrust/detail/reduce.inl"
keys_last, InputIterator2
# 130 "/usr/local/cuda/include/thrust/detail/reduce.inl"
values_first, OutputIterator1
# 131 "/usr/local/cuda/include/thrust/detail/reduce.inl"
keys_output, OutputIterator2
# 132 "/usr/local/cuda/include/thrust/detail/reduce.inl"
values_output, BinaryPredicate
# 133 "/usr/local/cuda/include/thrust/detail/reduce.inl"
binary_pred, BinaryFunction
# 134 "/usr/local/cuda/include/thrust/detail/reduce.inl"
binary_op)
# 135 "/usr/local/cuda/include/thrust/detail/reduce.inl"
{
# 136 "/usr/local/cuda/include/thrust/detail/reduce.inl"
using system::detail::generic::reduce_by_key;
# 137 "/usr/local/cuda/include/thrust/detail/reduce.inl"
return reduce_by_key(detail::derived_cast(detail::strip_const(exec)), keys_first, keys_last, values_first, keys_output, values_output, binary_pred, binary_op);
# 138 "/usr/local/cuda/include/thrust/detail/reduce.inl"
}
# 141 "/usr/local/cuda/include/thrust/detail/reduce.inl"
template< class InputIterator> typename iterator_traits< InputIterator> ::value_type
# 143 "/usr/local/cuda/include/thrust/detail/reduce.inl"
reduce(InputIterator first, InputIterator
# 144 "/usr/local/cuda/include/thrust/detail/reduce.inl"
last)
# 145 "/usr/local/cuda/include/thrust/detail/reduce.inl"
{
# 146 "/usr/local/cuda/include/thrust/detail/reduce.inl"
using thrust::system::detail::generic::select_system;
# 148 "/usr/local/cuda/include/thrust/detail/reduce.inl"
typedef typename iterator_system< InputIterator> ::type System;
# 150 "/usr/local/cuda/include/thrust/detail/reduce.inl"
System system;
# 152 "/usr/local/cuda/include/thrust/detail/reduce.inl"
return thrust::reduce(select_system(system), first, last);
# 153 "/usr/local/cuda/include/thrust/detail/reduce.inl"
}
# 156 "/usr/local/cuda/include/thrust/detail/reduce.inl"
template< class InputIterator, class
# 157 "/usr/local/cuda/include/thrust/detail/reduce.inl"
T> T
# 158 "/usr/local/cuda/include/thrust/detail/reduce.inl"
reduce(InputIterator first, InputIterator
# 159 "/usr/local/cuda/include/thrust/detail/reduce.inl"
last, T
# 160 "/usr/local/cuda/include/thrust/detail/reduce.inl"
init)
# 161 "/usr/local/cuda/include/thrust/detail/reduce.inl"
{
# 162 "/usr/local/cuda/include/thrust/detail/reduce.inl"
using thrust::system::detail::generic::select_system;
# 164 "/usr/local/cuda/include/thrust/detail/reduce.inl"
typedef typename iterator_system< InputIterator> ::type System;
# 166 "/usr/local/cuda/include/thrust/detail/reduce.inl"
System system;
# 168 "/usr/local/cuda/include/thrust/detail/reduce.inl"
return thrust::reduce(select_system(system), first, last, init);
# 169 "/usr/local/cuda/include/thrust/detail/reduce.inl"
}
# 172 "/usr/local/cuda/include/thrust/detail/reduce.inl"
template< class InputIterator, class
# 173 "/usr/local/cuda/include/thrust/detail/reduce.inl"
T, class
# 174 "/usr/local/cuda/include/thrust/detail/reduce.inl"
BinaryFunction> T
# 175 "/usr/local/cuda/include/thrust/detail/reduce.inl"
reduce(InputIterator first, InputIterator
# 176 "/usr/local/cuda/include/thrust/detail/reduce.inl"
last, T
# 177 "/usr/local/cuda/include/thrust/detail/reduce.inl"
init, BinaryFunction
# 178 "/usr/local/cuda/include/thrust/detail/reduce.inl"
binary_op)
# 179 "/usr/local/cuda/include/thrust/detail/reduce.inl"
{
# 180 "/usr/local/cuda/include/thrust/detail/reduce.inl"
using thrust::system::detail::generic::select_system;
# 182 "/usr/local/cuda/include/thrust/detail/reduce.inl"
typedef typename iterator_system< InputIterator> ::type System;
# 184 "/usr/local/cuda/include/thrust/detail/reduce.inl"
System system;
# 186 "/usr/local/cuda/include/thrust/detail/reduce.inl"
return thrust::reduce(select_system(system), first, last, init, binary_op);
# 187 "/usr/local/cuda/include/thrust/detail/reduce.inl"
}
# 190 "/usr/local/cuda/include/thrust/detail/reduce.inl"
template< class InputIterator1, class
# 191 "/usr/local/cuda/include/thrust/detail/reduce.inl"
InputIterator2, class
# 192 "/usr/local/cuda/include/thrust/detail/reduce.inl"
OutputIterator1, class
# 193 "/usr/local/cuda/include/thrust/detail/reduce.inl"
OutputIterator2> pair< OutputIterator1, OutputIterator2>
# 195 "/usr/local/cuda/include/thrust/detail/reduce.inl"
reduce_by_key(InputIterator1 keys_first, InputIterator1
# 196 "/usr/local/cuda/include/thrust/detail/reduce.inl"
keys_last, InputIterator2
# 197 "/usr/local/cuda/include/thrust/detail/reduce.inl"
values_first, OutputIterator1
# 198 "/usr/local/cuda/include/thrust/detail/reduce.inl"
keys_output, OutputIterator2
# 199 "/usr/local/cuda/include/thrust/detail/reduce.inl"
values_output)
# 200 "/usr/local/cuda/include/thrust/detail/reduce.inl"
{
# 201 "/usr/local/cuda/include/thrust/detail/reduce.inl"
using system::detail::generic::select_system;
# 203 "/usr/local/cuda/include/thrust/detail/reduce.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 204 "/usr/local/cuda/include/thrust/detail/reduce.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 205 "/usr/local/cuda/include/thrust/detail/reduce.inl"
typedef typename iterator_system< OutputIterator1> ::type System3;
# 206 "/usr/local/cuda/include/thrust/detail/reduce.inl"
typedef typename iterator_system< OutputIterator2> ::type System4;
# 208 "/usr/local/cuda/include/thrust/detail/reduce.inl"
System1 system1;
# 209 "/usr/local/cuda/include/thrust/detail/reduce.inl"
System2 system2;
# 210 "/usr/local/cuda/include/thrust/detail/reduce.inl"
System3 system3;
# 211 "/usr/local/cuda/include/thrust/detail/reduce.inl"
System4 system4;
# 213 "/usr/local/cuda/include/thrust/detail/reduce.inl"
return thrust::reduce_by_key(select_system(system1, system2, system3, system4), keys_first, keys_last, values_first, keys_output, values_output);
# 214 "/usr/local/cuda/include/thrust/detail/reduce.inl"
}
# 217 "/usr/local/cuda/include/thrust/detail/reduce.inl"
template< class InputIterator1, class
# 218 "/usr/local/cuda/include/thrust/detail/reduce.inl"
InputIterator2, class
# 219 "/usr/local/cuda/include/thrust/detail/reduce.inl"
OutputIterator1, class
# 220 "/usr/local/cuda/include/thrust/detail/reduce.inl"
OutputIterator2, class
# 221 "/usr/local/cuda/include/thrust/detail/reduce.inl"
BinaryPredicate> pair< OutputIterator1, OutputIterator2>
# 223 "/usr/local/cuda/include/thrust/detail/reduce.inl"
reduce_by_key(InputIterator1 keys_first, InputIterator1
# 224 "/usr/local/cuda/include/thrust/detail/reduce.inl"
keys_last, InputIterator2
# 225 "/usr/local/cuda/include/thrust/detail/reduce.inl"
values_first, OutputIterator1
# 226 "/usr/local/cuda/include/thrust/detail/reduce.inl"
keys_output, OutputIterator2
# 227 "/usr/local/cuda/include/thrust/detail/reduce.inl"
values_output, BinaryPredicate
# 228 "/usr/local/cuda/include/thrust/detail/reduce.inl"
binary_pred)
# 229 "/usr/local/cuda/include/thrust/detail/reduce.inl"
{
# 230 "/usr/local/cuda/include/thrust/detail/reduce.inl"
using system::detail::generic::select_system;
# 232 "/usr/local/cuda/include/thrust/detail/reduce.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 233 "/usr/local/cuda/include/thrust/detail/reduce.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 234 "/usr/local/cuda/include/thrust/detail/reduce.inl"
typedef typename iterator_system< OutputIterator1> ::type System3;
# 235 "/usr/local/cuda/include/thrust/detail/reduce.inl"
typedef typename iterator_system< OutputIterator2> ::type System4;
# 237 "/usr/local/cuda/include/thrust/detail/reduce.inl"
System1 system1;
# 238 "/usr/local/cuda/include/thrust/detail/reduce.inl"
System2 system2;
# 239 "/usr/local/cuda/include/thrust/detail/reduce.inl"
System3 system3;
# 240 "/usr/local/cuda/include/thrust/detail/reduce.inl"
System4 system4;
# 242 "/usr/local/cuda/include/thrust/detail/reduce.inl"
return thrust::reduce_by_key(select_system(system1, system2, system3, system4), keys_first, keys_last, values_first, keys_output, values_output, binary_pred);
# 243 "/usr/local/cuda/include/thrust/detail/reduce.inl"
}
# 246 "/usr/local/cuda/include/thrust/detail/reduce.inl"
template< class InputIterator1, class
# 247 "/usr/local/cuda/include/thrust/detail/reduce.inl"
InputIterator2, class
# 248 "/usr/local/cuda/include/thrust/detail/reduce.inl"
OutputIterator1, class
# 249 "/usr/local/cuda/include/thrust/detail/reduce.inl"
OutputIterator2, class
# 250 "/usr/local/cuda/include/thrust/detail/reduce.inl"
BinaryPredicate, class
# 251 "/usr/local/cuda/include/thrust/detail/reduce.inl"
BinaryFunction> pair< OutputIterator1, OutputIterator2>
# 253 "/usr/local/cuda/include/thrust/detail/reduce.inl"
reduce_by_key(InputIterator1 keys_first, InputIterator1
# 254 "/usr/local/cuda/include/thrust/detail/reduce.inl"
keys_last, InputIterator2
# 255 "/usr/local/cuda/include/thrust/detail/reduce.inl"
values_first, OutputIterator1
# 256 "/usr/local/cuda/include/thrust/detail/reduce.inl"
keys_output, OutputIterator2
# 257 "/usr/local/cuda/include/thrust/detail/reduce.inl"
values_output, BinaryPredicate
# 258 "/usr/local/cuda/include/thrust/detail/reduce.inl"
binary_pred, BinaryFunction
# 259 "/usr/local/cuda/include/thrust/detail/reduce.inl"
binary_op)
# 260 "/usr/local/cuda/include/thrust/detail/reduce.inl"
{
# 261 "/usr/local/cuda/include/thrust/detail/reduce.inl"
using system::detail::generic::select_system;
# 263 "/usr/local/cuda/include/thrust/detail/reduce.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 264 "/usr/local/cuda/include/thrust/detail/reduce.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 265 "/usr/local/cuda/include/thrust/detail/reduce.inl"
typedef typename iterator_system< OutputIterator1> ::type System3;
# 266 "/usr/local/cuda/include/thrust/detail/reduce.inl"
typedef typename iterator_system< OutputIterator2> ::type System4;
# 268 "/usr/local/cuda/include/thrust/detail/reduce.inl"
System1 system1;
# 269 "/usr/local/cuda/include/thrust/detail/reduce.inl"
System2 system2;
# 270 "/usr/local/cuda/include/thrust/detail/reduce.inl"
System3 system3;
# 271 "/usr/local/cuda/include/thrust/detail/reduce.inl"
System4 system4;
# 273 "/usr/local/cuda/include/thrust/detail/reduce.inl"
return thrust::reduce_by_key(select_system(system1, system2, system3, system4), keys_first, keys_last, values_first, keys_output, values_output, binary_pred, binary_op);
# 274 "/usr/local/cuda/include/thrust/detail/reduce.inl"
}
# 277 "/usr/local/cuda/include/thrust/detail/reduce.inl"
}
# 31 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
namespace system {
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
namespace detail {
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
namespace generic {
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
template< class DerivedPolicy, class InputIterator, class T> InputIterator
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
find(execution_policy< DerivedPolicy> &exec, InputIterator
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
first, InputIterator
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
last, const T &
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
value)
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
{
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
return thrust::find_if(exec, first, last, ((thrust::detail::equal_to_value< T> )(value)));
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
}
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
template< class TupleType>
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
struct find_if_functor {
# 57 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
TupleType operator()(const TupleType &lhs, const TupleType &rhs) const
# 58 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
{
# 60 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
if (thrust::get< 0> (lhs) && thrust::get< 0> (rhs))
# 61 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
{
# 62 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
return TupleType(true, (thrust::min)(thrust::get< 1> (lhs), thrust::get< 1> (rhs)));
# 63 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
} else {
# 64 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
if (thrust::get< 0> (lhs))
# 65 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
{
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
return lhs;
# 67 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
} else
# 69 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
{
# 70 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
return rhs;
# 71 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
} }
# 72 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
}
# 73 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
};
# 76 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
template< class DerivedPolicy, class InputIterator, class Predicate> InputIterator
# 78 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
find_if(execution_policy< DerivedPolicy> &exec, InputIterator
# 79 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
first, InputIterator
# 80 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
last, Predicate
# 81 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
pred)
# 82 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
{
# 83 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
typedef typename iterator_traits< InputIterator> ::difference_type difference_type;
# 84 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
typedef tuple< bool, typename iterator_traits< InputIterator> ::difference_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> result_type;
# 87 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
if (first == last) { return last; }
# 89 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
const difference_type n = thrust::distance(first, last);
# 95 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
const difference_type interval_threshold = (1 << 20);
# 96 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
const difference_type interval_size = (thrust::min)(interval_threshold, n);
# 99 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
typedef transform_iterator< Predicate, InputIterator, bool> XfrmIterator;
# 100 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
typedef tuple< transform_iterator< Predicate, InputIterator, bool> , counting_iterator< typename iterator_traits< InputIterator> ::difference_type> , null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> IteratorTuple;
# 101 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
typedef zip_iterator< tuple< transform_iterator< Predicate, InputIterator, bool> , counting_iterator< typename iterator_traits< InputIterator> ::difference_type> , null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > ZipIterator;
# 103 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
IteratorTuple iter_tuple = thrust::make_tuple(XfrmIterator(first, pred), ((counting_iterator< typename iterator_traits< InputIterator> ::difference_type> )(0)));
# 106 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
ZipIterator begin = thrust::make_zip_iterator(iter_tuple);
# 107 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
ZipIterator end = begin + n;
# 109 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
for (ZipIterator interval_begin = begin; interval_begin < end; interval_begin += interval_size)
# 110 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
{
# 111 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
ZipIterator interval_end = interval_begin + interval_size;
# 112 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
if (end < interval_end)
# 113 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
{
# 114 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
interval_end = end;
# 115 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
}
# 117 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
result_type result = thrust::reduce(exec, interval_begin, interval_end, result_type(false, interval_end - begin), find_if_functor< tuple< bool, typename iterator_traits< InputIterator> ::difference_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > ());
# 123 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
if (thrust::get< 0> (result))
# 124 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
{
# 125 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
return first + thrust::get< 1> (result);
# 126 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
}
# 127 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
}
# 130 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
return first + n;
# 131 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
}
# 134 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
template< class DerivedPolicy, class InputIterator, class Predicate> InputIterator
# 136 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
find_if_not(execution_policy< DerivedPolicy> &exec, InputIterator
# 137 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
first, InputIterator
# 138 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
last, Predicate
# 139 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
pred)
# 140 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
{
# 141 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
return thrust::find_if(exec, first, last, thrust::detail::not1(pred));
# 142 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
}
# 145 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
}
# 146 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
}
# 147 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
}
# 148 "/usr/local/cuda/include/thrust/system/detail/generic/find.inl"
}
# 28 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
namespace thrust {
# 30 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
namespace system {
# 32 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
namespace detail {
# 34 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
namespace sequential {
# 39 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
template< class DerivedPolicy, class
# 40 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
InputIterator, class
# 41 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
Predicate> InputIterator
# 43 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
find_if(execution_policy< DerivedPolicy> &, InputIterator
# 44 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
first, InputIterator
# 45 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
last, Predicate
# 46 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
pred)
# 47 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
{
# 52 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
thrust::detail::wrapped_function< Predicate, bool> wrapped_pred(pred);
# 54 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
while (first != last)
# 55 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
{
# 56 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
if (wrapped_pred(*first)) {
# 57 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
return first; }
# 59 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
++first;
# 60 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
}
# 63 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
return first;
# 64 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
}
# 67 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
}
# 68 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
}
# 69 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
}
# 70 "/usr/local/cuda/include/thrust/system/detail/sequential/find.h"
}
# 28 "/usr/local/cuda/include/thrust/detail/find.inl"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/detail/find.inl"
template< class DerivedPolicy, class InputIterator, class T> InputIterator
# 35 "/usr/local/cuda/include/thrust/detail/find.inl"
find(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 36 "/usr/local/cuda/include/thrust/detail/find.inl"
first, InputIterator
# 37 "/usr/local/cuda/include/thrust/detail/find.inl"
last, const T &
# 38 "/usr/local/cuda/include/thrust/detail/find.inl"
value)
# 39 "/usr/local/cuda/include/thrust/detail/find.inl"
{
# 40 "/usr/local/cuda/include/thrust/detail/find.inl"
using system::detail::generic::find;
# 41 "/usr/local/cuda/include/thrust/detail/find.inl"
return find(detail::derived_cast(detail::strip_const(exec)), first, last, value);
# 42 "/usr/local/cuda/include/thrust/detail/find.inl"
}
# 46 "/usr/local/cuda/include/thrust/detail/find.inl"
template< class DerivedPolicy, class InputIterator, class Predicate> InputIterator
# 48 "/usr/local/cuda/include/thrust/detail/find.inl"
find_if(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 49 "/usr/local/cuda/include/thrust/detail/find.inl"
first, InputIterator
# 50 "/usr/local/cuda/include/thrust/detail/find.inl"
last, Predicate
# 51 "/usr/local/cuda/include/thrust/detail/find.inl"
pred)
# 52 "/usr/local/cuda/include/thrust/detail/find.inl"
{
# 53 "/usr/local/cuda/include/thrust/detail/find.inl"
using system::detail::generic::find_if;
# 54 "/usr/local/cuda/include/thrust/detail/find.inl"
return find_if(detail::derived_cast(detail::strip_const(exec)), first, last, pred);
# 55 "/usr/local/cuda/include/thrust/detail/find.inl"
}
# 59 "/usr/local/cuda/include/thrust/detail/find.inl"
template< class DerivedPolicy, class InputIterator, class Predicate> InputIterator
# 61 "/usr/local/cuda/include/thrust/detail/find.inl"
find_if_not(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 62 "/usr/local/cuda/include/thrust/detail/find.inl"
first, InputIterator
# 63 "/usr/local/cuda/include/thrust/detail/find.inl"
last, Predicate
# 64 "/usr/local/cuda/include/thrust/detail/find.inl"
pred)
# 65 "/usr/local/cuda/include/thrust/detail/find.inl"
{
# 66 "/usr/local/cuda/include/thrust/detail/find.inl"
using system::detail::generic::find_if_not;
# 67 "/usr/local/cuda/include/thrust/detail/find.inl"
return find_if_not(detail::derived_cast(detail::strip_const(exec)), first, last, pred);
# 68 "/usr/local/cuda/include/thrust/detail/find.inl"
}
# 71 "/usr/local/cuda/include/thrust/detail/find.inl"
template< class InputIterator, class T> InputIterator
# 72 "/usr/local/cuda/include/thrust/detail/find.inl"
find(InputIterator first, InputIterator
# 73 "/usr/local/cuda/include/thrust/detail/find.inl"
last, const T &
# 74 "/usr/local/cuda/include/thrust/detail/find.inl"
value)
# 75 "/usr/local/cuda/include/thrust/detail/find.inl"
{
# 76 "/usr/local/cuda/include/thrust/detail/find.inl"
using thrust::system::detail::generic::select_system;
# 78 "/usr/local/cuda/include/thrust/detail/find.inl"
typedef typename iterator_system< InputIterator> ::type System;
# 80 "/usr/local/cuda/include/thrust/detail/find.inl"
System system;
# 82 "/usr/local/cuda/include/thrust/detail/find.inl"
return thrust::find(select_system(system), first, last, value);
# 83 "/usr/local/cuda/include/thrust/detail/find.inl"
}
# 85 "/usr/local/cuda/include/thrust/detail/find.inl"
template< class InputIterator, class Predicate> InputIterator
# 86 "/usr/local/cuda/include/thrust/detail/find.inl"
find_if(InputIterator first, InputIterator
# 87 "/usr/local/cuda/include/thrust/detail/find.inl"
last, Predicate
# 88 "/usr/local/cuda/include/thrust/detail/find.inl"
pred)
# 89 "/usr/local/cuda/include/thrust/detail/find.inl"
{
# 90 "/usr/local/cuda/include/thrust/detail/find.inl"
using thrust::system::detail::generic::select_system;
# 92 "/usr/local/cuda/include/thrust/detail/find.inl"
typedef typename iterator_system< InputIterator> ::type System;
# 94 "/usr/local/cuda/include/thrust/detail/find.inl"
System system;
# 96 "/usr/local/cuda/include/thrust/detail/find.inl"
return thrust::find_if(select_system(system), first, last, pred);
# 97 "/usr/local/cuda/include/thrust/detail/find.inl"
}
# 99 "/usr/local/cuda/include/thrust/detail/find.inl"
template< class InputIterator, class Predicate> InputIterator
# 100 "/usr/local/cuda/include/thrust/detail/find.inl"
find_if_not(InputIterator first, InputIterator
# 101 "/usr/local/cuda/include/thrust/detail/find.inl"
last, Predicate
# 102 "/usr/local/cuda/include/thrust/detail/find.inl"
pred)
# 103 "/usr/local/cuda/include/thrust/detail/find.inl"
{
# 104 "/usr/local/cuda/include/thrust/detail/find.inl"
using thrust::system::detail::generic::select_system;
# 106 "/usr/local/cuda/include/thrust/detail/find.inl"
typedef typename iterator_system< InputIterator> ::type System;
# 108 "/usr/local/cuda/include/thrust/detail/find.inl"
System system;
# 110 "/usr/local/cuda/include/thrust/detail/find.inl"
return thrust::find_if_not(select_system(system), first, last, pred);
# 111 "/usr/local/cuda/include/thrust/detail/find.inl"
}
# 114 "/usr/local/cuda/include/thrust/detail/find.inl"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
namespace generic {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
template< class DerivedPolicy, class InputIterator1, class InputIterator2> pair< InputIterator1, InputIterator2>
# 36 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
mismatch(execution_policy< DerivedPolicy> &exec, InputIterator1
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
first1, InputIterator1
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
last1, InputIterator2
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
first2)
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
{
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
typedef typename iterator_value< InputIterator1> ::type InputType1;
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
return thrust::mismatch(exec, first1, last1, first2, thrust::detail::equal_to< typename iterator_value< InputIterator1> ::type> ());
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
}
# 48 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
template< class DerivedPolicy, class InputIterator1, class InputIterator2, class BinaryPredicate> pair< InputIterator1, InputIterator2>
# 51 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
mismatch(execution_policy< DerivedPolicy> &exec, InputIterator1
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
first1, InputIterator1
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
last1, InputIterator2
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
first2, BinaryPredicate
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
pred)
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
{
# 58 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
typedef tuple< InputIterator1, InputIterator2, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> IteratorTuple;
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
typedef zip_iterator< tuple< InputIterator1, InputIterator2, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > ZipIterator;
# 61 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
ZipIterator zipped_first = thrust::make_zip_iterator(thrust::make_tuple(first1, first2));
# 62 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
ZipIterator zipped_last = thrust::make_zip_iterator(thrust::make_tuple(last1, first2));
# 64 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
ZipIterator result = thrust::find_if_not(exec, zipped_first, zipped_last, ((thrust::detail::tuple_binary_predicate< BinaryPredicate> )(pred)));
# 66 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
return thrust::make_pair(thrust::get< 0> ((result.get_iterator_tuple())), thrust::get< 1> ((result.get_iterator_tuple())));
# 68 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
}
# 71 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
}
# 72 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
}
# 73 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
}
# 74 "/usr/local/cuda/include/thrust/system/detail/generic/mismatch.inl"
}
# 30 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
namespace thrust {
# 35 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
template< class DerivedPolicy, class InputIterator1, class InputIterator2> pair< InputIterator1, InputIterator2>
# 37 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
mismatch(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 38 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
first1, InputIterator1
# 39 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
last1, InputIterator2
# 40 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
first2)
# 41 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
{
# 42 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
using system::detail::generic::mismatch;
# 43 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
return mismatch(detail::derived_cast(detail::strip_const(exec)), first1, last1, first2);
# 44 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
}
# 48 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
template< class DerivedPolicy, class InputIterator1, class InputIterator2, class BinaryPredicate> pair< InputIterator1, InputIterator2>
# 50 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
mismatch(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 51 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
first1, InputIterator1
# 52 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
last1, InputIterator2
# 53 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
first2, BinaryPredicate
# 54 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
pred)
# 55 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
{
# 56 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
using system::detail::generic::mismatch;
# 57 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
return mismatch(detail::derived_cast(detail::strip_const(exec)), first1, last1, first2, pred);
# 58 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
}
# 61 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
template< class InputIterator1, class InputIterator2> pair< InputIterator1, InputIterator2>
# 62 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
mismatch(InputIterator1 first1, InputIterator1
# 63 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
last1, InputIterator2
# 64 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
first2)
# 65 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
{
# 66 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
using system::detail::generic::select_system;
# 68 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 69 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 71 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
System1 system1;
# 72 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
System2 system2;
# 74 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
return thrust::mismatch(select_system(system1, system2), first1, last1, first2);
# 75 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
}
# 78 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
template< class InputIterator1, class InputIterator2, class BinaryPredicate> pair< InputIterator1, InputIterator2>
# 79 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
mismatch(InputIterator1 first1, InputIterator1
# 80 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
last1, InputIterator2
# 81 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
first2, BinaryPredicate
# 82 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
pred)
# 83 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
{
# 84 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
using system::detail::generic::select_system;
# 86 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 87 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 89 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
System1 system1;
# 90 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
System2 system2;
# 92 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
return thrust::mismatch(select_system(system1, system2), first1, last1, first2, pred);
# 93 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
}
# 96 "/usr/local/cuda/include/thrust/detail/mismatch.inl"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
namespace generic {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
template< class DerivedPolicy, class InputIterator1, class InputIterator2> bool
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
equal(execution_policy< DerivedPolicy> &exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2)
# 36 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
{
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
typedef typename iterator_traits< InputIterator1> ::value_type InputType1;
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
return thrust::equal(exec, first1, last1, first2, thrust::detail::equal_to< typename iterator_traits< InputIterator1> ::value_type> ());
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
}
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
template< class DerivedPolicy, class InputIterator1, class InputIterator2, class BinaryPredicate> bool
# 48 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
equal(execution_policy< DerivedPolicy> &exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, BinaryPredicate binary_pred)
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
{
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
return (thrust::mismatch(exec, first1, last1, first2, binary_pred).first) == last1;
# 51 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
}
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
}
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
}
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
}
# 57 "/usr/local/cuda/include/thrust/system/detail/generic/equal.inl"
}
# 28 "/usr/local/cuda/include/thrust/detail/equal.inl"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/detail/equal.inl"
template< class System, class InputIterator1, class InputIterator2> bool
# 35 "/usr/local/cuda/include/thrust/detail/equal.inl"
equal(const detail::execution_policy_base< System> &system, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2)
# 36 "/usr/local/cuda/include/thrust/detail/equal.inl"
{
# 37 "/usr/local/cuda/include/thrust/detail/equal.inl"
using thrust::system::detail::generic::equal;
# 38 "/usr/local/cuda/include/thrust/detail/equal.inl"
return equal(detail::derived_cast(detail::strip_const(system)), first1, last1, first2);
# 39 "/usr/local/cuda/include/thrust/detail/equal.inl"
}
# 43 "/usr/local/cuda/include/thrust/detail/equal.inl"
template< class System, class InputIterator1, class InputIterator2, class BinaryPredicate> bool
# 45 "/usr/local/cuda/include/thrust/detail/equal.inl"
equal(const detail::execution_policy_base< System> &system, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, BinaryPredicate binary_pred)
# 46 "/usr/local/cuda/include/thrust/detail/equal.inl"
{
# 47 "/usr/local/cuda/include/thrust/detail/equal.inl"
using thrust::system::detail::generic::equal;
# 48 "/usr/local/cuda/include/thrust/detail/equal.inl"
return equal(detail::derived_cast(detail::strip_const(system)), first1, last1, first2, binary_pred);
# 49 "/usr/local/cuda/include/thrust/detail/equal.inl"
}
# 52 "/usr/local/cuda/include/thrust/detail/equal.inl"
template< class InputIterator1, class InputIterator2> bool
# 53 "/usr/local/cuda/include/thrust/detail/equal.inl"
equal(InputIterator1 first1, InputIterator1 last1, InputIterator2
# 54 "/usr/local/cuda/include/thrust/detail/equal.inl"
first2)
# 55 "/usr/local/cuda/include/thrust/detail/equal.inl"
{
# 56 "/usr/local/cuda/include/thrust/detail/equal.inl"
using system::detail::generic::select_system;
# 58 "/usr/local/cuda/include/thrust/detail/equal.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 59 "/usr/local/cuda/include/thrust/detail/equal.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 61 "/usr/local/cuda/include/thrust/detail/equal.inl"
System1 system1;
# 62 "/usr/local/cuda/include/thrust/detail/equal.inl"
System2 system2;
# 64 "/usr/local/cuda/include/thrust/detail/equal.inl"
return thrust::equal(select_system(system1, system2), first1, last1, first2);
# 65 "/usr/local/cuda/include/thrust/detail/equal.inl"
}
# 68 "/usr/local/cuda/include/thrust/detail/equal.inl"
template< class InputIterator1, class InputIterator2, class
# 69 "/usr/local/cuda/include/thrust/detail/equal.inl"
BinaryPredicate> bool
# 70 "/usr/local/cuda/include/thrust/detail/equal.inl"
equal(InputIterator1 first1, InputIterator1 last1, InputIterator2
# 71 "/usr/local/cuda/include/thrust/detail/equal.inl"
first2, BinaryPredicate binary_pred)
# 72 "/usr/local/cuda/include/thrust/detail/equal.inl"
{
# 73 "/usr/local/cuda/include/thrust/detail/equal.inl"
using system::detail::generic::select_system;
# 75 "/usr/local/cuda/include/thrust/detail/equal.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 76 "/usr/local/cuda/include/thrust/detail/equal.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 78 "/usr/local/cuda/include/thrust/detail/equal.inl"
System1 system1;
# 79 "/usr/local/cuda/include/thrust/detail/equal.inl"
System2 system2;
# 81 "/usr/local/cuda/include/thrust/detail/equal.inl"
return thrust::equal(select_system(system1, system2), first1, last1, first2, binary_pred);
# 82 "/usr/local/cuda/include/thrust/detail/equal.inl"
}
# 85 "/usr/local/cuda/include/thrust/detail/equal.inl"
}
# 35 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
namespace thrust {
# 38 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
namespace detail {
# 41 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 43 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::vector_base() : m_storage(), m_size(0)
# 46 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 47 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
;
# 48 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 50 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 52 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::vector_base(size_type n) : m_storage(), m_size(0)
# 55 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 56 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
default_init(n);
# 57 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 59 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 61 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::vector_base(size_type n, const value_type &value) : m_storage(), m_size(0)
# 64 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 65 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
fill_init(n, value);
# 66 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 68 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 70 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::vector_base(const vector_base &v) : m_storage(), m_size(0)
# 73 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 74 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
range_init(v.begin(), v.end());
# 75 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 77 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> vector_base< T, Alloc> &
# 80 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::operator=(const vector_base &v)
# 81 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 82 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (this != (&v))
# 83 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 84 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
assign(v.begin(), v.end());
# 85 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 87 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return *this;
# 88 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 90 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 91 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class OtherT, class OtherAlloc>
# 93 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::vector_base(const detail::vector_base< OtherT, OtherAlloc> &v) : m_storage(), m_size(0)
# 96 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 97 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
range_init((v.begin()), (v.end()));
# 98 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 100 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 101 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class OtherT, class OtherAlloc> vector_base< T, Alloc> &
# 104 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::operator=(const detail::vector_base< OtherT, OtherAlloc> &v)
# 105 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 106 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
assign((v.begin()), (v.end()));
# 108 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return *this;
# 109 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 111 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 112 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class OtherT, class OtherAlloc>
# 114 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::vector_base(const std::vector< OtherT, OtherAlloc> &v) : m_storage(), m_size(0)
# 117 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 118 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
range_init((v.begin()), (v.end()));
# 119 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 121 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 122 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class OtherT, class OtherAlloc> vector_base< T, Alloc> &
# 125 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::operator=(const std::vector< OtherT, OtherAlloc> &v)
# 126 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 127 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
assign((v.begin()), (v.end()));
# 129 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return *this;
# 130 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 132 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 133 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class IteratorOrIntegralType> void
# 135 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::init_dispatch(IteratorOrIntegralType n, IteratorOrIntegralType
# 136 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
value, true_type)
# 138 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 139 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
fill_init(n, value);
# 140 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 142 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> void
# 144 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::default_init(size_type n)
# 145 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 146 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (n > 0)
# 147 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 148 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).allocate(n));
# 149 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(m_size) = n;
# 151 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).default_construct_n(this->begin(), size()));
# 152 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 153 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 155 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> void
# 157 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::fill_init(size_type n, const T &x)
# 158 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 159 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (n > 0)
# 160 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 161 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).allocate(n));
# 162 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(m_size) = n;
# 164 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).uninitialized_fill_n(this->begin(), size(), x));
# 165 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 166 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 168 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 169 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class InputIterator> void
# 171 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::init_dispatch(InputIterator first, InputIterator
# 172 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
last, false_type)
# 174 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 175 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
range_init(first, last);
# 176 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 178 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 179 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class InputIterator> void
# 181 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::range_init(InputIterator first, InputIterator
# 182 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
last)
# 183 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 184 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
range_init(first, last, typename iterator_traversal< InputIterator> ::type());
# 186 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 188 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 189 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class InputIterator> void
# 191 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::range_init(InputIterator first, InputIterator
# 192 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
last, incrementable_traversal_tag)
# 194 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 195 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
for (; first != last; ++first) {
# 196 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
push_back(*first); }
# 197 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 199 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 200 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class ForwardIterator> void
# 202 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::range_init(ForwardIterator first, ForwardIterator
# 203 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
last, random_access_traversal_tag)
# 205 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 206 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
size_type new_size = thrust::distance(first, last);
# 208 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
allocate_and_copy(new_size, first, last, m_storage);
# 209 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(m_size) = new_size;
# 210 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 212 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 213 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class InputIterator>
# 215 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::vector_base(InputIterator first, InputIterator
# 216 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
last) : m_storage(), m_size(0)
# 219 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 222 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
typedef is_integral< InputIterator> Integer;
# 224 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
init_dispatch(first, last, Integer());
# 225 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 227 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> void
# 229 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::resize(size_type new_size)
# 230 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 231 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (new_size < size())
# 232 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 233 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
iterator new_end = this->begin();
# 234 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
thrust::advance(new_end, new_size);
# 235 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
erase(new_end, this->end());
# 236 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
} else
# 238 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 239 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
append(new_size - size());
# 240 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 241 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 243 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> void
# 245 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::resize(size_type new_size, const value_type &x)
# 246 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 247 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (new_size < size())
# 248 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 249 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
iterator new_end = this->begin();
# 250 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
thrust::advance(new_end, new_size);
# 251 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
erase(new_end, this->end());
# 252 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
} else
# 254 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 255 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
insert(this->end(), new_size - size(), x);
# 256 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 257 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 259 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::size_type
# 262 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::size() const
# 263 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 264 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return m_size;
# 265 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 267 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::size_type
# 270 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::max_size() const
# 271 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 272 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return ((m_storage).max_size());
# 273 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 275 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> void
# 277 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::reserve(size_type n)
# 278 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 279 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (n > capacity())
# 280 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 281 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
allocate_and_copy(n, this->begin(), this->end(), m_storage);
# 282 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 283 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 285 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::size_type
# 288 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::capacity() const
# 289 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 290 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return ((m_storage).size());
# 291 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 293 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> void
# 295 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::shrink_to_fit()
# 296 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 298 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((vector_base)(*this)).swap(*this);
# 299 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 301 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::reference
# 304 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::operator[](const typename contiguous_storage< T, Alloc> ::size_type n)
# 305 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 306 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return (m_storage)[n];
# 307 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 309 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::const_reference
# 312 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::operator[](const typename contiguous_storage< T, Alloc> ::size_type n) const
# 313 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 314 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return (m_storage)[n];
# 315 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 317 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::iterator
# 320 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::begin()
# 321 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 322 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return ((m_storage).begin());
# 323 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 325 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::const_iterator
# 328 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::begin() const
# 329 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 330 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return ((m_storage).begin());
# 331 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 333 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::const_iterator
# 336 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::cbegin() const
# 337 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 338 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return this->begin();
# 339 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 341 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::reverse_iterator
# 344 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::rbegin()
# 345 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 346 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return ((reverse_iterator)(this->end()));
# 347 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 349 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::const_reverse_iterator
# 352 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::rbegin() const
# 353 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 354 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return ((const_reverse_iterator)(this->end()));
# 355 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 357 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::const_reverse_iterator
# 360 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::crbegin() const
# 361 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 362 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return this->rbegin();
# 363 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 365 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::iterator
# 368 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::end()
# 369 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 370 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
iterator result = this->begin();
# 371 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
thrust::advance(result, size());
# 372 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return result;
# 373 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 375 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::const_iterator
# 378 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::end() const
# 379 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 380 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
const_iterator result = this->begin();
# 381 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
thrust::advance(result, size());
# 382 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return result;
# 383 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 385 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::const_iterator
# 388 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::cend() const
# 389 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 390 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return this->end();
# 391 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 393 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::reverse_iterator
# 396 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::rend()
# 397 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 398 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return ((reverse_iterator)(this->begin()));
# 399 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 401 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::const_reverse_iterator
# 404 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::rend() const
# 405 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 406 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return ((const_reverse_iterator)(this->begin()));
# 407 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 409 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::const_reverse_iterator
# 412 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::crend() const
# 413 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 414 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return this->rend();
# 415 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 417 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::const_reference
# 420 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::front() const
# 421 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 422 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return *this->begin();
# 423 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 425 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::reference
# 428 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::front()
# 429 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 430 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return *this->begin();
# 431 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 433 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::const_reference
# 436 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::back() const
# 437 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 438 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
const_iterator ptr_to_back = this->end();
# 439 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
--ptr_to_back;
# 440 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return *ptr_to_back;
# 441 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 443 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::reference
# 446 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::back()
# 447 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 448 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
iterator ptr_to_back = this->end();
# 449 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
--ptr_to_back;
# 450 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return *ptr_to_back;
# 451 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 453 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::pointer
# 456 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::data()
# 457 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 458 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return &this->front();
# 459 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 461 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::const_pointer
# 464 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::data() const
# 465 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 466 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return &this->front();
# 467 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 469 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 471 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::~vector_base()
# 472 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 474 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).destroy(this->begin(), this->end()));
# 475 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 477 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> void
# 479 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::clear()
# 480 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 481 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
erase(this->begin(), this->end());
# 482 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 484 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> bool
# 486 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::empty() const
# 487 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 488 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return size() == 0;
# 489 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 491 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> void
# 493 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::push_back(const value_type &x)
# 494 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 495 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
insert(this->end(), x);
# 496 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 498 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> void
# 500 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::pop_back()
# 501 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 502 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
iterator e = this->end();
# 503 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
iterator ptr_to_back = e;
# 504 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
--ptr_to_back;
# 505 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).destroy(ptr_to_back, e));
# 506 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
--(m_size);
# 507 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 509 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::iterator
# 511 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::erase(iterator pos)
# 512 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 513 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
iterator end = pos;
# 514 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
++end;
# 515 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return erase(pos, end);
# 516 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 518 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::iterator
# 520 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::erase(iterator first, iterator last)
# 521 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 524 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
iterator i = detail::overlapped_copy(last, this->end(), first);
# 527 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).destroy(i, this->end()));
# 530 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(m_size) -= (last - first);
# 534 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return first;
# 535 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 537 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> void
# 539 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::swap(vector_base &v)
# 540 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 541 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
thrust::swap(m_storage, v.m_storage);
# 542 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
thrust::swap(m_size, v.m_size);
# 543 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 545 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> void
# 547 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::assign(size_type n, const T &x)
# 548 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 549 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
fill_assign(n, x);
# 550 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 552 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 553 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class InputIterator> void
# 555 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::assign(InputIterator first, InputIterator last)
# 556 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 559 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
typedef is_integral< InputIterator> integral;
# 561 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
assign_dispatch(first, last, integral());
# 562 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 564 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::allocator_type
# 567 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::get_allocator() const
# 568 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 569 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return ((m_storage).get_allocator());
# 570 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 572 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> typename vector_base< T, Alloc> ::iterator
# 575 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::insert(iterator position, const T &x)
# 576 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 578 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
size_type index = thrust::distance(this->begin(), position);
# 581 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
insert(position, 1, x);
# 584 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
iterator result = this->begin();
# 585 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
thrust::advance(result, index);
# 586 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return result;
# 587 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 589 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> void
# 591 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::insert(iterator position, size_type n, const T &x)
# 592 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 593 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
fill_insert(position, n, x);
# 594 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 596 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 597 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class InputIterator> void
# 599 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::insert(iterator position, InputIterator first, InputIterator last)
# 600 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 603 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
typedef is_integral< InputIterator> integral;
# 605 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
insert_dispatch(position, first, last, integral());
# 606 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 608 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 609 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class InputIterator> void
# 611 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::assign_dispatch(InputIterator first, InputIterator last, false_type)
# 612 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 613 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
range_assign(first, last);
# 614 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 616 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 617 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class Integral> void
# 619 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::assign_dispatch(Integral n, Integral x, true_type)
# 620 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 621 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
fill_assign(n, x);
# 622 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 624 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 625 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class InputIterator> void
# 627 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::insert_dispatch(iterator position, InputIterator first, InputIterator last, false_type)
# 628 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 629 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
copy_insert(position, first, last);
# 630 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 632 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 633 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class Integral> void
# 635 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::insert_dispatch(iterator position, Integral n, Integral x, true_type)
# 636 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 637 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
fill_insert(position, n, x);
# 638 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 640 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 641 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class ForwardIterator> void
# 643 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::copy_insert(iterator position, ForwardIterator
# 644 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
first, ForwardIterator
# 645 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
last)
# 646 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 647 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (first != last)
# 648 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 650 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
const size_type num_new_elements = thrust::distance(first, last);
# 651 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if ((capacity() - size()) >= num_new_elements)
# 652 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 655 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
const size_type num_displaced_elements = this->end() - position;
# 656 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
iterator old_end = this->end();
# 658 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (num_displaced_elements > num_new_elements)
# 659 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 662 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).uninitialized_copy(this->end() - num_new_elements, this->end(), this->end()));
# 665 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(m_size) += num_new_elements;
# 669 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
const size_type copy_length = (old_end - num_new_elements) - position;
# 670 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
detail::overlapped_copy(position, old_end - num_new_elements, old_end - copy_length);
# 673 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
thrust::copy(first, last, position);
# 674 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
} else
# 676 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 677 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
ForwardIterator mid = first;
# 678 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
thrust::advance(mid, num_displaced_elements);
# 681 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).uninitialized_copy(mid, last, this->end()));
# 684 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(m_size) += (num_new_elements - num_displaced_elements);
# 687 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).uninitialized_copy(position, old_end, this->end()));
# 690 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(m_size) += num_displaced_elements;
# 693 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
thrust::copy(first, mid, position);
# 694 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 695 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
} else
# 697 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 698 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
const size_type old_size = size();
# 701 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
size_type new_capacity = old_size + thrust::max(old_size, num_new_elements);
# 704 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
new_capacity = thrust::max< size_type> (new_capacity, 2 * capacity());
# 707 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
new_capacity = thrust::min< size_type> (new_capacity, max_size());
# 709 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (new_capacity > max_size())
# 710 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 711 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
throw ((std::length_error)("insert(): insertion exceeds max_size()."));
# 712 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 714 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
storage_type new_storage(new_capacity);
# 717 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
iterator new_end = (new_storage.begin());
# 719 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
try
# 720 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 723 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
new_end = ((m_storage).uninitialized_copy(this->begin(), position, (new_storage.begin())));
# 726 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
new_end = ((m_storage).uninitialized_copy(first, last, new_end));
# 730 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
new_end = ((m_storage).uninitialized_copy(position, this->end(), new_end));
# 731 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 732 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
catch (...)
# 733 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 735 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).destroy((new_storage.begin()), new_end));
# 736 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(new_storage.deallocate());
# 739 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
throw;
# 740 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 743 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).destroy(this->begin(), this->end()));
# 746 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).swap(new_storage));
# 747 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(m_size) = (old_size + num_new_elements);
# 748 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 749 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 750 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 752 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> void
# 754 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::append(size_type n)
# 755 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 756 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (n != 0)
# 757 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 758 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if ((capacity() - size()) >= n)
# 759 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 763 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).default_construct_n(this->end(), n));
# 766 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(m_size) += n;
# 767 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
} else
# 769 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 770 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
const size_type old_size = size();
# 773 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
size_type new_capacity = old_size + thrust::max(old_size, n);
# 776 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
new_capacity = thrust::max< size_type> (new_capacity, 2 * capacity());
# 779 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
new_capacity = thrust::min< size_type> (new_capacity, max_size());
# 782 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
storage_type new_storage(new_capacity);
# 785 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
iterator new_end = (new_storage.begin());
# 787 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
try
# 788 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 790 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
new_end = ((m_storage).uninitialized_copy(this->begin(), this->end(), (new_storage.begin())));
# 793 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).default_construct_n(new_end, n));
# 794 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
new_end += n;
# 795 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 796 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
catch (...)
# 797 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 799 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).destroy((new_storage.begin()), new_end));
# 800 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(new_storage.deallocate());
# 803 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
throw;
# 804 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 807 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).destroy(this->begin(), this->end()));
# 810 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).swap(new_storage));
# 811 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(m_size) = (old_size + n);
# 812 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 813 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 814 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 816 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> void
# 818 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::fill_insert(iterator position, size_type n, const T &x)
# 819 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 820 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (n != 0)
# 821 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 822 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if ((capacity() - size()) >= n)
# 823 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 826 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
const size_type num_displaced_elements = this->end() - position;
# 827 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
iterator old_end = this->end();
# 829 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (num_displaced_elements > n)
# 830 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 833 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).uninitialized_copy(this->end() - n, this->end(), this->end()));
# 836 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(m_size) += n;
# 840 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
const size_type copy_length = (old_end - n) - position;
# 841 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
detail::overlapped_copy(position, old_end - n, old_end - copy_length);
# 844 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
thrust::fill_n(position, n, x);
# 845 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
} else
# 847 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 849 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).uninitialized_fill_n(this->end(), n - num_displaced_elements, x));
# 852 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(m_size) += (n - num_displaced_elements);
# 855 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).uninitialized_copy(position, old_end, this->end()));
# 858 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(m_size) += num_displaced_elements;
# 861 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
thrust::fill(position, old_end, x);
# 862 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 863 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
} else
# 865 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 866 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
const size_type old_size = size();
# 869 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
size_type new_capacity = old_size + thrust::max(old_size, n);
# 872 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
new_capacity = thrust::max< size_type> (new_capacity, 2 * capacity());
# 875 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
new_capacity = thrust::min< size_type> (new_capacity, max_size());
# 877 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (new_capacity > max_size())
# 878 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 879 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
throw ((std::length_error)("insert(): insertion exceeds max_size()."));
# 880 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 882 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
storage_type new_storage(new_capacity);
# 885 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
iterator new_end = (new_storage.begin());
# 887 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
try
# 888 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 891 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
new_end = ((m_storage).uninitialized_copy(this->begin(), position, (new_storage.begin())));
# 894 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).uninitialized_fill_n(new_end, n, x));
# 895 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
new_end += n;
# 899 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
new_end = ((m_storage).uninitialized_copy(position, this->end(), new_end));
# 900 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 901 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
catch (...)
# 902 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 904 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).destroy((new_storage.begin()), new_end));
# 905 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(new_storage.deallocate());
# 908 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
throw;
# 909 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 912 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).destroy(this->begin(), this->end()));
# 915 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).swap(new_storage));
# 916 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(m_size) = (old_size + n);
# 917 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 918 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 919 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 921 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 922 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class InputIterator> void
# 924 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::range_assign(InputIterator first, InputIterator
# 925 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
last)
# 926 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 928 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
range_assign(first, last, typename iterator_traversal< InputIterator> ::type());
# 930 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 932 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 933 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class InputIterator> void
# 935 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::range_assign(InputIterator first, InputIterator
# 936 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
last, incrementable_traversal_tag)
# 938 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 939 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
iterator current(this->begin());
# 942 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
for (; (first != last) && (current != this->end()); (++current), (++first))
# 943 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 944 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(*current) = (*first);
# 945 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 949 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (first == last)
# 950 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 952 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
erase(current, this->end());
# 953 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
} else
# 955 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 957 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
insert(this->end(), first, last);
# 958 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 959 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 961 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 962 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class RandomAccessIterator> void
# 964 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::range_assign(RandomAccessIterator first, RandomAccessIterator
# 965 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
last, random_access_traversal_tag)
# 967 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 968 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
const size_type n = thrust::distance(first, last);
# 970 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (n > capacity())
# 971 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 972 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
storage_type new_storage;
# 973 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
allocate_and_copy(n, first, last, new_storage);
# 976 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).destroy(this->begin(), this->end()));
# 979 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).swap(new_storage));
# 980 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(m_size) = n;
# 981 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
} else {
# 982 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (size() >= n)
# 983 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 985 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
iterator new_end = thrust::copy(first, last, this->begin());
# 988 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).destroy(new_end, this->end()));
# 991 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(m_size) = n;
# 992 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
} else
# 994 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1002 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
RandomAccessIterator mid = first;
# 1003 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
thrust::advance(mid, size());
# 1004 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
thrust::copy(first, mid, this->begin());
# 1007 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).uninitialized_copy(mid, last, this->end()));
# 1010 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(m_size) = n;
# 1011 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
} }
# 1012 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1014 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> void
# 1016 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::fill_assign(size_type n, const T &x)
# 1017 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1018 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (n > capacity())
# 1019 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1022 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base temp(n, x);
# 1023 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
temp.swap(*this);
# 1024 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
} else {
# 1025 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (n > size())
# 1026 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1028 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
thrust::fill(this->begin(), this->end(), x);
# 1031 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).uninitialized_fill_n(this->end(), n - size(), x));
# 1034 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(m_size) += (n - size());
# 1035 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
} else
# 1037 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1039 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
iterator new_end = thrust::fill_n(this->begin(), n, x);
# 1042 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
erase(new_end, this->end());
# 1043 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
} }
# 1044 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1046 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc>
# 1047 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class ForwardIterator> void
# 1049 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_base< T, Alloc> ::allocate_and_copy(size_type requested_size, ForwardIterator
# 1050 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
first, ForwardIterator last, storage_type &
# 1051 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
new_storage)
# 1052 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1053 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (requested_size == 0)
# 1054 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1055 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(new_storage.deallocate());
# 1056 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return;
# 1057 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1060 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
size_type allocated_size = thrust::max< size_type> (requested_size, 2 * capacity());
# 1063 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
allocated_size = thrust::min< size_type> (allocated_size, max_size());
# 1065 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
if (requested_size > allocated_size)
# 1066 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1067 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
throw ((std::length_error)("assignment exceeds max_size()."));
# 1068 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1070 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(new_storage.allocate(allocated_size));
# 1072 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
try
# 1073 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1075 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).uninitialized_copy(first, last, (new_storage.begin())));
# 1076 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1077 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
catch (...)
# 1078 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1081 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
iterator new_storage_end = (new_storage.begin());
# 1082 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
thrust::advance(new_storage_end, requested_size);
# 1083 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
((m_storage).destroy((new_storage.begin()), new_storage_end));
# 1084 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(new_storage.deallocate());
# 1087 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
throw;
# 1088 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1089 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1092 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1094 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T, class Alloc> void
# 1095 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
swap(detail::vector_base< T, Alloc> &a, detail::vector_base< T, Alloc> &
# 1096 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
b)
# 1097 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1098 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
(a.swap(b));
# 1099 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1103 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
namespace detail {
# 1107 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class InputIterator1, class InputIterator2> bool
# 1108 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_equal(InputIterator1 first1, InputIterator1 last1, InputIterator2
# 1109 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
first2, true_type)
# 1111 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1112 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return thrust::equal(first1, last1, first2);
# 1113 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1116 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class InputIterator1, class InputIterator2> bool
# 1117 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_equal(InputIterator1 first1, InputIterator1 last1, InputIterator2
# 1118 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
first2, false_type)
# 1120 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1121 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
typename iterator_difference< InputIterator1> ::type n = thrust::distance(first1, last1);
# 1123 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
typedef typename iterator_system< InputIterator1> ::type FromSystem1;
# 1124 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
typedef typename iterator_system< InputIterator2> ::type FromSystem2;
# 1128 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
FromSystem1 from_system1;
# 1129 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
FromSystem2 from_system2;
# 1130 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
host_system_tag to_system;
# 1131 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
move_to_system< InputIterator1, typename iterator_system< InputIterator1> ::type, system::cpp::detail::tag> rng1(from_system1, to_system, first1, last1);
# 1132 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
move_to_system< InputIterator2, typename iterator_system< InputIterator2> ::type, system::cpp::detail::tag> rng2(from_system2, to_system, first2, first2 + n);
# 1134 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return thrust::equal((rng1.begin()), (rng1.end()), (rng2.begin()));
# 1135 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1137 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class InputIterator1, class InputIterator2> bool
# 1138 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
vector_equal(InputIterator1 first1, InputIterator1 last1, InputIterator2
# 1139 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
first2)
# 1140 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1141 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
typedef typename iterator_system< InputIterator1> ::type system1;
# 1142 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
typedef typename iterator_system< InputIterator2> ::type system2;
# 1145 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return vector_equal(first1, last1, first2, is_same< typename iterator_system< InputIterator1> ::type, typename iterator_system< InputIterator2> ::type> ());
# 1147 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1149 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1154 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T1, class Alloc1, class
# 1155 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
T2, class Alloc2> bool
# 1156 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
operator==(const detail::vector_base< T1, Alloc1> &lhs, const detail::vector_base< T2, Alloc2> &
# 1157 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
rhs)
# 1158 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1159 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return ((lhs.size()) == (rhs.size())) && detail::vector_equal((lhs.begin()), (lhs.end()), (rhs.begin()));
# 1160 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1162 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T1, class Alloc1, class
# 1163 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
T2, class Alloc2> bool
# 1164 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
operator==(const detail::vector_base< T1, Alloc1> &lhs, const std::vector< T2, Alloc2> &
# 1165 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
rhs)
# 1166 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1167 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return ((lhs.size()) == (rhs.size())) && detail::vector_equal((lhs.begin()), (lhs.end()), (rhs.begin()));
# 1168 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1170 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T1, class Alloc1, class
# 1171 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
T2, class Alloc2> bool
# 1172 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
operator==(const std::vector< T1, Alloc1> &lhs, const detail::vector_base< T2, Alloc2> &
# 1173 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
rhs)
# 1174 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1175 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return ((lhs.size()) == (rhs.size())) && detail::vector_equal((lhs.begin()), (lhs.end()), (rhs.begin()));
# 1176 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1178 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T1, class Alloc1, class
# 1179 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
T2, class Alloc2> bool
# 1180 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
operator!=(const detail::vector_base< T1, Alloc1> &lhs, const detail::vector_base< T2, Alloc2> &
# 1181 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
rhs)
# 1182 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1183 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return !(lhs == rhs);
# 1184 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1186 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T1, class Alloc1, class
# 1187 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
T2, class Alloc2> bool
# 1188 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
operator!=(const detail::vector_base< T1, Alloc1> &lhs, const std::vector< T2, Alloc2> &
# 1189 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
rhs)
# 1190 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1191 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return !(lhs == rhs);
# 1192 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1194 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
template< class T1, class Alloc1, class
# 1195 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
T2, class Alloc2> bool
# 1196 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
operator!=(const std::vector< T1, Alloc1> &lhs, const detail::vector_base< T2, Alloc2> &
# 1197 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
rhs)
# 1198 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
{
# 1199 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
return !(lhs == rhs);
# 1200 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 1202 "/usr/local/cuda/include/thrust/detail/vector_base.inl"
}
# 29 "/usr/local/cuda/include/thrust/device_vector.h"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/device_vector.h"
template< class T, class Alloc> class host_vector;
# 51 "/usr/local/cuda/include/thrust/device_vector.h"
template< class T, class Alloc = device_malloc_allocator< T> >
# 52 "/usr/local/cuda/include/thrust/device_vector.h"
class device_vector : public detail::vector_base< T, Alloc> {
# 56 "/usr/local/cuda/include/thrust/device_vector.h"
typedef ::thrust::detail::vector_base< T, Alloc> Parent;
# 61 "/usr/local/cuda/include/thrust/device_vector.h"
public: typedef typename ::thrust::detail::vector_base< T, Alloc> ::size_type size_type;
# 62 "/usr/local/cuda/include/thrust/device_vector.h"
typedef typename ::thrust::detail::vector_base< T, Alloc> ::value_type value_type;
# 69 "/usr/local/cuda/include/thrust/device_vector.h"
device_vector() : Parent()
# 70 "/usr/local/cuda/include/thrust/device_vector.h"
{ }
# 77 "/usr/local/cuda/include/thrust/device_vector.h"
~device_vector() { }
# 84 "/usr/local/cuda/include/thrust/device_vector.h"
explicit device_vector(size_type n) : Parent(n)
# 85 "/usr/local/cuda/include/thrust/device_vector.h"
{ }
# 93 "/usr/local/cuda/include/thrust/device_vector.h"
explicit device_vector(size_type n, const value_type &value) : Parent(n, value)
# 94 "/usr/local/cuda/include/thrust/device_vector.h"
{ }
# 100 "/usr/local/cuda/include/thrust/device_vector.h"
device_vector(const device_vector &v) : Parent(v)
# 101 "/usr/local/cuda/include/thrust/device_vector.h"
{ }
# 106 "/usr/local/cuda/include/thrust/device_vector.h"
template< class OtherT, class OtherAlloc>
# 108 "/usr/local/cuda/include/thrust/device_vector.h"
device_vector(const ::thrust::device_vector< OtherT, OtherAlloc> &v) : Parent(v)
# 109 "/usr/local/cuda/include/thrust/device_vector.h"
{int *volatile ___ = 0;(void)v;::free(___);}
# 114 "/usr/local/cuda/include/thrust/device_vector.h"
template< class OtherT, class OtherAlloc> device_vector &
# 116 "/usr/local/cuda/include/thrust/device_vector.h"
operator=(const ::thrust::device_vector< OtherT, OtherAlloc> &v)
# 117 "/usr/local/cuda/include/thrust/device_vector.h"
{int volatile ___ = 1;(void)v;::exit(___);}
# 122 "/usr/local/cuda/include/thrust/device_vector.h"
template< class OtherT, class OtherAlloc>
# 124 "/usr/local/cuda/include/thrust/device_vector.h"
device_vector(const ::std::vector< OtherT, OtherAlloc> &v) : Parent(v)
# 125 "/usr/local/cuda/include/thrust/device_vector.h"
{ }
# 130 "/usr/local/cuda/include/thrust/device_vector.h"
template< class OtherT, class OtherAlloc> device_vector &
# 132 "/usr/local/cuda/include/thrust/device_vector.h"
operator=(const ::std::vector< OtherT, OtherAlloc> &v)
# 133 "/usr/local/cuda/include/thrust/device_vector.h"
{ ::thrust::detail::vector_base< T, Alloc> ::operator=(v); return *this; }
# 138 "/usr/local/cuda/include/thrust/device_vector.h"
template< class OtherT, class OtherAlloc> device_vector(const host_vector< OtherT, OtherAlloc> & v);
# 145 "/usr/local/cuda/include/thrust/device_vector.h"
template< class OtherT, class OtherAlloc> device_vector &
# 147 "/usr/local/cuda/include/thrust/device_vector.h"
operator=(const host_vector< OtherT, OtherAlloc> &v)
# 148 "/usr/local/cuda/include/thrust/device_vector.h"
{ ::thrust::detail::vector_base< T, Alloc> ::operator=(v); return *this; }
# 154 "/usr/local/cuda/include/thrust/device_vector.h"
template< class InputIterator>
# 156 "/usr/local/cuda/include/thrust/device_vector.h"
device_vector(InputIterator first, InputIterator last) : Parent(first, last)
# 157 "/usr/local/cuda/include/thrust/device_vector.h"
{ }
# 418 "/usr/local/cuda/include/thrust/device_vector.h"
};
# 423 "/usr/local/cuda/include/thrust/device_vector.h"
}
# 29 "/usr/local/cuda/include/thrust/host_vector.h"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/host_vector.h"
template< class T, class Alloc> class device_vector;
# 51 "/usr/local/cuda/include/thrust/host_vector.h"
template< class T, class Alloc = std::allocator< T> >
# 52 "/usr/local/cuda/include/thrust/host_vector.h"
class host_vector : public detail::vector_base< T, Alloc> {
# 56 "/usr/local/cuda/include/thrust/host_vector.h"
typedef ::thrust::detail::vector_base< T, Alloc> Parent;
# 61 "/usr/local/cuda/include/thrust/host_vector.h"
public: typedef typename ::thrust::detail::vector_base< T, Alloc> ::size_type size_type;
# 62 "/usr/local/cuda/include/thrust/host_vector.h"
typedef typename ::thrust::detail::vector_base< T, Alloc> ::value_type value_type;
# 69 "/usr/local/cuda/include/thrust/host_vector.h"
host_vector() : Parent()
# 70 "/usr/local/cuda/include/thrust/host_vector.h"
{ }
# 77 "/usr/local/cuda/include/thrust/host_vector.h"
~host_vector() { }
# 84 "/usr/local/cuda/include/thrust/host_vector.h"
explicit host_vector(size_type n) : Parent(n)
# 85 "/usr/local/cuda/include/thrust/host_vector.h"
{ }
# 93 "/usr/local/cuda/include/thrust/host_vector.h"
explicit host_vector(size_type n, const value_type &value) : Parent(n, value)
# 94 "/usr/local/cuda/include/thrust/host_vector.h"
{ }
# 100 "/usr/local/cuda/include/thrust/host_vector.h"
host_vector(const host_vector &v) : Parent(v)
# 101 "/usr/local/cuda/include/thrust/host_vector.h"
{ }
# 107 "/usr/local/cuda/include/thrust/host_vector.h"
host_vector &operator=(const host_vector &v)
# 108 "/usr/local/cuda/include/thrust/host_vector.h"
{ ::thrust::detail::vector_base< T, Alloc> ::operator=(v); return *this; }
# 113 "/usr/local/cuda/include/thrust/host_vector.h"
template< class OtherT, class OtherAlloc>
# 115 "/usr/local/cuda/include/thrust/host_vector.h"
host_vector(const ::thrust::host_vector< OtherT, OtherAlloc> &v) : Parent(v)
# 116 "/usr/local/cuda/include/thrust/host_vector.h"
{ }
# 121 "/usr/local/cuda/include/thrust/host_vector.h"
template< class OtherT, class OtherAlloc> host_vector &
# 123 "/usr/local/cuda/include/thrust/host_vector.h"
operator=(const ::thrust::host_vector< OtherT, OtherAlloc> &v)
# 124 "/usr/local/cuda/include/thrust/host_vector.h"
{ ::thrust::detail::vector_base< T, Alloc> ::operator=(v); return *this; }
# 129 "/usr/local/cuda/include/thrust/host_vector.h"
template< class OtherT, class OtherAlloc>
# 131 "/usr/local/cuda/include/thrust/host_vector.h"
host_vector(const ::std::vector< OtherT, OtherAlloc> &v) : Parent(v)
# 132 "/usr/local/cuda/include/thrust/host_vector.h"
{ }
# 137 "/usr/local/cuda/include/thrust/host_vector.h"
template< class OtherT, class OtherAlloc> host_vector &
# 139 "/usr/local/cuda/include/thrust/host_vector.h"
operator=(const ::std::vector< OtherT, OtherAlloc> &v)
# 140 "/usr/local/cuda/include/thrust/host_vector.h"
{ ::thrust::detail::vector_base< T, Alloc> ::operator=(v); return *this; }
# 145 "/usr/local/cuda/include/thrust/host_vector.h"
template< class OtherT, class OtherAlloc> host_vector(const device_vector< OtherT, OtherAlloc> & v);
# 152 "/usr/local/cuda/include/thrust/host_vector.h"
template< class OtherT, class OtherAlloc> host_vector &
# 154 "/usr/local/cuda/include/thrust/host_vector.h"
operator=(const device_vector< OtherT, OtherAlloc> &v)
# 155 "/usr/local/cuda/include/thrust/host_vector.h"
{ ::thrust::detail::vector_base< T, Alloc> ::operator=(v); return *this; }
# 161 "/usr/local/cuda/include/thrust/host_vector.h"
template< class InputIterator>
# 163 "/usr/local/cuda/include/thrust/host_vector.h"
host_vector(InputIterator first, InputIterator last) : Parent(first, last)
# 164 "/usr/local/cuda/include/thrust/host_vector.h"
{ }
# 425 "/usr/local/cuda/include/thrust/host_vector.h"
};
# 430 "/usr/local/cuda/include/thrust/host_vector.h"
}
# 24 "/usr/local/cuda/include/thrust/detail/host_vector.inl"
namespace thrust {
# 27 "/usr/local/cuda/include/thrust/detail/host_vector.inl"
template< class T, class Alloc>
# 28 "/usr/local/cuda/include/thrust/detail/host_vector.inl"
template< class OtherT, class OtherAlloc>
# 31 "/usr/local/cuda/include/thrust/detail/host_vector.inl"
host_vector< T, Alloc> ::host_vector(const device_vector< OtherT, OtherAlloc> &v) : Parent(v)
# 33 "/usr/local/cuda/include/thrust/detail/host_vector.inl"
{
# 34 "/usr/local/cuda/include/thrust/detail/host_vector.inl"
;
# 35 "/usr/local/cuda/include/thrust/detail/host_vector.inl"
}
# 37 "/usr/local/cuda/include/thrust/detail/host_vector.inl"
}
# 24 "/usr/local/cuda/include/thrust/detail/device_vector.inl"
namespace thrust {
# 27 "/usr/local/cuda/include/thrust/detail/device_vector.inl"
template< class T, class Alloc>
# 28 "/usr/local/cuda/include/thrust/detail/device_vector.inl"
template< class OtherT, class OtherAlloc>
# 31 "/usr/local/cuda/include/thrust/detail/device_vector.inl"
device_vector< T, Alloc> ::device_vector(const host_vector< OtherT, OtherAlloc> &v) : Parent(v)
# 33 "/usr/local/cuda/include/thrust/detail/device_vector.inl"
{
# 34 "/usr/local/cuda/include/thrust/detail/device_vector.inl"
;
# 35 "/usr/local/cuda/include/thrust/detail/device_vector.inl"
}
# 37 "/usr/local/cuda/include/thrust/detail/device_vector.inl"
}
# 27 "/usr/local/cuda/include/thrust/inner_product.h"
namespace thrust {
# 80 "/usr/local/cuda/include/thrust/inner_product.h"
template< class DerivedPolicy, class
# 81 "/usr/local/cuda/include/thrust/inner_product.h"
InputIterator1, class
# 82 "/usr/local/cuda/include/thrust/inner_product.h"
InputIterator2, class
# 83 "/usr/local/cuda/include/thrust/inner_product.h"
OutputType> OutputType
# 80 "/usr/local/cuda/include/thrust/inner_product.h"
inner_product(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputType init);
# 131 "/usr/local/cuda/include/thrust/inner_product.h"
template< class InputIterator1, class InputIterator2, class OutputType> OutputType inner_product(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputType init);
# 186 "/usr/local/cuda/include/thrust/inner_product.h"
template< class DerivedPolicy, class
# 187 "/usr/local/cuda/include/thrust/inner_product.h"
InputIterator1, class
# 188 "/usr/local/cuda/include/thrust/inner_product.h"
InputIterator2, class
# 189 "/usr/local/cuda/include/thrust/inner_product.h"
OutputType, class
# 190 "/usr/local/cuda/include/thrust/inner_product.h"
BinaryFunction1, class
# 191 "/usr/local/cuda/include/thrust/inner_product.h"
BinaryFunction2> OutputType
# 186 "/usr/local/cuda/include/thrust/inner_product.h"
inner_product(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputType init, BinaryFunction1 binary_op1, BinaryFunction2 binary_op2);
# 250 "/usr/local/cuda/include/thrust/inner_product.h"
template< class InputIterator1, class InputIterator2, class OutputType, class
# 251 "/usr/local/cuda/include/thrust/inner_product.h"
BinaryFunction1, class BinaryFunction2> OutputType
# 250 "/usr/local/cuda/include/thrust/inner_product.h"
inner_product(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputType init, BinaryFunction1 binary_op1, BinaryFunction2 binary_op2);
# 261 "/usr/local/cuda/include/thrust/inner_product.h"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.h"
namespace generic {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.h"
template< class DerivedPolicy, class InputIterator1, class InputIterator2, class OutputType> OutputType inner_product(execution_policy< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputType init);
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.h"
template< class DerivedPolicy, class InputIterator1, class InputIterator2, class OutputType, class BinaryFunction1, class BinaryFunction2> OutputType inner_product(execution_policy< DerivedPolicy> & exec, InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, OutputType init, BinaryFunction1 binary_op1, BinaryFunction2 binary_op2);
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.h"
}
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.h"
}
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.h"
}
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.h"
}
# 27 "/usr/local/cuda/include/thrust/transform_reduce.h"
namespace thrust {
# 105 "/usr/local/cuda/include/thrust/transform_reduce.h"
template< class DerivedPolicy, class
# 106 "/usr/local/cuda/include/thrust/transform_reduce.h"
InputIterator, class
# 107 "/usr/local/cuda/include/thrust/transform_reduce.h"
UnaryFunction, class
# 108 "/usr/local/cuda/include/thrust/transform_reduce.h"
OutputType, class
# 109 "/usr/local/cuda/include/thrust/transform_reduce.h"
BinaryFunction> OutputType
# 105 "/usr/local/cuda/include/thrust/transform_reduce.h"
transform_reduce(const detail::execution_policy_base< DerivedPolicy> & exec, InputIterator first, InputIterator last, UnaryFunction unary_op, OutputType init, BinaryFunction binary_op);
# 179 "/usr/local/cuda/include/thrust/transform_reduce.h"
template< class InputIterator, class
# 180 "/usr/local/cuda/include/thrust/transform_reduce.h"
UnaryFunction, class
# 181 "/usr/local/cuda/include/thrust/transform_reduce.h"
OutputType, class
# 182 "/usr/local/cuda/include/thrust/transform_reduce.h"
BinaryFunction> OutputType
# 179 "/usr/local/cuda/include/thrust/transform_reduce.h"
transform_reduce(InputIterator first, InputIterator last, UnaryFunction unary_op, OutputType init, BinaryFunction binary_op);
# 195 "/usr/local/cuda/include/thrust/transform_reduce.h"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.h"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.h"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.h"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.h"
namespace generic {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.h"
template< class ExecutionPolicy, class
# 34 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.h"
InputIterator, class
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.h"
UnaryFunction, class
# 36 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.h"
OutputType, class
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.h"
BinaryFunction> OutputType
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.h"
transform_reduce(execution_policy< ExecutionPolicy> & exec, InputIterator first, InputIterator last, UnaryFunction unary_op, OutputType init, BinaryFunction binary_op);
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.h"
}
# 48 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.h"
}
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.h"
}
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.h"
}
# 22 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
namespace thrust {
# 24 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
namespace system {
# 26 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
namespace detail {
# 28 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
namespace generic {
# 32 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
template< class DerivedPolicy, class
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
InputIterator, class
# 34 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
UnaryFunction, class
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
OutputType, class
# 36 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
BinaryFunction> OutputType
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
transform_reduce(execution_policy< DerivedPolicy> &exec, InputIterator
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
first, InputIterator
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
last, UnaryFunction
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
unary_op, OutputType
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
init, BinaryFunction
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
binary_op)
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
{
# 45 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
transform_iterator< UnaryFunction, InputIterator, OutputType> xfrm_first(first, unary_op);
# 46 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
transform_iterator< UnaryFunction, InputIterator, OutputType> xfrm_last(last, unary_op);
# 48 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
return thrust::reduce(exec, xfrm_first, xfrm_last, init, binary_op);
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
}
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
}
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
}
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
}
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/transform_reduce.inl"
}
# 28 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
namespace thrust {
# 33 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
template< class DerivedPolicy, class
# 34 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
InputIterator, class
# 35 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
UnaryFunction, class
# 36 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
OutputType, class
# 37 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
BinaryFunction> OutputType
# 39 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
transform_reduce(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator
# 40 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
first, InputIterator
# 41 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
last, UnaryFunction
# 42 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
unary_op, OutputType
# 43 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
init, BinaryFunction
# 44 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
binary_op)
# 45 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
{
# 46 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
using system::detail::generic::transform_reduce;
# 47 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
return transform_reduce(detail::derived_cast(detail::strip_const(exec)), first, last, unary_op, init, binary_op);
# 48 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
}
# 51 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
template< class InputIterator, class
# 52 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
UnaryFunction, class
# 53 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
OutputType, class
# 54 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
BinaryFunction> OutputType
# 55 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
transform_reduce(InputIterator first, InputIterator
# 56 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
last, UnaryFunction
# 57 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
unary_op, OutputType
# 58 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
init, BinaryFunction
# 59 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
binary_op)
# 60 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
{
# 61 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
using thrust::system::detail::generic::select_system;
# 63 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
typedef typename iterator_system< InputIterator> ::type System;
# 65 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
System system;
# 67 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
return thrust::transform_reduce(select_system(system), first, last, unary_op, init, binary_op);
# 68 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
}
# 71 "/usr/local/cuda/include/thrust/detail/transform_reduce.inl"
}
# 23 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
namespace thrust {
# 25 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
namespace system {
# 27 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
namespace detail {
# 29 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
namespace generic {
# 33 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
template< class DerivedPolicy, class InputIterator1, class InputIterator2, class OutputType> OutputType
# 35 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
inner_product(execution_policy< DerivedPolicy> &exec, InputIterator1
# 36 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
first1, InputIterator1
# 37 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
last1, InputIterator2
# 38 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
first2, OutputType
# 39 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
init)
# 40 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
{
# 41 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
plus< OutputType> binary_op1;
# 42 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
multiplies< OutputType> binary_op2;
# 43 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
return thrust::inner_product(exec, first1, last1, first2, init, binary_op1, binary_op2);
# 44 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
}
# 47 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
template< class DerivedPolicy, class InputIterator1, class InputIterator2, class OutputType, class BinaryFunction1, class BinaryFunction2> OutputType
# 49 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
inner_product(execution_policy< DerivedPolicy> &exec, InputIterator1
# 50 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
first1, InputIterator1
# 51 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
last1, InputIterator2
# 52 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
first2, OutputType
# 53 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
init, BinaryFunction1
# 54 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
binary_op1, BinaryFunction2
# 55 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
binary_op2)
# 56 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
{
# 57 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
typedef zip_iterator< tuple< InputIterator1, InputIterator2, null_type, null_type, null_type, null_type, null_type, null_type, null_type, null_type> > ZipIter;
# 59 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
ZipIter first = thrust::make_zip_iterator(thrust::make_tuple(first1, first2));
# 62 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
ZipIter last = thrust::make_zip_iterator(thrust::make_tuple(last1, first2));
# 64 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
return thrust::transform_reduce(exec, first, last, ((thrust::detail::zipped_binary_op< OutputType, BinaryFunction2> )(binary_op2)), init, binary_op1);
# 65 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
}
# 68 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
}
# 69 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
}
# 70 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
}
# 71 "/usr/local/cuda/include/thrust/system/detail/generic/inner_product.inl"
}
# 29 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
namespace thrust {
# 34 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
template< class DerivedPolicy, class
# 35 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
InputIterator1, class
# 36 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
InputIterator2, class
# 37 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
OutputType> OutputType
# 39 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
inner_product(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 40 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
first1, InputIterator1
# 41 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
last1, InputIterator2
# 42 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
first2, OutputType
# 43 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
init)
# 44 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
{
# 45 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
using system::detail::generic::inner_product;
# 46 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
return inner_product(detail::derived_cast(detail::strip_const(exec)), first1, last1, first2, init);
# 47 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
}
# 51 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
template< class DerivedPolicy, class
# 52 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
InputIterator1, class
# 53 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
InputIterator2, class
# 54 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
OutputType, class
# 55 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
BinaryFunction1, class
# 56 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
BinaryFunction2> OutputType
# 58 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
inner_product(const detail::execution_policy_base< DerivedPolicy> &exec, InputIterator1
# 59 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
first1, InputIterator1
# 60 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
last1, InputIterator2
# 61 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
first2, OutputType
# 62 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
init, BinaryFunction1
# 63 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
binary_op1, BinaryFunction2
# 64 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
binary_op2)
# 65 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
{
# 66 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
using system::detail::generic::inner_product;
# 67 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
return inner_product(detail::derived_cast(detail::strip_const(exec)), first1, last1, first2, init, binary_op1, binary_op2);
# 68 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
}
# 71 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
template< class InputIterator1, class InputIterator2, class OutputType> OutputType
# 73 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
inner_product(InputIterator1 first1, InputIterator1 last1, InputIterator2
# 74 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
first2, OutputType init)
# 75 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
{
# 76 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
using system::detail::generic::select_system;
# 78 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 79 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 81 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
System1 system1;
# 82 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
System2 system2;
# 84 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
return thrust::inner_product(select_system(system1, system2), first1, last1, first2, init);
# 85 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
}
# 88 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
template< class InputIterator1, class InputIterator2, class OutputType, class
# 89 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
BinaryFunction1, class BinaryFunction2> OutputType
# 91 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
inner_product(InputIterator1 first1, InputIterator1 last1, InputIterator2
# 92 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
first2, OutputType init, BinaryFunction1
# 93 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
binary_op1, BinaryFunction2 binary_op2)
# 94 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
{
# 95 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
using system::detail::generic::select_system;
# 97 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
typedef typename iterator_system< InputIterator1> ::type System1;
# 98 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
typedef typename iterator_system< InputIterator2> ::type System2;
# 100 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
System1 system1;
# 101 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
System2 system2;
# 103 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
return thrust::inner_product(select_system(system1, system2), first1, last1, first2, init, binary_op1, binary_op2);
# 104 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
}
# 107 "/usr/local/cuda/include/thrust/detail/inner_product.inl"
}
# 30 "/usr/include/complex.h" 3

# 30 "/usr/include/complex.h" 3
extern "C" {
# 53 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ cacos(double __complex__ __z) throw(); extern double __complex__ __cacos(double __complex__ __z) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ casin(double __complex__ __z) throw(); extern double __complex__ __casin(double __complex__ __z) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ catan(double __complex__ __z) throw(); extern double __complex__ __catan(double __complex__ __z) throw();
# 60 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ ccos(double __complex__ __z) throw(); extern double __complex__ __ccos(double __complex__ __z) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ csin(double __complex__ __z) throw(); extern double __complex__ __csin(double __complex__ __z) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ ctan(double __complex__ __z) throw(); extern double __complex__ __ctan(double __complex__ __z) throw();
# 70 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ cacosh(double __complex__ __z) throw(); extern double __complex__ __cacosh(double __complex__ __z) throw();
# 72 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ casinh(double __complex__ __z) throw(); extern double __complex__ __casinh(double __complex__ __z) throw();
# 74 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ catanh(double __complex__ __z) throw(); extern double __complex__ __catanh(double __complex__ __z) throw();
# 77 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ ccosh(double __complex__ __z) throw(); extern double __complex__ __ccosh(double __complex__ __z) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ csinh(double __complex__ __z) throw(); extern double __complex__ __csinh(double __complex__ __z) throw();
# 81 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ ctanh(double __complex__ __z) throw(); extern double __complex__ __ctanh(double __complex__ __z) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ cexp(double __complex__ __z) throw(); extern double __complex__ __cexp(double __complex__ __z) throw();
# 90 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ clog(double __complex__ __z) throw(); extern double __complex__ __clog(double __complex__ __z) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ clog10(double __complex__ __z) throw(); extern double __complex__ __clog10(double __complex__ __z) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ cpow(double __complex__ __x, double __complex__ __y) throw(); extern double __complex__ __cpow(double __complex__ __x, double __complex__ __y) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ csqrt(double __complex__ __z) throw(); extern double __complex__ __csqrt(double __complex__ __z) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double cabs(double __complex__ __z) throw(); extern double __cabs(double __complex__ __z) throw();
# 113 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double carg(double __complex__ __z) throw(); extern double __carg(double __complex__ __z) throw();
# 116 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ conj(double __complex__ __z) throw(); extern double __complex__ __conj(double __complex__ __z) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double __complex__ cproj(double __complex__ __z) throw(); extern double __complex__ __cproj(double __complex__ __z) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double cimag(double __complex__ __z) throw(); extern double __cimag(double __complex__ __z) throw();
# 128 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern double creal(double __complex__ __z) throw(); extern double __creal(double __complex__ __z) throw();
# 53 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ cacosf(float __complex__ __z) throw(); extern float __complex__ __cacosf(float __complex__ __z) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ casinf(float __complex__ __z) throw(); extern float __complex__ __casinf(float __complex__ __z) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ catanf(float __complex__ __z) throw(); extern float __complex__ __catanf(float __complex__ __z) throw();
# 60 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ ccosf(float __complex__ __z) throw(); extern float __complex__ __ccosf(float __complex__ __z) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ csinf(float __complex__ __z) throw(); extern float __complex__ __csinf(float __complex__ __z) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ ctanf(float __complex__ __z) throw(); extern float __complex__ __ctanf(float __complex__ __z) throw();
# 70 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ cacoshf(float __complex__ __z) throw(); extern float __complex__ __cacoshf(float __complex__ __z) throw();
# 72 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ casinhf(float __complex__ __z) throw(); extern float __complex__ __casinhf(float __complex__ __z) throw();
# 74 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ catanhf(float __complex__ __z) throw(); extern float __complex__ __catanhf(float __complex__ __z) throw();
# 77 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ ccoshf(float __complex__ __z) throw(); extern float __complex__ __ccoshf(float __complex__ __z) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ csinhf(float __complex__ __z) throw(); extern float __complex__ __csinhf(float __complex__ __z) throw();
# 81 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ ctanhf(float __complex__ __z) throw(); extern float __complex__ __ctanhf(float __complex__ __z) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ cexpf(float __complex__ __z) throw(); extern float __complex__ __cexpf(float __complex__ __z) throw();
# 90 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ clogf(float __complex__ __z) throw(); extern float __complex__ __clogf(float __complex__ __z) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ clog10f(float __complex__ __z) throw(); extern float __complex__ __clog10f(float __complex__ __z) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ cpowf(float __complex__ __x, float __complex__ __y) throw(); extern float __complex__ __cpowf(float __complex__ __x, float __complex__ __y) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ csqrtf(float __complex__ __z) throw(); extern float __complex__ __csqrtf(float __complex__ __z) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float cabsf(float __complex__ __z) throw(); extern float __cabsf(float __complex__ __z) throw();
# 113 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float cargf(float __complex__ __z) throw(); extern float __cargf(float __complex__ __z) throw();
# 116 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ conjf(float __complex__ __z) throw(); extern float __complex__ __conjf(float __complex__ __z) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float __complex__ cprojf(float __complex__ __z) throw(); extern float __complex__ __cprojf(float __complex__ __z) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float cimagf(float __complex__ __z) throw(); extern float __cimagf(float __complex__ __z) throw();
# 128 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern float crealf(float __complex__ __z) throw(); extern float __crealf(float __complex__ __z) throw();
# 53 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ cacosl(long double __complex__ __z) throw(); extern long double __complex__ __cacosl(long double __complex__ __z) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ casinl(long double __complex__ __z) throw(); extern long double __complex__ __casinl(long double __complex__ __z) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ catanl(long double __complex__ __z) throw(); extern long double __complex__ __catanl(long double __complex__ __z) throw();
# 60 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ ccosl(long double __complex__ __z) throw(); extern long double __complex__ __ccosl(long double __complex__ __z) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ csinl(long double __complex__ __z) throw(); extern long double __complex__ __csinl(long double __complex__ __z) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ ctanl(long double __complex__ __z) throw(); extern long double __complex__ __ctanl(long double __complex__ __z) throw();
# 70 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ cacoshl(long double __complex__ __z) throw(); extern long double __complex__ __cacoshl(long double __complex__ __z) throw();
# 72 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ casinhl(long double __complex__ __z) throw(); extern long double __complex__ __casinhl(long double __complex__ __z) throw();
# 74 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ catanhl(long double __complex__ __z) throw(); extern long double __complex__ __catanhl(long double __complex__ __z) throw();
# 77 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ ccoshl(long double __complex__ __z) throw(); extern long double __complex__ __ccoshl(long double __complex__ __z) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ csinhl(long double __complex__ __z) throw(); extern long double __complex__ __csinhl(long double __complex__ __z) throw();
# 81 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ ctanhl(long double __complex__ __z) throw(); extern long double __complex__ __ctanhl(long double __complex__ __z) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ cexpl(long double __complex__ __z) throw(); extern long double __complex__ __cexpl(long double __complex__ __z) throw();
# 90 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ clogl(long double __complex__ __z) throw(); extern long double __complex__ __clogl(long double __complex__ __z) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ clog10l(long double __complex__ __z) throw(); extern long double __complex__ __clog10l(long double __complex__ __z) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ cpowl(long double __complex__ __x, long double __complex__ __y) throw(); extern long double __complex__ __cpowl(long double __complex__ __x, long double __complex__ __y) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ csqrtl(long double __complex__ __z) throw(); extern long double __complex__ __csqrtl(long double __complex__ __z) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double cabsl(long double __complex__ __z) throw(); extern long double __cabsl(long double __complex__ __z) throw();
# 113 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double cargl(long double __complex__ __z) throw(); extern long double __cargl(long double __complex__ __z) throw();
# 116 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ conjl(long double __complex__ __z) throw(); extern long double __complex__ __conjl(long double __complex__ __z) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double __complex__ cprojl(long double __complex__ __z) throw(); extern long double __complex__ __cprojl(long double __complex__ __z) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double cimagl(long double __complex__ __z) throw(); extern long double __cimagl(long double __complex__ __z) throw();
# 128 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3
extern long double creall(long double __complex__ __z) throw(); extern long double __creall(long double __complex__ __z) throw();
# 110 "/usr/include/complex.h" 3
}
# 62 "/usr/local/cuda/include/cuComplex.h"

# 62 "/usr/local/cuda/include/cuComplex.h"
extern "C" {
# 67 "/usr/local/cuda/include/cuComplex.h"
typedef float2 cuFloatComplex;
# 69 "/usr/local/cuda/include/cuComplex.h"
static inline float cuCrealf(cuFloatComplex x)
# 70 "/usr/local/cuda/include/cuComplex.h"
{
# 71 "/usr/local/cuda/include/cuComplex.h"
return x.x;
# 72 "/usr/local/cuda/include/cuComplex.h"
}
# 74 "/usr/local/cuda/include/cuComplex.h"
static inline float cuCimagf(cuFloatComplex x)
# 75 "/usr/local/cuda/include/cuComplex.h"
{
# 76 "/usr/local/cuda/include/cuComplex.h"
return x.y;
# 77 "/usr/local/cuda/include/cuComplex.h"
}
# 79 "/usr/local/cuda/include/cuComplex.h"
static inline cuFloatComplex make_cuFloatComplex(float
# 80 "/usr/local/cuda/include/cuComplex.h"
r, float i)
# 81 "/usr/local/cuda/include/cuComplex.h"
{
# 82 "/usr/local/cuda/include/cuComplex.h"
cuFloatComplex res;
# 83 "/usr/local/cuda/include/cuComplex.h"
(res.x) = r;
# 84 "/usr/local/cuda/include/cuComplex.h"
(res.y) = i;
# 85 "/usr/local/cuda/include/cuComplex.h"
return res;
# 86 "/usr/local/cuda/include/cuComplex.h"
}
# 88 "/usr/local/cuda/include/cuComplex.h"
static inline cuFloatComplex cuConjf(cuFloatComplex x)
# 89 "/usr/local/cuda/include/cuComplex.h"
{
# 90 "/usr/local/cuda/include/cuComplex.h"
return make_cuFloatComplex(cuCrealf(x), -cuCimagf(x));
# 91 "/usr/local/cuda/include/cuComplex.h"
}
# 92 "/usr/local/cuda/include/cuComplex.h"
static inline cuFloatComplex cuCaddf(cuFloatComplex x, cuFloatComplex
# 93 "/usr/local/cuda/include/cuComplex.h"
y)
# 94 "/usr/local/cuda/include/cuComplex.h"
{
# 95 "/usr/local/cuda/include/cuComplex.h"
return make_cuFloatComplex(cuCrealf(x) + cuCrealf(y), cuCimagf(x) + cuCimagf(y));
# 97 "/usr/local/cuda/include/cuComplex.h"
}
# 99 "/usr/local/cuda/include/cuComplex.h"
static inline cuFloatComplex cuCsubf(cuFloatComplex x, cuFloatComplex
# 100 "/usr/local/cuda/include/cuComplex.h"
y)
# 101 "/usr/local/cuda/include/cuComplex.h"
{
# 102 "/usr/local/cuda/include/cuComplex.h"
return make_cuFloatComplex(cuCrealf(x) - cuCrealf(y), cuCimagf(x) - cuCimagf(y));
# 104 "/usr/local/cuda/include/cuComplex.h"
}
# 111 "/usr/local/cuda/include/cuComplex.h"
static inline cuFloatComplex cuCmulf(cuFloatComplex x, cuFloatComplex
# 112 "/usr/local/cuda/include/cuComplex.h"
y)
# 113 "/usr/local/cuda/include/cuComplex.h"
{
# 114 "/usr/local/cuda/include/cuComplex.h"
cuFloatComplex prod;
# 115 "/usr/local/cuda/include/cuComplex.h"
prod = make_cuFloatComplex((cuCrealf(x) * cuCrealf(y)) - (cuCimagf(x) * cuCimagf(y)), (cuCrealf(x) * cuCimagf(y)) + (cuCimagf(x) * cuCrealf(y)));
# 119 "/usr/local/cuda/include/cuComplex.h"
return prod;
# 120 "/usr/local/cuda/include/cuComplex.h"
}
# 127 "/usr/local/cuda/include/cuComplex.h"
static inline cuFloatComplex cuCdivf(cuFloatComplex x, cuFloatComplex
# 128 "/usr/local/cuda/include/cuComplex.h"
y)
# 129 "/usr/local/cuda/include/cuComplex.h"
{
# 130 "/usr/local/cuda/include/cuComplex.h"
cuFloatComplex quot;
# 131 "/usr/local/cuda/include/cuComplex.h"
float s = fabsf(cuCrealf(y)) + fabsf(cuCimagf(y));
# 132 "/usr/local/cuda/include/cuComplex.h"
float oos = (1.0F) / s;
# 133 "/usr/local/cuda/include/cuComplex.h"
float ars = cuCrealf(x) * oos;
# 134 "/usr/local/cuda/include/cuComplex.h"
float ais = cuCimagf(x) * oos;
# 135 "/usr/local/cuda/include/cuComplex.h"
float brs = cuCrealf(y) * oos;
# 136 "/usr/local/cuda/include/cuComplex.h"
float bis = cuCimagf(y) * oos;
# 137 "/usr/local/cuda/include/cuComplex.h"
s = ((brs * brs) + (bis * bis));
# 138 "/usr/local/cuda/include/cuComplex.h"
oos = ((1.0F) / s);
# 139 "/usr/local/cuda/include/cuComplex.h"
quot = make_cuFloatComplex(((ars * brs) + (ais * bis)) * oos, ((ais * brs) - (ars * bis)) * oos);
# 141 "/usr/local/cuda/include/cuComplex.h"
return quot;
# 142 "/usr/local/cuda/include/cuComplex.h"
}
# 152 "/usr/local/cuda/include/cuComplex.h"
static inline float cuCabsf(cuFloatComplex x)
# 153 "/usr/local/cuda/include/cuComplex.h"
{
# 154 "/usr/local/cuda/include/cuComplex.h"
float a = cuCrealf(x);
# 155 "/usr/local/cuda/include/cuComplex.h"
float b = cuCimagf(x);
# 156 "/usr/local/cuda/include/cuComplex.h"
float v, w, t;
# 157 "/usr/local/cuda/include/cuComplex.h"
a = fabsf(a);
# 158 "/usr/local/cuda/include/cuComplex.h"
b = fabsf(b);
# 159 "/usr/local/cuda/include/cuComplex.h"
if (a > b) {
# 160 "/usr/local/cuda/include/cuComplex.h"
v = a;
# 161 "/usr/local/cuda/include/cuComplex.h"
w = b;
# 162 "/usr/local/cuda/include/cuComplex.h"
} else {
# 163 "/usr/local/cuda/include/cuComplex.h"
v = b;
# 164 "/usr/local/cuda/include/cuComplex.h"
w = a;
# 165 "/usr/local/cuda/include/cuComplex.h"
}
# 166 "/usr/local/cuda/include/cuComplex.h"
t = (w / v);
# 167 "/usr/local/cuda/include/cuComplex.h"
t = ((1.0F) + (t * t));
# 168 "/usr/local/cuda/include/cuComplex.h"
t = (v * sqrtf(t));
# 169 "/usr/local/cuda/include/cuComplex.h"
if (((v == (0.0F)) || (v > (3.402823466e+38F))) || (w > (3.402823466e+38F))) {
# 170 "/usr/local/cuda/include/cuComplex.h"
t = (v + w);
# 171 "/usr/local/cuda/include/cuComplex.h"
}
# 172 "/usr/local/cuda/include/cuComplex.h"
return t;
# 173 "/usr/local/cuda/include/cuComplex.h"
}
# 176 "/usr/local/cuda/include/cuComplex.h"
typedef double2 cuDoubleComplex;
# 178 "/usr/local/cuda/include/cuComplex.h"
static inline double cuCreal(cuDoubleComplex x)
# 179 "/usr/local/cuda/include/cuComplex.h"
{
# 180 "/usr/local/cuda/include/cuComplex.h"
return x.x;
# 181 "/usr/local/cuda/include/cuComplex.h"
}
# 183 "/usr/local/cuda/include/cuComplex.h"
static inline double cuCimag(cuDoubleComplex x)
# 184 "/usr/local/cuda/include/cuComplex.h"
{
# 185 "/usr/local/cuda/include/cuComplex.h"
return x.y;
# 186 "/usr/local/cuda/include/cuComplex.h"
}
# 188 "/usr/local/cuda/include/cuComplex.h"
static inline cuDoubleComplex make_cuDoubleComplex(double
# 189 "/usr/local/cuda/include/cuComplex.h"
r, double i)
# 190 "/usr/local/cuda/include/cuComplex.h"
{
# 191 "/usr/local/cuda/include/cuComplex.h"
cuDoubleComplex res;
# 192 "/usr/local/cuda/include/cuComplex.h"
(res.x) = r;
# 193 "/usr/local/cuda/include/cuComplex.h"
(res.y) = i;
# 194 "/usr/local/cuda/include/cuComplex.h"
return res;
# 195 "/usr/local/cuda/include/cuComplex.h"
}
# 197 "/usr/local/cuda/include/cuComplex.h"
static inline cuDoubleComplex cuConj(cuDoubleComplex x)
# 198 "/usr/local/cuda/include/cuComplex.h"
{
# 199 "/usr/local/cuda/include/cuComplex.h"
return make_cuDoubleComplex(cuCreal(x), -cuCimag(x));
# 200 "/usr/local/cuda/include/cuComplex.h"
}
# 202 "/usr/local/cuda/include/cuComplex.h"
static inline cuDoubleComplex cuCadd(cuDoubleComplex x, cuDoubleComplex
# 203 "/usr/local/cuda/include/cuComplex.h"
y)
# 204 "/usr/local/cuda/include/cuComplex.h"
{
# 205 "/usr/local/cuda/include/cuComplex.h"
return make_cuDoubleComplex(cuCreal(x) + cuCreal(y), cuCimag(x) + cuCimag(y));
# 207 "/usr/local/cuda/include/cuComplex.h"
}
# 209 "/usr/local/cuda/include/cuComplex.h"
static inline cuDoubleComplex cuCsub(cuDoubleComplex x, cuDoubleComplex
# 210 "/usr/local/cuda/include/cuComplex.h"
y)
# 211 "/usr/local/cuda/include/cuComplex.h"
{
# 212 "/usr/local/cuda/include/cuComplex.h"
return make_cuDoubleComplex(cuCreal(x) - cuCreal(y), cuCimag(x) - cuCimag(y));
# 214 "/usr/local/cuda/include/cuComplex.h"
}
# 221 "/usr/local/cuda/include/cuComplex.h"
static inline cuDoubleComplex cuCmul(cuDoubleComplex x, cuDoubleComplex
# 222 "/usr/local/cuda/include/cuComplex.h"
y)
# 223 "/usr/local/cuda/include/cuComplex.h"
{
# 224 "/usr/local/cuda/include/cuComplex.h"
cuDoubleComplex prod;
# 225 "/usr/local/cuda/include/cuComplex.h"
prod = make_cuDoubleComplex((cuCreal(x) * cuCreal(y)) - (cuCimag(x) * cuCimag(y)), (cuCreal(x) * cuCimag(y)) + (cuCimag(x) * cuCreal(y)));
# 229 "/usr/local/cuda/include/cuComplex.h"
return prod;
# 230 "/usr/local/cuda/include/cuComplex.h"
}
# 237 "/usr/local/cuda/include/cuComplex.h"
static inline cuDoubleComplex cuCdiv(cuDoubleComplex x, cuDoubleComplex
# 238 "/usr/local/cuda/include/cuComplex.h"
y)
# 239 "/usr/local/cuda/include/cuComplex.h"
{
# 240 "/usr/local/cuda/include/cuComplex.h"
cuDoubleComplex quot;
# 241 "/usr/local/cuda/include/cuComplex.h"
double s = fabs(cuCreal(y)) + fabs(cuCimag(y));
# 242 "/usr/local/cuda/include/cuComplex.h"
double oos = (1.0) / s;
# 243 "/usr/local/cuda/include/cuComplex.h"
double ars = cuCreal(x) * oos;
# 244 "/usr/local/cuda/include/cuComplex.h"
double ais = cuCimag(x) * oos;
# 245 "/usr/local/cuda/include/cuComplex.h"
double brs = cuCreal(y) * oos;
# 246 "/usr/local/cuda/include/cuComplex.h"
double bis = cuCimag(y) * oos;
# 247 "/usr/local/cuda/include/cuComplex.h"
s = ((brs * brs) + (bis * bis));
# 248 "/usr/local/cuda/include/cuComplex.h"
oos = ((1.0) / s);
# 249 "/usr/local/cuda/include/cuComplex.h"
quot = make_cuDoubleComplex(((ars * brs) + (ais * bis)) * oos, ((ais * brs) - (ars * bis)) * oos);
# 251 "/usr/local/cuda/include/cuComplex.h"
return quot;
# 252 "/usr/local/cuda/include/cuComplex.h"
}
# 260 "/usr/local/cuda/include/cuComplex.h"
static inline double cuCabs(cuDoubleComplex x)
# 261 "/usr/local/cuda/include/cuComplex.h"
{
# 262 "/usr/local/cuda/include/cuComplex.h"
double a = cuCreal(x);
# 263 "/usr/local/cuda/include/cuComplex.h"
double b = cuCimag(x);
# 264 "/usr/local/cuda/include/cuComplex.h"
double v, w, t;
# 265 "/usr/local/cuda/include/cuComplex.h"
a = fabs(a);
# 266 "/usr/local/cuda/include/cuComplex.h"
b = fabs(b);
# 267 "/usr/local/cuda/include/cuComplex.h"
if (a > b) {
# 268 "/usr/local/cuda/include/cuComplex.h"
v = a;
# 269 "/usr/local/cuda/include/cuComplex.h"
w = b;
# 270 "/usr/local/cuda/include/cuComplex.h"
} else {
# 271 "/usr/local/cuda/include/cuComplex.h"
v = b;
# 272 "/usr/local/cuda/include/cuComplex.h"
w = a;
# 273 "/usr/local/cuda/include/cuComplex.h"
}
# 274 "/usr/local/cuda/include/cuComplex.h"
t = (w / v);
# 275 "/usr/local/cuda/include/cuComplex.h"
t = ((1.0) + (t * t));
# 276 "/usr/local/cuda/include/cuComplex.h"
t = (v * sqrt(t));
# 277 "/usr/local/cuda/include/cuComplex.h"
if (((v == (0.0)) || (v > (1.797693134862315708e+308))) || (w > (1.797693134862315708e+308)))
# 278 "/usr/local/cuda/include/cuComplex.h"
{
# 279 "/usr/local/cuda/include/cuComplex.h"
t = (v + w);
# 280 "/usr/local/cuda/include/cuComplex.h"
}
# 281 "/usr/local/cuda/include/cuComplex.h"
return t;
# 282 "/usr/local/cuda/include/cuComplex.h"
}
# 285 "/usr/local/cuda/include/cuComplex.h"
}
# 289 "/usr/local/cuda/include/cuComplex.h"
typedef cuFloatComplex cuComplex;
# 290 "/usr/local/cuda/include/cuComplex.h"
static inline cuComplex make_cuComplex(float x, float
# 291 "/usr/local/cuda/include/cuComplex.h"
y)
# 292 "/usr/local/cuda/include/cuComplex.h"
{
# 293 "/usr/local/cuda/include/cuComplex.h"
return make_cuFloatComplex(x, y);
# 294 "/usr/local/cuda/include/cuComplex.h"
}
# 297 "/usr/local/cuda/include/cuComplex.h"
static inline cuDoubleComplex cuComplexFloatToDouble(cuFloatComplex
# 298 "/usr/local/cuda/include/cuComplex.h"
c)
# 299 "/usr/local/cuda/include/cuComplex.h"
{
# 300 "/usr/local/cuda/include/cuComplex.h"
return make_cuDoubleComplex((double)cuCrealf(c), (double)cuCimagf(c));
# 301 "/usr/local/cuda/include/cuComplex.h"
}
# 303 "/usr/local/cuda/include/cuComplex.h"
static inline cuFloatComplex cuComplexDoubleToFloat(cuDoubleComplex
# 304 "/usr/local/cuda/include/cuComplex.h"
c)
# 305 "/usr/local/cuda/include/cuComplex.h"
{
# 306 "/usr/local/cuda/include/cuComplex.h"
return make_cuFloatComplex((float)cuCreal(c), (float)cuCimag(c));
# 307 "/usr/local/cuda/include/cuComplex.h"
}
# 310 "/usr/local/cuda/include/cuComplex.h"
static inline cuComplex cuCfmaf(cuComplex x, cuComplex y, cuComplex d)
# 311 "/usr/local/cuda/include/cuComplex.h"
{
# 312 "/usr/local/cuda/include/cuComplex.h"
float real_res;
# 313 "/usr/local/cuda/include/cuComplex.h"
float imag_res;
# 315 "/usr/local/cuda/include/cuComplex.h"
real_res = ((cuCrealf(x) * cuCrealf(y)) + cuCrealf(d));
# 316 "/usr/local/cuda/include/cuComplex.h"
imag_res = ((cuCrealf(x) * cuCimagf(y)) + cuCimagf(d));
# 318 "/usr/local/cuda/include/cuComplex.h"
real_res = ((-(cuCimagf(x) * cuCimagf(y))) + real_res);
# 319 "/usr/local/cuda/include/cuComplex.h"
imag_res = ((cuCimagf(x) * cuCrealf(y)) + imag_res);
# 321 "/usr/local/cuda/include/cuComplex.h"
return make_cuComplex(real_res, imag_res);
# 322 "/usr/local/cuda/include/cuComplex.h"
}
# 324 "/usr/local/cuda/include/cuComplex.h"
static inline cuDoubleComplex cuCfma(cuDoubleComplex x, cuDoubleComplex y, cuDoubleComplex d)
# 325 "/usr/local/cuda/include/cuComplex.h"
{
# 326 "/usr/local/cuda/include/cuComplex.h"
double real_res;
# 327 "/usr/local/cuda/include/cuComplex.h"
double imag_res;
# 329 "/usr/local/cuda/include/cuComplex.h"
real_res = ((cuCreal(x) * cuCreal(y)) + cuCreal(d));
# 330 "/usr/local/cuda/include/cuComplex.h"
imag_res = ((cuCreal(x) * cuCimag(y)) + cuCimag(d));
# 332 "/usr/local/cuda/include/cuComplex.h"
real_res = ((-(cuCimag(x) * cuCimag(y))) + real_res);
# 333 "/usr/local/cuda/include/cuComplex.h"
imag_res = ((cuCimag(x) * cuCreal(y)) + imag_res);
# 335 "/usr/local/cuda/include/cuComplex.h"
return make_cuDoubleComplex(real_res, imag_res);
# 336 "/usr/local/cuda/include/cuComplex.h"
}
# 74 "/usr/local/cuda/include/cufft.h"
extern "C" {
# 97 "/usr/local/cuda/include/cufft.h"
typedef
# 78 "/usr/local/cuda/include/cufft.h"
enum cufftResult_t {
# 79 "/usr/local/cuda/include/cufft.h"
CUFFT_SUCCESS,
# 80 "/usr/local/cuda/include/cufft.h"
CUFFT_INVALID_PLAN,
# 81 "/usr/local/cuda/include/cufft.h"
CUFFT_ALLOC_FAILED,
# 82 "/usr/local/cuda/include/cufft.h"
CUFFT_INVALID_TYPE,
# 83 "/usr/local/cuda/include/cufft.h"
CUFFT_INVALID_VALUE,
# 84 "/usr/local/cuda/include/cufft.h"
CUFFT_INTERNAL_ERROR,
# 85 "/usr/local/cuda/include/cufft.h"
CUFFT_EXEC_FAILED,
# 86 "/usr/local/cuda/include/cufft.h"
CUFFT_SETUP_FAILED,
# 87 "/usr/local/cuda/include/cufft.h"
CUFFT_INVALID_SIZE,
# 88 "/usr/local/cuda/include/cufft.h"
CUFFT_UNALIGNED_DATA,
# 89 "/usr/local/cuda/include/cufft.h"
CUFFT_INCOMPLETE_PARAMETER_LIST,
# 90 "/usr/local/cuda/include/cufft.h"
CUFFT_INVALID_DEVICE,
# 91 "/usr/local/cuda/include/cufft.h"
CUFFT_PARSE_ERROR,
# 92 "/usr/local/cuda/include/cufft.h"
CUFFT_NO_WORKSPACE,
# 93 "/usr/local/cuda/include/cufft.h"
CUFFT_NOT_IMPLEMENTED,
# 94 "/usr/local/cuda/include/cufft.h"
CUFFT_LICENSE_ERROR,
# 95 "/usr/local/cuda/include/cufft.h"
CUFFT_NOT_SUPPORTED
# 97 "/usr/local/cuda/include/cufft.h"
} cufftResult;
# 107 "/usr/local/cuda/include/cufft.h"
typedef float cufftReal;
# 108 "/usr/local/cuda/include/cufft.h"
typedef double cufftDoubleReal;
# 113 "/usr/local/cuda/include/cufft.h"
typedef cuComplex cufftComplex;
# 114 "/usr/local/cuda/include/cufft.h"
typedef cuDoubleComplex cufftDoubleComplex;
# 128 "/usr/local/cuda/include/cufft.h"
typedef
# 121 "/usr/local/cuda/include/cufft.h"
enum cufftType_t {
# 122 "/usr/local/cuda/include/cufft.h"
CUFFT_R2C = 42,
# 123 "/usr/local/cuda/include/cufft.h"
CUFFT_C2R = 44,
# 124 "/usr/local/cuda/include/cufft.h"
CUFFT_C2C = 41,
# 125 "/usr/local/cuda/include/cufft.h"
CUFFT_D2Z = 106,
# 126 "/usr/local/cuda/include/cufft.h"
CUFFT_Z2D = 108,
# 127 "/usr/local/cuda/include/cufft.h"
CUFFT_Z2Z = 105
# 128 "/usr/local/cuda/include/cufft.h"
} cufftType;
# 133 "/usr/local/cuda/include/cufft.h"
typedef
# 131 "/usr/local/cuda/include/cufft.h"
enum cufftCompatibility_t {
# 132 "/usr/local/cuda/include/cufft.h"
CUFFT_COMPATIBILITY_FFTW_PADDING = 1
# 133 "/usr/local/cuda/include/cufft.h"
} cufftCompatibility;
# 143 "/usr/local/cuda/include/cufft.h"
typedef int cufftHandle;
# 146 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftPlan1d(cufftHandle * plan, int nx, cufftType type, int batch);
# 151 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftPlan2d(cufftHandle * plan, int nx, int ny, cufftType type);
# 155 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftPlan3d(cufftHandle * plan, int nx, int ny, int nz, cufftType type);
# 159 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftPlanMany(cufftHandle * plan, int rank, int * n, int * inembed, int istride, int idist, int * onembed, int ostride, int odist, cufftType type, int batch);
# 167 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftMakePlan1d(cufftHandle plan, int nx, cufftType type, int batch, size_t * workSize);
# 173 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftMakePlan2d(cufftHandle plan, int nx, int ny, cufftType type, size_t * workSize);
# 178 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftMakePlan3d(cufftHandle plan, int nx, int ny, int nz, cufftType type, size_t * workSize);
# 183 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftMakePlanMany(cufftHandle plan, int rank, int * n, int * inembed, int istride, int idist, int * onembed, int ostride, int odist, cufftType type, int batch, size_t * workSize);
# 192 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftMakePlanMany64(cufftHandle plan, int rank, long long * n, long long * inembed, long long istride, long long idist, long long * onembed, long long ostride, long long odist, cufftType type, long long batch, size_t * workSize);
# 204 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftGetSizeMany64(cufftHandle plan, int rank, long long * n, long long * inembed, long long istride, long long idist, long long * onembed, long long ostride, long long odist, cufftType type, long long batch, size_t * workSize);
# 218 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftEstimate1d(int nx, cufftType type, int batch, size_t * workSize);
# 223 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftEstimate2d(int nx, int ny, cufftType type, size_t * workSize);
# 227 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftEstimate3d(int nx, int ny, int nz, cufftType type, size_t * workSize);
# 231 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftEstimateMany(int rank, int * n, int * inembed, int istride, int idist, int * onembed, int ostride, int odist, cufftType type, int batch, size_t * workSize);
# 239 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftCreate(cufftHandle * handle);
# 241 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftGetSize1d(cufftHandle handle, int nx, cufftType type, int batch, size_t * workSize);
# 247 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftGetSize2d(cufftHandle handle, int nx, int ny, cufftType type, size_t * workSize);
# 252 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftGetSize3d(cufftHandle handle, int nx, int ny, int nz, cufftType type, size_t * workSize);
# 257 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftGetSizeMany(cufftHandle handle, int rank, int * n, int * inembed, int istride, int idist, int * onembed, int ostride, int odist, cufftType type, int batch, size_t * workArea);
# 263 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftGetSize(cufftHandle handle, size_t * workSize);
# 265 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftSetWorkArea(cufftHandle plan, void * workArea);
# 267 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftSetAutoAllocation(cufftHandle plan, int autoAllocate);
# 269 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftExecC2C(cufftHandle plan, cufftComplex * idata, cufftComplex * odata, int direction);
# 274 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftExecR2C(cufftHandle plan, cufftReal * idata, cufftComplex * odata);
# 278 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftExecC2R(cufftHandle plan, cufftComplex * idata, cufftReal * odata);
# 282 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftExecZ2Z(cufftHandle plan, cufftDoubleComplex * idata, cufftDoubleComplex * odata, int direction);
# 287 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftExecD2Z(cufftHandle plan, cufftDoubleReal * idata, cufftDoubleComplex * odata);
# 291 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftExecZ2D(cufftHandle plan, cufftDoubleComplex * idata, cufftDoubleReal * odata);
# 297 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftSetStream(cufftHandle plan, cudaStream_t stream);
# 300 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftSetCompatibilityMode(cufftHandle plan, cufftCompatibility mode);
# 303 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftDestroy(cufftHandle plan);
# 305 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftGetVersion(int * version);
# 307 "/usr/local/cuda/include/cufft.h"
__attribute((visibility("default"))) cufftResult cufftGetProperty(libraryPropertyType type, int * value);
# 311 "/usr/local/cuda/include/cufft.h"
}
# 96 "/usr/local/cuda/include/cuda_fp16.h"
typedef
# 94 "/usr/local/cuda/include/cuda_fp16.h"
struct __attribute((aligned(2))) {
# 95 "/usr/local/cuda/include/cuda_fp16.h"
unsigned short x;
# 96 "/usr/local/cuda/include/cuda_fp16.h"
} __half;
# 100 "/usr/local/cuda/include/cuda_fp16.h"
typedef
# 98 "/usr/local/cuda/include/cuda_fp16.h"
struct __attribute((aligned(4))) {
# 99 "/usr/local/cuda/include/cuda_fp16.h"
unsigned x;
# 100 "/usr/local/cuda/include/cuda_fp16.h"
} __half2;
# 103 "/usr/local/cuda/include/cuda_fp16.h"
typedef __half half;
# 104 "/usr/local/cuda/include/cuda_fp16.h"
typedef __half2 half2;
# 128 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __float2half(const float a);
# 138 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __float2half_rz(const float a);
# 148 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __float2half_rd(const float a);
# 158 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __float2half_ru(const float a);
# 167 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline float __half2float(const __half a);
# 178 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline int __half2int_rn(__half h);
# 188 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline int __half2int_rz(__half h);
# 198 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline int __half2int_rd(__half h);
# 208 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline int __half2int_ru(__half h);
# 219 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __int2half_rn(int i);
# 229 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __int2half_rz(int i);
# 239 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __int2half_rd(int i);
# 249 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __int2half_ru(int i);
# 261 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline short __half2short_rn(__half h);
# 271 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline short __half2short_rz(__half h);
# 281 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline short __half2short_rd(__half h);
# 291 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline short __half2short_ru(__half h);
# 303 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __short2half_rn(short i);
# 313 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __short2half_rz(short i);
# 323 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __short2half_rd(short i);
# 333 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __short2half_ru(short i);
# 344 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned __half2uint_rn(__half h);
# 354 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned __half2uint_rz(__half h);
# 364 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned __half2uint_rd(__half h);
# 374 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned __half2uint_ru(__half h);
# 385 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __uint2half_rn(unsigned i);
# 395 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __uint2half_rz(unsigned i);
# 405 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __uint2half_rd(unsigned i);
# 415 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __uint2half_ru(unsigned i);
# 427 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned short __half2ushort_rn(__half h);
# 438 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned short __half2ushort_rz(__half h);
# 448 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned short __half2ushort_rd(__half h);
# 458 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned short __half2ushort_ru(__half h);
# 470 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ushort2half_rn(unsigned short i);
# 481 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ushort2half_rz(unsigned short i);
# 491 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ushort2half_rd(unsigned short i);
# 501 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ushort2half_ru(unsigned short i);
# 513 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned long long __half2ull_rn(__half h);
# 524 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned long long __half2ull_rz(__half h);
# 534 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned long long __half2ull_rd(__half h);
# 544 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned long long __half2ull_ru(__half h);
# 556 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ull2half_rn(unsigned long long i);
# 567 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ull2half_rz(unsigned long long i);
# 577 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ull2half_rd(unsigned long long i);
# 587 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ull2half_ru(unsigned long long i);
# 599 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline long long __half2ll_rn(__half h);
# 609 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline long long __half2ll_rz(__half h);
# 619 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline long long __half2ll_rd(__half h);
# 629 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline long long __half2ll_ru(__half h);
# 641 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ll2half_rn(long long i);
# 651 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ll2half_rz(long long i);
# 661 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ll2half_rd(long long i);
# 671 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ll2half_ru(long long i);
# 682 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half htrunc(const __half h);
# 691 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hceil(const __half h);
# 700 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hfloor(const __half h);
# 712 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hrint(const __half h);
# 723 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2trunc(const __half2 h);
# 734 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2ceil(const __half2 h);
# 745 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2floor(const __half2 h);
# 758 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2rint(const __half2 h);
# 771 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __float2half2_rn(const float a);
# 785 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __floats2half2_rn(const float a, const float b);
# 799 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __float22half2_rn(const float2 a);
# 809 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline float2 __half22float2(const __half2 a);
# 819 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline float __low2float(const __half2 a);
# 829 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __half2half2(const __half a);
# 839 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline float __high2float(const __half2 a);
# 849 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __lowhigh2highlow(const __half2 a);
# 862 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __lows2half2(const __half2 a, const __half2 b);
# 875 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __highs2half2(const __half2 a, const __half2 b);
# 884 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __high2half(const __half2 a);
# 893 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __low2half(const __half2 a);
# 903 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline int __hisinf(const __half a);
# 915 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __halves2half2(const __half a, const __half b);
# 926 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __low2half2(const __half2 a);
# 937 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __high2half2(const __half2 a);
# 948 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline short __half_as_short(const __half h);
# 958 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned short __half_as_ushort(const __half h);
# 968 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __short_as_half(const short i);
# 978 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ushort_as_half(const unsigned short i);
# 985 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __shfl(__half2 var, int delta, int width = 32);
# 986 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __shfl_up(__half2 var, unsigned delta, int width = 32);
# 987 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __shfl_down(__half2 var, unsigned delta, int width = 32);
# 988 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __shfl_xor(__half2 var, int delta, int width = 32);
# 989 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __shfl(__half var, int delta, int width = 32);
# 990 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __shfl_up(__half var, unsigned delta, int width = 32);
# 991 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __shfl_down(__half var, unsigned delta, int width = 32);
# 992 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __shfl_xor(__half var, int delta, int width = 32);
# 1000 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __ldg(const __half2 * ptr);
# 1001 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ldg(const __half * ptr);
# 1002 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __ldcg(const __half2 * ptr);
# 1003 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ldcg(const __half * ptr);
# 1004 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __ldca(const __half2 * ptr);
# 1005 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ldca(const __half * ptr);
# 1006 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __ldcs(const __half2 * ptr);
# 1007 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ldcs(const __half * ptr);
# 1022 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __heq2(const __half2 a, const __half2 b);
# 1034 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hne2(const __half2 a, const __half2 b);
# 1046 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hle2(const __half2 a, const __half2 b);
# 1058 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hge2(const __half2 a, const __half2 b);
# 1070 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hlt2(const __half2 a, const __half2 b);
# 1082 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hgt2(const __half2 a, const __half2 b);
# 1094 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hequ2(const __half2 a, const __half2 b);
# 1106 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hneu2(const __half2 a, const __half2 b);
# 1118 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hleu2(const __half2 a, const __half2 b);
# 1130 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hgeu2(const __half2 a, const __half2 b);
# 1142 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hltu2(const __half2 a, const __half2 b);
# 1154 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hgtu2(const __half2 a, const __half2 b);
# 1164 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hisnan2(const __half2 a);
# 1174 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hadd2(const __half2 a, const __half2 b);
# 1185 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hsub2(const __half2 a, const __half2 b);
# 1196 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hmul2(const __half2 a, const __half2 b);
# 1206 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2div(const __half2 a, const __half2 b);
# 1219 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hadd2_sat(const __half2 a, const __half2 b);
# 1232 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hsub2_sat(const __half2 a, const __half2 b);
# 1245 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hmul2_sat(const __half2 a, const __half2 b);
# 1258 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hfma2(const __half2 a, const __half2 b, const __half2 c);
# 1272 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hfma2_sat(const __half2 a, const __half2 b, const __half2 c);
# 1282 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hneg2(const __half2 a);
# 1292 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hadd(const __half a, const __half b);
# 1302 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hsub(const __half a, const __half b);
# 1312 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hmul(const __half a, const __half b);
# 1322 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hdiv(const __half a, const __half b);
# 1333 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hadd_sat(const __half a, const __half b);
# 1346 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hsub_sat(const __half a, const __half b);
# 1359 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hmul_sat(const __half a, const __half b);
# 1371 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hfma(const __half a, const __half b, const __half c);
# 1385 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hfma_sat(const __half a, const __half b, const __half c);
# 1394 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hneg(const __half a);
# 1408 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbeq2(const __half2 a, const __half2 b);
# 1422 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbne2(const __half2 a, const __half2 b);
# 1436 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hble2(const __half2 a, const __half2 b);
# 1450 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbge2(const __half2 a, const __half2 b);
# 1464 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hblt2(const __half2 a, const __half2 b);
# 1478 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbgt2(const __half2 a, const __half2 b);
# 1492 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbequ2(const __half2 a, const __half2 b);
# 1506 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbneu2(const __half2 a, const __half2 b);
# 1520 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbleu2(const __half2 a, const __half2 b);
# 1536 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbgeu2(const __half2 a, const __half2 b);
# 1550 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbltu2(const __half2 a, const __half2 b);
# 1566 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbgtu2(const __half2 a, const __half2 b);
# 1576 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __heq(const __half a, const __half b);
# 1586 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hne(const __half a, const __half b);
# 1596 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hle(const __half a, const __half b);
# 1606 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hge(const __half a, const __half b);
# 1616 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hlt(const __half a, const __half b);
# 1626 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hgt(const __half a, const __half b);
# 1637 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hequ(const __half a, const __half b);
# 1648 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hneu(const __half a, const __half b);
# 1659 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hleu(const __half a, const __half b);
# 1670 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hgeu(const __half a, const __half b);
# 1681 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hltu(const __half a, const __half b);
# 1692 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hgtu(const __half a, const __half b);
# 1701 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hisnan(const __half a);
# 1710 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hsqrt(const __half a);
# 1721 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hrsqrt(const __half a);
# 1730 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hrcp(const __half a);
# 1740 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hlog(const __half a);
# 1750 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hlog2(const __half a);
# 1760 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hlog10(const __half a);
# 1771 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hexp(const __half a);
# 1782 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hexp2(const __half a);
# 1793 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hexp10(const __half a);
# 1802 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hcos(const __half a);
# 1811 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hsin(const __half a);
# 1821 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2sqrt(const __half2 a);
# 1832 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2rsqrt(const __half2 a);
# 1842 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2rcp(const __half2 a);
# 1853 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2log(const __half2 a);
# 1864 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2log2(const __half2 a);
# 1875 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2log10(const __half2 a);
# 1886 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2exp(const __half2 a);
# 1897 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2exp2(const __half2 a);
# 1908 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2exp10(const __half2 a);
# 1918 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2cos(const __half2 a);
# 1927 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2sin(const __half2 a);
# 1931 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline int __half2int_rn(__half h)
# 1932 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 1936 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 1937 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline int __half2int_rz(__half h)
# 1938 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 1942 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 1943 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline int __half2int_rd(__half h)
# 1944 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 1948 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 1949 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline int __half2int_ru(__half h)
# 1950 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 1954 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 1955 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __int2half_rn(int i)
# 1956 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 1960 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 1961 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __int2half_rz(int i)
# 1962 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 1966 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 1967 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __int2half_rd(int i)
# 1968 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 1972 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 1973 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __int2half_ru(int i)
# 1974 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 1978 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 1980 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline short __half2short_rn(__half h)
# 1981 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 1985 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 1986 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline short __half2short_rz(__half h)
# 1987 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 1991 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 1992 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline short __half2short_rd(__half h)
# 1993 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 1997 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 1998 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline short __half2short_ru(__half h)
# 1999 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2003 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2004 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __short2half_rn(short i)
# 2005 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2009 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2010 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __short2half_rz(short i)
# 2011 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2015 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2016 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __short2half_rd(short i)
# 2017 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2021 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2022 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __short2half_ru(short i)
# 2023 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2027 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2029 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned __half2uint_rn(__half h)
# 2030 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2034 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2035 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned __half2uint_rz(__half h)
# 2036 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2040 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2041 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned __half2uint_rd(__half h)
# 2042 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2046 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2047 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned __half2uint_ru(__half h)
# 2048 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2052 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2053 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __uint2half_rn(unsigned i)
# 2054 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2058 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2059 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __uint2half_rz(unsigned i)
# 2060 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2064 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2065 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __uint2half_rd(unsigned i)
# 2066 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2070 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2071 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __uint2half_ru(unsigned i)
# 2072 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2076 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2078 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned short __half2ushort_rn(__half h)
# 2079 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2083 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2084 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned short __half2ushort_rz(__half h)
# 2085 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2089 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2090 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned short __half2ushort_rd(__half h)
# 2091 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2095 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2096 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned short __half2ushort_ru(__half h)
# 2097 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2101 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2102 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ushort2half_rn(unsigned short i)
# 2103 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2107 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2108 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ushort2half_rz(unsigned short i)
# 2109 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2113 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2114 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ushort2half_rd(unsigned short i)
# 2115 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2119 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2120 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ushort2half_ru(unsigned short i)
# 2121 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2125 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2127 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned long long __half2ull_rn(__half h)
# 2128 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2132 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2133 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned long long __half2ull_rz(__half h)
# 2134 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2138 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2139 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned long long __half2ull_rd(__half h)
# 2140 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2144 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2145 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned long long __half2ull_ru(__half h)
# 2146 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2150 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2151 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ull2half_rn(unsigned long long i)
# 2152 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2156 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2157 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ull2half_rz(unsigned long long i)
# 2158 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2162 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2163 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ull2half_rd(unsigned long long i)
# 2164 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2168 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2169 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ull2half_ru(unsigned long long i)
# 2170 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2174 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2176 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline long long __half2ll_rn(__half h)
# 2177 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2181 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2182 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline long long __half2ll_rz(__half h)
# 2183 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2187 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2188 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline long long __half2ll_rd(__half h)
# 2189 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2193 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2194 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline long long __half2ll_ru(__half h)
# 2195 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2199 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2200 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ll2half_rn(long long i)
# 2201 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2205 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2206 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ll2half_rz(long long i)
# 2207 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2211 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2212 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ll2half_rd(long long i)
# 2213 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2217 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2218 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ll2half_ru(long long i)
# 2219 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2223 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2225 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half htrunc(const __half h)
# 2226 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2230 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2231 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hceil(const __half h)
# 2232 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2236 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2237 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hfloor(const __half h)
# 2238 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2242 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2243 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hrint(const __half h)
# 2244 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2248 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2250 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2trunc(const __half2 h)
# 2251 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2259 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2260 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2ceil(const __half2 h)
# 2261 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2269 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2270 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2floor(const __half2 h)
# 2271 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2279 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2280 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2rint(const __half2 h)
# 2281 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2289 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2291 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline float2 __half22float2(const __half2 l)
# 2292 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)l;
# 2304 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2305 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __float2half(const float f)
# 2306 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)f;
# 2310 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2311 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __float2half_rz(const float f)
# 2312 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)f;
# 2316 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2317 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __float2half_rd(const float f)
# 2318 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)f;
# 2322 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2323 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __float2half_ru(const float f)
# 2324 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)f;
# 2328 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2329 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline float __half2float(const __half h)
# 2330 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2334 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2335 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __float2half2_rn(const float f)
# 2336 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)f;
# 2342 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2343 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __floats2half2_rn(const float f1, const float f2)
# 2344 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)f1;(void)f2;
# 2351 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2352 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __float22half2_rn(const float2 f)
# 2353 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)f;
# 2356 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2357 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline float __low2float(const __half2 l)
# 2358 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)l;
# 2364 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2365 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline float __high2float(const __half2 l)
# 2366 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)l;
# 2372 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2373 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __lows2half2(const __half2 l, const __half2 h)
# 2374 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)l;(void)h;
# 2381 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2382 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __highs2half2(const __half2 l, const __half2 h)
# 2383 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)l;(void)h;
# 2390 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2391 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __low2half(const __half2 h)
# 2392 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2398 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2399 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline int __hisinf(const __half a)
# 2400 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;
# 2406 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2407 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __low2half2(const __half2 l)
# 2408 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)l;
# 2414 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2415 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __high2half2(const __half2 l)
# 2416 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)l;
# 2422 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2423 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __high2half(const __half2 h)
# 2424 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2430 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2431 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __halves2half2(const __half l, const __half h)
# 2432 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)l;(void)h;
# 2437 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2438 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __half2half2(const __half lh)
# 2439 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)lh;
# 2444 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2445 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __lowhigh2highlow(const __half2 lh)
# 2446 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)lh;
# 2452 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2453 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline short __half_as_short(const __half h)
# 2454 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2456 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2457 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned short __half_as_ushort(const __half h)
# 2458 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)h;
# 2460 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2461 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __short_as_half(const short i)
# 2462 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2466 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2467 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ushort_as_half(const unsigned short i)
# 2468 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)i;
# 2472 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2484 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __shfl(__half2 var, int delta, int width)
# 2485 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 2490 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2491 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __shfl_up(__half2 var, unsigned delta, int width)
# 2492 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 2497 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2498 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __shfl_down(__half2 var, unsigned delta, int width)
# 2499 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 2504 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2505 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __shfl_xor(__half2 var, int delta, int width)
# 2506 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 2511 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2513 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __shfl(__half var, int delta, int width)
# 2514 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 2518 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2519 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __shfl_up(__half var, unsigned delta, int width)
# 2520 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 2524 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2525 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __shfl_down(__half var, unsigned delta, int width)
# 2526 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 2530 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2531 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __shfl_xor(__half var, int delta, int width)
# 2532 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 2536 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2548 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __ldg(const __half2 *ptr)
# 2549 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)ptr;
# 2553 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2554 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ldg(const __half *ptr)
# 2555 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)ptr;
# 2559 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2560 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __ldcg(const __half2 *ptr)
# 2561 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)ptr;
# 2565 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2566 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ldcg(const __half *ptr)
# 2567 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)ptr;
# 2571 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2572 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __ldca(const __half2 *ptr)
# 2573 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)ptr;
# 2577 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2578 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ldca(const __half *ptr)
# 2579 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)ptr;
# 2583 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2584 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __ldcs(const __half2 *ptr)
# 2585 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)ptr;
# 2589 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2590 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ldcs(const __half *ptr)
# 2591 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)ptr;
# 2595 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2608 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __heq2(const __half2 a, const __half2 b)
# 2609 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2611 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2612 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hne2(const __half2 a, const __half2 b)
# 2613 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2615 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2616 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hle2(const __half2 a, const __half2 b)
# 2617 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2619 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2620 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hge2(const __half2 a, const __half2 b)
# 2621 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2623 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2624 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hlt2(const __half2 a, const __half2 b)
# 2625 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2627 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2628 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hgt2(const __half2 a, const __half2 b)
# 2629 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2631 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2632 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hequ2(const __half2 a, const __half2 b)
# 2633 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2635 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2636 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hneu2(const __half2 a, const __half2 b)
# 2637 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2639 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2640 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hleu2(const __half2 a, const __half2 b)
# 2641 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2643 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2644 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hgeu2(const __half2 a, const __half2 b)
# 2645 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2647 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2648 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hltu2(const __half2 a, const __half2 b)
# 2649 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2651 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2652 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hgtu2(const __half2 a, const __half2 b)
# 2653 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2655 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2666 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbeq2(const __half2 a, const __half2 b)
# 2667 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2669 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2670 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbne2(const __half2 a, const __half2 b)
# 2671 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2673 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2674 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hble2(const __half2 a, const __half2 b)
# 2675 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2677 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2678 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbge2(const __half2 a, const __half2 b)
# 2679 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2681 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2682 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hblt2(const __half2 a, const __half2 b)
# 2683 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2685 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2686 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbgt2(const __half2 a, const __half2 b)
# 2687 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2689 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2690 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbequ2(const __half2 a, const __half2 b)
# 2691 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2693 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2694 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbneu2(const __half2 a, const __half2 b)
# 2695 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2697 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2698 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbleu2(const __half2 a, const __half2 b)
# 2699 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2701 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2702 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbgeu2(const __half2 a, const __half2 b)
# 2703 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2705 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2706 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbltu2(const __half2 a, const __half2 b)
# 2707 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2709 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2710 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbgtu2(const __half2 a, const __half2 b)
# 2711 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2713 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2726 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __heq(const __half a, const __half b)
# 2727 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2729 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2730 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hne(const __half a, const __half b)
# 2731 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2733 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2734 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hle(const __half a, const __half b)
# 2735 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2737 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2738 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hge(const __half a, const __half b)
# 2739 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2741 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2742 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hlt(const __half a, const __half b)
# 2743 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2745 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2746 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hgt(const __half a, const __half b)
# 2747 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2749 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2750 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hequ(const __half a, const __half b)
# 2751 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2753 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2754 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hneu(const __half a, const __half b)
# 2755 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2757 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2758 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hleu(const __half a, const __half b)
# 2759 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2761 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2762 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hgeu(const __half a, const __half b)
# 2763 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2765 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2766 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hltu(const __half a, const __half b)
# 2767 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2769 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2770 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hgtu(const __half a, const __half b)
# 2771 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2773 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2784 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hadd2(const __half2 a, const __half2 b)
# 2785 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2787 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2788 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hsub2(const __half2 a, const __half2 b)
# 2789 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2791 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2792 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hmul2(const __half2 a, const __half2 b)
# 2793 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2795 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2796 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hadd2_sat(const __half2 a, const __half2 b)
# 2797 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2799 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2800 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hsub2_sat(const __half2 a, const __half2 b)
# 2801 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2803 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2804 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hmul2_sat(const __half2 a, const __half2 b)
# 2805 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2807 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2815 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hfma2(const __half2 a, const __half2 b, const __half2 c)
# 2816 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;(void)c;
# 2818 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2819 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hfma2_sat(const __half2 a, const __half2 b, const __half2 c)
# 2820 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;(void)c;
# 2822 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2824 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2div(__half2 a, __half2 b) {int volatile ___ = 1;(void)a;(void)b;
# 2838 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2848 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hadd(const __half a, const __half b)
# 2849 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2851 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2852 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hsub(const __half a, const __half b)
# 2853 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2855 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2856 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hmul(const __half a, const __half b)
# 2857 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2859 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2860 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hadd_sat(const __half a, const __half b)
# 2861 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2863 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2864 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hsub_sat(const __half a, const __half b)
# 2865 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2867 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2868 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hmul_sat(const __half a, const __half b)
# 2869 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;
# 2871 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2879 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hfma(const __half a, const __half b, const __half c)
# 2880 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;(void)c;
# 2882 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2883 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hfma_sat(const __half a, const __half b, const __half c)
# 2884 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)b;(void)c;
# 2886 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2888 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hdiv(__half a, __half b) {int volatile ___ = 1;(void)a;(void)b;
# 2908 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2952 "/usr/local/cuda/include/cuda_fp16.h"
__attribute((always_inline)) __attribute__((unused)) static inline float __float_simpl_sinf(float);
# 2953 "/usr/local/cuda/include/cuda_fp16.h"
__attribute((always_inline)) __attribute__((unused)) static inline float __float_simpl_cosf(float);
# 2954 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hsin_internal(const __half a) {int volatile ___ = 1;(void)a;
# 2960 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2961 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hsin(const __half a) {int volatile ___ = 1;(void)a;
# 2977 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2978 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2sin(const __half2 a) {int volatile ___ = 1;(void)a;
# 2995 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 2996 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hcos_internal(const __half a) {int volatile ___ = 1;(void)a;
# 3002 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3003 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hcos(const __half a) {int volatile ___ = 1;(void)a;
# 3014 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3015 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2cos(const __half2 a) {int volatile ___ = 1;(void)a;
# 3028 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3029 "/usr/local/cuda/include/cuda_fp16.h"
__attribute((always_inline)) __attribute__((unused)) static inline float __internal_trig_reduction_kernel(float a, int *quadrant)
# 3030 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;(void)quadrant;
# 3039 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3040 "/usr/local/cuda/include/cuda_fp16.h"
__attribute((always_inline)) __attribute__((unused)) static inline float __internal_sin_cos_kernel(float x, int i)
# 3041 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)x;(void)i;
# 3063 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3064 "/usr/local/cuda/include/cuda_fp16.h"
__attribute((always_inline)) __attribute__((unused)) static inline float __float_simpl_sinf(float a)
# 3065 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;
# 3074 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3075 "/usr/local/cuda/include/cuda_fp16.h"
__attribute((always_inline)) __attribute__((unused)) static inline float __float_simpl_cosf(float a)
# 3076 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;
# 3086 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3087 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hexp(const __half a) {int volatile ___ = 1;(void)a;
# 3104 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3105 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2exp(const __half2 a) {int volatile ___ = 1;(void)a;
# 3128 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3129 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hexp2(const __half a) {int volatile ___ = 1;(void)a;
# 3142 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3143 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2exp2(const __half2 a) {int volatile ___ = 1;(void)a;
# 3160 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3161 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hexp10(const __half a) {int volatile ___ = 1;(void)a;
# 3179 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3180 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2exp10(const __half2 a) {int volatile ___ = 1;(void)a;
# 3204 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3205 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hlog2(const __half a) {int volatile ___ = 1;(void)a;
# 3218 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3219 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2log2(const __half2 a) {int volatile ___ = 1;(void)a;
# 3236 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3237 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hlog(const __half a) {int volatile ___ = 1;(void)a;
# 3254 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3255 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2log(const __half2 a) {int volatile ___ = 1;(void)a;
# 3278 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3279 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hlog10(const __half a) {int volatile ___ = 1;(void)a;
# 3296 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3297 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2log10(const __half2 a) {int volatile ___ = 1;(void)a;
# 3320 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3323 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2rcp(const __half2 a) {int volatile ___ = 1;(void)a;
# 3325 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3326 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hrcp(const __half a) {int volatile ___ = 1;(void)a;
# 3328 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3329 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2rsqrt(const __half2 a) {int volatile ___ = 1;(void)a;
# 3331 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3332 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hrsqrt(const __half a) {int volatile ___ = 1;(void)a;
# 3334 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3335 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2sqrt(const __half2 a) {int volatile ___ = 1;(void)a;
# 3337 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3338 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half hsqrt(const __half a) {int volatile ___ = 1;(void)a;
# 3340 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3343 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hisnan2(const __half2 a)
# 3344 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;
# 3349 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3350 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hisnan(const __half a)
# 3351 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;
# 3358 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3359 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hneg2(const __half2 a)
# 3360 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;
# 3363 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 3364 "/usr/local/cuda/include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hneg(const __half a)
# 3365 "/usr/local/cuda/include/cuda_fp16.h"
{int volatile ___ = 1;(void)a;
# 3369 "/usr/local/cuda/include/cuda_fp16.h"
::exit(___);}
# 78 "/usr/local/cuda/include/cublas_api.h"
extern "C" {
# 93 "/usr/local/cuda/include/cublas_api.h"
typedef
# 82 "/usr/local/cuda/include/cublas_api.h"
enum {
# 83 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_STATUS_SUCCESS,
# 84 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_STATUS_NOT_INITIALIZED,
# 85 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_STATUS_ALLOC_FAILED = 3,
# 86 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_STATUS_INVALID_VALUE = 7,
# 87 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_STATUS_ARCH_MISMATCH,
# 88 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_STATUS_MAPPING_ERROR = 11,
# 89 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_STATUS_EXECUTION_FAILED = 13,
# 90 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_STATUS_INTERNAL_ERROR,
# 91 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_STATUS_NOT_SUPPORTED,
# 92 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_STATUS_LICENSE_ERROR
# 93 "/usr/local/cuda/include/cublas_api.h"
} cublasStatus_t;
# 99 "/usr/local/cuda/include/cublas_api.h"
typedef
# 96 "/usr/local/cuda/include/cublas_api.h"
enum {
# 97 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_FILL_MODE_LOWER,
# 98 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_FILL_MODE_UPPER
# 99 "/usr/local/cuda/include/cublas_api.h"
} cublasFillMode_t;
# 104 "/usr/local/cuda/include/cublas_api.h"
typedef
# 101 "/usr/local/cuda/include/cublas_api.h"
enum {
# 102 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_DIAG_NON_UNIT,
# 103 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_DIAG_UNIT
# 104 "/usr/local/cuda/include/cublas_api.h"
} cublasDiagType_t;
# 109 "/usr/local/cuda/include/cublas_api.h"
typedef
# 106 "/usr/local/cuda/include/cublas_api.h"
enum {
# 107 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_SIDE_LEFT,
# 108 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_SIDE_RIGHT
# 109 "/usr/local/cuda/include/cublas_api.h"
} cublasSideMode_t;
# 116 "/usr/local/cuda/include/cublas_api.h"
typedef
# 112 "/usr/local/cuda/include/cublas_api.h"
enum {
# 113 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_OP_N,
# 114 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_OP_T,
# 115 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_OP_C
# 116 "/usr/local/cuda/include/cublas_api.h"
} cublasOperation_t;
# 122 "/usr/local/cuda/include/cublas_api.h"
typedef
# 119 "/usr/local/cuda/include/cublas_api.h"
enum {
# 120 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_POINTER_MODE_HOST,
# 121 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_POINTER_MODE_DEVICE
# 122 "/usr/local/cuda/include/cublas_api.h"
} cublasPointerMode_t;
# 127 "/usr/local/cuda/include/cublas_api.h"
typedef
# 124 "/usr/local/cuda/include/cublas_api.h"
enum {
# 125 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_ATOMICS_NOT_ALLOWED,
# 126 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_ATOMICS_ALLOWED
# 127 "/usr/local/cuda/include/cublas_api.h"
} cublasAtomicsMode_t;
# 140 "/usr/local/cuda/include/cublas_api.h"
typedef
# 130 "/usr/local/cuda/include/cublas_api.h"
enum {
# 131 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_GEMM_DFALT = (-1),
# 132 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_GEMM_ALGO0 = 0,
# 133 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_GEMM_ALGO1,
# 134 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_GEMM_ALGO2,
# 135 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_GEMM_ALGO3,
# 136 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_GEMM_ALGO4,
# 137 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_GEMM_ALGO5,
# 138 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_GEMM_ALGO6,
# 139 "/usr/local/cuda/include/cublas_api.h"
CUBLAS_GEMM_ALGO7
# 140 "/usr/local/cuda/include/cublas_api.h"
} cublasGemmAlgo_t;
# 143 "/usr/local/cuda/include/cublas_api.h"
typedef cudaDataType cublasDataType_t;
# 146 "/usr/local/cuda/include/cublas_api.h"
struct cublasContext;
# 147 "/usr/local/cuda/include/cublas_api.h"
typedef cublasContext *cublasHandle_t;
# 149 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCreate_v2(cublasHandle_t * handle);
# 150 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDestroy_v2(cublasHandle_t handle);
# 152 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasGetVersion_v2(cublasHandle_t handle, int * version);
# 153 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasGetProperty(libraryPropertyType type, int * value);
# 155 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSetStream_v2(cublasHandle_t handle, cudaStream_t streamId);
# 156 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasGetStream_v2(cublasHandle_t handle, cudaStream_t * streamId);
# 158 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasGetPointerMode_v2(cublasHandle_t handle, cublasPointerMode_t * mode);
# 159 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSetPointerMode_v2(cublasHandle_t handle, cublasPointerMode_t mode);
# 161 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasGetAtomicsMode(cublasHandle_t handle, cublasAtomicsMode_t * mode);
# 162 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSetAtomicsMode(cublasHandle_t handle, cublasAtomicsMode_t mode);
# 187 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSetVector(int n, int elemSize, const void * x, int incx, void * devicePtr, int incy);
# 213 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasGetVector(int n, int elemSize, const void * x, int incx, void * y, int incy);
# 237 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSetMatrix(int rows, int cols, int elemSize, const void * A, int lda, void * B, int ldb);
# 261 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasGetMatrix(int rows, int cols, int elemSize, const void * A, int lda, void * B, int ldb);
# 281 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSetVectorAsync(int n, int elemSize, const void * hostPtr, int incx, void * devicePtr, int incy, cudaStream_t stream);
# 301 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasGetVectorAsync(int n, int elemSize, const void * devicePtr, int incx, void * hostPtr, int incy, cudaStream_t stream);
# 323 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSetMatrixAsync(int rows, int cols, int elemSize, const void * A, int lda, void * B, int ldb, cudaStream_t stream);
# 343 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasGetMatrixAsync(int rows, int cols, int elemSize, const void * A, int lda, void * B, int ldb, cudaStream_t stream);
# 348 "/usr/local/cuda/include/cublas_api.h"
void cublasXerbla(const char * srName, int info);
# 350 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasNrm2Ex(cublasHandle_t handle, int n, const void * x, cudaDataType xType, int incx, void * result, cudaDataType resultType, cudaDataType executionType);
# 358 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSnrm2_v2(cublasHandle_t handle, int n, const float * x, int incx, float * result);
# 364 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDnrm2_v2(cublasHandle_t handle, int n, const double * x, int incx, double * result);
# 370 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasScnrm2_v2(cublasHandle_t handle, int n, const cuComplex * x, int incx, float * result);
# 376 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDznrm2_v2(cublasHandle_t handle, int n, const cuDoubleComplex * x, int incx, double * result);
# 382 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDotEx(cublasHandle_t handle, int n, const void * x, cudaDataType xType, int incx, const void * y, cudaDataType yType, int incy, void * result, cudaDataType resultType, cudaDataType executionType);
# 394 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDotcEx(cublasHandle_t handle, int n, const void * x, cudaDataType xType, int incx, const void * y, cudaDataType yType, int incy, void * result, cudaDataType resultType, cudaDataType executionType);
# 406 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSdot_v2(cublasHandle_t handle, int n, const float * x, int incx, const float * y, int incy, float * result);
# 414 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDdot_v2(cublasHandle_t handle, int n, const double * x, int incx, const double * y, int incy, double * result);
# 422 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCdotu_v2(cublasHandle_t handle, int n, const cuComplex * x, int incx, const cuComplex * y, int incy, cuComplex * result);
# 430 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCdotc_v2(cublasHandle_t handle, int n, const cuComplex * x, int incx, const cuComplex * y, int incy, cuComplex * result);
# 438 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZdotu_v2(cublasHandle_t handle, int n, const cuDoubleComplex * x, int incx, const cuDoubleComplex * y, int incy, cuDoubleComplex * result);
# 446 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZdotc_v2(cublasHandle_t handle, int n, const cuDoubleComplex * x, int incx, const cuDoubleComplex * y, int incy, cuDoubleComplex * result);
# 454 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasScalEx(cublasHandle_t handle, int n, const void * alpha, cudaDataType alphaType, void * x, cudaDataType xType, int incx, cudaDataType executionType);
# 462 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSscal_v2(cublasHandle_t handle, int n, const float * alpha, float * x, int incx);
# 468 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDscal_v2(cublasHandle_t handle, int n, const double * alpha, double * x, int incx);
# 474 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCscal_v2(cublasHandle_t handle, int n, const cuComplex * alpha, cuComplex * x, int incx);
# 480 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCsscal_v2(cublasHandle_t handle, int n, const float * alpha, cuComplex * x, int incx);
# 486 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZscal_v2(cublasHandle_t handle, int n, const cuDoubleComplex * alpha, cuDoubleComplex * x, int incx);
# 492 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZdscal_v2(cublasHandle_t handle, int n, const double * alpha, cuDoubleComplex * x, int incx);
# 498 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasAxpyEx(cublasHandle_t handle, int n, const void * alpha, cudaDataType alphaType, const void * x, cudaDataType xType, int incx, void * y, cudaDataType yType, int incy, cudaDataType executiontype);
# 510 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSaxpy_v2(cublasHandle_t handle, int n, const float * alpha, const float * x, int incx, float * y, int incy);
# 518 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDaxpy_v2(cublasHandle_t handle, int n, const double * alpha, const double * x, int incx, double * y, int incy);
# 526 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCaxpy_v2(cublasHandle_t handle, int n, const cuComplex * alpha, const cuComplex * x, int incx, cuComplex * y, int incy);
# 534 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZaxpy_v2(cublasHandle_t handle, int n, const cuDoubleComplex * alpha, const cuDoubleComplex * x, int incx, cuDoubleComplex * y, int incy);
# 542 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasScopy_v2(cublasHandle_t handle, int n, const float * x, int incx, float * y, int incy);
# 549 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDcopy_v2(cublasHandle_t handle, int n, const double * x, int incx, double * y, int incy);
# 556 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCcopy_v2(cublasHandle_t handle, int n, const cuComplex * x, int incx, cuComplex * y, int incy);
# 563 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZcopy_v2(cublasHandle_t handle, int n, const cuDoubleComplex * x, int incx, cuDoubleComplex * y, int incy);
# 570 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSswap_v2(cublasHandle_t handle, int n, float * x, int incx, float * y, int incy);
# 577 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDswap_v2(cublasHandle_t handle, int n, double * x, int incx, double * y, int incy);
# 584 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCswap_v2(cublasHandle_t handle, int n, cuComplex * x, int incx, cuComplex * y, int incy);
# 591 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZswap_v2(cublasHandle_t handle, int n, cuDoubleComplex * x, int incx, cuDoubleComplex * y, int incy);
# 598 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasIsamax_v2(cublasHandle_t handle, int n, const float * x, int incx, int * result);
# 604 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasIdamax_v2(cublasHandle_t handle, int n, const double * x, int incx, int * result);
# 610 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasIcamax_v2(cublasHandle_t handle, int n, const cuComplex * x, int incx, int * result);
# 616 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasIzamax_v2(cublasHandle_t handle, int n, const cuDoubleComplex * x, int incx, int * result);
# 622 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasIsamin_v2(cublasHandle_t handle, int n, const float * x, int incx, int * result);
# 628 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasIdamin_v2(cublasHandle_t handle, int n, const double * x, int incx, int * result);
# 634 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasIcamin_v2(cublasHandle_t handle, int n, const cuComplex * x, int incx, int * result);
# 640 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasIzamin_v2(cublasHandle_t handle, int n, const cuDoubleComplex * x, int incx, int * result);
# 646 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSasum_v2(cublasHandle_t handle, int n, const float * x, int incx, float * result);
# 652 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDasum_v2(cublasHandle_t handle, int n, const double * x, int incx, double * result);
# 658 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasScasum_v2(cublasHandle_t handle, int n, const cuComplex * x, int incx, float * result);
# 664 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDzasum_v2(cublasHandle_t handle, int n, const cuDoubleComplex * x, int incx, double * result);
# 670 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSrot_v2(cublasHandle_t handle, int n, float * x, int incx, float * y, int incy, const float * c, const float * s);
# 679 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDrot_v2(cublasHandle_t handle, int n, double * x, int incx, double * y, int incy, const double * c, const double * s);
# 688 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCrot_v2(cublasHandle_t handle, int n, cuComplex * x, int incx, cuComplex * y, int incy, const float * c, const cuComplex * s);
# 697 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCsrot_v2(cublasHandle_t handle, int n, cuComplex * x, int incx, cuComplex * y, int incy, const float * c, const float * s);
# 706 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZrot_v2(cublasHandle_t handle, int n, cuDoubleComplex * x, int incx, cuDoubleComplex * y, int incy, const double * c, const cuDoubleComplex * s);
# 715 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZdrot_v2(cublasHandle_t handle, int n, cuDoubleComplex * x, int incx, cuDoubleComplex * y, int incy, const double * c, const double * s);
# 724 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSrotg_v2(cublasHandle_t handle, float * a, float * b, float * c, float * s);
# 730 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDrotg_v2(cublasHandle_t handle, double * a, double * b, double * c, double * s);
# 736 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCrotg_v2(cublasHandle_t handle, cuComplex * a, cuComplex * b, float * c, cuComplex * s);
# 742 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZrotg_v2(cublasHandle_t handle, cuDoubleComplex * a, cuDoubleComplex * b, double * c, cuDoubleComplex * s);
# 748 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSrotm_v2(cublasHandle_t handle, int n, float * x, int incx, float * y, int incy, const float * param);
# 756 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDrotm_v2(cublasHandle_t handle, int n, double * x, int incx, double * y, int incy, const double * param);
# 764 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSrotmg_v2(cublasHandle_t handle, float * d1, float * d2, float * x1, const float * y1, float * param);
# 771 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDrotmg_v2(cublasHandle_t handle, double * d1, double * d2, double * x1, const double * y1, double * param);
# 781 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSgemv_v2(cublasHandle_t handle, cublasOperation_t trans, int m, int n, const float * alpha, const float * A, int lda, const float * x, int incx, const float * beta, float * y, int incy);
# 794 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDgemv_v2(cublasHandle_t handle, cublasOperation_t trans, int m, int n, const double * alpha, const double * A, int lda, const double * x, int incx, const double * beta, double * y, int incy);
# 807 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCgemv_v2(cublasHandle_t handle, cublasOperation_t trans, int m, int n, const cuComplex * alpha, const cuComplex * A, int lda, const cuComplex * x, int incx, const cuComplex * beta, cuComplex * y, int incy);
# 820 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZgemv_v2(cublasHandle_t handle, cublasOperation_t trans, int m, int n, const cuDoubleComplex * alpha, const cuDoubleComplex * A, int lda, const cuDoubleComplex * x, int incx, const cuDoubleComplex * beta, cuDoubleComplex * y, int incy);
# 833 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSgbmv_v2(cublasHandle_t handle, cublasOperation_t trans, int m, int n, int kl, int ku, const float * alpha, const float * A, int lda, const float * x, int incx, const float * beta, float * y, int incy);
# 848 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDgbmv_v2(cublasHandle_t handle, cublasOperation_t trans, int m, int n, int kl, int ku, const double * alpha, const double * A, int lda, const double * x, int incx, const double * beta, double * y, int incy);
# 863 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCgbmv_v2(cublasHandle_t handle, cublasOperation_t trans, int m, int n, int kl, int ku, const cuComplex * alpha, const cuComplex * A, int lda, const cuComplex * x, int incx, const cuComplex * beta, cuComplex * y, int incy);
# 878 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZgbmv_v2(cublasHandle_t handle, cublasOperation_t trans, int m, int n, int kl, int ku, const cuDoubleComplex * alpha, const cuDoubleComplex * A, int lda, const cuDoubleComplex * x, int incx, const cuDoubleComplex * beta, cuDoubleComplex * y, int incy);
# 894 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasStrmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, const float * A, int lda, float * x, int incx);
# 904 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDtrmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, const double * A, int lda, double * x, int incx);
# 914 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCtrmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, const cuComplex * A, int lda, cuComplex * x, int incx);
# 924 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZtrmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, const cuDoubleComplex * A, int lda, cuDoubleComplex * x, int incx);
# 935 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasStbmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, int k, const float * A, int lda, float * x, int incx);
# 946 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDtbmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, int k, const double * A, int lda, double * x, int incx);
# 957 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCtbmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, int k, const cuComplex * A, int lda, cuComplex * x, int incx);
# 968 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZtbmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, int k, const cuDoubleComplex * A, int lda, cuDoubleComplex * x, int incx);
# 980 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasStpmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, const float * AP, float * x, int incx);
# 989 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDtpmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, const double * AP, double * x, int incx);
# 998 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCtpmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, const cuComplex * AP, cuComplex * x, int incx);
# 1007 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZtpmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, const cuDoubleComplex * AP, cuDoubleComplex * x, int incx);
# 1017 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasStrsv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, const float * A, int lda, float * x, int incx);
# 1027 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDtrsv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, const double * A, int lda, double * x, int incx);
# 1037 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCtrsv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, const cuComplex * A, int lda, cuComplex * x, int incx);
# 1047 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZtrsv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, const cuDoubleComplex * A, int lda, cuDoubleComplex * x, int incx);
# 1058 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasStpsv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, const float * AP, float * x, int incx);
# 1067 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDtpsv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, const double * AP, double * x, int incx);
# 1076 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCtpsv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, const cuComplex * AP, cuComplex * x, int incx);
# 1085 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZtpsv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, const cuDoubleComplex * AP, cuDoubleComplex * x, int incx);
# 1094 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasStbsv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, int k, const float * A, int lda, float * x, int incx);
# 1105 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDtbsv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, int k, const double * A, int lda, double * x, int incx);
# 1116 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCtbsv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, int k, const cuComplex * A, int lda, cuComplex * x, int incx);
# 1127 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZtbsv_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int n, int k, const cuDoubleComplex * A, int lda, cuDoubleComplex * x, int incx);
# 1139 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSsymv_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const float * alpha, const float * A, int lda, const float * x, int incx, const float * beta, float * y, int incy);
# 1151 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDsymv_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const double * alpha, const double * A, int lda, const double * x, int incx, const double * beta, double * y, int incy);
# 1163 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCsymv_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const cuComplex * alpha, const cuComplex * A, int lda, const cuComplex * x, int incx, const cuComplex * beta, cuComplex * y, int incy);
# 1175 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZsymv_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const cuDoubleComplex * alpha, const cuDoubleComplex * A, int lda, const cuDoubleComplex * x, int incx, const cuDoubleComplex * beta, cuDoubleComplex * y, int incy);
# 1187 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasChemv_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const cuComplex * alpha, const cuComplex * A, int lda, const cuComplex * x, int incx, const cuComplex * beta, cuComplex * y, int incy);
# 1199 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZhemv_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const cuDoubleComplex * alpha, const cuDoubleComplex * A, int lda, const cuDoubleComplex * x, int incx, const cuDoubleComplex * beta, cuDoubleComplex * y, int incy);
# 1212 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSsbmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, int k, const float * alpha, const float * A, int lda, const float * x, int incx, const float * beta, float * y, int incy);
# 1225 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDsbmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, int k, const double * alpha, const double * A, int lda, const double * x, int incx, const double * beta, double * y, int incy);
# 1238 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasChbmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, int k, const cuComplex * alpha, const cuComplex * A, int lda, const cuComplex * x, int incx, const cuComplex * beta, cuComplex * y, int incy);
# 1251 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZhbmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, int k, const cuDoubleComplex * alpha, const cuDoubleComplex * A, int lda, const cuDoubleComplex * x, int incx, const cuDoubleComplex * beta, cuDoubleComplex * y, int incy);
# 1265 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSspmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const float * alpha, const float * AP, const float * x, int incx, const float * beta, float * y, int incy);
# 1276 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDspmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const double * alpha, const double * AP, const double * x, int incx, const double * beta, double * y, int incy);
# 1287 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasChpmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const cuComplex * alpha, const cuComplex * AP, const cuComplex * x, int incx, const cuComplex * beta, cuComplex * y, int incy);
# 1298 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZhpmv_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const cuDoubleComplex * alpha, const cuDoubleComplex * AP, const cuDoubleComplex * x, int incx, const cuDoubleComplex * beta, cuDoubleComplex * y, int incy);
# 1310 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSger_v2(cublasHandle_t handle, int m, int n, const float * alpha, const float * x, int incx, const float * y, int incy, float * A, int lda);
# 1321 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDger_v2(cublasHandle_t handle, int m, int n, const double * alpha, const double * x, int incx, const double * y, int incy, double * A, int lda);
# 1332 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCgeru_v2(cublasHandle_t handle, int m, int n, const cuComplex * alpha, const cuComplex * x, int incx, const cuComplex * y, int incy, cuComplex * A, int lda);
# 1343 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCgerc_v2(cublasHandle_t handle, int m, int n, const cuComplex * alpha, const cuComplex * x, int incx, const cuComplex * y, int incy, cuComplex * A, int lda);
# 1354 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZgeru_v2(cublasHandle_t handle, int m, int n, const cuDoubleComplex * alpha, const cuDoubleComplex * x, int incx, const cuDoubleComplex * y, int incy, cuDoubleComplex * A, int lda);
# 1365 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZgerc_v2(cublasHandle_t handle, int m, int n, const cuDoubleComplex * alpha, const cuDoubleComplex * x, int incx, const cuDoubleComplex * y, int incy, cuDoubleComplex * A, int lda);
# 1377 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSsyr_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const float * alpha, const float * x, int incx, float * A, int lda);
# 1386 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDsyr_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const double * alpha, const double * x, int incx, double * A, int lda);
# 1395 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCsyr_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const cuComplex * alpha, const cuComplex * x, int incx, cuComplex * A, int lda);
# 1404 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZsyr_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const cuDoubleComplex * alpha, const cuDoubleComplex * x, int incx, cuDoubleComplex * A, int lda);
# 1413 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCher_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const float * alpha, const cuComplex * x, int incx, cuComplex * A, int lda);
# 1422 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZher_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const double * alpha, const cuDoubleComplex * x, int incx, cuDoubleComplex * A, int lda);
# 1432 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSspr_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const float * alpha, const float * x, int incx, float * AP);
# 1440 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDspr_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const double * alpha, const double * x, int incx, double * AP);
# 1448 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasChpr_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const float * alpha, const cuComplex * x, int incx, cuComplex * AP);
# 1456 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZhpr_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const double * alpha, const cuDoubleComplex * x, int incx, cuDoubleComplex * AP);
# 1465 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSsyr2_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const float * alpha, const float * x, int incx, const float * y, int incy, float * A, int lda);
# 1476 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDsyr2_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const double * alpha, const double * x, int incx, const double * y, int incy, double * A, int lda);
# 1487 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCsyr2_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const cuComplex * alpha, const cuComplex * x, int incx, const cuComplex * y, int incy, cuComplex * A, int lda);
# 1497 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZsyr2_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const cuDoubleComplex * alpha, const cuDoubleComplex * x, int incx, const cuDoubleComplex * y, int incy, cuDoubleComplex * A, int lda);
# 1509 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCher2_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const cuComplex * alpha, const cuComplex * x, int incx, const cuComplex * y, int incy, cuComplex * A, int lda);
# 1519 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZher2_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const cuDoubleComplex * alpha, const cuDoubleComplex * x, int incx, const cuDoubleComplex * y, int incy, cuDoubleComplex * A, int lda);
# 1531 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSspr2_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const float * alpha, const float * x, int incx, const float * y, int incy, float * AP);
# 1541 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDspr2_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const double * alpha, const double * x, int incx, const double * y, int incy, double * AP);
# 1552 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasChpr2_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const cuComplex * alpha, const cuComplex * x, int incx, const cuComplex * y, int incy, cuComplex * AP);
# 1562 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZhpr2_v2(cublasHandle_t handle, cublasFillMode_t uplo, int n, const cuDoubleComplex * alpha, const cuDoubleComplex * x, int incx, const cuDoubleComplex * y, int incy, cuDoubleComplex * AP);
# 1575 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSgemm_v2(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const float * alpha, const float * A, int lda, const float * B, int ldb, const float * beta, float * C, int ldc);
# 1590 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDgemm_v2(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const double * alpha, const double * A, int lda, const double * B, int ldb, const double * beta, double * C, int ldc);
# 1605 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCgemm_v2(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const cuComplex * alpha, const cuComplex * A, int lda, const cuComplex * B, int ldb, const cuComplex * beta, cuComplex * C, int ldc);
# 1620 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCgemm3m(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const cuComplex * alpha, const cuComplex * A, int lda, const cuComplex * B, int ldb, const cuComplex * beta, cuComplex * C, int ldc);
# 1634 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCgemm3mEx(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const cuComplex * alpha, const void * A, cudaDataType Atype, int lda, const void * B, cudaDataType Btype, int ldb, const cuComplex * beta, void * C, cudaDataType Ctype, int ldc);
# 1650 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZgemm_v2(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const cuDoubleComplex * alpha, const cuDoubleComplex * A, int lda, const cuDoubleComplex * B, int ldb, const cuDoubleComplex * beta, cuDoubleComplex * C, int ldc);
# 1665 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZgemm3m(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const cuDoubleComplex * alpha, const cuDoubleComplex * A, int lda, const cuDoubleComplex * B, int ldb, const cuDoubleComplex * beta, cuDoubleComplex * C, int ldc);
# 1680 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasHgemm(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const __half * alpha, const __half * A, int lda, const __half * B, int ldb, const __half * beta, __half * C, int ldc);
# 1695 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSgemmEx(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const float * alpha, const void * A, cudaDataType Atype, int lda, const void * B, cudaDataType Btype, int ldb, const float * beta, void * C, cudaDataType Ctype, int ldc);
# 1713 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasGemmEx(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const void * alpha, const void * A, cudaDataType Atype, int lda, const void * B, cudaDataType Btype, int ldb, const void * beta, void * C, cudaDataType Ctype, int ldc, cudaDataType computeType, cublasGemmAlgo_t algo);
# 1734 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCgemmEx(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const cuComplex * alpha, const void * A, cudaDataType Atype, int lda, const void * B, cudaDataType Btype, int ldb, const cuComplex * beta, void * C, cudaDataType Ctype, int ldc);
# 1749 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasUint8gemmBias(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, cublasOperation_t transc, int m, int n, int k, const unsigned char * A, int A_bias, int lda, const unsigned char * B, int B_bias, int ldb, unsigned char * C, int C_bias, int ldc, int C_mult, int C_shift);
# 1758 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSsyrk_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const float * alpha, const float * A, int lda, const float * beta, float * C, int ldc);
# 1770 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDsyrk_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const double * alpha, const double * A, int lda, const double * beta, double * C, int ldc);
# 1782 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCsyrk_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const cuComplex * alpha, const cuComplex * A, int lda, const cuComplex * beta, cuComplex * C, int ldc);
# 1794 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZsyrk_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const cuDoubleComplex * alpha, const cuDoubleComplex * A, int lda, const cuDoubleComplex * beta, cuDoubleComplex * C, int ldc);
# 1806 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCsyrkEx(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const cuComplex * alpha, const void * A, cudaDataType Atype, int lda, const cuComplex * beta, void * C, cudaDataType Ctype, int ldc);
# 1821 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCsyrk3mEx(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const cuComplex * alpha, const void * A, cudaDataType Atype, int lda, const cuComplex * beta, void * C, cudaDataType Ctype, int ldc);
# 1836 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCherk_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const float * alpha, const cuComplex * A, int lda, const float * beta, cuComplex * C, int ldc);
# 1848 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZherk_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const double * alpha, const cuDoubleComplex * A, int lda, const double * beta, cuDoubleComplex * C, int ldc);
# 1861 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCherkEx(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const float * alpha, const void * A, cudaDataType Atype, int lda, const float * beta, void * C, cudaDataType Ctype, int ldc);
# 1876 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCherk3mEx(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const float * alpha, const void * A, cudaDataType Atype, int lda, const float * beta, void * C, cudaDataType Ctype, int ldc);
# 1892 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSsyr2k_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const float * alpha, const float * A, int lda, const float * B, int ldb, const float * beta, float * C, int ldc);
# 1906 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDsyr2k_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const double * alpha, const double * A, int lda, const double * B, int ldb, const double * beta, double * C, int ldc);
# 1920 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCsyr2k_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const cuComplex * alpha, const cuComplex * A, int lda, const cuComplex * B, int ldb, const cuComplex * beta, cuComplex * C, int ldc);
# 1934 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZsyr2k_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const cuDoubleComplex * alpha, const cuDoubleComplex * A, int lda, const cuDoubleComplex * B, int ldb, const cuDoubleComplex * beta, cuDoubleComplex * C, int ldc);
# 1948 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCher2k_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const cuComplex * alpha, const cuComplex * A, int lda, const cuComplex * B, int ldb, const float * beta, cuComplex * C, int ldc);
# 1962 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZher2k_v2(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const cuDoubleComplex * alpha, const cuDoubleComplex * A, int lda, const cuDoubleComplex * B, int ldb, const double * beta, cuDoubleComplex * C, int ldc);
# 1976 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSsyrkx(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const float * alpha, const float * A, int lda, const float * B, int ldb, const float * beta, float * C, int ldc);
# 1990 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDsyrkx(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const double * alpha, const double * A, int lda, const double * B, int ldb, const double * beta, double * C, int ldc);
# 2004 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCsyrkx(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const cuComplex * alpha, const cuComplex * A, int lda, const cuComplex * B, int ldb, const cuComplex * beta, cuComplex * C, int ldc);
# 2018 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZsyrkx(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const cuDoubleComplex * alpha, const cuDoubleComplex * A, int lda, const cuDoubleComplex * B, int ldb, const cuDoubleComplex * beta, cuDoubleComplex * C, int ldc);
# 2032 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCherkx(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const cuComplex * alpha, const cuComplex * A, int lda, const cuComplex * B, int ldb, const float * beta, cuComplex * C, int ldc);
# 2046 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZherkx(cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, const cuDoubleComplex * alpha, const cuDoubleComplex * A, int lda, const cuDoubleComplex * B, int ldb, const double * beta, cuDoubleComplex * C, int ldc);
# 2060 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSsymm_v2(cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, int m, int n, const float * alpha, const float * A, int lda, const float * B, int ldb, const float * beta, float * C, int ldc);
# 2074 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDsymm_v2(cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, int m, int n, const double * alpha, const double * A, int lda, const double * B, int ldb, const double * beta, double * C, int ldc);
# 2088 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCsymm_v2(cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, int m, int n, const cuComplex * alpha, const cuComplex * A, int lda, const cuComplex * B, int ldb, const cuComplex * beta, cuComplex * C, int ldc);
# 2102 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZsymm_v2(cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, int m, int n, const cuDoubleComplex * alpha, const cuDoubleComplex * A, int lda, const cuDoubleComplex * B, int ldb, const cuDoubleComplex * beta, cuDoubleComplex * C, int ldc);
# 2117 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasChemm_v2(cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, int m, int n, const cuComplex * alpha, const cuComplex * A, int lda, const cuComplex * B, int ldb, const cuComplex * beta, cuComplex * C, int ldc);
# 2131 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZhemm_v2(cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, int m, int n, const cuDoubleComplex * alpha, const cuDoubleComplex * A, int lda, const cuDoubleComplex * B, int ldb, const cuDoubleComplex * beta, cuDoubleComplex * C, int ldc);
# 2146 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasStrsm_v2(cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, const float * alpha, const float * A, int lda, float * B, int ldb);
# 2160 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDtrsm_v2(cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, const double * alpha, const double * A, int lda, double * B, int ldb);
# 2173 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCtrsm_v2(cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, const cuComplex * alpha, const cuComplex * A, int lda, cuComplex * B, int ldb);
# 2186 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZtrsm_v2(cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, const cuDoubleComplex * alpha, const cuDoubleComplex * A, int lda, cuDoubleComplex * B, int ldb);
# 2200 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasStrmm_v2(cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, const float * alpha, const float * A, int lda, const float * B, int ldb, float * C, int ldc);
# 2215 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDtrmm_v2(cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, const double * alpha, const double * A, int lda, const double * B, int ldb, double * C, int ldc);
# 2230 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCtrmm_v2(cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, const cuComplex * alpha, const cuComplex * A, int lda, const cuComplex * B, int ldb, cuComplex * C, int ldc);
# 2245 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZtrmm_v2(cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, const cuDoubleComplex * alpha, const cuDoubleComplex * A, int lda, const cuDoubleComplex * B, int ldb, cuDoubleComplex * C, int ldc);
# 2259 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSgemmBatched(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const float * alpha, const float * Aarray[], int lda, const float * Barray[], int ldb, const float * beta, float * Carray[], int ldc, int batchCount);
# 2275 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDgemmBatched(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const double * alpha, const double * Aarray[], int lda, const double * Barray[], int ldb, const double * beta, double * Carray[], int ldc, int batchCount);
# 2291 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCgemmBatched(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const cuComplex * alpha, const cuComplex * Aarray[], int lda, const cuComplex * Barray[], int ldb, const cuComplex * beta, cuComplex * Carray[], int ldc, int batchCount);
# 2307 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCgemm3mBatched(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const cuComplex * alpha, const cuComplex * Aarray[], int lda, const cuComplex * Barray[], int ldb, const cuComplex * beta, cuComplex * Carray[], int ldc, int batchCount);
# 2323 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZgemmBatched(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const cuDoubleComplex * alpha, const cuDoubleComplex * Aarray[], int lda, const cuDoubleComplex * Barray[], int ldb, const cuDoubleComplex * beta, cuDoubleComplex * Carray[], int ldc, int batchCount);
# 2339 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSgemmStridedBatched(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const float * alpha, const float * A, int lda, long long strideA, const float * B, int ldb, long long strideB, const float * beta, float * C, int ldc, long long strideC, int batchCount);
# 2358 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDgemmStridedBatched(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const double * alpha, const double * A, int lda, long long strideA, const double * B, int ldb, long long strideB, const double * beta, double * C, int ldc, long long strideC, int batchCount);
# 2377 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCgemmStridedBatched(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const cuComplex * alpha, const cuComplex * A, int lda, long long strideA, const cuComplex * B, int ldb, long long strideB, const cuComplex * beta, cuComplex * C, int ldc, long long strideC, int batchCount);
# 2396 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCgemm3mStridedBatched(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const cuComplex * alpha, const cuComplex * A, int lda, long long strideA, const cuComplex * B, int ldb, long long strideB, const cuComplex * beta, cuComplex * C, int ldc, long long strideC, int batchCount);
# 2416 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZgemmStridedBatched(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const cuDoubleComplex * alpha, const cuDoubleComplex * A, int lda, long long strideA, const cuDoubleComplex * B, int ldb, long long strideB, const cuDoubleComplex * beta, cuDoubleComplex * C, int ldc, long long strideC, int batchCount);
# 2434 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasHgemmStridedBatched(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, const __half * alpha, const __half * A, int lda, long long strideA, const __half * B, int ldb, long long strideB, const __half * beta, __half * C, int ldc, long long strideC, int batchCount);
# 2455 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSgeam(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, const float * alpha, const float * A, int lda, const float * beta, const float * B, int ldb, float * C, int ldc);
# 2469 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDgeam(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, const double * alpha, const double * A, int lda, const double * beta, const double * B, int ldb, double * C, int ldc);
# 2483 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCgeam(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, const cuComplex * alpha, const cuComplex * A, int lda, const cuComplex * beta, const cuComplex * B, int ldb, cuComplex * C, int ldc);
# 2497 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZgeam(cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, const cuDoubleComplex * alpha, const cuDoubleComplex * A, int lda, const cuDoubleComplex * beta, const cuDoubleComplex * B, int ldb, cuDoubleComplex * C, int ldc);
# 2512 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSgetrfBatched(cublasHandle_t handle, int n, float * A[], int lda, int * P, int * info, int batchSize);
# 2520 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDgetrfBatched(cublasHandle_t handle, int n, double * A[], int lda, int * P, int * info, int batchSize);
# 2528 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCgetrfBatched(cublasHandle_t handle, int n, cuComplex * A[], int lda, int * P, int * info, int batchSize);
# 2536 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZgetrfBatched(cublasHandle_t handle, int n, cuDoubleComplex * A[], int lda, int * P, int * info, int batchSize);
# 2545 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSgetriBatched(cublasHandle_t handle, int n, const float * A[], int lda, const int * P, float * C[], int ldc, int * info, int batchSize);
# 2555 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDgetriBatched(cublasHandle_t handle, int n, const double * A[], int lda, const int * P, double * C[], int ldc, int * info, int batchSize);
# 2565 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCgetriBatched(cublasHandle_t handle, int n, const cuComplex * A[], int lda, const int * P, cuComplex * C[], int ldc, int * info, int batchSize);
# 2575 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZgetriBatched(cublasHandle_t handle, int n, const cuDoubleComplex * A[], int lda, const int * P, cuDoubleComplex * C[], int ldc, int * info, int batchSize);
# 2587 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSgetrsBatched(cublasHandle_t handle, cublasOperation_t trans, int n, int nrhs, const float * Aarray[], int lda, const int * devIpiv, float * Barray[], int ldb, int * info, int batchSize);
# 2599 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDgetrsBatched(cublasHandle_t handle, cublasOperation_t trans, int n, int nrhs, const double * Aarray[], int lda, const int * devIpiv, double * Barray[], int ldb, int * info, int batchSize);
# 2611 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCgetrsBatched(cublasHandle_t handle, cublasOperation_t trans, int n, int nrhs, const cuComplex * Aarray[], int lda, const int * devIpiv, cuComplex * Barray[], int ldb, int * info, int batchSize);
# 2624 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZgetrsBatched(cublasHandle_t handle, cublasOperation_t trans, int n, int nrhs, const cuDoubleComplex * Aarray[], int lda, const int * devIpiv, cuDoubleComplex * Barray[], int ldb, int * info, int batchSize);
# 2639 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasStrsmBatched(cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, const float * alpha, const float * A[], int lda, float * B[], int ldb, int batchCount);
# 2653 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDtrsmBatched(cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, const double * alpha, const double * A[], int lda, double * B[], int ldb, int batchCount);
# 2667 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCtrsmBatched(cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, const cuComplex * alpha, const cuComplex * A[], int lda, cuComplex * B[], int ldb, int batchCount);
# 2681 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZtrsmBatched(cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, const cuDoubleComplex * alpha, const cuDoubleComplex * A[], int lda, cuDoubleComplex * B[], int ldb, int batchCount);
# 2696 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSmatinvBatched(cublasHandle_t handle, int n, const float * A[], int lda, float * Ainv[], int lda_inv, int * info, int batchSize);
# 2705 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDmatinvBatched(cublasHandle_t handle, int n, const double * A[], int lda, double * Ainv[], int lda_inv, int * info, int batchSize);
# 2714 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCmatinvBatched(cublasHandle_t handle, int n, const cuComplex * A[], int lda, cuComplex * Ainv[], int lda_inv, int * info, int batchSize);
# 2723 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZmatinvBatched(cublasHandle_t handle, int n, const cuDoubleComplex * A[], int lda, cuDoubleComplex * Ainv[], int lda_inv, int * info, int batchSize);
# 2733 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSgeqrfBatched(cublasHandle_t handle, int m, int n, float * Aarray[], int lda, float * TauArray[], int * info, int batchSize);
# 2742 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDgeqrfBatched(cublasHandle_t handle, int m, int n, double * Aarray[], int lda, double * TauArray[], int * info, int batchSize);
# 2751 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCgeqrfBatched(cublasHandle_t handle, int m, int n, cuComplex * Aarray[], int lda, cuComplex * TauArray[], int * info, int batchSize);
# 2760 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZgeqrfBatched(cublasHandle_t handle, int m, int n, cuDoubleComplex * Aarray[], int lda, cuDoubleComplex * TauArray[], int * info, int batchSize);
# 2769 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSgelsBatched(cublasHandle_t handle, cublasOperation_t trans, int m, int n, int nrhs, float * Aarray[], int lda, float * Carray[], int ldc, int * info, int * devInfoArray, int batchSize);
# 2782 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDgelsBatched(cublasHandle_t handle, cublasOperation_t trans, int m, int n, int nrhs, double * Aarray[], int lda, double * Carray[], int ldc, int * info, int * devInfoArray, int batchSize);
# 2795 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCgelsBatched(cublasHandle_t handle, cublasOperation_t trans, int m, int n, int nrhs, cuComplex * Aarray[], int lda, cuComplex * Carray[], int ldc, int * info, int * devInfoArray, int batchSize);
# 2808 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZgelsBatched(cublasHandle_t handle, cublasOperation_t trans, int m, int n, int nrhs, cuDoubleComplex * Aarray[], int lda, cuDoubleComplex * Carray[], int ldc, int * info, int * devInfoArray, int batchSize);
# 2821 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasSdgmm(cublasHandle_t handle, cublasSideMode_t mode, int m, int n, const float * A, int lda, const float * x, int incx, float * C, int ldc);
# 2832 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDdgmm(cublasHandle_t handle, cublasSideMode_t mode, int m, int n, const double * A, int lda, const double * x, int incx, double * C, int ldc);
# 2843 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCdgmm(cublasHandle_t handle, cublasSideMode_t mode, int m, int n, const cuComplex * A, int lda, const cuComplex * x, int incx, cuComplex * C, int ldc);
# 2854 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZdgmm(cublasHandle_t handle, cublasSideMode_t mode, int m, int n, const cuDoubleComplex * A, int lda, const cuDoubleComplex * x, int incx, cuDoubleComplex * C, int ldc);
# 2866 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasStpttr(cublasHandle_t handle, cublasFillMode_t uplo, int n, const float * AP, float * A, int lda);
# 2873 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDtpttr(cublasHandle_t handle, cublasFillMode_t uplo, int n, const double * AP, double * A, int lda);
# 2880 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCtpttr(cublasHandle_t handle, cublasFillMode_t uplo, int n, const cuComplex * AP, cuComplex * A, int lda);
# 2887 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZtpttr(cublasHandle_t handle, cublasFillMode_t uplo, int n, const cuDoubleComplex * AP, cuDoubleComplex * A, int lda);
# 2894 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasStrttp(cublasHandle_t handle, cublasFillMode_t uplo, int n, const float * A, int lda, float * AP);
# 2901 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasDtrttp(cublasHandle_t handle, cublasFillMode_t uplo, int n, const double * A, int lda, double * AP);
# 2908 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasCtrttp(cublasHandle_t handle, cublasFillMode_t uplo, int n, const cuComplex * A, int lda, cuComplex * AP);
# 2915 "/usr/local/cuda/include/cublas_api.h"
cublasStatus_t cublasZtrttp(cublasHandle_t handle, cublasFillMode_t uplo, int n, const cuDoubleComplex * A, int lda, cuDoubleComplex * AP);
# 2923 "/usr/local/cuda/include/cublas_api.h"
}
# 40 "./cuerror.cuh"
inline void _cuErrCheck(const cudaError_t err, const char *file, const int line)
# 41 "./cuerror.cuh"
{
# 42 "./cuerror.cuh"
if (err != (cudaSuccess))
# 43 "./cuerror.cuh"
{
# 44 "./cuerror.cuh"
fprintf(stderr, "\n");
# 45 "./cuerror.cuh"
fprintf(stderr, "CUDA ERROR in file=`%s`, line=%d\n", file, line);
# 46 "./cuerror.cuh"
fprintf(stderr, "CUDA ERROR %d: %s\n", err, cudaGetErrorString((cudaError_t)err));
# 47 "./cuerror.cuh"
fprintf(stderr, "\n");
# 48 "./cuerror.cuh"
cudaDeviceReset();
# 49 "./cuerror.cuh"
exit(1);
# 50 "./cuerror.cuh"
}
# 51 "./cuerror.cuh"
}
# 58 "./cuerror.cuh"
static const char *cufftGetErrorEnum(cufftResult error)
# 59 "./cuerror.cuh"
{
# 60 "./cuerror.cuh"
switch (error)
# 61 "./cuerror.cuh"
{
# 62 "./cuerror.cuh"
case CUFFT_SUCCESS:
# 63 "./cuerror.cuh"
return "CUFFT_SUCCESS";
# 64 "./cuerror.cuh"
case CUFFT_INVALID_PLAN:
# 65 "./cuerror.cuh"
return "CUFFT_INVALID_PLAN";
# 66 "./cuerror.cuh"
case CUFFT_ALLOC_FAILED:
# 67 "./cuerror.cuh"
return "CUFFT_ALLOC_FAILED";
# 68 "./cuerror.cuh"
case CUFFT_INVALID_TYPE:
# 69 "./cuerror.cuh"
return "CUFFT_INVALID_TYPE";
# 70 "./cuerror.cuh"
case CUFFT_INVALID_VALUE:
# 71 "./cuerror.cuh"
return "CUFFT_INVALID_VALUE";
# 72 "./cuerror.cuh"
case CUFFT_INTERNAL_ERROR:
# 73 "./cuerror.cuh"
return "CUFFT_INTERNAL_ERROR";
# 74 "./cuerror.cuh"
case CUFFT_EXEC_FAILED:
# 75 "./cuerror.cuh"
return "CUFFT_EXEC_FAILED";
# 76 "./cuerror.cuh"
case CUFFT_SETUP_FAILED:
# 77 "./cuerror.cuh"
return "CUFFT_SETUP_FAILED";
# 78 "./cuerror.cuh"
case CUFFT_INVALID_SIZE:
# 79 "./cuerror.cuh"
return "CUFFT_INVALID_SIZE";
# 80 "./cuerror.cuh"
case CUFFT_UNALIGNED_DATA:
# 81 "./cuerror.cuh"
return "CUFFT_UNALIGNED_DATA";
# 82 "./cuerror.cuh"
case CUFFT_INCOMPLETE_PARAMETER_LIST:
# 83 "./cuerror.cuh"
return "CUFFT_INCOMPLETE_PARAMETER_LIST";
# 84 "./cuerror.cuh"
case CUFFT_INVALID_DEVICE:
# 85 "./cuerror.cuh"
return "CUFFT_INVALID_DEVICE";
# 86 "./cuerror.cuh"
case CUFFT_NO_WORKSPACE:
# 87 "./cuerror.cuh"
return "CUFFT_NO_WORKSPACE";
# 88 "./cuerror.cuh"
case CUFFT_PARSE_ERROR:
# 89 "./cuerror.cuh"
return "CUFFT_PARSE_ERROR";
# 90 "./cuerror.cuh"
case CUFFT_NOT_IMPLEMENTED:
# 91 "./cuerror.cuh"
return "CUFFT_NOT_IMPLEMENTED";
# 92 "./cuerror.cuh"
case CUFFT_LICENSE_ERROR:
# 93 "./cuerror.cuh"
return "CUFFT_LICENSE_ERROR";
# 94 "./cuerror.cuh"
default:
# 95 "./cuerror.cuh"
return "UNKNOWN ERROR!";
# 96 "./cuerror.cuh"
}
# 97 "./cuerror.cuh"
}
# 99 "./cuerror.cuh"
inline void _cufftErrChk(cufftResult err, const char *file, const int line)
# 100 "./cuerror.cuh"
{
# 101 "./cuerror.cuh"
if ((CUFFT_SUCCESS) != err) {
# 102 "./cuerror.cuh"
fprintf(stderr, "\n");
# 103 "./cuerror.cuh"
fprintf(stderr, "CUFFT ERROR in file=`%s`, line=%d\n", file, line);
# 104 "./cuerror.cuh"
fprintf(stderr, "CUFFT ERROR %d: %s\n", err, cufftGetErrorEnum((cufftResult)err));
# 105 "./cuerror.cuh"
fprintf(stderr, "\n");
# 106 "./cuerror.cuh"
cudaDeviceReset();
# 107 "./cuerror.cuh"
exit(1);
# 108 "./cuerror.cuh"
}
# 109 "./cuerror.cuh"
}
# 121 "./cuerror.cuh"
static inline void CheckCublas(cublasStatus_t status, const char *
# 122 "./cuerror.cuh"
file, int
# 123 "./cuerror.cuh"
line) {
# 124 "./cuerror.cuh"
if (status != (CUBLAS_STATUS_SUCCESS)) {
# 125 "./cuerror.cuh"
printf("CUBLAS error in %s at line %d\n", file, line);
# 126 "./cuerror.cuh"
exit(1);
# 127 "./cuerror.cuh"
}
# 128 "./cuerror.cuh"
}
# 11 "./reductions.cuh"
static inline int opt_threads(int new_blocks, int threads, int current_size)
# 12 "./reductions.cuh"
{
# 13 "./reductions.cuh"
int new_threads;
# 14 "./reductions.cuh"
if (new_blocks == 1)
# 15 "./reductions.cuh"
{
# 16 "./reductions.cuh"
new_threads = 2;
# 17 "./reductions.cuh"
while (new_threads < threads)
# 18 "./reductions.cuh"
{
# 19 "./reductions.cuh"
if (new_threads >= current_size) { break; }
# 20 "./reductions.cuh"
new_threads *= 2;
# 21 "./reductions.cuh"
}
# 22 "./reductions.cuh"
} else {
# 23 "./reductions.cuh"
new_threads = threads; }
# 24 "./reductions.cuh"
return new_threads;
# 25 "./reductions.cuh"
}
# 27 "./reductions.cuh"
template< unsigned block_size, class T> __attribute__((unused)) inline void
# 28 "./reductions.cuh"
warpReduce(volatile T *sdata, unsigned tid)
# 29 "./reductions.cuh"
{int volatile ___ = 1;(void)sdata;(void)tid;
# 36 "./reductions.cuh"
::exit(___);}
# 38 "./reductions.cuh"
template< unsigned block_size, class T> static void
# 39 "./reductions.cuh"
__wrapper__device_stub___reduce_kernel__(T *&g_idata, T *&g_odata, int &n) {exit(1);}
# 38 "./reductions.cuh"
template< unsigned block_size, class T> void
# 39 "./reductions.cuh"
__reduce_kernel__(T *g_idata, T *g_odata, int n)
# 40 "./reductions.cuh"
{__wrapper__device_stub___reduce_kernel__<block_size,T>(g_idata,g_odata,n);
# 58 "./reductions.cuh"
return;}
# 60 "./reductions.cuh"
template< class T> static inline void
# 61 "./reductions.cuh"
call_reduction_kernel(int dim_grid, int dim_block, int size, T *d_idata, T *d_odata, cudaStream_t stream)
# 62 "./reductions.cuh"
{
# 63 "./reductions.cuh"
int smemSize = dim_block * sizeof(double);
# 64 "./reductions.cuh"
switch (dim_block)
# 65 "./reductions.cuh"
{
# 66 "./reductions.cuh"
case 1024:
# 67 "./reductions.cuh"
(cudaConfigureCall(dim_grid, dim_block, smemSize, stream)) ? (void)0 : (__reduce_kernel__< 1024, T> )(d_idata, d_odata, size); break;
# 68 "./reductions.cuh"
case 512:
# 69 "./reductions.cuh"
(cudaConfigureCall(dim_grid, dim_block, smemSize, stream)) ? (void)0 : (__reduce_kernel__< 512, T> )(d_idata, d_odata, size); break;
# 70 "./reductions.cuh"
case 256:
# 71 "./reductions.cuh"
(cudaConfigureCall(dim_grid, dim_block, smemSize, stream)) ? (void)0 : (__reduce_kernel__< 256, T> )(d_idata, d_odata, size); break;
# 72 "./reductions.cuh"
case 128:
# 73 "./reductions.cuh"
(cudaConfigureCall(dim_grid, dim_block, smemSize, stream)) ? (void)0 : (__reduce_kernel__< 128, T> )(d_idata, d_odata, size); break;
# 74 "./reductions.cuh"
case 64:
# 75 "./reductions.cuh"
(cudaConfigureCall(dim_grid, dim_block, smemSize, stream)) ? (void)0 : (__reduce_kernel__< 64, T> )(d_idata, d_odata, size); break;
# 76 "./reductions.cuh"
}
# 77 "./reductions.cuh"
}
# 89 "./reductions.cuh"
template< class T> inline T
# 90 "./reductions.cuh"
block_reduce(T *array, int size, T *partial_sums = 0, int threads = 1024, cudaStream_t stream = 0)
# 91 "./reductions.cuh"
{
# 92 "./reductions.cuh"
if (!partial_sums) { partial_sums = array; }
# 94 "./reductions.cuh"
int blocks = (int)ceil(((float)size) / threads);
# 95 "./reductions.cuh"
unsigned lthreads = threads / 2;
# 96 "./reductions.cuh"
if (lthreads < (64)) { lthreads = (64); }
# 97 "./reductions.cuh"
unsigned new_blocks, current_size;
# 100 "./reductions.cuh"
call_reduction_kernel< T> (blocks, lthreads, size, array, partial_sums, stream);
# 103 "./reductions.cuh"
current_size = blocks;
# 104 "./reductions.cuh"
while (current_size > (1))
# 105 "./reductions.cuh"
{
# 106 "./reductions.cuh"
new_blocks = ((int)ceil(((float)current_size) / threads));
# 107 "./reductions.cuh"
lthreads = (opt_threads(new_blocks, threads, current_size) / 2);
# 108 "./reductions.cuh"
if (lthreads < (64)) { lthreads = (64); }
# 109 "./reductions.cuh"
call_reduction_kernel< T> (new_blocks, lthreads, current_size, partial_sums, partial_sums, stream);
# 110 "./reductions.cuh"
current_size = new_blocks;
# 111 "./reductions.cuh"
}
# 113 "./reductions.cuh"
T result;
# 114 "./reductions.cuh"
cudaMemcpy(&result, partial_sums, sizeof(T), cudaMemcpyDeviceToHost);
# 116 "./reductions.cuh"
return result;
# 117 "./reductions.cuh"
}
# 126 "./reductions.cuh"
template< unsigned block_size> static void
# 127 "./reductions.cuh"
__wrapper__device_stub_kernel_DZdreduce(double *&entity, cuDoubleComplex *&psi, double *&d_wrk_mem, int &n) {exit(1);}
# 126 "./reductions.cuh"
template< unsigned block_size> void
# 127 "./reductions.cuh"
kernel_DZdreduce(double *entity, cuDoubleComplex *psi, double *d_wrk_mem, int n)
# 128 "./reductions.cuh"
{__wrapper__device_stub_kernel_DZdreduce<block_size>(entity,psi,d_wrk_mem,n);
# 148 "./reductions.cuh"
return;}
# 151 "./reductions.cuh"
static inline void call_DZdreduction(int dim_grid, int dim_block, int size, double *d_entity, cuDoubleComplex *d_psi, double *d_wrk_mem, cudaStream_t stream)
# 152 "./reductions.cuh"
{
# 153 "./reductions.cuh"
int smemSize = dim_block * sizeof(double);
# 154 "./reductions.cuh"
switch (dim_block)
# 155 "./reductions.cuh"
{
# 156 "./reductions.cuh"
case 1024:
# 157 "./reductions.cuh"
(cudaConfigureCall(dim_grid, dim_block, smemSize, stream)) ? (void)0 : (kernel_DZdreduce< 1024U> )(d_entity, d_psi, d_wrk_mem, size);
# 158 "./reductions.cuh"
break;
# 159 "./reductions.cuh"
case 512:
# 160 "./reductions.cuh"
(cudaConfigureCall(dim_grid, dim_block, smemSize, stream)) ? (void)0 : (kernel_DZdreduce< 512U> )(d_entity, d_psi, d_wrk_mem, size);
# 161 "./reductions.cuh"
break;
# 162 "./reductions.cuh"
case 256:
# 163 "./reductions.cuh"
(cudaConfigureCall(dim_grid, dim_block, smemSize, stream)) ? (void)0 : (kernel_DZdreduce< 256U> )(d_entity, d_psi, d_wrk_mem, size);
# 164 "./reductions.cuh"
break;
# 165 "./reductions.cuh"
case 128:
# 166 "./reductions.cuh"
(cudaConfigureCall(dim_grid, dim_block, smemSize, stream)) ? (void)0 : (kernel_DZdreduce< 128U> )(d_entity, d_psi, d_wrk_mem, size);
# 167 "./reductions.cuh"
break;
# 168 "./reductions.cuh"
case 64:
# 169 "./reductions.cuh"
(cudaConfigureCall(dim_grid, dim_block, smemSize, stream)) ? (void)0 : (kernel_DZdreduce< 64U> )(d_entity, d_psi, d_wrk_mem, size);
# 170 "./reductions.cuh"
break;
# 171 "./reductions.cuh"
}
# 172 "./reductions.cuh"
}
# 10 "./thread_fence_reductions.cuh"
static unsigned retirementCount;
# 12 "./thread_fence_reductions.cuh"
cudaError_t setRetirementCount(int retCnt)
# 13 "./thread_fence_reductions.cuh"
{
# 14 "./thread_fence_reductions.cuh"
return cudaMemcpyToSymbol(retirementCount, &retCnt, sizeof(unsigned), 0, cudaMemcpyHostToDevice);
# 15 "./thread_fence_reductions.cuh"
}
# 20 "./thread_fence_reductions.cuh"
bool isPow2(unsigned x) { return (x & (x - (1))) == (0); }
# 22 "./thread_fence_reductions.cuh"
template< class T, unsigned block_size> __attribute__((unused)) inline void
# 23 "./thread_fence_reductions.cuh"
reduce_block(volatile T *sdata, T sum, const unsigned tid)
# 24 "./thread_fence_reductions.cuh"
{int volatile ___ = 1;(void)sdata;(void)sum;(void)tid;
# 42 "./thread_fence_reductions.cuh"
::exit(___);}
# 63 "./thread_fence_reductions.cuh"
template< class T, unsigned block_size, bool nIsPow2> static void
# 64 "./thread_fence_reductions.cuh"
__wrapper__device_stub_kernel_reduce_threadfence(const T *&d_arr_in, T *&d_wrk_mem, unsigned &n) {exit(1);}
# 63 "./thread_fence_reductions.cuh"
template< class T, unsigned block_size, bool nIsPow2> void
# 64 "./thread_fence_reductions.cuh"
kernel_reduce_threadfence(const T *d_arr_in, T *d_wrk_mem, unsigned n)
# 65 "./thread_fence_reductions.cuh"
{__wrapper__device_stub_kernel_reduce_threadfence<T,block_size,nIsPow2>(d_arr_in,d_wrk_mem,n);
# 124 "./thread_fence_reductions.cuh"
return;}
# 126 "./thread_fence_reductions.cuh"
template< class T> T
# 127 "./thread_fence_reductions.cuh"
threadfence_reduce(T *d_data, T *d_wrk_mem, const int size, int threads = 256)
# 128 "./thread_fence_reductions.cuh"
{
# 129 "./thread_fence_reductions.cuh"
int blocks = (int)ceil(((float)size) / threads);
# 130 "./thread_fence_reductions.cuh"
dim3 dimBlock(threads, 1, 1);
# 131 "./thread_fence_reductions.cuh"
dim3 dimGrid(blocks, 1, 1);
# 132 "./thread_fence_reductions.cuh"
int smemSize = threads * sizeof(T);
# 135 "./thread_fence_reductions.cuh"
if (isPow2(size))
# 136 "./thread_fence_reductions.cuh"
{
# 137 "./thread_fence_reductions.cuh"
switch (threads)
# 138 "./thread_fence_reductions.cuh"
{
# 139 "./thread_fence_reductions.cuh"
case 512:
# 140 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 512, true> )(d_data, d_wrk_mem, size);
# 141 "./thread_fence_reductions.cuh"
break;
# 143 "./thread_fence_reductions.cuh"
case 256:
# 144 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 256, true> )(d_data, d_wrk_mem, size);
# 145 "./thread_fence_reductions.cuh"
break;
# 147 "./thread_fence_reductions.cuh"
case 128:
# 148 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 128, true> )(d_data, d_wrk_mem, size);
# 149 "./thread_fence_reductions.cuh"
break;
# 151 "./thread_fence_reductions.cuh"
case 64:
# 152 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 64, true> )(d_data, d_wrk_mem, size);
# 153 "./thread_fence_reductions.cuh"
break;
# 155 "./thread_fence_reductions.cuh"
case 32:
# 156 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 32, true> )(d_data, d_wrk_mem, size);
# 157 "./thread_fence_reductions.cuh"
break;
# 159 "./thread_fence_reductions.cuh"
case 16:
# 160 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 16, true> )(d_data, d_wrk_mem, size);
# 161 "./thread_fence_reductions.cuh"
break;
# 163 "./thread_fence_reductions.cuh"
case 8:
# 164 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 8, true> )(d_data, d_wrk_mem, size);
# 165 "./thread_fence_reductions.cuh"
break;
# 167 "./thread_fence_reductions.cuh"
case 4:
# 168 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 4, true> )(d_data, d_wrk_mem, size);
# 169 "./thread_fence_reductions.cuh"
break;
# 171 "./thread_fence_reductions.cuh"
case 2:
# 172 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 2, true> )(d_data, d_wrk_mem, size);
# 173 "./thread_fence_reductions.cuh"
break;
# 175 "./thread_fence_reductions.cuh"
case 1:
# 176 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 1, true> )(d_data, d_wrk_mem, size);
# 177 "./thread_fence_reductions.cuh"
break;
# 178 "./thread_fence_reductions.cuh"
}
# 179 "./thread_fence_reductions.cuh"
} else
# 181 "./thread_fence_reductions.cuh"
{
# 182 "./thread_fence_reductions.cuh"
switch (threads)
# 183 "./thread_fence_reductions.cuh"
{
# 184 "./thread_fence_reductions.cuh"
case 512:
# 185 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 512, false> )(d_data, d_wrk_mem, size);
# 186 "./thread_fence_reductions.cuh"
break;
# 188 "./thread_fence_reductions.cuh"
case 256:
# 189 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 256, false> )(d_data, d_wrk_mem, size);
# 190 "./thread_fence_reductions.cuh"
break;
# 192 "./thread_fence_reductions.cuh"
case 128:
# 193 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 128, false> )(d_data, d_wrk_mem, size);
# 194 "./thread_fence_reductions.cuh"
break;
# 196 "./thread_fence_reductions.cuh"
case 64:
# 197 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 64, false> )(d_data, d_wrk_mem, size);
# 198 "./thread_fence_reductions.cuh"
break;
# 200 "./thread_fence_reductions.cuh"
case 32:
# 201 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 32, false> )(d_data, d_wrk_mem, size);
# 202 "./thread_fence_reductions.cuh"
break;
# 204 "./thread_fence_reductions.cuh"
case 16:
# 205 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 16, false> )(d_data, d_wrk_mem, size);
# 206 "./thread_fence_reductions.cuh"
break;
# 208 "./thread_fence_reductions.cuh"
case 8:
# 209 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 8, false> )(d_data, d_wrk_mem, size);
# 210 "./thread_fence_reductions.cuh"
break;
# 212 "./thread_fence_reductions.cuh"
case 4:
# 213 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 4, false> )(d_data, d_wrk_mem, size);
# 214 "./thread_fence_reductions.cuh"
break;
# 216 "./thread_fence_reductions.cuh"
case 2:
# 217 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 2, false> )(d_data, d_wrk_mem, size);
# 218 "./thread_fence_reductions.cuh"
break;
# 220 "./thread_fence_reductions.cuh"
case 1:
# 221 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_reduce_threadfence< T, 1, false> )(d_data, d_wrk_mem, size);
# 222 "./thread_fence_reductions.cuh"
break;
# 223 "./thread_fence_reductions.cuh"
}
# 224 "./thread_fence_reductions.cuh"
}
# 226 "./thread_fence_reductions.cuh"
T gpu_result;
# 227 "./thread_fence_reductions.cuh"
cudaMemcpy(&gpu_result, d_wrk_mem, sizeof(T), cudaMemcpyDeviceToHost);
# 228 "./thread_fence_reductions.cuh"
return gpu_result;
# 229 "./thread_fence_reductions.cuh"
}
# 247 "./thread_fence_reductions.cuh"
template< class T, unsigned block_size, bool nIsPow2> static void
# 248 "./thread_fence_reductions.cuh"
__wrapper__device_stub_kernel_DZdreduce_threadfence(const T *&d_arr_in, cuDoubleComplex *&d_psi, T *&d_wrk_mem, unsigned &n) {exit(1);}
# 247 "./thread_fence_reductions.cuh"
template< class T, unsigned block_size, bool nIsPow2> void
# 248 "./thread_fence_reductions.cuh"
kernel_DZdreduce_threadfence(const T *d_arr_in, cuDoubleComplex *d_psi, T *d_wrk_mem, unsigned n)
# 249 "./thread_fence_reductions.cuh"
{__wrapper__device_stub_kernel_DZdreduce_threadfence<T,block_size,nIsPow2>(d_arr_in,d_psi,d_wrk_mem,n);
# 309 "./thread_fence_reductions.cuh"
return;}
# 311 "./thread_fence_reductions.cuh"
template< class T> T
# 312 "./thread_fence_reductions.cuh"
threadfence_DZdreduce(T *d_data, cuDoubleComplex *d_psi, T *d_wrk_mem, const int size, int threads)
# 313 "./thread_fence_reductions.cuh"
{
# 314 "./thread_fence_reductions.cuh"
int blocks = (int)ceil(((float)size) / threads);
# 315 "./thread_fence_reductions.cuh"
dim3 dimBlock(threads, 1, 1);
# 316 "./thread_fence_reductions.cuh"
dim3 dimGrid(blocks, 1, 1);
# 317 "./thread_fence_reductions.cuh"
int smemSize = threads * sizeof(T);
# 320 "./thread_fence_reductions.cuh"
if (isPow2(size))
# 321 "./thread_fence_reductions.cuh"
{
# 322 "./thread_fence_reductions.cuh"
switch (threads)
# 323 "./thread_fence_reductions.cuh"
{
# 324 "./thread_fence_reductions.cuh"
case 512:
# 325 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 512, true> )(d_data, d_psi, d_wrk_mem, size);
# 326 "./thread_fence_reductions.cuh"
break;
# 328 "./thread_fence_reductions.cuh"
case 256:
# 329 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 256, true> )(d_data, d_psi, d_wrk_mem, size);
# 330 "./thread_fence_reductions.cuh"
break;
# 332 "./thread_fence_reductions.cuh"
case 128:
# 333 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 128, true> )(d_data, d_psi, d_wrk_mem, size);
# 334 "./thread_fence_reductions.cuh"
break;
# 336 "./thread_fence_reductions.cuh"
case 64:
# 337 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 64, true> )(d_data, d_psi, d_wrk_mem, size);
# 338 "./thread_fence_reductions.cuh"
break;
# 340 "./thread_fence_reductions.cuh"
case 32:
# 341 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 32, true> )(d_data, d_psi, d_wrk_mem, size);
# 342 "./thread_fence_reductions.cuh"
break;
# 344 "./thread_fence_reductions.cuh"
case 16:
# 345 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 16, true> )(d_data, d_psi, d_wrk_mem, size);
# 346 "./thread_fence_reductions.cuh"
break;
# 348 "./thread_fence_reductions.cuh"
case 8:
# 349 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 8, true> )(d_data, d_psi, d_wrk_mem, size);
# 350 "./thread_fence_reductions.cuh"
break;
# 352 "./thread_fence_reductions.cuh"
case 4:
# 353 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 4, true> )(d_data, d_psi, d_wrk_mem, size);
# 354 "./thread_fence_reductions.cuh"
break;
# 356 "./thread_fence_reductions.cuh"
case 2:
# 357 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 2, true> )(d_data, d_psi, d_wrk_mem, size);
# 358 "./thread_fence_reductions.cuh"
break;
# 360 "./thread_fence_reductions.cuh"
case 1:
# 361 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 1, true> )(d_data, d_psi, d_wrk_mem, size);
# 362 "./thread_fence_reductions.cuh"
break;
# 363 "./thread_fence_reductions.cuh"
}
# 364 "./thread_fence_reductions.cuh"
} else
# 366 "./thread_fence_reductions.cuh"
{
# 367 "./thread_fence_reductions.cuh"
switch (threads)
# 368 "./thread_fence_reductions.cuh"
{
# 369 "./thread_fence_reductions.cuh"
case 512:
# 370 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 512, false> )(d_data, d_psi, d_wrk_mem, size);
# 371 "./thread_fence_reductions.cuh"
break;
# 373 "./thread_fence_reductions.cuh"
case 256:
# 374 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 256, false> )(d_data, d_psi, d_wrk_mem, size);
# 375 "./thread_fence_reductions.cuh"
break;
# 377 "./thread_fence_reductions.cuh"
case 128:
# 378 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 128, false> )(d_data, d_psi, d_wrk_mem, size);
# 379 "./thread_fence_reductions.cuh"
break;
# 381 "./thread_fence_reductions.cuh"
case 64:
# 382 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 64, false> )(d_data, d_psi, d_wrk_mem, size);
# 383 "./thread_fence_reductions.cuh"
break;
# 385 "./thread_fence_reductions.cuh"
case 32:
# 386 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 32, false> )(d_data, d_psi, d_wrk_mem, size);
# 387 "./thread_fence_reductions.cuh"
break;
# 389 "./thread_fence_reductions.cuh"
case 16:
# 390 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 16, false> )(d_data, d_psi, d_wrk_mem, size);
# 391 "./thread_fence_reductions.cuh"
break;
# 393 "./thread_fence_reductions.cuh"
case 8:
# 394 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 8, false> )(d_data, d_psi, d_wrk_mem, size);
# 395 "./thread_fence_reductions.cuh"
break;
# 397 "./thread_fence_reductions.cuh"
case 4:
# 398 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 4, false> )(d_data, d_psi, d_wrk_mem, size);
# 399 "./thread_fence_reductions.cuh"
break;
# 401 "./thread_fence_reductions.cuh"
case 2:
# 402 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 2, false> )(d_data, d_psi, d_wrk_mem, size);
# 403 "./thread_fence_reductions.cuh"
break;
# 405 "./thread_fence_reductions.cuh"
case 1:
# 406 "./thread_fence_reductions.cuh"
(cudaConfigureCall(dimGrid, dimBlock, smemSize)) ? (void)0 : (kernel_DZdreduce_threadfence< T, 1, false> )(d_data, d_psi, d_wrk_mem, size);
# 407 "./thread_fence_reductions.cuh"
break;
# 408 "./thread_fence_reductions.cuh"
}
# 409 "./thread_fence_reductions.cuh"
}
# 411 "./thread_fence_reductions.cuh"
T gpu_result;
# 412 "./thread_fence_reductions.cuh"
cudaMemcpy(&gpu_result, d_wrk_mem, sizeof(T), cudaMemcpyDeviceToHost);
# 413 "./thread_fence_reductions.cuh"
return gpu_result;
# 414 "./thread_fence_reductions.cuh"
}
# 30 "./Integration.hpp"
template< int nx, int ny, int nz, int strides> static void
# 31 "./Integration.hpp"
__wrapper__device_stub_kernel_RC_mult(const double *__restrict__ &entity, const cuDoubleComplex *__restrict__ &
# 32 "./Integration.hpp"
arr_in, cuDoubleComplex *__restrict__ &
# 33 "./Integration.hpp"
arr_out) {exit(1);}
# 30 "./Integration.hpp"
template< int nx, int ny, int nz, int strides> void
# 31 "./Integration.hpp"
kernel_RC_mult(const double *__restrict__ entity, const cuDoubleComplex *__restrict__
# 32 "./Integration.hpp"
arr_in, cuDoubleComplex *__restrict__
# 33 "./Integration.hpp"
arr_out)
# 34 "./Integration.hpp"
{__wrapper__device_stub_kernel_RC_mult<nx,ny,nz,strides>(entity,arr_in,arr_out);
# 49 "./Integration.hpp"
return;}
# 58 "./Integration.hpp"
struct evaluate_functional : public thrust::binary_function< double, double2, double> {
# 61 "./Integration.hpp"
double operator()(double entity, cuDoubleComplex psi)
# 62 "./Integration.hpp"
{
# 66 "./Integration.hpp"
return ((double)entity) * (((psi.x) * (psi.x)) + ((psi.y) * (psi.y)));
# 67 "./Integration.hpp"
}
# 68 "./Integration.hpp"
};
# 74 "./Integration.hpp"
template< int nx, int ny, int nz>
# 75 "./Integration.hpp"
class Integration {
# 79 "./Integration.hpp"
cublasHandle_t cublas_handle;
# 80 "./Integration.hpp"
double *d_norm, h_norm;
# 81 "./Integration.hpp"
cuDoubleComplex *d_int_val;
# 82 "./Integration.hpp"
cuDoubleComplex h_int_val;
# 83 "./Integration.hpp"
const size_t nxyz;
# 86 "./Integration.hpp"
void *d_wrk_mem;
# 87 "./Integration.hpp"
double *d_wrk_memD;
# 88 "./Integration.hpp"
cuDoubleComplex *d_wrk_memZ;
# 94 "./Integration.hpp"
public: Integration() : nxyz(((nx * ny) * nz))
# 95 "./Integration.hpp"
{
# 96 "./Integration.hpp"
printf("Constructing integration utility for lattice %dx%dx%d\n", nx, ny, nz);
# 99 "./Integration.hpp"
_cuErrCheck(cudaMalloc((void **)(&(d_wrk_mem)), ((((size_t)nx) * ((size_t)ny)) * ((size_t)nz)) * sizeof(cuDoubleComplex)), "./Integration.hpp", 99);
# 100 "./Integration.hpp"
(d_wrk_memD) = ((double *)(d_wrk_mem));
# 101 "./Integration.hpp"
(d_wrk_memZ) = ((cuDoubleComplex *)(d_wrk_mem));
# 102 "./Integration.hpp"
_cuErrCheck(cudaMalloc((void **)(&(d_int_val)), sizeof(cuDoubleComplex)), "./Integration.hpp", 102);
# 103 "./Integration.hpp"
_cuErrCheck(cudaMalloc((void **)(&(d_norm)), sizeof(double)), "./Integration.hpp", 103);
# 106 "./Integration.hpp"
_cuErrCheck(cudaMemset((void *)(d_int_val), 0, (size_t)sizeof(cuDoubleComplex)), "./Integration.hpp", 106);
# 107 "./Integration.hpp"
_cuErrCheck(cudaMemset((void *)(d_wrk_memZ), 0, ((((size_t)nx) * ((size_t)ny)) * ((size_t)nz)) * sizeof(cuDoubleComplex)), "./Integration.hpp", 107);
# 110 "./Integration.hpp"
CheckCublas(cublasCreate_v2(&(cublas_handle)), "./Integration.hpp", 110);
# 111 "./Integration.hpp"
CheckCublas(cublasSetPointerMode_v2(cublas_handle, CUBLAS_POINTER_MODE_DEVICE), "./Integration.hpp", 111);
# 113 "./Integration.hpp"
}
# 117 "./Integration.hpp"
~Integration()
# 118 "./Integration.hpp"
{
# 120 "./Integration.hpp"
CheckCublas(cublasDestroy_v2(cublas_handle), "./Integration.hpp", 120);
# 122 "./Integration.hpp"
if (d_wrk_mem) { cudaFree(d_wrk_mem); }
# 123 "./Integration.hpp"
}
# 132 "./Integration.hpp"
double get_norm_cublas(const cuDoubleComplex *__restrict__ arr)
# 133 "./Integration.hpp"
{
# 134 "./Integration.hpp"
CheckCublas(cublasDznrm2_v2(cublas_handle, (nx * ny) * nz, arr, 1, d_norm), "./Integration.hpp", 134);
# 135 "./Integration.hpp"
_cuErrCheck(cudaMemcpy(&(h_norm), d_norm, sizeof(double), cudaMemcpyDeviceToHost), "./Integration.hpp", 135);
# 136 "./Integration.hpp"
return h_norm;
# 137 "./Integration.hpp"
}
# 139 "./Integration.hpp"
double normalize_cublas(cuDoubleComplex *arr, double norm_scale = (1.0))
# 140 "./Integration.hpp"
{
# 142 "./Integration.hpp"
(h_norm) = this->get_norm_cublas(arr);
# 143 "./Integration.hpp"
(h_norm) = (norm_scale / (h_norm));
# 144 "./Integration.hpp"
_cuErrCheck(cudaMemcpy(d_norm, &(h_norm), sizeof(double), cudaMemcpyHostToDevice), "./Integration.hpp", 144);
# 146 "./Integration.hpp"
CheckCublas(cublasZdscal_v2(cublas_handle, (nx * ny) * nz, d_norm, arr, 1), "./Integration.hpp", 146);
# 148 "./Integration.hpp"
return (1.0) / (h_norm);
# 149 "./Integration.hpp"
}
# 156 "./Integration.hpp"
cuDoubleComplex get_exp_val_rect_cublas(double *entity, cuDoubleComplex *psi)
# 157 "./Integration.hpp"
{
# 159 "./Integration.hpp"
int nthreads = 1024;
# 160 "./Integration.hpp"
dim3 gpu_threads(nthreads);
# 161 "./Integration.hpp"
dim3 gpu_blocks(((((nx * ny) * nz) + nthreads) + 1) / nthreads);
# 162 "./Integration.hpp"
(cudaConfigureCall((int)ceilf(((float)((nx * ny) * nz)) / nthreads), nthreads)) ? (void)0 : (kernel_RC_mult< nx, ny, nz, 1> )(entity, psi, d_wrk_memZ);
# 165 "./Integration.hpp"
CheckCublas(cublasZdotc_v2(cublas_handle, (nx * ny) * nz, psi, 1, d_wrk_memZ, 1, d_int_val), "./Integration.hpp", 165);
# 167 "./Integration.hpp"
_cuErrCheck(cudaMemcpy(&(h_int_val), d_int_val, sizeof(cuDoubleComplex), cudaMemcpyDeviceToHost), "./Integration.hpp", 167);
# 169 "./Integration.hpp"
return h_int_val;
# 170 "./Integration.hpp"
}
# 175 "./Integration.hpp"
double get_exp_val_rect_thrust(double *d_array1, cuDoubleComplex *d_array2)
# 176 "./Integration.hpp"
{
# 177 "./Integration.hpp"
thrust::plus< double> op_plus;
# 178 "./Integration.hpp"
evaluate_functional op_func;
# 183 "./Integration.hpp"
return thrust::inner_product(thrust::device_pointer_cast< double> (d_array1), ((thrust::device_pointer_cast< double> (d_array1)) + (nxyz)), thrust::device_pointer_cast< double2> (d_array2), 0, op_plus, op_func);
# 185 "./Integration.hpp"
}
# 199 "./Integration.hpp"
double get_exp_val_rect_custom(double *d_entity, cuDoubleComplex *d_psi, const int
# 200 "./Integration.hpp"
threads = 1024, cudaStream_t stream = 0)
# 201 "./Integration.hpp"
{
# 203 "./Integration.hpp"
int blocks = (int)ceil(((float)(nxyz)) / threads);
# 204 "./Integration.hpp"
unsigned lthreads = threads / 2;
# 205 "./Integration.hpp"
if (lthreads < (64)) { lthreads = (64); }
# 206 "./Integration.hpp"
unsigned new_blocks, current_size;
# 209 "./Integration.hpp"
call_DZdreduction(blocks, lthreads, nxyz, d_entity, d_psi, d_wrk_memD, stream);
# 212 "./Integration.hpp"
current_size = blocks;
# 213 "./Integration.hpp"
while (current_size > (1))
# 214 "./Integration.hpp"
{
# 215 "./Integration.hpp"
new_blocks = ((int)ceil(((float)current_size) / threads));
# 216 "./Integration.hpp"
lthreads = (opt_threads(new_blocks, threads, current_size) / 2);
# 217 "./Integration.hpp"
if (lthreads < (64)) { lthreads = (64); }
# 218 "./Integration.hpp"
call_reduction_kernel< double> (new_blocks, lthreads, current_size, d_wrk_memD, d_wrk_memD, stream);
# 219 "./Integration.hpp"
current_size = new_blocks;
# 220 "./Integration.hpp"
}
# 222 "./Integration.hpp"
double result;
# 223 "./Integration.hpp"
cudaMemcpy(&result, d_wrk_memD, sizeof(double), cudaMemcpyDeviceToHost);
# 225 "./Integration.hpp"
return result;
# 226 "./Integration.hpp"
}
# 228 "./Integration.hpp"
double get_exp_val_rect_threadfence(double *d_entity, cuDoubleComplex *d_psi, const int threads = 256)
# 229 "./Integration.hpp"
{
# 230 "./Integration.hpp"
return threadfence_DZdreduce< double> (d_entity, d_psi, d_wrk_memD, nxyz, threads);
# 231 "./Integration.hpp"
}
# 234 "./Integration.hpp"
};
# 34 "test_norm.cu"
inline double __complex__ gaussian3D(double x, double y, double z, double sigma)
# 35 "test_norm.cu"
{
# 36 "test_norm.cu"
return cexp(((-(1.0)) * (((x * x) + (y * y)) + (z * z))) / (((2.0) * sigma) * sigma));
# 38 "test_norm.cu"
}
# 40 "test_norm.cu"
inline void fill_array(double __complex__ *psi, double *params)
# 41 "test_norm.cu"
{
        
# 42 "test_norm.cu"
#pragma omp parallel for num_threads(8)
# 42 "test_norm.cu"

for (int ix = 0; ix < 128; ix++) {
# 44 "test_norm.cu"
for (int iy = 0; iy < 128; iy++) {
# 45 "test_norm.cu"
for (int iz = 0; iz < 128; iz++)
# 46 "test_norm.cu"
{
# 47 "test_norm.cu"
(psi[iz + (128 * (iy + (128 * ix)))]) = (gaussian3D(((double)ix) - (128 / 2), ((double)iy) - (128 / 2), ((double)iz) - (128 / 2), params[0]) + ((__extension__ (0.0F + 1.0Fi)) * ((0.0))));
# 48 "test_norm.cu"
} } }
# 49 "test_norm.cu"
}
# 55 "test_norm.cu"
template< class T> inline void
# 56 "test_norm.cu"
save_file(const char *filename, void *data, size_t size)
# 57 "test_norm.cu"
{
# 58 "test_norm.cu"
FILE *file = fopen(filename, "wb");
# 59 "test_norm.cu"
fwrite(data, ((size_t)size) * sizeof(T), 1, file);
# 60 "test_norm.cu"
fclose(file);
# 61 "test_norm.cu"
}
# 63 "test_norm.cu"
int main(int argc, char *argv[])
# 64 "test_norm.cu"
{
# 65 "test_norm.cu"
double __complex__ *h_psi;
# 66 "test_norm.cu"
cuDoubleComplex *d_psi;
# 67 "test_norm.cu"
_cuErrCheck(cudaMallocHost((void **)(&h_psi), ((size_t)((128 * 128) * 128)) * sizeof(double __complex__)), "test_norm.cu", 67);
# 68 "test_norm.cu"
_cuErrCheck(cudaMalloc((void **)(&d_psi), ((size_t)((128 * 128) * 128)) * sizeof(cuDoubleComplex)), "test_norm.cu", 68);
# 73 "test_norm.cu"
Integration< 128, 128, 128> *integ = new Integration< 128, 128, 128> ();
# 77 "test_norm.cu"
double sigma = (5.0);
# 78 "test_norm.cu"
fill_array(h_psi, &sigma);
# 79 "test_norm.cu"
save_file< double __complex__> ("orginal.bin", (void *)h_psi, (128 * 128) * 128);
# 80 "test_norm.cu"
_cuErrCheck(cudaMemcpy(d_psi, h_psi, ((((size_t)128) * (128)) * (128)) * sizeof(cuDoubleComplex), cudaMemcpyHostToDevice), "test_norm.cu", 80);
# 83 "test_norm.cu"
double norm = (0.0);
# 84 "test_norm.cu"
norm = integ->normalize_cublas(d_psi);
# 86 "test_norm.cu"
printf("psi(0,0): %lf\n", creal(h_psi[(128 / 2) + (128 * ((128 / 2) + ((128 * 128) / 2)))]));
# 87 "test_norm.cu"
printf("norm^2= %lf\t\t(sigma*sigma*pi)^(3/2): %lf\n", norm * norm, pow((sigma * sigma) * (3.141592653589793116), (1.5)));
# 89 "test_norm.cu"
printf("%lf\n", integ->get_norm_cublas(d_psi));
# 90 "test_norm.cu"
_cuErrCheck(cudaMemcpy(h_psi, d_psi, ((((size_t)128) * (128)) * (128)) * sizeof(cuDoubleComplex), cudaMemcpyDeviceToHost), "test_norm.cu", 90);
# 93 "test_norm.cu"
printf("psi(0,0): %lf\t%lf\n", creal(h_psi[(128 / 2) + (128 * ((128 / 2) + ((128 * 128) / 2)))]), (1.0) / norm);
# 95 "test_norm.cu"
delete integ;
# 96 "test_norm.cu"
cudaFree(d_psi);
# 97 "test_norm.cu"
cudaFreeHost(h_psi);
# 99 "test_norm.cu"
return 0;
# 100 "test_norm.cu"
}
# 1 "test_norm.cudafe1.stub.c"
# 1 "test_norm.cudafe1.stub.c"
# 1 "./test_norm_keep/test_norm.cudafe1.stub.c" 1 3
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-function"
#pragma GCC diagnostic ignored "-Wcast-qual"

# 1 "/usr/local/cuda/include/crt/host_runtime.h" 1 3
# 74 "/usr/local/cuda/include/crt/host_runtime.h" 3

# 74 "/usr/local/cuda/include/crt/host_runtime.h" 3
template <typename T>
static inline T *__cudaAddressOf(T &val)
{
    return (T *)((void *)(&(const_cast<char &>(reinterpret_cast<const volatile char &>(val)))));
}
# 121 "/usr/local/cuda/include/crt/host_runtime.h" 3
static void ____nv_dummy_param_ref(void *param) { volatile static void **__ref __attribute__((unused)); __ref = (volatile void **)param; }




extern "C" {
void __cudaRegisterLinkedBinary__NV_MODULE_ID ( void (*)(void **), void *, void *, void (*)(void *));
}




extern "C" {







  static const unsigned char __module_id_str[] __attribute__((section ("__nv_module_id"))) = "__NV_MODULE_ID";
# 152 "/usr/local/cuda/include/crt/host_runtime.h" 3
}

extern "C" {
extern void** __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __cudaRegisterVar(
        void **fatCubinHandle,
        char *hostVar,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        int size,
        int constant,
        int global
);

extern void __cudaRegisterManagedVar(
        void **fatCubinHandle,
        void **hostVarPtrAddress,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        int size,
        int constant,
        int global
);

extern char __cudaInitModule(
        void **fatCubinHandle
);

extern void __cudaRegisterTexture(
        void **fatCubinHandle,
  const struct textureReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int norm,
        int ext
);

extern void __cudaRegisterSurface(
        void **fatCubinHandle,
  const struct surfaceReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int ext
);

extern void __cudaRegisterFunction(
        void **fatCubinHandle,
  const char *hostFun,
        char *deviceFun,
  const char *deviceName,
        int thread_limit,
        uint3 *tid,
        uint3 *bid,
        dim3 *bDim,
        dim3 *gDim,
        int *wSize
);





extern int atexit(void(*)(void)) throw();





}

static void **__cudaFatCubinHandle;

static void __cudaUnregisterBinaryUtil(void)
{
  ____nv_dummy_param_ref((void *)&__cudaFatCubinHandle);
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

static char __nv_init_managed_rt_with_module(void **handle)
{
  return __cudaInitModule(handle);
}

# 1 "/usr/local/cuda/include/common_functions.h" 1 3
# 249 "/usr/local/cuda/include/common_functions.h" 3
# 1 "/usr/local/cuda/include/math_functions.h" 1 3
# 10055 "/usr/local/cuda/include/math_functions.h" 3
# 1 "/usr/local/cuda/include/crt/func_macro.h" 1 3
# 10056 "/usr/local/cuda/include/math_functions.h" 2 3







inline double rsqrt(double a);

inline double rcbrt(double a);

inline double sinpi(double a);

inline double cospi(double a);

inline void sincospi(double a, double *sptr, double *cptr);

inline double erfinv(double a);

inline double erfcinv(double a);

inline double normcdfinv(double a);

inline double normcdf(double a);

inline double erfcx(double a);

inline float rsqrtf(float a);

inline float rcbrtf(float a);

inline float sinpif(float a);

inline float cospif(float a);

inline void sincospif(float a, float *sptr, float *cptr);

inline float erfinvf(float a);

inline float erfcinvf(float a);

inline float normcdfinvf(float a);

inline float normcdff(float a);

inline float erfcxf(float a);

inline int min(int a, int b);

inline unsigned int umin(unsigned int a, unsigned int b);

inline long long int llmin(long long int a, long long int b);

inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b);

inline int max(int a, int b);

inline unsigned int umax(unsigned int a, unsigned int b);

inline long long int llmax(long long int a, long long int b);

inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b);
# 10327 "/usr/local/cuda/include/math_functions.h" 3
# 1 "/usr/local/cuda/include/math_functions.hpp" 1 3
# 1095 "/usr/local/cuda/include/math_functions.hpp" 3
# 1 "/usr/local/cuda/include/math_constants.h" 1 3
# 1096 "/usr/local/cuda/include/math_functions.hpp" 2 3
# 3420 "/usr/local/cuda/include/math_functions.hpp" 3
inline double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

inline double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  }
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;



  if (__signbit(a))

  {
    t = -t;
  }
  return t;
}

inline double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  }
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

inline double cospi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (__isinf(a)) {
    return cos (a);
  }
  if (fabs(a) > 9.0071992547409920e+015) {
    a = 0.0;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  n++;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  if (a == 0.0) {
    a = fabs(a);
  }
  return a;
}

inline void sincospi(double a, double *sptr, double *cptr)
{
  *sptr = sinpi(a);
  *cptr = cospi(a);
}

inline double erfinv(double a)
{
  double p, q, t, fa;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  fa = fabs(a);
  if (fa >= 1.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (fa == 1.0) {
      t = a * exp(1000.0);
    }
  } else if (fa >= 0.9375) {




    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {




    t = a * a - .87890625;
    p = .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q = t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {




    t = a * a - .5625;
    p = - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q = t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

inline double erfcinv(double a)
{
  double t;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);
    }
  }
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q = t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

inline double normcdfinv(double a)
{
  return -1.4142135623730951 * erfcinv(a + a);
}

inline double normcdf(double a)
{
  double ah, al, t1, t2, u1, u2, v1, v2, z;
  if (fabs (a) > 38.5) a = copysign (38.5, a);
  ah = a * 134217729.0;
  u1 = (a - ah) + ah;
  u2 = a - u1;
  v1 = -7.0710678398609161e-01;
  v2 = 2.7995440410322203e-09;
  t1 = a * -7.0710678118654757e-1;
  t2 = (((u1 * v1 - t1) + u1 * v2) + u2 * v1) + u2 * v2;
  t2 = (a * -(-4.8336466567264567e-17)) + t2;
  ah = t1 + t2;
  z = erfc (ah);
  if (a < -1.0) {
    al = (t1 - ah) + t2;
    t1 = -2.0 * ah * z;
    z = t1 * al + z;
  }
  return 0.5 * z;
}

inline double erfcx(double a)
{
  double x, t1, t2, t3;

  if (__isnan(a)) {
    return a + a;
  }
  x = fabs(a);
  if (x < 32.0) {
# 3738 "/usr/local/cuda/include/math_functions.hpp" 3
    t1 = x - 4.0;
    t2 = x + 4.0;
    t2 = t1 / t2;

    t1 = - 3.5602694826817400E-010;
    t1 = t1 * t2 - 9.7239122591447274E-009;
    t1 = t1 * t2 - 8.9350224851649119E-009;
    t1 = t1 * t2 + 1.0404430921625484E-007;
    t1 = t1 * t2 + 5.8806698585341259E-008;
    t1 = t1 * t2 - 8.2147414929116908E-007;
    t1 = t1 * t2 + 3.0956409853306241E-007;
    t1 = t1 * t2 + 5.7087871844325649E-006;
    t1 = t1 * t2 - 1.1231787437600085E-005;
    t1 = t1 * t2 - 2.4399558857200190E-005;
    t1 = t1 * t2 + 1.5062557169571788E-004;
    t1 = t1 * t2 - 1.9925637684786154E-004;
    t1 = t1 * t2 - 7.5777429182785833E-004;
    t1 = t1 * t2 + 5.0319698792599572E-003;
    t1 = t1 * t2 - 1.6197733895953217E-002;
    t1 = t1 * t2 + 3.7167515553018733E-002;
    t1 = t1 * t2 - 6.6330365827532434E-002;
    t1 = t1 * t2 + 9.3732834997115544E-002;
    t1 = t1 * t2 - 1.0103906603555676E-001;
    t1 = t1 * t2 + 6.8097054254735140E-002;
    t1 = t1 * t2 + 1.5379652102605428E-002;
    t1 = t1 * t2 - 1.3962111684056291E-001;
    t1 = t1 * t2 + 1.2329951186255526E+000;

    t2 = 2.0 * x + 1.0;
    t1 = t1 / t2;
  } else {

    t2 = 1.0 / x;
    t3 = t2 * t2;
    t1 = -29.53125;
    t1 = t1 * t3 + 6.5625;
    t1 = t1 * t3 - 1.875;
    t1 = t1 * t3 + 0.75;
    t1 = t1 * t3 - 0.5;
    t1 = t1 * t3 + 1.0;
    t2 = t2 * 5.6418958354775628e-001;
    t1 = t1 * t2;
  }
  if (a < 0.0) {

    t2 = ((int)(x * 16.0)) * 0.0625;
    t3 = (x - t2) * (x + t2);
    t3 = exp(t2 * t2) * exp(t3);
    t3 = t3 + t3;
    t1 = t3 - t1;
  }
  return t1;
}

inline float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

inline float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

inline float sinpif(float a)
{
  return (float)sinpi((double)a);
}

inline float cospif(float a)
{
  return (float)cospi((double)a);
}

inline void sincospif(float a, float *sptr, float *cptr)
{
  double s, c;

  sincospi((double)a, &s, &c);
  *sptr = (float)s;
  *cptr = (float)c;
}

inline float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

inline float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}

inline float normcdfinvf(float a)
{
  return (float)normcdfinv((double)a);
}

inline float normcdff(float a)
{
  return (float)normcdf((double)a);
}

inline float erfcxf(float a)
{
  return (float)erfcx((double)a);
}
# 10328 "/usr/local/cuda/include/math_functions.h" 2 3



# 1 "/usr/local/cuda/include/math_functions_dbl_ptx3.h" 1 3
# 270 "/usr/local/cuda/include/math_functions_dbl_ptx3.h" 3
# 1 "/usr/local/cuda/include/math_functions_dbl_ptx3.hpp" 1 3
# 271 "/usr/local/cuda/include/math_functions_dbl_ptx3.h" 2 3
# 10332 "/usr/local/cuda/include/math_functions.h" 2 3
# 250 "/usr/local/cuda/include/common_functions.h" 2 3
# 247 "/usr/local/cuda/include/crt/host_runtime.h" 2 3







#pragma pack()
# 6 "./test_norm_keep/test_norm.cudafe1.stub.c" 2 3
# 1 "./test_norm_keep/test_norm.fatbin.c" 1 3
# 1 "/usr/local/cuda/include/fatBinaryCtl.h" 1 3
# 33 "/usr/local/cuda/include/fatBinaryCtl.h" 3
# 1 "/usr/local/cuda/include/fatbinary.h" 1 3
# 49 "/usr/local/cuda/include/fatbinary.h" 3
typedef struct fatBinaryHeader *computeFatBinaryFormat_t;
# 78 "/usr/local/cuda/include/fatbinary.h" 3
struct __attribute__((aligned(8))) fatBinaryHeader
{
  unsigned int magic;
  unsigned short version;
  unsigned short headerSize;
  unsigned long long int fatSize;
};


typedef enum {
  FATBIN_KIND_PTX = 0x0001,
  FATBIN_KIND_ELF = 0x0002,
  FATBIN_KIND_OLDCUBIN = 0x0004,
} fatBinaryCodeKind;
# 34 "/usr/local/cuda/include/fatBinaryCtl.h" 2 3


extern "C" {







typedef enum {
  FBCTL_ERROR_NONE = 0,
  FBCTL_ERROR_NULL,
  FBCTL_ERROR_UNRECOGNIZED,
  FBCTL_ERROR_NO_CANDIDATE,
  FBCTL_ERROR_COMPILE_FAILED,
  FBCTL_ERROR_INTERNAL
} fatBinaryCtlError_t;
extern char* fatBinaryCtl_Errmsg (fatBinaryCtlError_t e);

extern fatBinaryCtlError_t fatBinaryCtl_Create (void* *data);

extern void fatBinaryCtl_Delete (void* data);


extern fatBinaryCtlError_t fatBinaryCtl (void* data, int request, ...);
# 75 "/usr/local/cuda/include/fatBinaryCtl.h" 3
typedef enum {
  fatBinary_PreferBestCode,
  fatBinary_AvoidPTX,
  fatBinary_ForcePTX,
  fatBinary_JITIfNotMatch
} fatBinary_CompilationPolicy;





extern fatBinaryCtlError_t fatBinaryCtl_PickCandidate (void* data);







extern fatBinaryCtlError_t fatBinaryCtl_Compile (void* data,
                                                 void* *elf, size_t *esize);
# 104 "/usr/local/cuda/include/fatBinaryCtl.h" 3
typedef struct {
  int magic;
  int version;
  const unsigned long long* data;
  void *filename_or_fatbins;

} __fatBinC_Wrapper_t;
# 133 "/usr/local/cuda/include/fatBinaryCtl.h" 3
}
# 2 "./test_norm_keep/test_norm.fatbin.c" 2 3


asm(
".section .nv_fatbin, \"a\"\n"
".align 8\n"
"fatbinData:\n"
".quad 0x00100001ba55ed50,0x0000000000000af8,0x0000004801010001,0x0000000000000ab0\n"
".quad 0x0000004000000aad,0x0000003400050000,0x0000000000000000,0x0000000000002015\n"
".quad 0x0000000000000000,0x000000000000487a,0x0000000000000000,0x762e1cf000010a13\n"
".quad 0x35206e6f69737265,0x677261742e0a302e,0x32355f6d73207465,0x7365726464612e0a\n"
".quad 0x3620657a69735f73,0x6f6c673af4002e34,0x696c612e206c6162,0x38622e2031206e67\n"
".quad 0x726874364e5a5f20,0x7473797336747375,0x6961746564366d65,0x657571657330316c\n"
".quad 0x6573336c6169746e,0x2e0a3b5d315b4571,0x0043646572616873,0x633453030043381f\n"
".quad 0x6235630048616475,0x37fe000d5f6b6c75,0x41424f4c475f3134,0x37315f5f4e5f5f4c\n"
".quad 0x6f6e5f747365745f,0x5f317070635f6d72,0x63363633645f6969,0x6f5f733931623231\n"
".quad 0x615f706968635f6e,0x726f7461636f6c6c,0x00c93b5d34325b45,0x6f7234531400860f\n"
".quad 0x0b00430f00c9746f,0x63616c70323102ff,0x737265646c6f6865,0x321f220036315f32\n"
".quad 0x220036331f220036,0x36351f220036341f,0x1f220036361f2200,0x0036381f22003637\n"
".quad 0x334f200036391f22,0x0f0712003730315f,0x203411ff00290a03,0x746572203233752e\n"
".quad 0x43746e656d657269,0x652e0a3b746e756f,0x033e206e72657478,0x5b61746164738002\n"
".quad 0x736939ff03ce3b5d,0x6e652e20656c6269,0x36315a5f20797274,0x445f6c656e72656b\n"
".quad 0x656375646572645a,0x45343230316a4c49,0x6f64375064507645,0x5f305332656c6275\n"
".quad 0x617261702e0a2869,0x003b3436752e206d,0x305f3f00395f111b,0x0043311f2e00432c\n"
".quad 0x32332f004332172f,0x0a290a33d0220043,0x2e206765722e0a7b,0x393c702563017070\n"
".quad 0x3233628500123b3e,0xa60011383c722520,0x3c64662520343666,0xc200130000243635\n"
".quad 0x0a3b3e31323c6472,0x2e220093646c0a0a,0x5b202c374f001875,0x004c3b5d2d220162\n"
".quad 0x4c311f24004c381f,0x1924004c361f0000,0x351f012001004c32,0x0a3b5d337324004b\n"
".quad 0x3101f30046766f6d,0x646961746325202c,0x7d6c68730a3b782e,0x3118001c2c362201\n"
".quad 0x6e25202c3762002c,0x3244001606002b74,0x646171001525202c,0x240018732e6f6c2e\n"
".quad 0x7300380000482c33,0x1c6464610a3b3272,0x37a000212c342400,0x6c2e707465730a3b\n"
".quad 0x3170250954004f74,0x6d0a3b35b300202c,0x6b656469772e6c75,0x1300712c39643200\n"
".quad 0x3132015502008138,0x0300630303a42c30,0x3900001c2c140016,0x617476630a3b9300\n"
".quad 0x003c0404116f742e,0x006b371e001f3211,0x56381900a4313123,0x312f00362c332600\n"
".quad 0x2f00c00105005631,0x5632130000563864,0x3526005736312900,0x3b32310cf100372c\n"
".quad 0x726220317025400a,0x3b345f3042422061,0x696e752e6172620a,0x170a0a3b3141000f\n"
".quad 0x00790302133a1000,0x5b202c3940032303,0x21001c3b5d2700a6,0x66257b32001f3276\n"
".quad 0x7d3131646652010f,0x0300a45d35220029,0x03001f343123003f,0x616d660a3b850007\n"
".quad 0x00a80000206e722e,0x341f000703004606,0x0a01c734130000e8,0x0f013f353128013e\n"
".quad 0x0b00383613010038,0x1f01213731280120,0x009136120500de36,0xdf37312a00de3713\n"
".quad 0x07371300b1321300,0x00f8321300df0c00,0x3b30323e00073618,0x0b00623232230168\n"
".quad 0x001f2c3332340141,0x342300620d005001,0x3263014e0601a72c,0x01067a74730a3b33\n"
".quad 0x1d5d12005a010029,0x01fd351301fd0b00,0x53321503383a312b,0x3f3215023f351103\n"
".quad 0x4232130042331a02,0x311f00023f331f00,0x331f00d7020c023f,0x0102012f0203023d\n"
".quad 0x01730200f9331c01,0x003d361900063217,0x002c0000802c3823,0x010f381f0801100f\n"
".quad 0x334804113a322903,0x457518004530202c,0xd300370300200000,0x732e7261620a3a35\n"
".quad 0x14048a3020636e79,0x31046d3313015267,0x5233150152313135,0xa20706723b372101\n"
".quad 0x642c352300d60000,0x361300001d3b1f00,0x363930342b62001d,0x3724001c0402dc5d\n"
".quad 0x0e0f00470100232c,0x371f00b937130902,0x2200b934130900b9,0x00b93415020b3532\n"
".quad 0xb9381f0200b9391f,0x324a00b939140900,0x30333400b9383430,0xb90f00470100232c\n"
".quad 0x1f00b93033230800,0x00b935130900b939,0x351500b937323131,0x0100ba31312f00b9\n"
".quad 0x33140800ba31332f,0xba0b070f2b1003a3,0x470100232c332400,0x022c040900ba0f00\n"
".quad 0x36130900bb31312f,0x1600ba33362100bb,0x0200ba331f00ba36,0x024a040900ba341f\n"
".quad 0x2400b93231352b4b,0x0f00460100222c36,0x1f00b936140900b9,0x00b937130900b933\n"
".quad 0x00b9371602e53312,0x6c6f768c00b93512,0x1900a5656c697461,0x150500260f00c237\n"
".quad 0x3402f7351b023f38,0x004f0100222c3933,0xd40a00470e00cb01,0x342f09006d391f00\n"
".quad 0x1831342511009330,0x32343402d1321b02,0x930f004f0100222c,0x0a006d32342f1100\n"
".quad 0x020e04120093331f,0x35343402a9362b2b,0x920f004e0100212c,0x1f0a006c351f1200\n"
".quad 0x2b01de0412009236,0x2c3834340282332b,0x00920f004e010021,0x391f0a006c381f12\n"
".quad 0x01b7303525110092,0x212c31353402490b,0x1100920f004e0100,0x321f0a006c31352f\n"
".quad 0x2b1b01dc04120092,0x00202c3435340247,0x141200910f004d01,0x4107da351303ae34\n"
".quad 0x381303a2732e656e,0x381603a1301103a2,0x0a800f060d0003a1,0x36642f0034311103\n"
".quad 0x01045d351000045d,0x1300097f5d1f0b2e,0x380109b70a0bf839,0x0162311200560509\n"
".quad 0x0300245b11083a07,0x3a37af08a20500c9,0x0a7d0a3b7465720a,0x383231353f160f39\n"
".quad 0x0f370e003a0e240f,0x0042311f2700420f,0x1d00420f0f350e2e,0x0f34381f010f340f\n"
".quad 0x5e0e300f34331f10,0x01670e260f330f01,0x0f01700e260f320f,0x300f01780e250f31\n"
".quad 0x130f30311aa8ff0f,0xff0f30311f0f3031,0x30311f0e213113e2,0x31130f30311a170f\n"
".quad 0x06b10f30311f0f30,0x311f220f300f010f,0x33150e7704130f30,0x770e290f300f0152\n"
".quad 0x30311f1f0f300f0e,0xb934150e7704130f,0x0e760e290f300f00,0x0f30311f1f0f300f\n"
".quad 0x311f0f2f33362913,0x2e0f0e750e2b0f2f,0x29140f2e311f1e0f,0x0f2e31150f2e3133\n"
".quad 0x0e75341f050e750f,0x0f400f0e75351e12,0x3b362f120e750f04,0x080f0e750d380f08\n"
".quad 0x7d0f0734362f6f0f,0x312f7d0f0732332f,0x0f06381f7d0f0736,0x0e75331c03ae0233\n"
".quad 0x03a137160e753719,0x75321f220e75351f,0x35312f07a5044c0e,0x753635323f1f0e75\n"
".quad 0x0e750e003a0e240e,0x0042311f2700420f,0x1d00420f0e750e2e,0x0e75371f010e750f\n"
".quad 0x5e0e300e75301f10,0x01670e260e750f01,0x0f01700e260e750f,0x750f01780e250e75\n"
".quad 0x130e75321aa8ff0e,0xff0e75321f0e7532,0x75321f0d663213e2,0x32130e75321a170e\n"
".quad 0x06b10e75321f0e75,0x321f220e750f010f,0x33150dbc04130e75,0xbc0e290e750f0152\n"
".quad 0x75321f1f0e750f0d,0x1f0e74333629130e,0x0f0dbb0e2a0e7432,0x130e73321f1e0e73\n"
".quad 0x7332150e73313329,0x27311f050dba0f0e,0x850f0dba321e120d,0x332f120d270f040e\n"
".quad 0x0f0dba0e380e4d3b,0x0e4c34362f6e0e4d,0x2f7d0e4c32332f7d,0x4b381f7d0e4c3631\n"
".quad 0xba311c066302330e,0xa136160dba36190d,0x342f210dba331f03,0xc93934244b0dba39\n"
".quad 0x313f1f0dba331f00,0x38322f252b673832,0x1f0800420f2d2b66,0x0f2b640e2e004231\n"
".quad 0x1f010dba0f1d0042,0x6337342f0f0dba36,0x362b6238322f312b,0x322f362b6138322f\n"
".quad 0xba38322f352b6038,0x130dba331ab7ff0d,0xff0dba331f0dba33,0xba331f0cab3313e2\n"
".quad 0x33130dba331a170d,0x06b10dba331f0dba,0x331f220dba0f010f,0x0db9333629130dba\n"
".quad 0x0d010d2a0db9331f,0x0db8331f1f0db80f,0x333f0db831332913,0x38322f0a0d00395f\n"
".quad 0x0d0039322e110a24,0x120bdb0f040dca0f,0x000e380d933b302f,0x34362f6e0d930f0d\n"
".quad 0x2ae632332f7d0d92,0x381f7d0d92361f7e,0x391c03ac01330d91,0x35150cff35190cff\n"
".quad 0x220cff31312f039f,0x7136144c0cff361f,0x361f1f0cff311f06,0x2d3863361f253865\n"
".quad 0x5f361f2d3861361f,0x1f1b385d361f2d38,0x0cfa341f100cfa35,0x361f36385b361f30\n"
".quad 0x353857361f363859,0x341ab8ff3855361f,0x341f0cf634130cf6,0x0be73413e2ff0cf6\n"
".quad 0xf6341a170cf6341f,0xf6341f0cf634130c,0x0cf60f010f06b10c,0x331a130cf6341f22\n"
".quad 0x0c3f375f343f3854,0x361e120c3f351f0b,0x650f0438650f0c3f,0x0cd20f0d11001109\n"
".quad 0x6e0cd20f0c3f0e37,0x332f7d0cd134362f,0x7e37b70f7e28b032,0x1c03ac013437b50f\n"
".quad 0x150c3f34190c3f37,0x220c3e391f039f34,0x0473044c0c3e331f,0x3b7465720a3a39c0\n"
".quad 0x0000000a0a0a7d0a\n"
".text\n");

extern "C" {

extern const unsigned long long fatbinData[353];

}


extern "C" {

static const __fatBinC_Wrapper_t __fatDeviceText __attribute__ ((aligned (8))) __attribute__ ((section (".nvFatBinSegment")))=
 { 0x466243b1, 1, fatbinData, 0 };

}
# 7 "./test_norm_keep/test_norm.cudafe1.stub.c" 2 3
static void __device_stub__Z16kernel_DZdreduceILj1024EEvPdP7double2S0_i(double *, cuDoubleComplex *, double *, int);
static void __device_stub__Z16kernel_DZdreduceILj512EEvPdP7double2S0_i(double *, cuDoubleComplex *, double *, int);
static void __device_stub__Z16kernel_DZdreduceILj256EEvPdP7double2S0_i(double *, cuDoubleComplex *, double *, int);
static void __device_stub__Z16kernel_DZdreduceILj128EEvPdP7double2S0_i(double *, cuDoubleComplex *, double *, int);
static void __device_stub__Z16kernel_DZdreduceILj64EEvPdP7double2S0_i(double *, cuDoubleComplex *, double *, int);
static void __nv_cudaEntityRegisterCallback(void **);
static void __sti____cudaRegisterAll_17_test_norm_cpp1_ii_d366c12b(void) __attribute__((__constructor__));
static void __device_stub__Z16kernel_DZdreduceILj1024EEvPdP7double2S0_i(double *__par0, cuDoubleComplex *__par1, double *__par2, int __par3){if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return;{ volatile static char *__f __attribute__((unused)); __f = ((char *)((void ( *)(double *, cuDoubleComplex *, double *, int))kernel_DZdreduce<(unsigned int)1024u> )); (void)cudaLaunch(((char *)((void ( *)(double *, cuDoubleComplex *, double *, int))kernel_DZdreduce<(unsigned int)1024u> ))); };}
template<> void __wrapper__device_stub_kernel_DZdreduce<1024U>( double *&__cuda_0,::cuDoubleComplex *&__cuda_1,double *&__cuda_2,int &__cuda_3){__device_stub__Z16kernel_DZdreduceILj1024EEvPdP7double2S0_i( (double *&)__cuda_0,(::cuDoubleComplex *&)__cuda_1,(double *&)__cuda_2,(int &)__cuda_3);}
static void __device_stub__Z16kernel_DZdreduceILj512EEvPdP7double2S0_i(double *__par0, cuDoubleComplex *__par1, double *__par2, int __par3){if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return;{ volatile static char *__f __attribute__((unused)); __f = ((char *)((void ( *)(double *, cuDoubleComplex *, double *, int))kernel_DZdreduce<(unsigned int)512u> )); (void)cudaLaunch(((char *)((void ( *)(double *, cuDoubleComplex *, double *, int))kernel_DZdreduce<(unsigned int)512u> ))); };}
template<> void __wrapper__device_stub_kernel_DZdreduce<512U>( double *&__cuda_0,::cuDoubleComplex *&__cuda_1,double *&__cuda_2,int &__cuda_3){__device_stub__Z16kernel_DZdreduceILj512EEvPdP7double2S0_i( (double *&)__cuda_0,(::cuDoubleComplex *&)__cuda_1,(double *&)__cuda_2,(int &)__cuda_3);}
static void __device_stub__Z16kernel_DZdreduceILj256EEvPdP7double2S0_i(double *__par0, cuDoubleComplex *__par1, double *__par2, int __par3){if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return;{ volatile static char *__f __attribute__((unused)); __f = ((char *)((void ( *)(double *, cuDoubleComplex *, double *, int))kernel_DZdreduce<(unsigned int)256u> )); (void)cudaLaunch(((char *)((void ( *)(double *, cuDoubleComplex *, double *, int))kernel_DZdreduce<(unsigned int)256u> ))); };}
template<> void __wrapper__device_stub_kernel_DZdreduce<256U>( double *&__cuda_0,::cuDoubleComplex *&__cuda_1,double *&__cuda_2,int &__cuda_3){__device_stub__Z16kernel_DZdreduceILj256EEvPdP7double2S0_i( (double *&)__cuda_0,(::cuDoubleComplex *&)__cuda_1,(double *&)__cuda_2,(int &)__cuda_3);}
static void __device_stub__Z16kernel_DZdreduceILj128EEvPdP7double2S0_i(double *__par0, cuDoubleComplex *__par1, double *__par2, int __par3){if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return;{ volatile static char *__f __attribute__((unused)); __f = ((char *)((void ( *)(double *, cuDoubleComplex *, double *, int))kernel_DZdreduce<(unsigned int)128u> )); (void)cudaLaunch(((char *)((void ( *)(double *, cuDoubleComplex *, double *, int))kernel_DZdreduce<(unsigned int)128u> ))); };}
template<> void __wrapper__device_stub_kernel_DZdreduce<128U>( double *&__cuda_0,::cuDoubleComplex *&__cuda_1,double *&__cuda_2,int &__cuda_3){__device_stub__Z16kernel_DZdreduceILj128EEvPdP7double2S0_i( (double *&)__cuda_0,(::cuDoubleComplex *&)__cuda_1,(double *&)__cuda_2,(int &)__cuda_3);}
static void __device_stub__Z16kernel_DZdreduceILj64EEvPdP7double2S0_i(double *__par0, cuDoubleComplex *__par1, double *__par2, int __par3){if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return;{ volatile static char *__f __attribute__((unused)); __f = ((char *)((void ( *)(double *, cuDoubleComplex *, double *, int))kernel_DZdreduce<(unsigned int)64u> )); (void)cudaLaunch(((char *)((void ( *)(double *, cuDoubleComplex *, double *, int))kernel_DZdreduce<(unsigned int)64u> ))); };}
template<> void __wrapper__device_stub_kernel_DZdreduce<64U>( double *&__cuda_0,::cuDoubleComplex *&__cuda_1,double *&__cuda_2,int &__cuda_3){__device_stub__Z16kernel_DZdreduceILj64EEvPdP7double2S0_i( (double *&)__cuda_0,(::cuDoubleComplex *&)__cuda_1,(double *&)__cuda_2,(int &)__cuda_3);}
static void __nv_cudaEntityRegisterCallback(void **__T21){{ volatile static void **__ref __attribute__((unused)); __ref = (volatile void **)__T21; };__nv_save_fatbinhandle_for_managed_rt(__T21);__cudaRegisterFunction(__T21, (const char*)((void ( *)(double *, cuDoubleComplex *, double *, int))kernel_DZdreduce<(unsigned int)64u> ), (char*)"_Z16kernel_DZdreduceILj64EEvPdP7double2S0_i", "_Z16kernel_DZdreduceILj64EEvPdP7double2S0_i", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__T21, (const char*)((void ( *)(double *, cuDoubleComplex *, double *, int))kernel_DZdreduce<(unsigned int)128u> ), (char*)"_Z16kernel_DZdreduceILj128EEvPdP7double2S0_i", "_Z16kernel_DZdreduceILj128EEvPdP7double2S0_i", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__T21, (const char*)((void ( *)(double *, cuDoubleComplex *, double *, int))kernel_DZdreduce<(unsigned int)256u> ), (char*)"_Z16kernel_DZdreduceILj256EEvPdP7double2S0_i", "_Z16kernel_DZdreduceILj256EEvPdP7double2S0_i", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__T21, (const char*)((void ( *)(double *, cuDoubleComplex *, double *, int))kernel_DZdreduce<(unsigned int)512u> ), (char*)"_Z16kernel_DZdreduceILj512EEvPdP7double2S0_i", "_Z16kernel_DZdreduceILj512EEvPdP7double2S0_i", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__T21, (const char*)((void ( *)(double *, cuDoubleComplex *, double *, int))kernel_DZdreduce<(unsigned int)1024u> ), (char*)"_Z16kernel_DZdreduceILj1024EEvPdP7double2S0_i", "_Z16kernel_DZdreduceILj1024EEvPdP7double2S0_i", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterVar(__T21, (char*)&::retirementCount, (char*)"retirementCount", "retirementCount", 0, 4, 0, 0);__cudaRegisterVar(__T21, (char*)&::thrust::system::detail::sequential::seq, (char*)"_ZN6thrust6system6detail10sequential3seqE", "_ZN6thrust6system6detail10sequential3seqE", 0, 1, 0, 0);__cudaRegisterVar(__T21, (char*)&::thrust::system::cuda::detail::bulk_::root, (char*)"_ZN6thrust6system4cuda6detail5bulk_4rootE", "_ZN6thrust6system4cuda6detail5bulk_4rootE", 0, 1, 0, 0);__cudaRegisterVar(__T21, (char*)&::thrust::placeholders::_1, (char*)"_ZN6thrust12placeholders2_1E", "_ZN6thrust12placeholders2_1E", 0, 1, 0, 0);__cudaRegisterVar(__T21, (char*)&::thrust::placeholders::_2, (char*)"_ZN6thrust12placeholders2_2E", "_ZN6thrust12placeholders2_2E", 0, 1, 0, 0);__cudaRegisterVar(__T21, (char*)&::thrust::placeholders::_3, (char*)"_ZN6thrust12placeholders2_3E", "_ZN6thrust12placeholders2_3E", 0, 1, 0, 0);__cudaRegisterVar(__T21, (char*)&::thrust::placeholders::_4, (char*)"_ZN6thrust12placeholders2_4E", "_ZN6thrust12placeholders2_4E", 0, 1, 0, 0);__cudaRegisterVar(__T21, (char*)&::thrust::placeholders::_5, (char*)"_ZN6thrust12placeholders2_5E", "_ZN6thrust12placeholders2_5E", 0, 1, 0, 0);__cudaRegisterVar(__T21, (char*)&::thrust::placeholders::_6, (char*)"_ZN6thrust12placeholders2_6E", "_ZN6thrust12placeholders2_6E", 0, 1, 0, 0);__cudaRegisterVar(__T21, (char*)&::thrust::placeholders::_7, (char*)"_ZN6thrust12placeholders2_7E", "_ZN6thrust12placeholders2_7E", 0, 1, 0, 0);__cudaRegisterVar(__T21, (char*)&::thrust::placeholders::_8, (char*)"_ZN6thrust12placeholders2_8E", "_ZN6thrust12placeholders2_8E", 0, 1, 0, 0);__cudaRegisterVar(__T21, (char*)&::thrust::placeholders::_9, (char*)"_ZN6thrust12placeholders2_9E", "_ZN6thrust12placeholders2_9E", 0, 1, 0, 0);__cudaRegisterVar(__T21, (char*)&::thrust::placeholders::_10, (char*)"_ZN6thrust12placeholders3_10E", "_ZN6thrust12placeholders3_10E", 0, 1, 0, 0);__cudaRegisterVar(__T21, (char*)&::thrust::seq, (char*)"_ZN6thrust3seqE", "_ZN6thrust3seqE", 0, 1, 0, 0);}
static void __sti____cudaRegisterAll_17_test_norm_cpp1_ii_d366c12b(void){__cudaFatCubinHandle = __cudaRegisterFatBinary((void*)&__fatDeviceText); { void (*callback_fp)(void **) = (void (*)(void **))(__nv_cudaEntityRegisterCallback); (*callback_fp)(__cudaFatCubinHandle); } atexit(__cudaUnregisterBinaryUtil);}

#pragma GCC diagnostic pop
# 2 "test_norm.cudafe1.stub.c" 2
# 1 "test_norm.cudafe1.stub.c"
