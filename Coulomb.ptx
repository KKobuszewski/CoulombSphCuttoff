//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21124049
// Cuda compilation tools, release 8.0, V8.0.44
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_52
.address_size 64

	// .globl	_Z29__kernel_enlarge_1Dindexing__ILj128ELj64ELj32ELj64ELj96ELj112EEvP7double2S1_
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd
(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
;
.const .align 8 .b8 d_charge[8];
.const .align 8 .b8 d_lcutoff[8];
.const .align 8 .b8 __cudart_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.const .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};

.visible .entry _Z29__kernel_enlarge_1Dindexing__ILj128ELj64ELj32ELj64ELj96ELj112EEvP7double2S1_(
	.param .u64 _Z29__kernel_enlarge_1Dindexing__ILj128ELj64ELj32ELj64ELj96ELj112EEvP7double2S1__param_0,
	.param .u64 _Z29__kernel_enlarge_1Dindexing__ILj128ELj64ELj32ELj64ELj96ELj112EEvP7double2S1__param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .f64 	%fd<8>;
	.reg .b64 	%rd<20>;


	ld.param.u64 	%rd1, [_Z29__kernel_enlarge_1Dindexing__ILj128ELj64ELj32ELj64ELj96ELj112EEvP7double2S1__param_0];
	ld.param.u64 	%rd2, [_Z29__kernel_enlarge_1Dindexing__ILj128ELj64ELj32ELj64ELj96ELj112EEvP7double2S1__param_1];
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r1, %r2, %r3, %r4;
	setp.gt.u32	%p1, %r1, 262143;
	@%p1 bra 	BB0_2;

	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	cvt.u64.u32	%rd5, %r1;
	shr.u32 	%r5, %r1, 11;
	shl.b32 	%r6, %r5, 11;
	cvt.u64.u32	%rd6, %r6;
	sub.s64 	%rd7, %rd5, %rd6;
	shr.u64 	%rd8, %rd7, 5;
	shl.b64 	%rd9, %rd8, 5;
	mul.wide.u32 	%rd10, %r1, 16;
	add.s64 	%rd11, %rd4, %rd10;
	ld.global.v2.f64 	{%fd1, %fd2}, [%rd11];
	mul.f64 	%fd5, %fd2, %fd2;
	shl.b64 	%rd12, %rd8, 8;
	mul.wide.u32 	%rd13, %r5, 65536;
	add.s64 	%rd14, %rd13, %rd7;
	add.s64 	%rd15, %rd14, 4194416;
	sub.s64 	%rd16, %rd15, %rd9;
	add.s64 	%rd17, %rd12, %rd16;
	shl.b64 	%rd18, %rd17, 4;
	add.s64 	%rd19, %rd18, %rd3;
	fma.rn.f64 	%fd6, %fd1, %fd1, %fd5;
	mov.f64 	%fd7, 0d0000000000000000;
	st.global.v2.f64 	[%rd19+393216], {%fd6, %fd7};

BB0_2:
	ret;
}

	// .globl	_Z25kernel_coulomb_sph_cutoffILi256ELi256ELi256EEvP7double2S1_
.visible .entry _Z25kernel_coulomb_sph_cutoffILi256ELi256ELi256EEvP7double2S1_(
	.param .u64 _Z25kernel_coulomb_sph_cutoffILi256ELi256ELi256EEvP7double2S1__param_0,
	.param .u64 _Z25kernel_coulomb_sph_cutoffILi256ELi256ELi256EEvP7double2S1__param_1
)
{
	.local .align 4 .b8 	__local_depot1[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .b32 	%r<59>;
	.reg .f64 	%fd<123>;
	.reg .b64 	%rd<22>;


	mov.u64 	%rd21, __local_depot1;
	cvta.local.u64 	%SP, %rd21;
	ld.param.u64 	%rd6, [_Z25kernel_coulomb_sph_cutoffILi256ELi256ELi256EEvP7double2S1__param_0];
	ld.param.u64 	%rd7, [_Z25kernel_coulomb_sph_cutoffILi256ELi256ELi256EEvP7double2S1__param_1];
	add.u64 	%rd8, %SP, 4;
	cvta.to.local.u64 	%rd1, %rd8;
	add.u64 	%rd9, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd9;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r10, %r11, %r12;
	cvt.u64.u32	%rd3, %r1;
	setp.eq.s32	%p2, %r1, 0;
	cvta.to.global.u64 	%rd10, %rd6;
	mul.wide.u32 	%rd11, %r1, 16;
	add.s64 	%rd4, %rd10, %rd11;
	cvta.to.global.u64 	%rd12, %rd7;
	add.s64 	%rd5, %rd12, %rd11;
	@%p2 bra 	BB1_19;

	setp.gt.u32	%p3, %r1, 16777215;
	@%p3 bra 	BB1_20;

	cvt.u32.u64	%r13, %rd3;
	shr.s32 	%r14, %r1, 31;
	shr.u32 	%r15, %r14, 16;
	add.s32 	%r16, %r1, %r15;
	shr.s32 	%r17, %r16, 16;
	and.b32  	%r18, %r16, -65536;
	sub.s32 	%r19, %r13, %r18;
	shr.s32 	%r20, %r19, 31;
	shr.u32 	%r21, %r20, 24;
	add.s32 	%r22, %r19, %r21;
	shr.s32 	%r23, %r22, 8;
	and.b32  	%r24, %r22, -256;
	sub.s32 	%r25, %r19, %r24;
	ld.global.v2.f64 	{%fd29, %fd30}, [%rd4];
	shl.b32 	%r26, %r17, 1;
	bfe.s32 	%r27, %r17, 30, 1;
	shr.u32 	%r28, %r27, 24;
	add.s32 	%r29, %r26, %r28;
	and.b32  	%r30, %r29, -256;
	sub.s32 	%r31, %r17, %r30;
	cvt.rn.f64.s32	%fd31, %r31;
	mul.f64 	%fd32, %fd31, 0d4043BD3CC9BE45DE;
	mul.f64 	%fd33, %fd31, %fd32;
	shl.b32 	%r32, %r23, 1;
	bfe.s32 	%r33, %r23, 30, 1;
	shr.u32 	%r34, %r33, 24;
	add.s32 	%r35, %r32, %r34;
	and.b32  	%r36, %r35, -256;
	sub.s32 	%r37, %r23, %r36;
	cvt.rn.f64.s32	%fd34, %r37;
	mul.f64 	%fd35, %fd34, 0d4043BD3CC9BE45DE;
	mul.f64 	%fd36, %fd34, %fd35;
	mul.f64 	%fd37, %fd36, 0d3EF0000000000000;
	fma.rn.f64 	%fd38, %fd33, 0d3EF0000000000000, %fd37;
	shl.b32 	%r38, %r25, 1;
	bfe.s32 	%r39, %r25, 30, 1;
	shr.u32 	%r40, %r39, 24;
	add.s32 	%r41, %r38, %r40;
	and.b32  	%r42, %r41, -256;
	sub.s32 	%r43, %r25, %r42;
	cvt.rn.f64.s32	%fd39, %r43;
	mul.f64 	%fd40, %fd39, 0d4043BD3CC9BE45DE;
	mul.f64 	%fd41, %fd39, %fd40;
	fma.rn.f64 	%fd3, %fd41, 0d3EF0000000000000, %fd38;
	mul.f64 	%fd42, %fd3, 0d4008000000000000;
	sqrt.rn.f64 	%fd43, %fd42;
	ld.const.f64 	%fd44, [d_lcutoff];
	mul.f64 	%fd4, %fd44, %fd43;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r44, %temp}, %fd4;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd4;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.eq.s32	%p4, %r46, 2146435072;
	setp.eq.s32	%p5, %r44, 0;
	and.pred  	%p1, %p4, %p5;
	mov.f64 	%fd120, %fd4;
	@!%p1 bra 	BB1_4;
	bra.uni 	BB1_3;

BB1_3:
	mov.f64 	%fd45, 0d0000000000000000;
	mul.rn.f64 	%fd5, %fd4, %fd45;
	mov.f64 	%fd120, %fd5;

BB1_4:
	mov.f64 	%fd6, %fd120;
	mul.f64 	%fd46, %fd6, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r57, %fd46;
	st.local.u32 	[%rd2], %r57;
	cvt.rn.f64.s32	%fd47, %r57;
	neg.f64 	%fd48, %fd47;
	mov.f64 	%fd49, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd50, %fd48, %fd49, %fd6;
	mov.f64 	%fd51, 0d3C91A62633145C00;
	fma.rn.f64 	%fd52, %fd48, %fd51, %fd50;
	mov.f64 	%fd53, 0d397B839A252049C0;
	fma.rn.f64 	%fd116, %fd48, %fd53, %fd52;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r47}, %fd6;
	}
	and.b32  	%r48, %r47, 2145386496;
	setp.lt.u32	%p6, %r48, 1105199104;
	@%p6 bra 	BB1_6;

	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd9;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd116, [retval0+0];
	
	//{
	}// Callseq End 0
	ld.local.u32 	%r57, [%rd2];

BB1_6:
	add.s32 	%r5, %r57, 1;
	and.b32  	%r49, %r5, 1;
	shl.b32 	%r50, %r49, 3;
	setp.eq.b32	%p7, %r49, 1;
	selp.f64	%fd54, 0dBDA8FF8320FD8164, 0d3DE5DB65F9785EBA, %p7;
	mul.wide.u32 	%rd14, %r50, 8;
	mov.u64 	%rd15, __cudart_sin_cos_coeffs;
	add.s64 	%rd16, %rd14, %rd15;
	ld.const.f64 	%fd55, [%rd16+8];
	mul.rn.f64 	%fd10, %fd116, %fd116;
	fma.rn.f64 	%fd56, %fd54, %fd10, %fd55;
	ld.const.f64 	%fd57, [%rd16+16];
	fma.rn.f64 	%fd58, %fd56, %fd10, %fd57;
	ld.const.f64 	%fd59, [%rd16+24];
	fma.rn.f64 	%fd60, %fd58, %fd10, %fd59;
	ld.const.f64 	%fd61, [%rd16+32];
	fma.rn.f64 	%fd62, %fd60, %fd10, %fd61;
	ld.const.f64 	%fd63, [%rd16+40];
	fma.rn.f64 	%fd64, %fd62, %fd10, %fd63;
	ld.const.f64 	%fd65, [%rd16+48];
	fma.rn.f64 	%fd11, %fd64, %fd10, %fd65;
	fma.rn.f64 	%fd117, %fd11, %fd116, %fd116;
	setp.eq.s32	%p8, %r49, 0;
	@%p8 bra 	BB1_8;

	mov.f64 	%fd66, 0d3FF0000000000000;
	fma.rn.f64 	%fd117, %fd11, %fd10, %fd66;

BB1_8:
	and.b32  	%r51, %r5, 2;
	setp.eq.s32	%p9, %r51, 0;
	@%p9 bra 	BB1_10;

	mov.f64 	%fd67, 0d0000000000000000;
	mov.f64 	%fd68, 0dBFF0000000000000;
	fma.rn.f64 	%fd117, %fd117, %fd68, %fd67;

BB1_10:
	mov.f64 	%fd119, %fd4;
	@!%p1 bra 	BB1_12;
	bra.uni 	BB1_11;

BB1_11:
	mov.f64 	%fd69, 0d0000000000000000;
	mul.rn.f64 	%fd119, %fd4, %fd69;

BB1_12:
	mul.f64 	%fd70, %fd119, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r58, %fd70;
	st.local.u32 	[%rd1], %r58;
	cvt.rn.f64.s32	%fd71, %r58;
	neg.f64 	%fd72, %fd71;
	fma.rn.f64 	%fd74, %fd72, %fd49, %fd119;
	fma.rn.f64 	%fd76, %fd72, %fd51, %fd74;
	fma.rn.f64 	%fd121, %fd72, %fd53, %fd76;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r52}, %fd119;
	}
	and.b32  	%r53, %r52, 2145386496;
	setp.lt.u32	%p10, %r53, 1105199104;
	@%p10 bra 	BB1_14;

	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd119;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd121, [retval0+0];
	
	//{
	}// Callseq End 1
	ld.local.u32 	%r58, [%rd1];

BB1_14:
	add.s32 	%r9, %r58, 1;
	and.b32  	%r54, %r9, 1;
	shl.b32 	%r55, %r54, 3;
	setp.eq.b32	%p11, %r54, 1;
	selp.f64	%fd78, 0dBDA8FF8320FD8164, 0d3DE5DB65F9785EBA, %p11;
	mul.wide.u32 	%rd18, %r55, 8;
	add.s64 	%rd20, %rd18, %rd15;
	ld.const.f64 	%fd79, [%rd20+8];
	mul.rn.f64 	%fd22, %fd121, %fd121;
	fma.rn.f64 	%fd80, %fd78, %fd22, %fd79;
	ld.const.f64 	%fd81, [%rd20+16];
	fma.rn.f64 	%fd82, %fd80, %fd22, %fd81;
	ld.const.f64 	%fd83, [%rd20+24];
	fma.rn.f64 	%fd84, %fd82, %fd22, %fd83;
	ld.const.f64 	%fd85, [%rd20+32];
	fma.rn.f64 	%fd86, %fd84, %fd22, %fd85;
	ld.const.f64 	%fd87, [%rd20+40];
	fma.rn.f64 	%fd88, %fd86, %fd22, %fd87;
	ld.const.f64 	%fd89, [%rd20+48];
	fma.rn.f64 	%fd23, %fd88, %fd22, %fd89;
	fma.rn.f64 	%fd122, %fd23, %fd121, %fd121;
	setp.eq.s32	%p12, %r54, 0;
	@%p12 bra 	BB1_16;

	mov.f64 	%fd90, 0d3FF0000000000000;
	fma.rn.f64 	%fd122, %fd23, %fd22, %fd90;

BB1_16:
	and.b32  	%r56, %r9, 2;
	setp.eq.s32	%p13, %r56, 0;
	@%p13 bra 	BB1_18;

	mov.f64 	%fd91, 0d0000000000000000;
	mov.f64 	%fd92, 0dBFF0000000000000;
	fma.rn.f64 	%fd122, %fd122, %fd92, %fd91;

BB1_18:
	mul.f64 	%fd93, %fd3, 0d4170000000000000;
	ld.const.f64 	%fd94, [d_charge];
	mul.f64 	%fd95, %fd29, %fd94;
	mov.f64 	%fd96, 0d3FF0000000000000;
	sub.f64 	%fd97, %fd96, %fd117;
	mul.f64 	%fd98, %fd95, %fd97;
	mul.f64 	%fd99, %fd30, %fd94;
	sub.f64 	%fd100, %fd96, %fd122;
	mul.f64 	%fd101, %fd99, %fd100;
	div.rn.f64 	%fd102, %fd98, %fd93;
	div.rn.f64 	%fd103, %fd101, %fd93;
	st.global.v2.f64 	[%rd5], {%fd102, %fd103};
	bra.uni 	BB1_20;

BB1_19:
	ld.global.v2.f64 	{%fd104, %fd105}, [%rd4];
	ld.const.f64 	%fd108, [d_charge];
	mul.f64 	%fd109, %fd108, 0d3FF8000000000000;
	ld.const.f64 	%fd110, [d_lcutoff];
	mul.f64 	%fd111, %fd109, %fd110;
	mul.f64 	%fd112, %fd110, %fd111;
	mul.f64 	%fd113, %fd112, 0d3E70000000000000;
	mul.f64 	%fd114, %fd105, %fd113;
	mul.f64 	%fd115, %fd104, %fd113;
	st.global.v2.f64 	[%rd5], {%fd115, %fd114};

BB1_20:
	ret;
}

	// .globl	_Z28__kernel_lessen_1Dindexing__ILj128ELj64ELj32ELj64ELj96ELj112EEvP7double2Pd
.visible .entry _Z28__kernel_lessen_1Dindexing__ILj128ELj64ELj32ELj64ELj96ELj112EEvP7double2Pd(
	.param .u64 _Z28__kernel_lessen_1Dindexing__ILj128ELj64ELj32ELj64ELj96ELj112EEvP7double2Pd_param_0,
	.param .u64 _Z28__kernel_lessen_1Dindexing__ILj128ELj64ELj32ELj64ELj96ELj112EEvP7double2Pd_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<20>;


	ld.param.u64 	%rd1, [_Z28__kernel_lessen_1Dindexing__ILj128ELj64ELj32ELj64ELj96ELj112EEvP7double2Pd_param_0];
	ld.param.u64 	%rd2, [_Z28__kernel_lessen_1Dindexing__ILj128ELj64ELj32ELj64ELj96ELj112EEvP7double2Pd_param_1];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	setp.gt.u32	%p1, %r1, 262143;
	@%p1 bra 	BB2_2;

	cvt.u64.u32	%rd3, %r1;
	shr.u32 	%r5, %r1, 11;
	shl.b32 	%r6, %r5, 11;
	cvt.u64.u32	%rd4, %r6;
	sub.s64 	%rd5, %rd3, %rd4;
	shr.u64 	%rd6, %rd5, 5;
	shl.b64 	%rd7, %rd6, 5;
	shl.b64 	%rd8, %rd6, 8;
	mul.wide.u32 	%rd9, %r5, 65536;
	add.s64 	%rd10, %rd9, %rd5;
	add.s64 	%rd11, %rd10, 4194416;
	sub.s64 	%rd12, %rd11, %rd7;
	add.s64 	%rd13, %rd8, %rd12;
	shl.b64 	%rd14, %rd13, 4;
	cvta.to.global.u64 	%rd15, %rd1;
	add.s64 	%rd16, %rd14, %rd15;
	ld.global.f64 	%fd1, [%rd16+393216];
	cvta.to.global.u64 	%rd17, %rd2;
	mul.wide.u32 	%rd18, %r1, 8;
	add.s64 	%rd19, %rd17, %rd18;
	st.global.f64 	[%rd19], %fd1;

BB2_2:
	ret;
}

.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
{
	.local .align 8 .b8 	__local_depot3[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b32 	%r<42>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<101>;


	mov.u64 	%rd100, __local_depot3;
	cvta.local.u64 	%SP, %rd100;
	ld.param.f64 	%fd4, [__internal_trig_reduction_slowpathd_param_0];
	ld.param.u64 	%rd37, [__internal_trig_reduction_slowpathd_param_1];
	add.u64 	%rd38, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd38;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd4;
	}
	and.b32  	%r40, %r1, -2147483648;
	shr.u32 	%r3, %r1, 20;
	bfe.u32 	%r4, %r1, 20, 11;
	setp.eq.s32	%p1, %r4, 2047;
	@%p1 bra 	BB3_13;

	add.s32 	%r16, %r4, -1024;
	shr.u32 	%r17, %r16, 6;
	mov.u32 	%r18, 16;
	sub.s32 	%r5, %r18, %r17;
	mov.u32 	%r19, 19;
	sub.s32 	%r20, %r19, %r17;
	mov.u32 	%r21, 18;
	min.s32 	%r6, %r21, %r20;
	setp.gt.s32	%p2, %r5, %r6;
	mov.u64 	%rd94, 0;
	mov.u64 	%rd93, %rd1;
	@%p2 bra 	BB3_4;

	mov.b64 	 %rd41, %fd4;
	shl.b64 	%rd42, %rd41, 11;
	or.b64  	%rd3, %rd42, -9223372036854775808;
	add.s32 	%r7, %r5, -1;
	mov.u64 	%rd92, %rd1;
	bfe.u32 	%r22, %r1, 20, 11;
	add.s32 	%r23, %r22, -1024;
	shr.u32 	%r24, %r23, 6;
	neg.s32 	%r25, %r24;
	mul.wide.s32 	%rd43, %r25, 8;
	mov.u64 	%rd44, __cudart_i2opi_d;
	add.s64 	%rd45, %rd43, %rd44;
	add.s64 	%rd90, %rd45, 120;
	mov.u64 	%rd94, 0;
	mov.u64 	%rd91, %rd1;
	mov.u32 	%r39, %r7;

BB3_3:
	.pragma "nounroll";
	mov.u32 	%r8, %r39;
	mov.u64 	%rd7, %rd91;
	ld.const.u64 	%rd48, [%rd90];
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi, clo, chi;
	mov.b64         {alo,ahi}, %rd48;    
	mov.b64         {blo,bhi}, %rd3;    
	mov.b64         {clo,chi}, %rd94;    
	mad.lo.cc.u32   r0, alo, blo, clo;
	madc.hi.cc.u32  r1, alo, blo, chi;
	madc.hi.u32     r2, alo, bhi,   0;
	mad.lo.cc.u32   r1, alo, bhi,  r1;
	madc.hi.cc.u32  r2, ahi, blo,  r2;
	madc.hi.u32     r3, ahi, bhi,   0;
	mad.lo.cc.u32   r1, ahi, blo,  r1;
	madc.lo.cc.u32  r2, ahi, bhi,  r2;
	addc.u32        r3,  r3,   0;     
	mov.b64         %rd46, {r0,r1};      
	mov.b64         %rd94, {r2,r3};      
	}
	// inline asm
	st.local.u64 	[%rd92], %rd46;
	add.s32 	%r9, %r8, 1;
	sub.s32 	%r26, %r9, %r7;
	mul.wide.s32 	%rd51, %r26, 8;
	add.s64 	%rd92, %rd1, %rd51;
	add.s64 	%rd13, %rd7, 8;
	mov.u64 	%rd93, %rd13;
	add.s64 	%rd90, %rd90, 8;
	setp.lt.s32	%p3, %r9, %r6;
	mov.u64 	%rd91, %rd13;
	mov.u32 	%r39, %r9;
	@%p3 bra 	BB3_3;

BB3_4:
	st.local.u64 	[%rd93], %rd94;
	ld.local.u64 	%rd95, [%rd1+16];
	ld.local.u64 	%rd96, [%rd1+24];
	and.b32  	%r10, %r3, 63;
	setp.eq.s32	%p4, %r10, 0;
	@%p4 bra 	BB3_6;

	mov.u32 	%r27, 64;
	sub.s32 	%r28, %r27, %r10;
	shl.b64 	%rd52, %rd96, %r10;
	shr.u64 	%rd53, %rd95, %r28;
	or.b64  	%rd96, %rd52, %rd53;
	shl.b64 	%rd54, %rd95, %r10;
	ld.local.u64 	%rd55, [%rd1+8];
	shr.u64 	%rd56, %rd55, %r28;
	or.b64  	%rd95, %rd56, %rd54;

BB3_6:
	cvta.to.local.u64 	%rd57, %rd37;
	shr.u64 	%rd58, %rd96, 62;
	cvt.u32.u64	%r29, %rd58;
	shr.u64 	%rd59, %rd95, 62;
	shl.b64 	%rd60, %rd96, 2;
	or.b64  	%rd98, %rd60, %rd59;
	shl.b64 	%rd97, %rd95, 2;
	shr.u64 	%rd61, %rd96, 61;
	cvt.u32.u64	%r30, %rd61;
	and.b32  	%r31, %r30, 1;
	add.s32 	%r32, %r31, %r29;
	neg.s32 	%r33, %r32;
	setp.ne.s32	%p5, %r40, 0;
	selp.b32	%r34, %r33, %r32, %p5;
	st.local.u32 	[%rd57], %r34;
	setp.eq.s32	%p6, %r31, 0;
	@%p6 bra 	BB3_8;

	mov.u64 	%rd65, 0;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd65;
	mov.b64         {a2,a3}, %rd65;
	mov.b64         {b0,b1}, %rd97;
	mov.b64         {b2,b3}, %rd98;
	sub.cc.u32      r0, a0, b0; 
	subc.cc.u32     r1, a1, b1; 
	subc.cc.u32     r2, a2, b2; 
	subc.u32        r3, a3, b3; 
	mov.b64         %rd97, {r0,r1};
	mov.b64         %rd98, {r2,r3};
	}
	// inline asm
	xor.b32  	%r40, %r40, -2147483648;

BB3_8:
	clz.b64 	%r41, %rd98;
	setp.eq.s32	%p7, %r41, 0;
	@%p7 bra 	BB3_10;

	shl.b64 	%rd68, %rd98, %r41;
	mov.u32 	%r35, 64;
	sub.s32 	%r36, %r35, %r41;
	shr.u64 	%rd69, %rd97, %r36;
	or.b64  	%rd98, %rd69, %rd68;

BB3_10:
	mov.u64 	%rd73, -3958705157555305931;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi;
	mov.b64         {alo,ahi}, %rd98;   
	mov.b64         {blo,bhi}, %rd73;   
	mul.lo.u32      r0, alo, blo;    
	mul.hi.u32      r1, alo, blo;    
	mad.lo.cc.u32   r1, alo, bhi, r1;
	madc.hi.u32     r2, alo, bhi,  0;
	mad.lo.cc.u32   r1, ahi, blo, r1;
	madc.hi.cc.u32  r2, ahi, blo, r2;
	madc.hi.u32     r3, ahi, bhi,  0;
	mad.lo.cc.u32   r2, ahi, bhi, r2;
	addc.u32        r3, r3,  0;      
	mov.b64         %rd70, {r0,r1};     
	mov.b64         %rd99, {r2,r3};     
	}
	// inline asm
	setp.lt.s64	%p8, %rd99, 1;
	@%p8 bra 	BB3_12;

	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd70;
	mov.b64         {a2,a3}, %rd99;
	mov.b64         {b0,b1}, %rd70;
	mov.b64         {b2,b3}, %rd99;
	add.cc.u32      r0, a0, b0; 
	addc.cc.u32     r1, a1, b1; 
	addc.cc.u32     r2, a2, b2; 
	addc.u32        r3, a3, b3; 
	mov.b64         %rd74, {r0,r1};
	mov.b64         %rd99, {r2,r3};
	}
	// inline asm
	add.s32 	%r41, %r41, 1;

BB3_12:
	cvt.u64.u32	%rd80, %r40;
	shl.b64 	%rd81, %rd80, 32;
	mov.u32 	%r37, 1022;
	sub.s32 	%r38, %r37, %r41;
	cvt.u64.u32	%rd82, %r38;
	shl.b64 	%rd83, %rd82, 52;
	add.s64 	%rd84, %rd99, 1;
	shr.u64 	%rd85, %rd84, 10;
	add.s64 	%rd86, %rd85, 1;
	shr.u64 	%rd87, %rd86, 1;
	add.s64 	%rd88, %rd87, %rd83;
	or.b64  	%rd89, %rd88, %rd81;
	mov.b64 	 %fd4, %rd89;

BB3_13:
	st.param.f64	[func_retval0+0], %fd4;
	ret;
}


